<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog-Hexo</title>
  
  
  <link href="https://www.gaotianyang.top/atom.xml" rel="self"/>
  
  <link href="https://www.gaotianyang.top/"/>
  <updated>2024-01-01T03:37:15.234Z</updated>
  <id>https://www.gaotianyang.top/</id>
  
  <author>
    <name>迷途的羔羊</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>冰城哈尔滨</title>
    <link href="https://www.gaotianyang.top/archives/202312242a32fbce/"/>
    <id>https://www.gaotianyang.top/archives/202312242a32fbce/</id>
    <published>2023-12-24T13:06:13.000Z</published>
    <updated>2024-01-01T03:37:15.234Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://z1.ax1x.com/2023/12/27/pibTtTP.jpg" alt="首屏图"></p><a id="more"></a><h2 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h2><blockquote><p>从北京朝阳站出发前往哈尔滨西，迎着朝阳出发奔赴雪乡。沿途漫山遍野的皑皑白雪，以及错落有致的干草垛与我们相伴。在晨雾中隐秘的远山和风机，好似害羞似的与我们躲藏。</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/26/pibWfr6.jpg" alt="哈尔滨"><br><img src="https://z1.ax1x.com/2023/12/26/pibWXsP.jpg" alt="迎着朝阳奔赴雪乡"><br><img src="https://z1.ax1x.com/2023/12/26/pibW5VO.jpg" alt="电塔与我作伴"><br><img src="https://z1.ax1x.com/2023/12/26/pibWhqK.jpg" alt="雪乡"><br><img src="https://z1.ax1x.com/2023/12/26/pibWIaD.jpg" alt="雾中の远山"><br><img src="https://z1.ax1x.com/2023/12/26/pibWoIe.jpg" alt="疾驰于田野"><br><img src="https://z1.ax1x.com/2023/12/26/pibWHGd.jpg" alt="风机隐秘于晨雾"><br><img src="https://z1.ax1x.com/2023/12/26/pibW7PH.jpg" alt="错落有致的草垛"><br><img src="https://z1.ax1x.com/2023/12/27/pibTMWD.jpg" alt="白雪皑皑"></p><blockquote><p>来到哈尔滨，先品尝了地道的东北“晓宇盒饭”，实惠量大，味道也没的说，一吃一个不吱声。然后就来到了游客必打卡的圣索菲亚大教堂。当夜幕降临，月亮悄悄爬上屋头。大教堂身披着银色的月光，静静地诉说着岁月留下的痕迹。移步到教堂边的哈尔滨道里菜市场，感受了大东北早市的热闹与风味。有红肠、糖葫芦、烤冷面、粘豆包…数不尽的美食，让人们目不暇接，而它们的香味，让人们流连忘返~</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/27/pibT3yd.jpg" alt="闹市中的一瞥静"><br><img src="https://z1.ax1x.com/2023/12/27/pibT1QH.jpg" alt="披上月的银光"><br><img src="https://z1.ax1x.com/2023/12/27/pibTtTP.jpg" alt="灯光璀璨"><br><img src="https://z1.ax1x.com/2023/12/27/pibTJeI.jpg" alt="深沉的诉说着岁月留下的痕迹"><br><img src="https://z1.ax1x.com/2023/12/27/pibT8OA.jpg" alt="圣索菲亚大教堂"><br><img src="https://s11.ax1x.com/2024/01/01/piXJ1yj.jpg" alt="秋林里道斯"><br><img src="https://s11.ax1x.com/2024/01/01/piXJGmn.jpg" alt="道里菜市场"></p><blockquote><p>来到中央大街，打卡了马迭尔的冰糕、冰淇淋与酸奶。温热的小槽子面包加上美味的冰淇淋，mini 版的“面包诱惑”大功告成。吃完甜点，我们前往兆麟公园的路上，看到了“圣诞老人”，虽然因为兆麟公园的冰灯还未完工有些许的遗憾，不过有遗憾才能体现出旅途的美好，不是吗~远处的是哈尔滨中东铁路桥，虽然现在已经不再有车通行，但是为游客们提供了一个近距离接触历史的打卡地，也是极好的。</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/27/pibTlSe.jpg" alt="中央大街"><br><img src="https://z1.ax1x.com/2023/12/27/pibTYwt.jpg" alt="圣诞老人来啦"><br><img src="https://z1.ax1x.com/2023/12/28/piqUsJO.jpg" alt="中东铁路桥"></p><blockquote><p>亚特兰蒂斯——失落的王国，还是王后？旁边就是哈尔滨松花江冰雪嘉年华，江面上面满满的人群，其中还有不少的“小土豆”们。最后的 happy ending 在老味烧烤。这个味道确实不错，值的我们在寒风中瑟瑟发抖的半个小时。</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/28/piqUcSe.jpg" alt="失落的“王后”"><br><img src="https://z1.ax1x.com/2023/12/28/piqUyWD.jpg" alt="哈尔滨松花江冰雪嘉年华"><br><img src="https://z1.ax1x.com/2023/12/28/piqUrFK.jpg" alt="旋风“小土豆”"><br><img src="https://z1.ax1x.com/2023/12/28/piqUfeI.jpg" alt="值的在寒风中等待30分钟"><br><img src="https://z1.ax1x.com/2023/12/28/piqUgQH.jpg" alt="老味烧烤"></p><h2 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h2><blockquote><p>从酒店出发，跨过上冻的松花江去冰雪大世界。白天的冰雪大世界，各色冰雕让我们目不暇接，惊叹冰雕工艺师傅们的一双巧手。《冰雪之冠》、《世纪之钟》、《冰心筑梦》等等的作品真的是太棒了 👍。经过长达 5.5 小时的等待，我们终于来到了大滑梯的出发点，紧张刺激的 1 分钟转瞬即逝，虽然等待时间有些长，不过也算是圆满体验了网红项目。</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/28/piqU2yd.jpg" alt="上冻的松花江"><br><img src="https://z1.ax1x.com/2023/12/28/piqUROA.jpg" alt="冰雕“空中楼阁”"><br><img src="https://s11.ax1x.com/2023/12/28/piqdRat.jpg" alt="冰雪之冠"><br><img src="https://s11.ax1x.com/2023/12/28/piqdWIP.jpg" alt="冬日晴空"><br><img src="https://s11.ax1x.com/2023/12/28/piqd5RS.jpg" alt="世纪之钟"><br><img src="https://s11.ax1x.com/2023/12/31/piOfNCD.jpg" alt="冰雪大世界全景"><br><img src="https://s11.ax1x.com/2024/01/01/piX8WE6.jpg" alt="东北F4"><br><img src="https://s11.ax1x.com/2024/01/01/piX85CD.jpg" alt="小主"><br><img src="https://s11.ax1x.com/2024/01/01/piX8fUK.jpg" alt="土地公公"><br><img src="https://s11.ax1x.com/2024/01/01/piX8ogH.jpg" alt="冰雪交融"><br><img src="https://s11.ax1x.com/2024/01/01/piX8Tvd.jpg" alt="雪绒花"><br><img src="https://s11.ax1x.com/2024/01/01/piX8HKA.jpg" alt="高耸挺拔"><br><img src="https://s11.ax1x.com/2023/12/28/piqd4G8.jpg" alt="排队大滑梯中"><br><img src="https://s11.ax1x.com/2023/12/28/piqdhPf.jpg" alt="冰心筑梦"><br><img src="https://s11.ax1x.com/2023/12/28/piqdIxg.jpg" alt="来张全景照片"><br><img src="https://s11.ax1x.com/2023/12/28/piqd7rj.jpg" alt="历经5.5h终于等到你"></p><blockquote><p>夜色降临，灯光亮起。我们一同去观看了哈冰秀，欣赏了来自外国的表演艺术家们的精彩表演，杂技、花样滑冰、舞蹈，让人看了不住的连连叫好。而后，乘坐了雪花摩天轮，一览了冰雪大世界的美丽夜景。</p></blockquote><p><img src="https://s11.ax1x.com/2023/12/28/piqdTMQ.jpg" alt="绝美夜景"><br><img src="https://s11.ax1x.com/2023/12/29/piLQMJs.jpg" alt="哈冰秀演出"><br><img src="https://s11.ax1x.com/2023/12/29/piLQ8yV.jpg" alt="雪花摩天轮"><br><img src="https://s11.ax1x.com/2023/12/29/piLQQWn.jpg" alt="天空之舞"><br><img src="https://s11.ax1x.com/2023/12/29/piLQ3Q0.jpg" alt="俯瞰夜场全景"><br><img src="https://s11.ax1x.com/2023/12/29/piLQlzq.jpg" alt="来个自拍🤳🏻"><br><img src="https://s11.ax1x.com/2023/12/29/piLQtwF.jpg" alt="我和小可爱"><br><img src="https://s11.ax1x.com/2023/12/29/piLQGLT.jpg" alt="五彩缤纷"><br><img src="https://s11.ax1x.com/2023/12/29/piLQNo4.jpg" alt="美不胜收"><br><img src="https://s11.ax1x.com/2023/12/29/piL3poF.jpg" alt="华灯出彩"><br><img src="https://s11.ax1x.com/2023/12/29/piL3Ci4.jpg" alt="(＾－＾)V"><br><img src="https://s11.ax1x.com/2023/12/29/piL3iW9.jpg" alt="哈尔滨国际冰雕比赛"><br><img src="https://s11.ax1x.com/2023/12/29/piL1zZT.jpg" alt="可可爱爱"><br><img src="https://s11.ax1x.com/2023/12/29/piL3SdU.jpg" alt="冰雪女王"><br><img src="https://s11.ax1x.com/2023/12/29/piL3PJJ.jpg" alt="LOVE"><br><img src="https://s11.ax1x.com/2023/12/29/piL3AQ1.jpg" alt="穿越城堡"><br><img src="https://s11.ax1x.com/2023/12/29/piL3FzR.jpg" alt="在冰面上出溜滑"><br><img src="https://s11.ax1x.com/2023/12/30/piO9ViD.jpg" alt="绚墨舞台"><br><img src="https://s11.ax1x.com/2023/12/30/piO9AIO.jpg" alt="窗外的世界很精彩"><br><img src="https://s11.ax1x.com/2023/12/30/piO9Pqx.jpg" alt="灯光下的冰雪之冠"><br><img src="https://s11.ax1x.com/2023/12/30/piO9kdK.jpg" alt="笔芯"><br><img src="https://s11.ax1x.com/2023/12/30/piO9FZ6.jpg" alt="贴贴"><br><img src="https://s11.ax1x.com/2023/12/30/piO9ZJe.jpg" alt="居高临下傲视群雄的赶脚"><br><img src="https://s11.ax1x.com/2023/12/30/piO9eRH.jpg" alt="小兔纸"><br><img src="https://s11.ax1x.com/2023/12/30/piO9mzd.jpg" alt="歪头杀"><br><img src="https://s11.ax1x.com/2023/12/30/piOClc9.jpg" alt="带个皇冠👑"><br><img src="https://s11.ax1x.com/2023/12/30/piOCuhF.jpg" alt="爱心墙"><br><img src="https://s11.ax1x.com/2024/01/01/piXJafU.jpg" alt="抓拍一下"><br><img src="https://s11.ax1x.com/2024/01/01/piXJNkV.jpg" alt="保持微笑"><br><img src="https://s11.ax1x.com/2024/01/01/piXJJwq.jpg" alt="最萌身高差"><br><img src="https://s11.ax1x.com/2024/01/01/piXJUYT.jpg" alt="小拳拳"><br><img src="https://s11.ax1x.com/2024/01/01/piXJYT0.jpg" alt="亭台楼阁华光出彩"><br><img src="https://s11.ax1x.com/2024/01/01/piXJwpF.jpg" alt="第二十五届哈尔滨冰雪大世界"><br><img src="https://s11.ax1x.com/2023/12/30/piOCG0x.jpg" alt="蒸花卷"><br><img src="https://s11.ax1x.com/2023/12/30/piOCQ1J.jpg" alt="铁锅炖大鹅"></p><h2 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h2><blockquote><p>第三天，我们先去了太阳岛冰雪节，看了看坐落在门口的“蜜雪冰城”同款大雪人，而后又来到松花江江面上，近距离接触了冬天的冰面，最后我们来到了哈尔滨极地公园，看到了可爱的小企鹅们，踩着轻快的步伐，向我们缓缓走来。其中一只还背着个小书包，甚是可爱！</p></blockquote><p><img src="https://s11.ax1x.com/2023/12/31/piOfagH.jpg" alt="温暖雪宝儿"><br><img src="https://s11.ax1x.com/2024/01/01/piX8h4O.jpg" alt="蜜雪冰城同款雪王"><br><img src="https://s11.ax1x.com/2024/01/01/piX8I8e.jpg" alt="雪王给你ღ( ´･ᴗ･` )比个心"><br><img src="https://s11.ax1x.com/2023/12/30/piOCntU.jpg" alt="哈尔滨极地公园"><br><img src="https://s11.ax1x.com/2023/12/30/piOCMp4.jpg" alt="小企鹅"><br><img src="https://s11.ax1x.com/2023/12/30/piOC1XR.jpg" alt="淘学企鹅"><br><img src="https://s11.ax1x.com/2023/12/30/piOC8n1.jpg" alt="萌萌哒"><br><img src="https://s11.ax1x.com/2023/12/31/piOf3Hx.jpg" alt="可爱捏"><br><img src="https://s11.ax1x.com/2023/12/31/piOfGE6.jpg" alt="憨态可掬"></p><blockquote><p>来到米村拌饭吃过简餐之后，体验了一把东北老铁的最爱，搓澡！卸去一天的疲惫。在夜幕降临的时候，漫天的雪花，缓缓落下，似乎在为我们的到来，划上一个圆满的尾声。</p></blockquote><p><img src="https://s11.ax1x.com/2023/12/31/piORdiD.jpg" alt="滨果汤泉空间"><br><img src="https://s11.ax1x.com/2023/12/31/piOR0RH.jpg" alt="哈根达斯冰淇淋"></p><h2 id="Day4"><a href="#Day4" class="headerlink" title="Day4"></a>Day4</h2><blockquote><p>来到大东北，怎能不品尝一下东北名菜“锅包肉”呢，去彭氏包子，吃了肠、锅巴肉、和排骨包子、虾仁包子，味道确实不错。下午整理好行囊，伴着夕阳回家，结束这充实的哈尔滨之旅。</p></blockquote><p><img src="https://s11.ax1x.com/2023/12/31/piORceP.jpg" alt="锅巴肉"><br><img src="https://s11.ax1x.com/2023/12/31/piORyLt.jpg" alt="一品彭氏包子"><br><img src="https://s11.ax1x.com/2023/12/31/piORrQA.jpg" alt="回家喽"><br><img src="https://s11.ax1x.com/2023/12/31/piORBzd.jpg" alt="金色霞光"><br><img src="https://s11.ax1x.com/2023/12/31/piORssI.jpg" alt="远山与晚霞"><br><img src="https://s11.ax1x.com/2023/12/31/piORgdf.jpg" alt="雪"><br><img src="https://s11.ax1x.com/2023/12/31/piOfdvd.jpg" alt="速度"><br><img src="https://s11.ax1x.com/2023/12/31/piOfU8e.jpg" alt="雪原"><br><img src="https://s11.ax1x.com/2023/12/31/piOfY4O.jpg" alt="白马过隙"><br><img src="https://s11.ax1x.com/2023/12/31/piOfJUK.jpg" alt="驶过森林"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://z1.ax1x.com/2023/12/27/pibTtTP.jpg&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="哈尔滨" scheme="https://www.gaotianyang.top/tags/%E5%93%88%E5%B0%94%E6%BB%A8/"/>
    
  </entry>
  
  <entry>
    <title>延寿寺</title>
    <link href="https://www.gaotianyang.top/archives/2023120927c5424/"/>
    <id>https://www.gaotianyang.top/archives/2023120927c5424/</id>
    <published>2023-12-09T10:05:22.000Z</published>
    <updated>2023-12-19T02:25:15.507Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://z1.ax1x.com/2023/12/15/pi4eR6x.jpg" alt="首屏图"></p><a id="more"></a><blockquote><p>一行人去延寿寺 happy~</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/16/pi46DtU.jpg" alt="昌平绿道"><br><img src="https://z1.ax1x.com/2023/12/15/pi4e40O.jpg" alt="烤房厨房"><br><img src="https://z1.ax1x.com/2023/12/15/pi4egpR.jpg" alt="赵总"><br><img src="https://z1.ax1x.com/2023/12/15/pi4e211.jpg" alt="牛肉汉堡"><br><img src="https://z1.ax1x.com/2023/12/15/pi4e6h9.jpg" alt="岚泊"><br><img src="https://z1.ax1x.com/2023/12/15/pi4eytJ.jpg" alt="牛肉"><br><img src="https://z1.ax1x.com/2023/12/15/pi4eWX6.jpg" alt="烤肉套餐"><br><img src="https://z1.ax1x.com/2023/12/16/pi46BkT.jpg" alt="延寿寺-大黑山主峰"><br><img src="https://z1.ax1x.com/2023/12/16/pi4c75T.jpg" alt="亲爱的小“熊”"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://z1.ax1x.com/2023/12/15/pi4eR6x.jpg&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="延寿寺" scheme="https://www.gaotianyang.top/tags/%E5%BB%B6%E5%AF%BF%E5%AF%BA/"/>
    
    <category term="黑山烤房" scheme="https://www.gaotianyang.top/tags/%E9%BB%91%E5%B1%B1%E7%83%A4%E6%88%BF/"/>
    
  </entry>
  
  <entry>
    <title>react个人站建站总结</title>
    <link href="https://www.gaotianyang.top/archives/202311282f46f162/"/>
    <id>https://www.gaotianyang.top/archives/202311282f46f162/</id>
    <published>2023-11-28T09:02:14.000Z</published>
    <updated>2023-11-29T03:00:24.150Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://z1.ax1x.com/2023/11/29/piDNnQf.png" alt="首屏图"></p><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>基于 react-antd-admin 搭建的前端简历网站 <a href="https://me.gaotianyang.top">预览地址</a></p><h2 id="技术总结"><a href="#技术总结" class="headerlink" title="技术总结"></a>技术总结</h2><ul><li><strong>react-antd-admin-template</strong> 基于 <code>React</code> 和 <code>Ant Design</code> 的后台管理系统模板</li><li><strong>antd</strong> <code>Web</code> <code>UI</code> 组件库</li><li><strong>echarts</strong> <code>echarts-wordcloud</code> 词云库</li><li><strong>仿钉钉官网动效</strong> 基于 <code>JavaScript</code> <code>Css</code> 的滚动动效</li><li><strong>仿 antd 图片预览</strong> 基于 <code>Ant Design</code> <code>Modal</code> 的图片预览功能</li><li><strong>axios</strong> 基于 <code>promise</code> 的 <code>HTTP</code> 库</li><li><strong>mockjs</strong> 模拟数据生成器</li><li><strong>lodash</strong> <code>JavaScript</code> 实用工具库</li><li><strong>dayjs</strong> <code>JavaScript</code> 时间处理工具库</li></ul><h2 id="功能与问题"><a href="#功能与问题" class="headerlink" title="功能与问题"></a>功能与问题</h2><h3 id="Mockjs-实现数据过滤"><a href="#Mockjs-实现数据过滤" class="headerlink" title="Mockjs 实现数据过滤"></a>Mockjs 实现数据过滤</h3><p>基于 Mockjs，在<code>项目列表</code>接口请求时，实现了数据的过滤、分页等功能。</p><p><img src="https://z1.ax1x.com/2023/11/29/piDU8BD.png" alt="mockjs"></p><h3 id="仿钉钉官网动效"><a href="#仿钉钉官网动效" class="headerlink" title="仿钉钉官网动效"></a>仿钉钉官网动效</h3><p>在实现此动效的时候，遇到了一些问题。例如原 demo 为原生 <code>html</code> <code>css</code> <code>js</code> 实现的，需要对其进行 react 的迁移与改造。另外，因为在项目中的使用场景为 dashboard 页面下使用，因此原本监听页面滚动事件，触发动效将不再生效。解决方案为将滚动监听，变更为 antd layout 组件，并将监听结果挂载于 window 自定义变量中。页面根据挂载的自定义变量，进行页面的重绘。</p><p><img src="https://z1.ax1x.com/2023/11/29/piDNnQf.png" alt="dashboard"></p><h3 id="echarts-词云"><a href="#echarts-词云" class="headerlink" title="echarts 词云"></a>echarts 词云</h3><p>在使用词云效果的自定义词云形状时，会遇到因背景图加载原因，导致的首次渲染白屏的问题。解决方案为，将词云首次绘制，执行于背景图加载完毕后(<code>maskImage.onload</code>)。</p><p><img src="https://z1.ax1x.com/2023/11/29/piDUtNd.png" alt="wordcloud"></p><h3 id="仿-antd-图片预览"><a href="#仿-antd-图片预览" class="headerlink" title="仿 antd 图片预览"></a>仿 antd 图片预览</h3><p>本项目的 <code>Ant Design</code> 版本为 V3.X，尚未加入图片预览功能，因此基于 <code>Ant Design</code> 的 <code>Modal</code> 组件二次封装了图片预览组件，并基于 <code>css</code> <code>js</code> 实现了缩放、翻转、旋转这些功能。</p><p><img src="https://z1.ax1x.com/2023/11/29/piDUGHe.png" alt="imagePreview"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://github.com/NLRX-WJC/react-antd-admin-template">react-antd-admin-template</a></li><li><a href="https://www.bilibili.com/video/BV12z4y1s7nE/?vd_source=2e6014e07f90a9d8b3424eb1c055a867">复刻钉钉官网滚动动画</a></li><li><a href="https://gitee.com/vary-space/hello-world/tree/12z4y1s7nE">代码仓库-复刻钉钉官网滚动动画</a></li><li><a href="https://www.npmjs.com/package/echarts-wordcloud">echarts-wordcloud npm 词云</a></li><li><a href="https://www.cnblogs.com/art-poet/p/13936076.html">react 项目使用 echarts-wordcloud（文字云）</a></li><li><a href="https://blog.csdn.net/Zeng__Yi/article/details/106197891">react+typeScript 框架 config-overrides 中设置 Alias 路径 报错的解决方法</a></li><li><a href="https://blog.csdn.net/m0_47670683/article/details/124025972">最优雅解决 typescript 报错：“元素隐式具有 “any“ 类型，因为类型为 “string“ 的表达式不能用于索引类型”</a></li><li><a href="https://cloud.tencent.com/developer/article/2233289">react antd 实现图片自定义预览</a></li><li><a href="https://github.com/liuguanhua/liuguanhua.github.io">刘关化的前端简历 参考</a></li><li><a href="https://github.com/sunniejs/sunniejs.github.io">宋楠的前端简历 参考</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://z1.ax1x.com/2023/11/29/piDNnQf.png&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="React" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/React/"/>
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/tags/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="React" scheme="https://www.gaotianyang.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>台湖公园</title>
    <link href="https://www.gaotianyang.top/archives/20231122604803bd/"/>
    <id>https://www.gaotianyang.top/archives/20231122604803bd/</id>
    <published>2023-11-22T02:15:14.000Z</published>
    <updated>2023-12-19T02:24:38.144Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://z1.ax1x.com/2023/12/16/pi42Rns.jpg" alt="首屏图"></p><a id="more"></a><blockquote><p>和岚泊去台湖徒步~</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/16/pi42WBn.jpg" alt="台湖"><br><img src="https://z1.ax1x.com/2023/12/17/pi5nI3j.jpg" alt="岁月静好"><br><img src="https://z1.ax1x.com/2023/12/17/pi5n5CQ.jpg" alt="碧空如洗"><br><img src="https://z1.ax1x.com/2023/12/17/pi5nogs.jpg" alt="落叶"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://z1.ax1x.com/2023/12/16/pi42Rns.jpg&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="台湖公园" scheme="https://www.gaotianyang.top/tags/%E5%8F%B0%E6%B9%96%E5%85%AC%E5%9B%AD/"/>
    
  </entry>
  
  <entry>
    <title>医院预算管理项目技术栈</title>
    <link href="https://www.gaotianyang.top/archives/20231120bdee9ed5/"/>
    <id>https://www.gaotianyang.top/archives/20231120bdee9ed5/</id>
    <published>2023-11-20T07:59:07.000Z</published>
    <updated>2023-12-05T02:04:15.012Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://z1.ax1x.com/2023/09/26/pP7xSPJ.png" alt="首屏图"></p><a id="more"></a><ol><li>Antd ProList 实现<a href="packages/setting-ui/src/routes/period/components/smpList.tsx">数据卡片</a><br><img src="https://z1.ax1x.com/2023/11/28/piBxEd0.png" alt="ProList"><br><img src="https://z1.ax1x.com/2023/11/28/piBxFLn.png" alt="ProList"><ol><li>数据超长缩略</li><li>空数据处理</li></ol></li><li>Antd ProTable 实现<a href="packages/setting-ui/src/routes/account/components/accountList.tsx">树形列表</a><br><img src="https://z1.ax1x.com/2023/11/28/piBxAZq.png" alt="ProTable"><br><img src="https://z1.ax1x.com/2023/11/28/piBxaSe.png" alt="ProTable"><ol><li>存在子集复选、操作按钮禁用</li><li>未勾选复选框 公共操作按钮禁用</li></ol></li><li>Antd ProTable 实现标准表格<br><img src="https://z1.ax1x.com/2023/11/28/piBxdQH.png" alt="ProTable"></li><li>editable-table 实现<a href="packages/setting-ui/src/routes/performance/components/performanceForm.tsx">可编辑表格</a><br><img src="https://z1.ax1x.com/2023/09/26/pP7xSPJ.png" alt="editable"><ol><li>数据联动编辑 指标属性=&gt;比较方法=&gt;计量单位</li><li>多行数据存储删除 <code>array.filter()</code></li></ol></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://z1.ax1x.com/2023/09/26/pP7xSPJ.png&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="项目总结" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/tags/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="项目总结" scheme="https://www.gaotianyang.top/tags/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>日常质量管理项目技术栈</title>
    <link href="https://www.gaotianyang.top/archives/20231120671c213d/"/>
    <id>https://www.gaotianyang.top/archives/20231120671c213d/</id>
    <published>2023-11-20T07:58:47.000Z</published>
    <updated>2023-12-05T02:04:10.285Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://z1.ax1x.com/2023/09/26/pP7vvaF.png" alt="首屏图"></p><a id="more"></a><ol><li>rc-banner-anim 实现 login 幻灯片效果<br><img src="https://z1.ax1x.com/2023/11/28/piB2Tgg.png" alt="banner"><!-- ![banner](./项目视频/登录.mov) --></li><li>cloud-charts 实现图表<br><img src="https://z1.ax1x.com/2023/11/28/piB2buj.png" alt="cloud-charts"><br><img src="https://z1.ax1x.com/2023/09/26/pP7vvaF.png" alt="cloud-charts"></li><li>organization-graph 实现组织架构<br><img src="https://z1.ax1x.com/2023/11/28/piB2XEq.png" alt="organization"><ol><li>组织架构与菜单联动 动态生成顶级 root 节点</li></ol></li><li>Antd pro-components 实现标准表格<br><img src="https://z1.ax1x.com/2023/11/28/piBx9zQ.png" alt="ProTable"><br><img src="https://z1.ax1x.com/2023/11/28/piBxpRg.png" alt="ProTable"></li><li>封装顶部<a href="packages/adverse-event-ui/src/routes/statistics/reportDept/topStatistics/index.tsx">数据统计条</a>组件 并支持多种格式展示<br><img src="https://z1.ax1x.com/2023/11/28/piB27vQ.png" alt="topStatistics"><br><img src="https://z1.ax1x.com/2023/11/28/piBxSJS.png" alt="topStatistics"><ol><li>大小数据量展示</li><li>标红数据处理</li></ol></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://z1.ax1x.com/2023/09/26/pP7vvaF.png&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="项目总结" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/tags/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="项目总结" scheme="https://www.gaotianyang.top/tags/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>高质量发展建设管理项目技术栈</title>
    <link href="https://www.gaotianyang.top/archives/20231120ca98070b/"/>
    <id>https://www.gaotianyang.top/archives/20231120ca98070b/</id>
    <published>2023-11-20T06:47:54.000Z</published>
    <updated>2023-12-05T02:03:40.418Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://z1.ax1x.com/2023/09/26/pP7vx54.png" alt="首屏图"></p><a id="more"></a><ol><li>tgg-large-screen 实现数据大屏全屏缩放效果<br><img src="https://z1.ax1x.com/2023/11/23/pidjWdS.png" alt="dashboard"></li><li>react-transition-group 实现数据大屏横向切换效果<br><img src="https://z1.ax1x.com/2023/11/23/pidjfIg.png" alt="dashboard"><ol><li>使用 location 承接 <code>trend</code> 标记滚动方向</li><li>使用 CSSTransition 实现横向滚动特效</li><li>横屏切换加载时添加 load 效果，避免白屏</li></ol></li><li>cloud-charts 实现图表<br><img src="https://z1.ax1x.com/2023/11/28/piB244f.png" alt="cloud-charts"><br><img src="https://z1.ax1x.com/2023/11/28/piB2hUP.png" alt="cloud-charts"></li><li>organization-graph 实现组织架构<br><img src="https://z1.ax1x.com/2023/11/28/piB22DA.png" alt="organization"></li><li>Antd pro-components 实现标准表格<br><img src="https://z1.ax1x.com/2023/11/28/piB2IC8.png" alt="ProTable"></li><li>封装顶部数据统计条组件 并支持多种格式展示<br><img src="https://z1.ax1x.com/2023/09/26/pP7vx54.png" alt="topStatistics"><ol><li>大小数据量展示</li><li>标红数据处理</li></ol></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://z1.ax1x.com/2023/09/26/pP7vx54.png&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="项目总结" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/tags/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="项目总结" scheme="https://www.gaotianyang.top/tags/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>全面质量管理项目技术栈</title>
    <link href="https://www.gaotianyang.top/archives/20231120c020518/"/>
    <id>https://www.gaotianyang.top/archives/20231120c020518/</id>
    <published>2023-11-20T05:58:58.000Z</published>
    <updated>2023-12-05T10:36:43.356Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://z1.ax1x.com/2023/09/26/pP7vjVU.png" alt="首屏图"></p><a id="more"></a><ol><li>3D card 实现九宫格卡片交互效果<br><img src="https://z1.ax1x.com/2023/09/26/pP7vjVU.png" alt="dashboard"><ol><li><a href="https://codepen.io/robin-dela/pen/jVddbq">3D card - 卡片交互效果</a></li><li><a href="https://codepen.io/smpnjn/pen/qBVPvpZ">Flippable Playing Cards - 卡片交互效果</a></li></ol></li><li>tgg-large-screen 实现数据大屏全屏缩放效果<br><img src="https://z1.ax1x.com/2023/11/23/pidjaVO.png" alt="dashboard"></li><li>react-transition-group 实现数据大屏横向切换效果<br><img src="https://z1.ax1x.com/2023/11/23/pidjNqK.png" alt="dashboard"><ol><li>使用 location 承接 <code>trend</code> 标记滚动方向</li><li>使用 CSSTransition 实现横向滚动特效</li><li>横屏切换加载时添加 load 效果，避免白屏</li></ol></li><li>使用 CreateJS 创建数据大屏画布<ol><li>使用 Shape Class 绘制图形</li><li>使用 Graphics Class 绘制图形</li></ol></li><li><a href="https://cloud-charts.gitee.io/example/Recommendation">cloud-charts</a> 实现图表<br><img src="https://z1.ax1x.com/2023/11/23/pidblee.png" alt="cloud-charts"><br><img src="https://z1.ax1x.com/2023/11/23/pidbUQf.png" alt="cloud-charts"><br><img src="https://z1.ax1x.com/2023/11/23/pidbay8.png" alt="cloud-charts"><ol><li>使用 Wline 实现折线图</li><li>使用 Wbar 实现柱图</li><li>使用 Wpie 实现环图</li><li>使用 Wlinebar 实现线柱图</li><li>使用 Wnightingale 实现玫瑰图</li></ol></li><li>organization-graph 实现组织架构<br><img src="https://z1.ax1x.com/2023/11/23/pidb1dH.png" alt="organization"></li><li>Antd pro-components 实现标准表格<br><img src="https://z1.ax1x.com/2023/11/23/pidbJJI.png" alt="ProTable"><br><img src="https://z1.ax1x.com/2023/11/23/pidjBPH.png" alt="ProTable"><br><img src="https://z1.ax1x.com/2023/11/23/pidjwIe.png" alt="ProTable"></li><li>封装顶部数据统计条组件 并支持多种格式展示<br><img src="https://z1.ax1x.com/2023/11/23/pidbGFA.png" alt="topStatistics"><br><img src="https://z1.ax1x.com/2023/11/23/pidbNSP.png" alt="topStatistics"><br><img src="https://z1.ax1x.com/2023/11/23/pidjDGd.png" alt="topStatistics"><ol><li>大小数据量展示</li><li>标红数据处理</li></ol></li><li>使用 <a href="https://designable-antd.formilyjs.org/">formilyjs</a> 实现表单<br><img src="https://z1.ax1x.com/2023/11/23/pidbYWt.png" alt="formilyjs"><br><img src="https://z1.ax1x.com/2023/11/23/pidjrRA.png" alt="formilyjs"></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://z1.ax1x.com/2023/09/26/pP7vjVU.png&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="项目总结" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/tags/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="项目总结" scheme="https://www.gaotianyang.top/tags/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>官庄公园</title>
    <link href="https://www.gaotianyang.top/archives/202311183c93a64f/"/>
    <id>https://www.gaotianyang.top/archives/202311183c93a64f/</id>
    <published>2023-11-18T02:19:02.000Z</published>
    <updated>2023-12-19T02:23:08.893Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://z1.ax1x.com/2023/12/17/pi5nxC4.jpg" alt="首屏图"></p><a id="more"></a><blockquote><p>和岚泊去台湖徒步~</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/17/pi5nz8J.jpg" alt="略施粉黛"><br><img src="https://z1.ax1x.com/2023/12/17/pi5lDX9.jpg" alt="锦鲤"><br><img src="https://z1.ax1x.com/2023/12/17/pi5lwpF.jpg" alt="鱼儿们"><br><img src="https://z1.ax1x.com/2023/12/17/pi5lsmR.jpg" alt="黑天鹅"><br><img src="https://z1.ax1x.com/2023/12/17/pi5lB6J.jpg" alt="展翅"><br><img src="https://z1.ax1x.com/2023/12/17/pi5l0l4.jpg" alt="官庄湖景"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://z1.ax1x.com/2023/12/17/pi5nxC4.jpg&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="官庄公园" scheme="https://www.gaotianyang.top/tags/%E5%AE%98%E5%BA%84%E5%85%AC%E5%9B%AD/"/>
    
  </entry>
  
  <entry>
    <title>北京野生动物园</title>
    <link href="https://www.gaotianyang.top/archives/202310298e062513/"/>
    <id>https://www.gaotianyang.top/archives/202310298e062513/</id>
    <published>2023-10-29T07:22:58.000Z</published>
    <updated>2023-12-20T10:22:39.233Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://z1.ax1x.com/2023/12/19/piIawkQ.jpg" alt="首屏图"></p><a id="more"></a><blockquote><p>非洲狮</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/17/pi5l2tK.jpg" alt="非洲狮"></p><blockquote><p>非洲秃鹫</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/19/piIdPnf.jpg" alt="非洲秃鹫"></p><blockquote><p>白虎</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/19/piIdFHS.jpg" alt="白虎宝宝"><br><img src="https://z1.ax1x.com/2023/12/19/piIdENQ.jpg" alt="白虎宝宝"><br><img src="https://z1.ax1x.com/2023/12/19/piId3EF.jpg" alt="白虎"></p><blockquote><p>丹顶鹤</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/19/piId8N4.jpg" alt="丹顶鹤"></p><blockquote><p>麋鹿</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/19/piIsngJ.jpg" alt="麋鹿"></p><blockquote><p>鸵鸟</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/19/piIslHx.jpg" alt="鸵鸟"></p><blockquote><p>棕熊</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/19/piIs8UK.jpg" alt="棕熊"><br><img src="https://z1.ax1x.com/2023/12/19/piIsG4O.jpg" alt="棕熊"><br><img src="https://z1.ax1x.com/2023/12/17/pi5l6Tx.jpg" alt="棕熊"></p><blockquote><p>金刚鹦鹉</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/19/piIsYCD.jpg" alt="金刚鹦鹉"></p><blockquote><p>灰狼</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/19/piIsdKA.jpg" alt="灰狼"><br><img src="https://z1.ax1x.com/2023/12/17/pi5lgk6.jpg" alt="灰狼"></p><blockquote><p>黑熊</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/19/piIss58.jpg" alt="黑熊"></p><blockquote><p>双峰骆驼</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/19/piIsg2Q.jpg" alt="双峰骆驼"></p><blockquote><p>美洲豹</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/20/pioNusf.jpg" alt="美洲豹"></p><blockquote><p>火烈鸟</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/20/pioNldg.jpg" alt="火烈鸟"></p><blockquote><p>羊驼</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/20/pioNYzq.jpg" alt="羊驼"></p><blockquote><p>黑山羊</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/20/pioNUyV.jpg" alt="黑山羊"></p><blockquote><p>浣熊</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/20/pioNrFJ.jpg" alt="浣熊"></p><blockquote><p>小熊猫</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/20/pioNsY9.jpg" alt="小熊猫"><br><img src="https://z1.ax1x.com/2023/12/20/pioIzEF.jpg" alt="小熊猫"><br><img src="https://z1.ax1x.com/2023/12/19/piIaaTg.jpg" alt="小熊猫"><br><img src="https://z1.ax1x.com/2023/12/19/piIaU0S.jpg" alt="小熊猫"><br><img src="https://z1.ax1x.com/2023/12/19/piIawkQ.jpg" alt="小熊猫"></p><blockquote><p>东北虎</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/20/pioNcS1.jpg" alt="东北虎"></p><blockquote><p>犀牛</p></blockquote><p><img src="https://z1.ax1x.com/2023/12/20/pioNhwD.jpg" alt="犀牛"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://z1.ax1x.com/2023/12/19/piIawkQ.jpg&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="北京野生动物园" scheme="https://www.gaotianyang.top/tags/%E5%8C%97%E4%BA%AC%E9%87%8E%E7%94%9F%E5%8A%A8%E7%89%A9%E5%9B%AD/"/>
    
  </entry>
  
  <entry>
    <title>颐和园23年</title>
    <link href="https://www.gaotianyang.top/archives/2023101190a9dce6/"/>
    <id>https://www.gaotianyang.top/archives/2023101190a9dce6/</id>
    <published>2023-10-11T08:14:34.000Z</published>
    <updated>2023-12-21T09:59:27.775Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://z1.ax1x.com/2023/12/21/piTlTII.jpg" alt="首屏图"></p><a id="more"></a><p><img src="https://z1.ax1x.com/2023/12/21/piTlbJP.jpg" alt="智慧海"><br><img src="https://z1.ax1x.com/2023/12/21/piTlHit.jpg" alt="中央广播电视塔"><br><img src="https://z1.ax1x.com/2023/12/21/piTlLz8.jpg" alt="佛香阁"><br><img src="https://z1.ax1x.com/2023/12/21/piT1iWV.jpg" alt="昆明湖"><br><img src="https://z1.ax1x.com/2023/12/21/piT1FzT.jpg" alt="西堤远眺佛香阁"><br><img src="https://z1.ax1x.com/2023/12/21/piT1PJ0.jpg" alt="十七孔桥"><br><img src="https://z1.ax1x.com/2023/12/21/piT1EyF.jpg" alt="文昌阁"><br><img src="https://z1.ax1x.com/2023/12/21/piTYFr8.jpg" alt="仁寿殿"><br><img src="https://z1.ax1x.com/2023/12/20/pioorrV.jpg" alt="宫保鸡丁"><br><img src="https://z1.ax1x.com/2023/12/20/piooDK0.jpg" alt="驴肉火烧"><br><img src="https://z1.ax1x.com/2023/12/20/pioosbT.jpg" alt="豆腐丝&amp;驴肉"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://z1.ax1x.com/2023/12/21/piTlTII.jpg&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="颐和园" scheme="https://www.gaotianyang.top/tags/%E9%A2%90%E5%92%8C%E5%9B%AD/"/>
    
    <category term="利桥顺酒楼" scheme="https://www.gaotianyang.top/tags/%E5%88%A9%E6%A1%A5%E9%A1%BA%E9%85%92%E6%A5%BC/"/>
    
  </entry>
  
  <entry>
    <title>北海</title>
    <link href="https://www.gaotianyang.top/archives/20231009c2127fdc/"/>
    <id>https://www.gaotianyang.top/archives/20231009c2127fdc/</id>
    <published>2023-10-09T08:19:33.000Z</published>
    <updated>2023-12-22T09:23:04.075Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://z1.ax1x.com/2023/12/21/piTYEVg.jpg" alt="首屏图"></p><a id="more"></a><p><img src="https://z1.ax1x.com/2023/12/21/piTYmPs.jpg" alt="长安街骑行"><br><img src="https://z1.ax1x.com/2023/12/21/piTYZ5j.jpg" alt="天安门广场"><br><img src="https://z1.ax1x.com/2023/12/21/piTYVaQ.jpg" alt="长安街"><br><img src="https://z1.ax1x.com/2023/12/21/piTYJIJ.jpg" alt="树影斑驳"><br><img src="https://z1.ax1x.com/2023/12/21/piTYGa4.jpg" alt="记录美景"><br><img src="https://z1.ax1x.com/2023/12/21/piTY8ZF.jpg" alt="北海公园"><br><img src="https://z1.ax1x.com/2023/12/22/pi7SGvT.jpg" alt="金光"><br><img src="https://z1.ax1x.com/2023/12/22/pi7SBP1.jpg" alt="火烧云"><br><img src="https://z1.ax1x.com/2023/12/22/pi7Sr26.jpg" alt="晚霞"><br><img src="https://z1.ax1x.com/2023/12/22/pi7Sw5R.jpg" alt="落日余晖"><br><img src="https://z1.ax1x.com/2023/12/22/pi7SD8x.jpg" alt="白塔"><br><img src="https://z1.ax1x.com/2023/12/22/pi7SfIA.jpg" alt="中国尊"><br><img src="https://z1.ax1x.com/2023/12/22/pi7SRVH.jpg" alt="红墙"><br><img src="https://z1.ax1x.com/2023/12/22/pi7S5Gt.jpg" alt="故宫角楼"><br><img src="https://z1.ax1x.com/2023/12/22/pi7CKVe.jpg" alt="辣拌牛肉"><br><img src="https://z1.ax1x.com/2023/12/22/pi7CMUH.jpg" alt="延吉冷面"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://z1.ax1x.com/2023/12/21/piTYEVg.jpg&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="北海" scheme="https://www.gaotianyang.top/tags/%E5%8C%97%E6%B5%B7/"/>
    
    <category term="长安街" scheme="https://www.gaotianyang.top/tags/%E9%95%BF%E5%AE%89%E8%A1%97/"/>
    
    <category term="华天延吉餐厅" scheme="https://www.gaotianyang.top/tags/%E5%8D%8E%E5%A4%A9%E5%BB%B6%E5%90%89%E9%A4%90%E5%8E%85/"/>
    
  </entry>
  
  <entry>
    <title>成都</title>
    <link href="https://www.gaotianyang.top/archives/202310014e44ac5d/"/>
    <id>https://www.gaotianyang.top/archives/202310014e44ac5d/</id>
    <published>2023-10-01T00:07:42.000Z</published>
    <updated>2024-01-11T02:17:05.242Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s11.ax1x.com/2024/01/09/pFpVXvR.jpg" alt="首屏图"></p><a id="more"></a><h2 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h2><blockquote><p>清晨，简单吃个早点后，我们就启程前往重庆西站，乘坐高铁前往旅途的下一站——成都。来到成都，先在城市地标春熙路打个卡，近距离观看裸眼 3D 大屏的震撼，以及可爱的 IFS 爬墙熊猫。</p></blockquote><p><img src="https://s11.ax1x.com/2024/01/09/pFpVxDx.jpg" alt="启程"><br><img src="https://s11.ax1x.com/2024/01/09/pFpVvK1.jpg" alt="重庆西站"><br><img src="https://s11.ax1x.com/2024/01/09/pFpVzb6.jpg" alt="春熙路"><br><img src="https://s11.ax1x.com/2024/01/09/pFpVXvR.jpg" alt="裸眼3D"><br><img src="https://s11.ax1x.com/2024/01/09/pFpZpVK.jpg" alt="无辣不欢"><br><img src="https://s11.ax1x.com/2024/01/09/pFpZiPe.jpg" alt="西小串"><br><img src="https://s11.ax1x.com/2024/01/09/pFpZC5D.jpg" alt="成都IFS爬墙熊猫"><br><img src="https://s11.ax1x.com/2024/01/09/pFpZfiD.jpg" alt="戳屁屁"><br><img src="https://s11.ax1x.com/2024/01/09/pFpZhJe.jpg" alt="可爱捏"></p><blockquote><p>走在街头，偶遇川渝地区的麻将文化，街头摆上一桌，搓将起来。在奎星楼街的纽空间门口，有一面艺术涂鸦墙，感受现代艺术与老街的碰撞。隔壁的宽窄巷子人头攒动，穿行在其间，品尝各色的美食，体验百味的人生。</p></blockquote><p><img src="https://s11.ax1x.com/2024/01/09/pFpZTsI.jpg" alt="麻神争霸"><br><img src="https://s11.ax1x.com/2024/01/09/pFpZ5zd.jpg" alt="纽空间"><br><img src="https://s11.ax1x.com/2024/01/09/pFpZ4RH.jpg" alt="奎星楼街"><br><img src="https://s11.ax1x.com/2024/01/09/pFpZ7Lt.jpg" alt="宽巷子"><br><img src="https://s11.ax1x.com/2024/01/09/pFpZoQA.jpg" alt="窄巷子"><br><img src="https://s11.ax1x.com/2024/01/09/pFpZbeP.jpg" alt="宽窄巷子"><br><img src="https://s11.ax1x.com/2024/01/10/pFp7G5D.jpg" alt="拴马石"><br><img src="https://s11.ax1x.com/2024/01/10/pFp7t8H.jpg" alt="绿藤青砖"><br><img src="https://s11.ax1x.com/2024/01/10/pFp7YPe.jpg" alt="花正浓"><br><img src="https://s11.ax1x.com/2024/01/10/pFp7dKI.jpg" alt="闹中取静"><br><img src="https://s11.ax1x.com/2024/01/10/pFp78UO.jpg" alt="魔高"><br><img src="https://s11.ax1x.com/2024/01/10/pFp7N2d.jpg" alt="摩肩接踵"><br><img src="https://s11.ax1x.com/2024/01/10/pFp7UxA.jpg" alt="宽窄"></p><blockquote><p>来到成都，怎么能不去人民公园，体验一下当地人惬意的品茶采耳呢。落座在鹤鸣茶社里，沏一壶花茶，点几盘糕点，嗑着瓜子，闲聊着家常，让身心放松，享受慢生活。正值国庆节，周围的热闹气氛感染着我们，回程到酒店的路上，正好穿过天府广场，看到了繁华美丽的夜成都。</p></blockquote><p><img src="https://s11.ax1x.com/2024/01/10/pFp7wrt.jpg" alt="人民公园"><br><img src="https://s11.ax1x.com/2024/01/10/pFpHjpQ.jpg" alt="鹤鸣茶社"><br><img src="https://s11.ax1x.com/2024/01/10/pFpbC7V.jpg" alt="喜迎国庆"><br><img src="https://s11.ax1x.com/2024/01/10/pFpHOfg.jpg" alt="天府广场"><br><img src="https://s11.ax1x.com/2024/01/10/pFpHzXn.jpg" alt="翻修中的四川科技馆"><br><img src="https://s11.ax1x.com/2024/01/10/pFpbpmq.jpg" alt="繁华的成都"></p><h2 id="Day4"><a href="#Day4" class="headerlink" title="Day4"></a>Day4</h2><blockquote><p>成都大熊猫繁育基地，也算是成都的地标了。这里有着几百头可爱的大熊猫，欢迎着游客们的到来。憨态可掬的各色熊猫，摆着不一样的 pose，有的呆坐，有的干饭，有的躺平，好不悠然自在。</p></blockquote><p><img src="https://s11.ax1x.com/2024/01/10/pFpHx6s.jpg" alt="成都大熊猫繁育基地"><br><img src="https://s11.ax1x.com/2024/01/10/pFpb900.jpg" alt="远眺基地全景"><br><img src="https://s11.ax1x.com/2024/01/10/pFpbikT.jpg" alt="憨态可掬的熊猫"><br><img src="https://s11.ax1x.com/2024/01/11/pF9DXge.jpg" alt="呆萌"><br><img src="https://s11.ax1x.com/2024/01/11/pF9DzDA.jpg" alt="恰饭恰饭"><br><img src="https://s11.ax1x.com/2024/01/11/pF9r9Et.jpg" alt="干饭熊干饭魂"><br><img src="https://s11.ax1x.com/2024/01/11/pF9rSHI.jpg" alt="认真拍摄中"><br><img src="https://s11.ax1x.com/2024/01/11/pF9Dxud.jpg" alt="略施粉黛"><br><img src="https://s11.ax1x.com/2024/01/11/pF9rCUP.jpg" alt="熊猫宝宝"><br><img src="https://s11.ax1x.com/2024/01/11/pF9rP4f.jpg" alt="躺平熊猫"><br><img src="https://s11.ax1x.com/2024/01/11/pF9rFC8.jpg" alt="茂密的竹林"><br><img src="https://s11.ax1x.com/2024/01/11/pF9yO3T.jpg" alt="午休中，勿扰~"><br><img src="https://s11.ax1x.com/2024/01/11/pF9yXgU.jpg" alt="金熊猫"><br><img src="https://s11.ax1x.com/2024/01/11/pF9yLCV.jpg" alt="合影留念"><br><img src="https://s11.ax1x.com/2024/01/11/pF9yb40.jpg" alt="开心吖"><br><img src="https://s11.ax1x.com/2024/01/11/pF9yzDJ.jpg" alt="朕乏了"></p><blockquote><p>一上午的熊猫基地之旅就在欢乐中结束了，正好时至正午，来到武侯祠边上的将军府壹号-鸡毛店，品尝一下成都的正宗特色菜。</p></blockquote><p><img src="https://s11.ax1x.com/2024/01/11/pF9yjvF.jpg" alt="老成都夫妻肺片"><br><img src="https://s11.ax1x.com/2024/01/11/pF9yxu4.jpg" alt="锅边馍"><br><img src="https://s11.ax1x.com/2024/01/11/pF969ER.jpg" alt="招牌青椒鱼"></p><!-- ![萝卜大骨汤]() -->]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s11.ax1x.com/2024/01/09/pFpVXvR.jpg&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="成都" scheme="https://www.gaotianyang.top/tags/%E6%88%90%E9%83%BD/"/>
    
    <category term="春熙路" scheme="https://www.gaotianyang.top/tags/%E6%98%A5%E7%86%99%E8%B7%AF/"/>
    
    <category term="宽窄巷子" scheme="https://www.gaotianyang.top/tags/%E5%AE%BD%E7%AA%84%E5%B7%B7%E5%AD%90/"/>
    
    <category term="大熊猫繁育基地" scheme="https://www.gaotianyang.top/tags/%E5%A4%A7%E7%86%8A%E7%8C%AB%E7%B9%81%E8%82%B2%E5%9F%BA%E5%9C%B0/"/>
    
  </entry>
  
  <entry>
    <title>重庆</title>
    <link href="https://www.gaotianyang.top/archives/2023092929a49be1/"/>
    <id>https://www.gaotianyang.top/archives/2023092929a49be1/</id>
    <published>2023-09-28T23:58:40.000Z</published>
    <updated>2024-01-09T01:30:55.007Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s11.ax1x.com/2024/01/05/pixK7ex.jpg" alt="首屏图"></p><a id="more"></a><h2 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h2><blockquote><p>从北京到重庆，历时 9 个多小时。过黄河，绕秦岭，穿剑阁，横跨华夏南北。终于来到了我们的目的地——重庆。到这里，必须来一碗地道的重庆小面，来融入这重庆森林。</p></blockquote><p><img src="https://s11.ax1x.com/2024/01/04/piv8F9U.jpg" alt="鱼鳞云"><br><img src="https://s11.ax1x.com/2024/01/04/piv8PhT.jpg" alt="疾驰的🚄"><br><img src="https://s11.ax1x.com/2024/01/04/piv8EjJ.jpg" alt="好心情搭配好天气"><br><img src="https://s11.ax1x.com/2024/01/04/piv8k3F.jpg" alt="崇山峻岭"><br><img src="https://s11.ax1x.com/2024/01/04/piv8Ac4.jpg" alt="入蜀喽"><br><img src="https://s11.ax1x.com/2024/01/04/piv8eBR.jpg" alt="看斜阳"><br><img src="https://s11.ax1x.com/2024/01/04/piv8Zu9.jpg" alt="落日"><br><img src="https://s11.ax1x.com/2024/01/04/piv8mH1.jpg" alt="好安逸"><br><img src="https://s11.ax1x.com/2024/01/04/pivGurj.jpg" alt="重庆森林"><br><img src="https://s11.ax1x.com/2024/01/04/pivGKqs.jpg" alt="开往酒店的地铁"><br><img src="https://s11.ax1x.com/2024/01/04/pivG1I0.jpg" alt="夜的重庆"><br><img src="https://s11.ax1x.com/2024/01/04/pivGlaq.jpg" alt="重庆小面"><br><img src="https://s11.ax1x.com/2024/01/04/pivGQZn.jpg" alt="豌杂面"><br><img src="https://s11.ax1x.com/2024/01/04/pivGJRU.jpg" alt="重庆“保时捷”"></p><h2 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h2><blockquote><p>第二天，我们早早出发，前往磁器口古镇。到达景区的时候，因为时间还早，客流并不算多。走在清冷的街道上，使我们仿佛回到了古镇原本的模样。古镇依山而建，石阶错落，我们悠闲地在其间漫步，欣赏独属于早起者的那一瞥岁月静好。</p></blockquote><p><img src="https://s11.ax1x.com/2024/01/04/pivGGGT.jpg" alt="早起出发"><br><img src="https://s11.ax1x.com/2024/01/04/pivG8iV.jpg" alt="磁器口古镇"><br><img src="https://s11.ax1x.com/2024/01/05/pixuTIS.jpg" alt="青苔"><br><img src="https://s11.ax1x.com/2024/01/05/pixubGQ.jpg" alt="茶馆"><br><img src="https://s11.ax1x.com/2024/01/05/pixuq2j.jpg" alt="拾阶而上"><br><img src="https://s11.ax1x.com/2024/01/05/pixuIVf.jpg" alt="沉睡中的小镇"><br><img src="https://s11.ax1x.com/2024/01/05/pixuoa8.jpg" alt="回眸"></p><blockquote><p>从磁器口出来，乘坐旅游巴士来到渣滓洞白公馆。络绎不绝的游客，来到这里缅怀先烈。这些建筑的肃杀之气与周边环境的绿意盎然显得有些突兀。</p></blockquote><p><img src="https://s11.ax1x.com/2024/01/05/pixuHPg.jpg" alt="渣滓洞"><br><img src="https://s11.ax1x.com/2024/01/05/pixuLxs.jpg" alt="高高的围墙"><br><img src="https://s11.ax1x.com/2024/01/05/pixuXMn.jpg" alt="繁花点点"><br><img src="https://s11.ax1x.com/2024/01/05/pixKOYD.jpg" alt="绿意盎然"><br><img src="https://s11.ax1x.com/2024/01/05/pixKHw6.jpg" alt="古树"></p><blockquote><p>在白公馆旁边，有一条登山道，顺着道路来到半山腰，可以一览歌乐山的美景。云雾缭绕，宛若仙境。搭上有轨电车，跨过长江大桥，去尝一尝正宗的红油火锅，巴适得很~</p></blockquote><p><img src="https://s11.ax1x.com/2024/01/05/pixK7ex.jpg" alt="歌乐山国家森林公园"><br><img src="https://s11.ax1x.com/2024/01/05/pixKLFO.jpg" alt="蝴蝶翩翩"><br><img src="https://s11.ax1x.com/2024/01/05/pixKIyR.jpg" alt="错综复杂的道路"><br><img src="https://s11.ax1x.com/2024/01/05/pixKoO1.jpg" alt="跨江大桥"><br><img src="https://s11.ax1x.com/2024/01/05/pixKXfe.jpg" alt="渝大狮毛肚老火锅"><br><img src="https://s11.ax1x.com/2024/01/05/pixKbTK.jpg" alt="红油火锅"></p><blockquote><p>漫步在山城重庆的街头，看一看老城的街道，一架架飞机从头顶掠过。打卡了干饭三健客常常光顾的晓月面馆，还偶遇了 R 哥。走在金色的重庆摩天双子塔脚下的江畔，看滔滔江水从身边奔流而过，望着江对岸的高楼林立，体会新旧重庆的融合~</p></blockquote><p><img src="https://s11.ax1x.com/2024/01/08/pFSUiS1.jpg" alt="飞机划过天际"><br><img src="https://s11.ax1x.com/2024/01/08/pFSUFQx.jpg" alt="忙碌的天空"><br><img src="https://s11.ax1x.com/2024/01/08/pFSUZwD.jpg" alt="晓月面馆"><br><img src="https://s11.ax1x.com/2024/01/08/pFSUnFH.jpg" alt="干饭三健客"><br><img src="https://s11.ax1x.com/2024/01/08/pFSUky6.jpg" alt="滔滔江水"><br><img src="https://s11.ax1x.com/2024/01/08/pFSUAOK.jpg" alt="山城重庆"><br><img src="https://s11.ax1x.com/2024/01/08/pFSUVeO.jpg" alt="金色摩天双子塔"><br><img src="https://s11.ax1x.com/2024/01/08/pFSUeTe.jpg" alt="高楼林立"><br><img src="https://s11.ax1x.com/2024/01/08/pFSUwpn.jpg" alt="十字路口"><br><img src="https://s11.ax1x.com/2024/01/08/pFSU0lq.jpg" alt="重庆CBD"></p><blockquote><p>登上长江大桥，感受迎面而来的清风。站在桥沿远眺，用心体验目所能及的地方。徒步的终点，来到了嘉陵江石滩，这里是洪崖洞的最佳打卡点。在这里我们静静等待，等待灯光亮起，夜幕的降临。</p></blockquote><p><img src="https://s11.ax1x.com/2024/01/08/pFSUDXV.jpg" alt="长江全景"><br><img src="https://s11.ax1x.com/2024/01/08/pFSUB60.jpg" alt="远眺"><br><img src="https://s11.ax1x.com/2024/01/08/pFSUgk4.jpg" alt="回眸"><br><img src="https://s11.ax1x.com/2024/01/08/pFSUsmT.jpg" alt="东水门长江大桥"><br><img src="https://s11.ax1x.com/2024/01/08/pFSUy0U.jpg" alt="湖广会馆"><br><img src="https://s11.ax1x.com/2024/01/08/pFSU67F.jpg" alt="白天的洪崖洞"><br><img src="https://s11.ax1x.com/2024/01/09/pFpZ9UO.jpg" alt="洪崖洞"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s11.ax1x.com/2024/01/05/pixK7ex.jpg&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="重庆" scheme="https://www.gaotianyang.top/tags/%E9%87%8D%E5%BA%86/"/>
    
    <category term="磁器口古镇" scheme="https://www.gaotianyang.top/tags/%E7%A3%81%E5%99%A8%E5%8F%A3%E5%8F%A4%E9%95%87/"/>
    
    <category term="歌乐山国家森林公园" scheme="https://www.gaotianyang.top/tags/%E6%AD%8C%E4%B9%90%E5%B1%B1%E5%9B%BD%E5%AE%B6%E6%A3%AE%E6%9E%97%E5%85%AC%E5%9B%AD/"/>
    
    <category term="洪崖洞" scheme="https://www.gaotianyang.top/tags/%E6%B4%AA%E5%B4%96%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>石林峡</title>
    <link href="https://www.gaotianyang.top/archives/2023092310cfcf51/"/>
    <id>https://www.gaotianyang.top/archives/2023092310cfcf51/</id>
    <published>2023-09-23T09:27:54.000Z</published>
    <updated>2023-12-22T09:31:04.489Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://z1.ax1x.com/2023/12/22/pi7C38I.jpg" alt="首屏图"></p><a id="more"></a><p><img src="https://z1.ax1x.com/2023/12/22/pi7CQ5d.jpg" alt="自拍一个🤳🏻"><br><img src="https://z1.ax1x.com/2023/12/22/pi7CaVg.jpg" alt="笑一个"><br><img src="https://z1.ax1x.com/2023/12/22/pi7Ctr8.jpg" alt="玻璃栈道"><br><img src="https://z1.ax1x.com/2023/12/22/pi7CYKf.jpg" alt="点赞"><br><img src="https://z1.ax1x.com/2023/12/22/pi7CNqS.jpg" alt="一览众山小"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://z1.ax1x.com/2023/12/22/pi7C38I.jpg&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游记" scheme="https://www.gaotianyang.top/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="石林峡" scheme="https://www.gaotianyang.top/tags/%E7%9F%B3%E6%9E%97%E5%B3%A1/"/>
    
  </entry>
  
  <entry>
    <title>NicePhoto建站经验总结</title>
    <link href="https://www.gaotianyang.top/archives/202303104356a8d7/"/>
    <id>https://www.gaotianyang.top/archives/202303104356a8d7/</id>
    <published>2023-03-10T09:43:09.000Z</published>
    <updated>2023-12-04T08:27:15.733Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://z1.ax1x.com/2022/06/06/XwoBsP.jpg" alt="首屏图"></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>无论你是摄影师、设计师、艺术家还是创作者，在线电子相册都可以满足你的需求。通过这个平台，可以建立自己的个人品牌，并与更多的人建立起联系和合作。此项目共分为门户网站、前台展示、后台管理、数据大屏四部分。</p><p><img src="https://s1.ax1x.com/2023/03/13/ppMxywR.png" alt="NicePhoto"></p><h2 id="技术总结"><a href="#技术总结" class="headerlink" title="技术总结"></a>技术总结</h2><ul><li><strong>Next</strong> react 应用程序框架，构建高性能、可扩展和易于维护的 Web 应用程序</li><li><strong>surrealdb</strong> 分布式多模型数据库</li><li><strong>swr</strong> 用于数据请求的 React Hooks 库</li><li><strong>tinytime</strong> 时间处理</li><li><strong>xbytes</strong> 字节格式转换</li><li><strong>tailwindcss</strong> css 样式库</li><li><strong>tremor</strong> UI 库</li><li><strong>vercel</strong> 代码托管平台</li></ul><h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><h3 id="nice-photo-site-门户"><a href="#nice-photo-site-门户" class="headerlink" title="nice-photo-site 门户"></a>nice-photo-site 门户</h3><p><a href="https://nice-photo.xiangshi.app/">门户网址链接</a></p><p><img src="https://s1.ax1x.com/2023/03/13/ppQZA9H.png" alt="门户项目"></p><h4 id="会员服务"><a href="#会员服务" class="headerlink" title="会员服务"></a>会员服务</h4><table><thead><tr><th>限制</th><th>免费版</th><th>高级版</th><th>独立部署</th></tr></thead><tbody><tr><td>专辑数量限制</td><td>2</td><td>无限</td><td>无限</td></tr><tr><td>相册数量限制</td><td>4</td><td>无限</td><td>无限</td></tr><tr><td>图片空间限制</td><td>100MB</td><td>1000MB</td><td>无限</td></tr><tr><td>图片访问流量</td><td>500MB/月</td><td>4G/月</td><td>无限</td></tr><tr><td>销售线索</td><td>禁用</td><td>支持</td><td>支持</td></tr><tr><td>服务价格</td><td>禁用</td><td>支持</td><td>支持</td></tr><tr><td>自定义域名前缀</td><td>禁用</td><td>支持</td><td>支持</td></tr><tr><td>私有部署</td><td>-</td><td>-</td><td>支持</td></tr><tr><td>定价</td><td>免费</td><td>¥99/年</td><td>¥899/年</td></tr></tbody></table><h3 id="nice-photo-client-前台项目"><a href="#nice-photo-client-前台项目" class="headerlink" title="nice-photo-client 前台项目"></a>nice-photo-client 前台项目</h3><p><a href="https://flavor-magic.np.xiangshi.app/">前台网址链接</a></p><p><img src="https://s1.ax1x.com/2023/03/13/ppQVvcR.png" alt="前台项目"></p><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>NicePhoto 是一个功能强大的在线照片展示平台，为用户提供了丰富的展示、管理、销售照片的工具和功能。我们致力于打造一个简单易用、高效可靠、安全稳定的产品，帮助用户快速创建和发布自己的照片展示网站，并与客户进行交流和合作。NicePhoto 不仅可以用于个人摄影师、艺术家、设计师等行业，也可以服务于各种商业和非营利机构，帮助他们展示和推广自己的品牌和形象。无论您是需要展示照片、卖照片、展示作品、销售商品还是拓展业务，NicePhoto 都能为您提供定制化的解决方案和优质的服务，让您的想象力得到最大的释放和发挥。</p><h4 id="功能特性"><a href="#功能特性" class="headerlink" title="功能特性"></a>功能特性</h4><ul><li><strong>多种展示方式</strong> 多种照片和作品展示方式，包括幻灯片、画廊、网格等多种形式，让你的作品展示更加独特和个性化。</li><li><strong>高效上传和管理</strong> 高效、便捷的上传和管理功能，让你可以轻松地上传、编辑、删除你的作品。</li><li><strong>销售线索收集</strong> 销售线索收集功能，可以让你通过网站访问者的注册信息、留言信息等途径收集潜在客户的联系信息，为你的业务销售提供有力支持。</li><li><strong>服务介绍</strong> 提供了服务介绍功能，可以详细介绍您能提供的各种服务及其优势，方便您的客户了解服务内容。</li><li><strong>摄影专业化</strong> 我们的产品针对摄影行业进行了更多的优化，使网站更具有摄影专业性和个性化。</li><li><strong>灵活性</strong> 我们的产品功能非常灵活，您可以根据自己的需求自由选择需要展示的功能，使网站更加个性化和专业化。</li></ul><h3 id="nice-photo-manage-后台管理"><a href="#nice-photo-manage-后台管理" class="headerlink" title="nice-photo-manage 后台管理"></a>nice-photo-manage 后台管理</h3><p><a href="https://nice-photo-manage.xiangshi.app/">后台网址链接</a></p><p>后台管理共分为概览、专辑管理、相册管理、首页特效、销售线索、介绍信息、套系价格、系统设置几大模块。</p><h4 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h4><p>在系统中，您可以通过系统概览页面快速查看各个模块的概要信息、空间总占用情况以及最新的销售线索信息等。</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQkDXV.png" alt="概览"></p><p>如果您需要对销售线索进行快速操作，则可以在概览模块中进行相关设置。</p><p>此外，我们建议您经常查看系统概览页面，因为它可以提供有关系统使用状况的重要信息。</p><h4 id="专辑管理"><a href="#专辑管理" class="headerlink" title="专辑管理"></a>专辑管理</h4><p>在“作品展示”菜单下的第一个模块是“专辑管理”，这是本系统的重要模块之一。在设置完站点的基本信息后，首先您需要在这里创建一个专辑。</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQAVcq.png" alt="专辑管理"></p><p>添加专辑非常简单，只需点击“添加专辑”按钮即可，然后在弹出的表单中填写主标题、副标题和选择一个展示效果即可。</p><p>展示效果包括：轮播、滑轨、瀑布流、网格等五大类，在每个大类下还有对应的细节参数可以进行设置。</p><p>成功添加专辑后，您可以在当前页面看到刚刚添加的专辑。如果您需要排序多个专辑，仅需将左侧的十字图标拖动到您想要放置的位置即可。</p><p>对于每个已创建的专辑，右侧分别有三个按钮：进入专辑下的相册管理模块、编辑专辑信息、删除专辑。您可以根据需要单击这些按钮执行不同的操作。</p><h4 id="相册管理"><a href="#相册管理" class="headerlink" title="相册管理"></a>相册管理</h4><p>创建了第一个专辑后，左侧的“作品管理”菜单下会多出一个“相册管理”。进入相册管理，默认显示的是最新一个专辑下的所有相册。如果您需要切换到其他专辑，请在页面左上角的下拉菜单中进行选择。</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQAVcq.png" alt="相册管理"></p><p>添加相册非常简单，只需点击“添加相册”按钮即可，然后在弹出的表单中填写主标题、副标题和选择一个展示效果即可。</p><p>展示效果包括：轮播、滑轨、瀑布流、网格、自适应等七大类，在每个大类下还有对应的细节参数可以进行设置。</p><p>成功添加相册后，您可以在当前页面看到刚刚添加的相册。如果您需要排序多个相册，仅需将卡片底部的十字图标拖动到您想要放置的位置即可。单击卡片中间的编辑按钮，即可对相册的封面图片进行设置。</p><p>对于每个已创建的相册，卡片底部分别有三个按钮：进入相册下的照片管理模块、编辑相册信息、删除相册。您可以根据需要单击这些按钮执行不同的操作。</p><p>点击相册卡片底部的绿色“照片”按钮即可进入照片模块。在照片模块中，只需将要上传的图片拖到上传文件区域即可，同时您也可以一次性上传多张图片。</p><p>一旦图片上传完成，您可以对它们的顺序进行排列以满足您自己的需求。您可以将鼠标悬停在照片上方以显示一个“移动”图标，然后单击并拖动该图标以调整照片的顺序。点击红色的删除按钮可删除这个图片。</p><h4 id="首页特效"><a href="#首页特效" class="headerlink" title="首页特效"></a>首页特效</h4><p>在首页特效模块中有两个子模块，分别是“首页作品”和“首页背景”。</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQANDK.png" alt="首页特效"></p><p>在相册管理模块中，用户可以点击黄色的编辑按钮，并在弹出框中选择发布至首页，这样就可以在“首页作品”子模块中看到对应的相册了。</p><p>在“首页作品”子模块页面下方的简介卡片上，用户可以点击编辑按钮并为首页需要展示的作品添加一段简要的介绍。</p><p>在系统设置模块的站点导航卡片上，用户可以点击编辑按钮将“首页浏览作品”改为显示，这样用户就可以在首页上快速地看到了对应的作品。</p><p>在“首页背景”子模块中，用户可以快速地上传多张背景图。这些图片将以淡入淡出并加上稍微放大的效果在首页背景轮流显示。</p><h4 id="销售线索"><a href="#销售线索" class="headerlink" title="销售线索"></a>销售线索</h4><p>销售线索模块会展示所有在网站上给您留言咨询的信息。</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQAHK0.png" alt="销售线索"></p><p>后台界面上会有明显的未读提示，让您可以清晰地了解哪些信息尚未被查看过。</p><p>该模块还提供接入飞书 APP 提醒的能力，方便您及时跟进销售线索的动态。</p><p>您也可以便捷地设置这些线索是否已经被跟踪过，以便于管理和追踪。</p><h4 id="介绍信息"><a href="#介绍信息" class="headerlink" title="介绍信息"></a>介绍信息</h4><p>介绍信息模块下设关于我们、工作室、精修照片三个子模块。</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQAxPJ.png" alt="关于我们"></p><p>关于我们模块：该模块用于编辑公司/工作室的介绍信息，上传对应的 VI 图。在此模块内，用户可以添加、编辑和删除介绍信息，并上传一张符合 VI 形象的图片。具体操作流程如下：</p><p>点击“关于我们”模块，添加/编辑介绍信息，可以选择字体样式、大小和颜色等属性，上传 VI 图。</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQAzG9.png" alt="工作室"></p><p>工作室模块：该模块用于展示工作室的办公场景和体现企业文化。在此模块内，用户可以添加和删除工作室场景照片。</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQES2R.png" alt="精修照片"></p><p>精修照片模块：该模块用于展示照片精修前后的对比效果。针对摄影工作室而言，该模块非常实用。在此模块内，用户可以上传精修前后的照片。</p><h4 id="套系价格"><a href="#套系价格" class="headerlink" title="套系价格"></a>套系价格</h4><p>在此模块内，用户可以添加、编辑和删除服务套系的资料，并设置相关价格和描述信息等。具体操作流程如下：</p><ul><li>点击“套系价格”模块</li><li>添加/编辑服务套系资料，包括名称、价格、描述等信息</li><li>删除服务套系资料</li></ul><p><img src="https://s1.ax1x.com/2023/03/13/ppQEDdU.png" alt="套系价格"></p><h4 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h4><p>本软件的系统设置模块提供编辑站点信息、上传标识图标、自定义二级域名等功能，有助于网站的优化和定制。</p><p><img src="https://s1.ax1x.com/2023/03/13/ppQEroF.png" alt="系统设置"></p><p>网站的基本信息包括网站的名称、描述、关键字、版权信息等，这些信息对于搜索引擎优化(SEO)来说非常重要。具体操作流程如下：</p><ul><li>点击“站点信息”卡片</li><li>填写站点的基本信息：网站标题、描述、关键字、版权等。</li><li>确认并保存修改</li></ul><hr><p>站点图标卡片：该卡片可上传网站的 favicon，使得用户可以在浏览器书签栏、标签页或收藏夹中看到网站的标识。具体操作流程如下：</p><ul><li>点击“站点图标”卡片</li><li>上传 favicon 图片，建议大小为 16x16 像素或 32x32 像素</li><li>确认并保存修改</li></ul><hr><p>站点 LOGO 卡片：该卡片可上传位于网站左上角的 LOGO，方便用户在浏览网站时更加直观地了解该网站的品牌和主题。具体操作流程如下：</p><ul><li>点击“站点 LOGO”卡片</li><li>上传 LOGO 图片，建议大小为 60x60 像素</li><li>确认并保存修改</li></ul><hr><p>备案信息卡片的使用方法和操作流程</p><ul><li>点击“备案信息”卡片</li><li>填写备案所需信息：备案号、单位名称、网站名称、主办单位等。</li><li>填写备案连接</li><li>确认并保存修改</li></ul><hr><p>自定义域名卡片：该卡片可让用户自定义一个二级域名，方便用户记忆和分享。具体操作流程如下：</p><ul><li>点击“帮到域名”卡片</li><li>输入想要的二级域名</li><li>确认并保存修改</li></ul><hr><p>站点导航可控制各个模块的展示状态，包括首页、作品、套系价格、关于我们、联系我们等，在网站的导航栏中进行显示。</p><ul><li>首页：左上角导航首页按钮的显示状态</li><li>作品：左上角导航作品按钮的显示状态</li><li>套系价格：左上角导航套系价格按钮的显示状态</li><li>关于我们：左上角导航关于我们按钮的显示状态</li><li>联系我们：左上角导航联系我们按钮的显示状态</li><li>介绍侧边栏：左上角导航 “…”按钮的显示状态</li><li>首页浏览作品：是否在首页左半部分区域展示首页作品集</li><li>首页联系我们：是否在首页右半部分区域展示联系我们按钮</li></ul><hr><p>许可密钥是一种授权码，可用于购买和激活软件的高级版，也称为 License。</p><p>许可密钥和 License 是用于购买和使用软件的重要凭证，具体操作流程如下：</p><ul><li>购买软件高级版</li><li>在购买过程中获取许可密钥</li><li>打开软件并输入许可密钥</li><li>完成激活升级至高级版</li></ul><p>注意：每个许可密钥只能激活一次，因此请务必妥善保管。</p><h3 id="nice-photo-dashboard-数据大屏"><a href="#nice-photo-dashboard-数据大屏" class="headerlink" title="nice-photo-dashboard 数据大屏"></a>nice-photo-dashboard 数据大屏</h3><p>数据大屏是一种用于展示和分析数据的可视化工具，通过对数据进行多维度的汇总和展示，可以为用户提供全面、直观、清晰的数据信息。除了方便运维人员对平台运行状态进行快速了解之外，数据大屏还可以扩展以下作用：</p><p>监控业务数据：数据大屏可以实时监控平台的各项业务数据，如注册量、用户活跃度、转化率等，帮助运营人员了解业务状况，及时调整策略，提高运营效率和用户满意度。</p><p>优化资源配置：通过数据大屏可以了解到平台各项资源的使用情况，包括图片资源存储、当日新增图片、当日新增资源大小、资源使用量用户排名等，从而根据数据分析结果进行资源的优化配置，减少浪费，提高资源利用率，降低运营成本。</p><p>数据大屏作为一种数据可视化工具，具有方便、直观、全面、清晰等优点，对于运营、管理、决策等方面都有着重要的作用。</p><h2 id="上线和优化"><a href="#上线和优化" class="headerlink" title="上线和优化"></a>上线和优化</h2><p>项目依托于 nextjs 进行代码的封装加密与构建。并通过使用环境变量来存储一些敏感值，并在代码中引用它们。针对富文本数据，需要使用 js 的编码与转码对数据进行处理。方便后续维护时的数据库迁移，导入导出操作。</p><p>数据库响应超时问题优化，目前暂时先通过使用免费版进行托管，后续如果用户量提升了，再考虑进行付费版服务迁移。</p><h2 id="推广经验"><a href="#推广经验" class="headerlink" title="推广经验"></a>推广经验</h2><p>目前主要的客群是摄影师、设计师、艺术家还是创作者，想成立自己的工作室，有推广建站诉求，但又不希望过多投入。</p><p>社交媒体宣传：在 v2ex、小红书、朋友圈等平台，发布关于 NicePhoto 的信息和案例，并与感兴趣的目标客户建立联系。</p><p>创意营销活动：通过各种创意营销活动，例如比赛、抽奖、推荐奖励等，吸引更多的潜在客户关注并尝试 NicePhoto。</p><p>提供试用版：提供免费试用版、正式会员体验券，让潜在客户可以尝试使用 NicePhoto，感受电子相册带来的便利和优势。</p><p>与其他行业协作：与相关行业如摄影器材厂商、艺术教育机构等协作，共同推广 NicePhoto。</p><p>通过口碑宣传：口碑宣传是营销的重要方式之一，因此建议与现有用户建立良好的关系，促进他们分享他们的使用经验和推荐。</p><p>利用 SEO 优化：使用搜索引擎优化（SEO）的技巧，优化您的网站和内容，以便更多的潜在客户可以找到您的 NicePhoto 服务。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://z1.ax1x.com/2022/06/06/XwoBsP.jpg&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="nicephoto" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/nicephoto/"/>
    
    <category term="next" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/nicephoto/next/"/>
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/tags/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="nicephoto" scheme="https://www.gaotianyang.top/tags/nicephoto/"/>
    
    <category term="next" scheme="https://www.gaotianyang.top/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>高频面试题</title>
    <link href="https://www.gaotianyang.top/archives/202207034117e5b/"/>
    <id>https://www.gaotianyang.top/archives/202207034117e5b/</id>
    <published>2022-07-03T08:24:11.000Z</published>
    <updated>2023-12-05T02:25:47.194Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2022/06/06/Xwo0Mt.jpg" alt="首屏图"></p><a id="more"></a><h2 id="简单页面"><a href="#简单页面" class="headerlink" title="简单页面"></a>简单页面</h2><h3 id="CSS-选择器样式优先级"><a href="#CSS-选择器样式优先级" class="headerlink" title="CSS 选择器样式优先级"></a>CSS 选择器样式优先级</h3><ul><li>说一下 CSS 的选择器有哪些</li><li>优先级是怎样的</li><li>权重计算方式</li></ul><p>CSS 选择器包括行内样式、id 选择器、class 选择器、标签选择器。优先级依次降低，!important 可用于优先级提升，比行内样式优先级还要高，权重的计算依次为 1000,100,10,1，!important 的优先级为正无穷。</p><p>但实际上，1000,100,10,1 不是十进制中的 1000,100,10,1，而是进制数，不是 2 进制，不是 10 进制，而是 256 进制，就是 0 到 255 后+1 才是 1，比如通配符的权重为 0，伪元素的权重为 1，中间相差了 255，依次类推。</p><p>并且，!important 的权重虽然为正无穷，但也是可以计算的，比如正无穷+1 或者*2 就比正无穷大，原因是计算机中的正无穷是有界的，不是数学上无界的概念。</p><blockquote><p>参考：<a href="https://juejin.cn/post/6844904159305531406">面试官：说下 CSS 选择器优先级</a></p></blockquote><h3 id="CSS-实现三列布局（左右固定宽度，中间自适应）"><a href="#CSS-实现三列布局（左右固定宽度，中间自适应）" class="headerlink" title="CSS 实现三列布局（左右固定宽度，中间自适应）"></a>CSS 实现三列布局（左右固定宽度，中间自适应）</h3><blockquote><p>无论是什么布局方式，无外乎需要应用 float、inline-block、table、absolute、flex、grid 这 6 种布局属性，<br>然后再配合负 margin、calc()函数、bfc、增加结构等来实现布局</p><p>自适应包括两种情况：一种是宽度由内容撑开，一种是宽度自动撑满父元素剩余宽度<br>可实现宽度由内容撑开的属性有： float、inline、inline-block、table、table-cell、absolute、fixed、flex、grid<br>可实现宽度自动撑满父元素剩余宽度的属性有： overflow(配合 float)、table、flex、grid</p></blockquote><h4 id="CSS-浮动"><a href="#CSS-浮动" class="headerlink" title="CSS 浮动"></a>CSS 浮动</h4><p>第一个 float:left，第二个 float:right，第三个设置 margin-left 和 margin-right</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.center</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="绝对定位法"><a href="#绝对定位法" class="headerlink" title="绝对定位法"></a>绝对定位法</h4><p>第一个定位到 left，第二个定位到 right，第三个设置 margin-left 和 margin-right</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.center</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="flex-布局"><a href="#flex-布局" class="headerlink" title="flex 布局"></a>flex 布局</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  //或者</span><br><span class="line">  <span class="selector-tag">flex</span>: 0 0 200<span class="selector-tag">px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  //或者</span><br><span class="line">  <span class="selector-tag">flex</span>: 0 0 200<span class="selector-tag">px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.center</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://juejin.cn/post/6844903720149483528">三列布局几种经典实现方式</a></p></blockquote><h3 id="如果要做优化，CSS-提高性能的方法有哪些？"><a href="#如果要做优化，CSS-提高性能的方法有哪些？" class="headerlink" title="如果要做优化，CSS 提高性能的方法有哪些？"></a>如果要做优化，CSS 提高性能的方法有哪些？</h3><ul><li>内联首屏关键 CSS</li><li>异步加载 CSS</li><li>资源压缩</li><li>合理使用选择器</li><li>减少使用昂贵的属性</li><li>不要使用 @import</li></ul><h3 id="Flex-容器属性"><a href="#Flex-容器属性" class="headerlink" title="Flex 容器属性"></a>Flex 容器属性</h3><h4 id="flex-direction"><a href="#flex-direction" class="headerlink" title="flex-direction"></a>flex-direction</h4><blockquote><p>flex-direction 主轴方向</p></blockquote><ul><li>row（默认值）：主轴为水平方向，起点在左端。</li><li>row-reverse：主轴为水平方向，起点在右端。</li><li>column：主轴为垂直方向，起点在上沿。</li></ul><h4 id="flex-wrap"><a href="#flex-wrap" class="headerlink" title="flex-wrap"></a>flex-wrap</h4><blockquote><p>flex-wrap 是否换行</p></blockquote><ul><li>nowrap（默认值）：不换行。</li><li>wrap：换行。</li><li>wrap-reverse：换行，第一行在下方。</li></ul><h4 id="flex-flow（12-简写形式）"><a href="#flex-flow（12-简写形式）" class="headerlink" title="flex-flow（12 简写形式）"></a>flex-flow（12 简写形式）</h4><h4 id="justify-content"><a href="#justify-content" class="headerlink" title="justify-content"></a>justify-content</h4><blockquote><p>justify-content 项目在主轴上的对齐方式</p></blockquote><ul><li>flex-start（默认值）：左对齐（即上面页面展示效果）</li><li>flex-end：右对齐</li><li>center： 居中</li><li>space-between：两端对齐，项目之间的间隔都相等。</li><li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li></ul><h4 id="align-items"><a href="#align-items" class="headerlink" title="align-items"></a>align-items</h4><blockquote><p>align-items 该属性可以控制弹性容器中成员在当前行内的对齐方式。当成员设置了 align-self 属性时，父容器的 align-items 值则不再对它生效</p></blockquote><ul><li>flex-start：交叉轴的起点对齐。</li><li>flex-end：交叉轴的终点对齐。</li><li>center：交叉轴的中点对齐。</li><li>baseline: 项目的第一行文字的基线对齐。</li><li>stretch（默认值）：如果项目未设置高度或设为 auto，将占满整个容器的高度。</li></ul><h4 id="align-content"><a href="#align-content" class="headerlink" title="align-content"></a>align-content</h4><blockquote><p>align-content 当弹性容器在正交轴方向还存在空白时，该属性可以控制其中所有行的对齐方式</p></blockquote><ul><li>stretch（默认值）：元素被拉伸以适应容器</li><li>center：元素位于容器的中心</li><li>flex-start：元素位于容器的开头</li><li>flex-end：元素位于容器的结尾</li><li>space-between：元素位于各行之间留有空白的容器内</li><li>space-around：元素位于各行之前、之间、之后都留有空白的容器内</li></ul><h3 id="标准盒模型和怪异盒模型的区别"><a href="#标准盒模型和怪异盒模型的区别" class="headerlink" title="标准盒模型和怪异盒模型的区别"></a>标准盒模型和怪异盒模型的区别</h3><h3 id="rem-的特点"><a href="#rem-的特点" class="headerlink" title="rem 的特点"></a>rem 的特点</h3><h2 id="Js"><a href="#Js" class="headerlink" title="Js"></a>Js</h2><h3 id="防抖和节流，应用场景"><a href="#防抖和节流，应用场景" class="headerlink" title="防抖和节流，应用场景"></a>防抖和节流，应用场景</h3><h3 id="什么是闭包"><a href="#什么是闭包" class="headerlink" title="什么是闭包"></a>什么是闭包</h3><h3 id="继承有哪些方法"><a href="#继承有哪些方法" class="headerlink" title="继承有哪些方法"></a>继承有哪些方法</h3><h3 id="什么是深-浅拷贝，有哪些实现方式"><a href="#什么是深-浅拷贝，有哪些实现方式" class="headerlink" title="什么是深/浅拷贝，有哪些实现方式"></a>什么是深/浅拷贝，有哪些实现方式</h3><h3 id="数组有哪些常用方法，引出下一个问题-slice-和-splice-区别"><a href="#数组有哪些常用方法，引出下一个问题-slice-和-splice-区别" class="headerlink" title="数组有哪些常用方法，引出下一个问题,slice 和 splice 区别"></a>数组有哪些常用方法，引出下一个问题,slice 和 splice 区别</h3><h3 id="Promise-all-和-Promise-race-的区别，应用场景"><a href="#Promise-all-和-Promise-race-的区别，应用场景" class="headerlink" title="Promise.all 和 Promise.race 的区别，应用场景"></a>Promise.all 和 Promise.race 的区别，应用场景</h3><h3 id="微任务和宏任务的区别"><a href="#微任务和宏任务的区别" class="headerlink" title="微任务和宏任务的区别"></a>微任务和宏任务的区别</h3><h3 id="数组和字符串的相互转换"><a href="#数组和字符串的相互转换" class="headerlink" title="数组和字符串的相互转换"></a>数组和字符串的相互转换</h3><h3 id="js-判断数据类型的几种方法"><a href="#js-判断数据类型的几种方法" class="headerlink" title="js 判断数据类型的几种方法"></a>js 判断数据类型的几种方法</h3><h3 id="toString-方法"><a href="#toString-方法" class="headerlink" title="toString 方法"></a>toString 方法</h3><h3 id="es6-新特性"><a href="#es6-新特性" class="headerlink" title="es6 新特性"></a>es6 新特性</h3><h3 id="MVVM-模式"><a href="#MVVM-模式" class="headerlink" title="MVVM 模式"></a>MVVM 模式</h3><h3 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h3><h3 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h3><h3 id="http-请求过程"><a href="#http-请求过程" class="headerlink" title="http 请求过程"></a>http 请求过程</h3><h3 id="前端如何实现跨域"><a href="#前端如何实现跨域" class="headerlink" title="前端如何实现跨域"></a>前端如何实现跨域</h3><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2><h3 id="Vue-中的的通信方式有几种？隔代组件的通信你用那种方式解决"><a href="#Vue-中的的通信方式有几种？隔代组件的通信你用那种方式解决" class="headerlink" title="Vue 中的的通信方式有几种？隔代组件的通信你用那种方式解决"></a>Vue 中的的通信方式有几种？隔代组件的通信你用那种方式解决</h3><h3 id="v-show-和-v-if-指令的共同点和不同点"><a href="#v-show-和-v-if-指令的共同点和不同点" class="headerlink" title="v-show 和 v-if 指令的共同点和不同点"></a>v-show 和 v-if 指令的共同点和不同点</h3><h3 id="为什么使用-key"><a href="#为什么使用-key" class="headerlink" title="为什么使用 key"></a>为什么使用 key</h3><h3 id="简述-computed-和-watch-的使用场景"><a href="#简述-computed-和-watch-的使用场景" class="headerlink" title="简述 computed 和 watch 的使用场景"></a>简述 computed 和 watch 的使用场景</h3><h3 id="params-和-query-的区别（怎么定义-vue-router-的动态路由-怎么获取传过来的值？）"><a href="#params-和-query-的区别（怎么定义-vue-router-的动态路由-怎么获取传过来的值？）" class="headerlink" title="params 和 query 的区别（怎么定义 vue-router 的动态路由? 怎么获取传过来的值？）"></a>params 和 query 的区别（怎么定义 vue-router 的动态路由? 怎么获取传过来的值？）</h3><h3 id="route-和-router-的区别"><a href="#route-和-router-的区别" class="headerlink" title="$route 和 $router 的区别"></a>$route 和 $router 的区别</h3><h3 id="vue-router-有哪几种导航钩子"><a href="#vue-router-有哪几种导航钩子" class="headerlink" title="vue-router 有哪几种导航钩子"></a>vue-router 有哪几种导航钩子</h3><h3 id="Vue-实例的生命周期讲一下-mounted-阶段真实-DOM-存在了嘛"><a href="#Vue-实例的生命周期讲一下-mounted-阶段真实-DOM-存在了嘛" class="headerlink" title="Vue 实例的生命周期讲一下, mounted 阶段真实 DOM 存在了嘛"></a>Vue 实例的生命周期讲一下, mounted 阶段真实 DOM 存在了嘛</h3><h3 id="vuex-有哪几种属性，怎么使用？哪种功能场景使用它"><a href="#vuex-有哪几种属性，怎么使用？哪种功能场景使用它" class="headerlink" title="vuex 有哪几种属性，怎么使用？哪种功能场景使用它"></a>vuex 有哪几种属性，怎么使用？哪种功能场景使用它</h3><h3 id="vuex-中-state-存储的数据如果页面刷新此时数据还会有吗"><a href="#vuex-中-state-存储的数据如果页面刷新此时数据还会有吗" class="headerlink" title="vuex 中 state 存储的数据如果页面刷新此时数据还会有吗"></a>vuex 中 state 存储的数据如果页面刷新此时数据还会有吗</h3><h3 id="v-bind-和-v-model-的区别，-v-model-原理知道吗"><a href="#v-bind-和-v-model-的区别，-v-model-原理知道吗" class="headerlink" title="v-bind 和 v-model 的区别， v-model 原理知道吗"></a>v-bind 和 v-model 的区别， v-model 原理知道吗</h3><h3 id="Vue-中的常见指令有那些"><a href="#Vue-中的常见指令有那些" class="headerlink" title="Vue 中的常见指令有那些"></a>Vue 中的常见指令有那些</h3><h3 id="改变-this-指向-call、apply-与-bind-区别"><a href="#改变-this-指向-call、apply-与-bind-区别" class="headerlink" title="改变 this 指向 call、apply 与 bind 区别"></a>改变 this 指向 call、apply 与 bind 区别</h3><h3 id="vue-路由的两种模式"><a href="#vue-路由的两种模式" class="headerlink" title="vue 路由的两种模式"></a>vue 路由的两种模式</h3><h3 id="vue-的响应式原理"><a href="#vue-的响应式原理" class="headerlink" title="vue 的响应式原理"></a>vue 的响应式原理</h3><h3 id="vue-的插槽（slot）主要分三种"><a href="#vue-的插槽（slot）主要分三种" class="headerlink" title="vue 的插槽（slot）主要分三种"></a>vue 的插槽（slot）主要分三种</h3><h3 id="vue-数据的双向绑定"><a href="#vue-数据的双向绑定" class="headerlink" title="vue 数据的双向绑定"></a>vue 数据的双向绑定</h3><h3 id="vue-中的-keep-alive"><a href="#vue-中的-keep-alive" class="headerlink" title="vue 中的 keep-alive"></a>vue 中的 keep-alive</h3><h3 id="vue-nextTick-方法"><a href="#vue-nextTick-方法" class="headerlink" title="vue.nextTick()方法"></a>vue.nextTick()方法</h3><h3 id="Vue-和-React-的区别是什么"><a href="#Vue-和-React-的区别是什么" class="headerlink" title="Vue 和 React 的区别是什么"></a>Vue 和 React 的区别是什么</h3><h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><h3 id="常用的-git-命令"><a href="#常用的-git-命令" class="headerlink" title="常用的 git 命令"></a>常用的 git 命令</h3><h2 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h2><h3 id="webpack-的作用是什么，谈谈你对它的理解"><a href="#webpack-的作用是什么，谈谈你对它的理解" class="headerlink" title="webpack 的作用是什么，谈谈你对它的理解"></a>webpack 的作用是什么，谈谈你对它的理解</h3><h3 id="webpack-的工作原理"><a href="#webpack-的工作原理" class="headerlink" title="webpack 的工作原理"></a>webpack 的工作原理</h3><h3 id="webpack-打包原理"><a href="#webpack-打包原理" class="headerlink" title="webpack 打包原理"></a>webpack 打包原理</h3><h3 id="webpack-的核心概念"><a href="#webpack-的核心概念" class="headerlink" title="webpack 的核心概念"></a>webpack 的核心概念</h3><h3 id="Webpack-的基本功能有哪些"><a href="#Webpack-的基本功能有哪些" class="headerlink" title="Webpack 的基本功能有哪些"></a>Webpack 的基本功能有哪些</h3><h3 id="gulp、grunt-与-webpack-的区别是什么"><a href="#gulp、grunt-与-webpack-的区别是什么" class="headerlink" title="gulp、grunt 与 webpack 的区别是什么"></a>gulp、grunt 与 webpack 的区别是什么</h3><h3 id="webpack-是解决什么问题而生的"><a href="#webpack-是解决什么问题而生的" class="headerlink" title="webpack 是解决什么问题而生的"></a>webpack 是解决什么问题而生的</h3><h2 id="综合"><a href="#综合" class="headerlink" title="综合"></a>综合</h2><h3 id="前端工程化理解（模块化、组件化、规范化、自动化）"><a href="#前端工程化理解（模块化、组件化、规范化、自动化）" class="headerlink" title="前端工程化理解（模块化、组件化、规范化、自动化）"></a>前端工程化理解（模块化、组件化、规范化、自动化）</h3><h3 id="组件封装过程"><a href="#组件封装过程" class="headerlink" title="组件封装过程"></a>组件封装过程</h3><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><h3 id="Typescript-中的内置类型"><a href="#Typescript-中的内置类型" class="headerlink" title="Typescript 中的内置类型"></a>Typescript 中的内置类型</h3><p>Number String Boolean Null Void Undefined</p><h3 id="TS-的接口是什么意思"><a href="#TS-的接口是什么意思" class="headerlink" title="TS 的接口是什么意思"></a>TS 的接口是什么意思</h3><p>接口是在我们的应用程序中充当契约的结构。它定义了要遵循的类的语法，这意味着实现接口的类必须实现它的所有成员。它不能被实例化，但是可以被实现它的类对象引用。无论对象是否具有特定的结构，TypeScript 编译器都使用接口进行类型检查</p><h3 id="nodejs-搭建一个简单的-http-服务器过程"><a href="#nodejs-搭建一个简单的-http-服务器过程" class="headerlink" title="nodejs 搭建一个简单的 http 服务器过程"></a>nodejs 搭建一个简单的 http 服务器过程</h3><h3 id="Typescript-中的类的特征"><a href="#Typescript-中的类的特征" class="headerlink" title="Typescript 中的类的特征"></a>Typescript 中的类的特征</h3><p>继承、封装、多态性、抽象</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.toutiao.com/article/7282982136313807371">金九银十秋招前端必看的 2023 年前端高频面试题汇总（附答案）</a></li></ul><!-- 2023-12-04 -->]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2022/06/06/Xwo0Mt.jpg&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="面试题" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/tags/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="面试题" scheme="https://www.gaotianyang.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>crawler的使用</title>
    <link href="https://www.gaotianyang.top/archives/20220607a78aa02e/"/>
    <id>https://www.gaotianyang.top/archives/20220607a78aa02e/</id>
    <published>2022-06-07T01:32:00.000Z</published>
    <updated>2022-06-07T08:13:58.558Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2022/06/07/XBGM2q.png" alt="首屏图"></p><a id="more"></a><blockquote><p>node-crawler：一个轻量级爬虫工具</p></blockquote><h2 id="这就是-node-crawler"><a href="#这就是-node-crawler" class="headerlink" title="这就是 node-crawler"></a>这就是 node-crawler</h2><p><code>node-crawler</code> 是一个轻量级的 node.js 爬虫工具，兼顾了高效与便利性，支持分布式爬虫系统，支持硬编码，支持 http 前级代理。</p><p><code>node-crawler</code> 完全由 nodejs 写成，天生支持非阻塞异步 IO，为爬虫的流水线作业机制提供了极大便利。同时支持对 <code>DOM</code> 的快速选择，对于抓取网页的特定部分的任务可以说是杀手级功能，无需再手写正则表达式，提高爬虫开发效率。</p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>DOM 元素快速解析 &amp; 符合 jQuery 语法的选择器功能(默认使用 Cheerio，支持更换为 <code>JSDOM</code> 等其它 DOM 解析器)</li><li>支持连接池模式，并发数和重连数均可配置</li><li>支持请求队列的优先权（即不同 URL 的请求能有不同的优先级）</li><li>支持延时功能（某些服务器对每分钟内连接数有限制）</li><li>支持 <code>forceUTF8</code> 模式以应对复杂的编码问题，当然你也可以自己为不同的连接设置编码</li><li>支持 4.x 及更高版本的 Nodejs</li></ul><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><ul><li><a href="https://node-crawler.readthedocs.io/zh_CN/latest/quick_start/#_2">安装</a></li><li><a href="https://node-crawler.readthedocs.io/zh_CN/latest/quick_start/#_3">最简单的使用实例</a></li><li>回调处理</li><li><a href="https://node-crawler.readthedocs.io/zh_CN/latest/quick_start/#_4">并发控制及慢速模式</a></li></ul><h2 id="高级功能"><a href="#高级功能" class="headerlink" title="高级功能"></a>高级功能</h2><ul><li><a href="https://node-crawler.readthedocs.io/zh_CN/latest/extra_example/#_2">自定义参数</a></li><li><a href="https://node-crawler.readthedocs.io/zh_CN/latest/extra_example/#_3">使用 http 代理</a></li><li><a href="https://node-crawler.readthedocs.io/zh_CN/latest/extra_example/#_4">处理原始返回数据</a></li><li>分布式爬虫</li><li>链式模型</li><li>使用 POST,GET,PUT 等请求方法</li><li>使用 Cookie</li></ul><h2 id="参数详细介绍"><a href="#参数详细介绍" class="headerlink" title="参数详细介绍"></a>参数详细介绍</h2><ul><li><a href="https://node-crawler.readthedocs.io/zh_CN/latest/reference/main/#_2">回调设置</a></li><li><a href="https://node-crawler.readthedocs.io/zh_CN/latest/reference/main/#_3">调度参数</a></li><li><a href="https://node-crawler.readthedocs.io/zh_CN/latest/reference/main/#_4">重试控制</a></li><li><a href="https://node-crawler.readthedocs.io/zh_CN/latest/reference/main/#_5">DOM 选项</a></li><li><a href="https://node-crawler.readthedocs.io/zh_CN/latest/reference/main/#_6">编码设置</a></li><li><a href="https://node-crawler.readthedocs.io/zh_CN/latest/reference/main/#_7">缓存设置</a></li><li><a href="https://node-crawler.readthedocs.io/zh_CN/latest/reference/main/#_8">其它</a></li></ul><h2 id="Crawler-类捕获事件"><a href="#Crawler-类捕获事件" class="headerlink" title="Crawler 类捕获事件"></a>Crawler 类捕获事件</h2><ul><li>Event: ‘schedule’</li><li>Event: ‘limiterChange’</li><li>Event: ‘request’</li><li>Event: ‘drain’</li></ul><h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><blockquote><p>循环爬取列表数据，并根据列表数据获取对应详情页数据。</p></blockquote><h3 id="获取列表数据"><a href="#获取列表数据" class="headerlink" title="获取列表数据"></a>获取列表数据</h3><p>根据数据源页面规律，构建爬取 url 列表。并爬取列表基础数据。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入爬虫插件</span></span><br><span class="line"><span class="keyword">const</span> Crawler = <span class="built_in">require</span>(<span class="string">&#x27;crawler&#x27;</span>);</span><br><span class="line"><span class="comment">// 引入导出文件插件</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="comment">//系统路径模块</span></span><br><span class="line"><span class="keyword">let</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> format = <span class="built_in">require</span>(<span class="string">&#x27;./utils/format.js&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> utils = <span class="built_in">require</span>(<span class="string">&#x27;./utils/utils.js&#x27;</span>);</span><br><span class="line"><span class="comment">// 临时存储数据</span></span><br><span class="line"><span class="keyword">let</span> datas = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> c = <span class="keyword">new</span> Crawler(&#123;</span><br><span class="line">  maxConnections: <span class="number">1</span>,</span><br><span class="line">  followRedirect: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 在每个请求处理完毕后将调用此回调函数</span></span><br><span class="line">  callback: <span class="function"><span class="keyword">function</span> (<span class="params">error, res, done</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(error);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">`错误条目<span class="subst">$&#123;res.options.title&#125;</span>%`</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// $ 默认为 Cheerio 解析器</span></span><br><span class="line">      <span class="comment">// 它是核心jQuery的精简实现，可以按照jQuery选择器语法快速提取DOM元素</span></span><br><span class="line">      <span class="comment">// var $ = res.$;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 格式化json(将dom结构解析为json数据)</span></span><br><span class="line">      <span class="keyword">let</span> json = format.formatList(res, host);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 合并数据</span></span><br><span class="line">      datas = [...datas, ...json];</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 获取并输出进度(当queue插入的数据是数组对象时，可以根据res.options获取数据对应的属性)</span></span><br><span class="line">      <span class="keyword">let</span> progress = utils.getProgress(res.options.key, num);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">`进度<span class="subst">$&#123;progress&#125;</span>%`</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 当爬取完毕输出</span></span><br><span class="line">      <span class="keyword">let</span> text = <span class="built_in">JSON</span>.stringify(datas);</span><br><span class="line">      <span class="comment">// 指定要创建的目录和文件名称 __dirname为执行当前js文件的目录</span></span><br><span class="line">      <span class="keyword">let</span> file = path.join(__dirname + <span class="string">&#x27;/json&#x27;</span>, <span class="string">&#x27;urlList.json&#x27;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 写入文件</span></span><br><span class="line">      fs.writeFile(file, text, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(err);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (res.options.key === num) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;文件创建成功~&#x27;</span> + file);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    done();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基础配置</span></span><br><span class="line"><span class="keyword">let</span> start = <span class="number">1</span>; <span class="comment">// 设置起始请求页数</span></span><br><span class="line"><span class="keyword">let</span> num = <span class="number">1</span>; <span class="comment">// 设置请求页数总数</span></span><br><span class="line"><span class="keyword">let</span> host = <span class="string">&#x27;https://www.dytt8.net&#x27;</span>; <span class="comment">// 目标网站域名</span></span><br><span class="line"><span class="keyword">let</span> urls = []; <span class="comment">// 存储爬取页面列表</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 构建爬取列表</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = start; i &lt; num + <span class="number">1</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">let</span> item = &#123;&#125;;</span><br><span class="line">  item.key = i;</span><br><span class="line">  <span class="comment">// 循环生成列表数据</span></span><br><span class="line">  item.uri = host + <span class="string">&#x27;/html/gndy/dyzz/list_23_&#x27;</span> + i + <span class="string">&#x27;.html&#x27;</span>;</span><br><span class="line">  urls.push(item);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将一个URL加入请求队列，并使用默认回调函数</span></span><br><span class="line">c.queue(urls);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将多个URL加入请求队列</span></span><br><span class="line"><span class="comment">// c.queue([&#x27;http://www.google.com/&#x27;, &#x27;http://www.yahoo.com&#x27;]);</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;---------------开始爬取---------------&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="获取详情数据"><a href="#获取详情数据" class="headerlink" title="获取详情数据"></a>获取详情数据</h3><p>根据第一步爬取的列表数据，进入详情页爬取详情数据，并通过正则匹配，处理成需要的数据格式。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Crawler = <span class="built_in">require</span>(<span class="string">&#x27;crawler&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> format = <span class="built_in">require</span>(<span class="string">&#x27;./utils/format.js&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> utils = <span class="built_in">require</span>(<span class="string">&#x27;./utils/utils.js&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> datas = [];</span><br><span class="line"><span class="comment">// 获取原始链接数据</span></span><br><span class="line"><span class="keyword">let</span> urlList = <span class="built_in">require</span>(<span class="string">&#x27;./json/urlList.json&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> c = <span class="keyword">new</span> Crawler(&#123;</span><br><span class="line">  maxConnections: <span class="number">1</span>,</span><br><span class="line">  followRedirect: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 在每个请求处理完毕后将调用此回调函数</span></span><br><span class="line">  callback: <span class="function"><span class="keyword">function</span> (<span class="params">error, res, done</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(error);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">`错误条目<span class="subst">$&#123;res.options.title&#125;</span>%`</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// $ 默认为 Cheerio 解析器</span></span><br><span class="line">      <span class="comment">// 它是核心jQuery的精简实现，可以按照jQuery选择器语法快速提取DOM元素</span></span><br><span class="line">      <span class="comment">// var $ = res.$;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 格式化json</span></span><br><span class="line">      <span class="keyword">let</span> json = format.formatDetails(res);</span><br><span class="line">      datas.push(json);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">let</span> progress = utils.getProgress(res.options.key, urlList.length);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">`进度<span class="subst">$&#123;progress&#125;</span>%`</span>);</span><br><span class="line">      <span class="comment">// 当爬取完毕输出</span></span><br><span class="line">      <span class="keyword">let</span> text = <span class="built_in">JSON</span>.stringify(datas);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 指定要创建的目录和文件名称 __dirname为执行当前js文件的目录</span></span><br><span class="line">      <span class="keyword">let</span> file = path.join(__dirname + <span class="string">&#x27;/json&#x27;</span>, <span class="string">&#x27;movieList.json&#x27;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 写入文件</span></span><br><span class="line">      fs.writeFile(file, text, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(err);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (res.options.key === urlList.length) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;文件创建成功~&#x27;</span> + file);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    done();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> num = <span class="number">0</span>; <span class="comment">// 设置起始值</span></span><br><span class="line"><span class="keyword">let</span> urls = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = num; i &lt; urlList.length; i++) &#123;</span><br><span class="line">  <span class="keyword">if</span> (urlList[i]) &#123;</span><br><span class="line">    <span class="keyword">let</span> item = &#123;&#125;;</span><br><span class="line">    item.key = i + <span class="number">1</span>;</span><br><span class="line">    item.uri = urlList[i].url;</span><br><span class="line">    item.id = urlList[i].id;</span><br><span class="line">    item.title = urlList[i].title;</span><br><span class="line">    item.url = urlList[i].url;</span><br><span class="line">    item.date = urlList[i].date;</span><br><span class="line">    item.desc = urlList[i].desc;</span><br><span class="line">    item.img = urlList[i].img;</span><br><span class="line">    urls.push(item);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">c.queue(urls);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;---------------开始爬取---------------&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="清洗详情数据"><a href="#清洗详情数据" class="headerlink" title="清洗详情数据"></a>清洗详情数据</h3><p>数据中存在错误数据，异常数据，可以通过清洗脚本，批量赋默认值处理。例如清洗图片 404 的数据。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="comment">// 系统路径模块</span></span><br><span class="line"><span class="keyword">let</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="comment">// 异常图片地址列表</span></span><br><span class="line"><span class="keyword">const</span> formatConfig = <span class="built_in">require</span>(<span class="string">&#x27;./utils/formatConfig.js&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> formatList = <span class="built_in">require</span>(<span class="string">&#x27;./json/movieList.json&#x27;</span>);</span><br><span class="line"><span class="comment">// 设置默认图片链接</span></span><br><span class="line"><span class="keyword">let</span> baseImage = <span class="string">&#x27;https://img9.doubanio.com/view/photo/l_ratio_poster/public/p.jpg&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; formatList.length; i++) &#123;</span><br><span class="line">  <span class="comment">// 若img字段为空，赋默认值</span></span><br><span class="line">  <span class="keyword">if</span> (formatList[i].img === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    formatList[i].img = baseImage;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 若img字段符合异常数据列表，赋默认值</span></span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; formatConfig.errUrl.length; j++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (formatList[i].img.includes(formatConfig.errUrl[j])) &#123;</span><br><span class="line">      formatList[i].img = baseImage;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 格式化json</span></span><br><span class="line"><span class="keyword">let</span> text = <span class="built_in">JSON</span>.stringify(formatList);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定要创建的目录和文件名称 __dirname为执行当前js文件的目录</span></span><br><span class="line"><span class="keyword">let</span> file = path.join(__dirname + <span class="string">&#x27;/json&#x27;</span>, <span class="string">&#x27;formatFinsh.json&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写入文件</span></span><br><span class="line">fs.writeFile(file, text, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;文件创建成功~&#x27;</span> + file);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.npmjs.com/package/crawler">crawler 的 NPM 地址</a></li><li><a href="https://node-crawler.readthedocs.io/zh_CN/latest/">Node-Crawler 介绍</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2022/06/07/XBGM2q.png&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="爬虫" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/tags/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="爬虫" scheme="https://www.gaotianyang.top/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>亿欧数据项目总结</title>
    <link href="https://www.gaotianyang.top/archives/2022060613e4dc3d/"/>
    <id>https://www.gaotianyang.top/archives/2022060613e4dc3d/</id>
    <published>2022-06-06T01:35:23.000Z</published>
    <updated>2022-06-07T08:26:25.276Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2022/06/06/XwopCj.jpg" alt="首屏图"></p><a id="more"></a><h2 id="📣v1-3-2022-05-31"><a href="#📣v1-3-2022-05-31" class="headerlink" title="📣v1.3(2022.05.31)"></a>📣v1.3(2022.05.31)</h2><blockquote><p><strong>总结：</strong>增加指标列表的计算功能，指标图表详情添加去分析。首页新增投融资周报列表、精选报告列表。优化跳转后高级筛选弹框可控，支持查看企业招投标数据、专利信息数据。支持简报删除的恢复。</p></blockquote><table><thead><tr><th>🔆 新功能</th><th>💗 新数据</th><th>❤️‍🔥 优化</th><th>🐞 修复</th></tr></thead><tbody><tr><td>1.数据分析-指标列表新增【计算】</td><td>1.首页/工作台-新增投融资周报分享</td><td>1.查看企业情报-跳转直接执行减少弹窗操作页面</td><td>1.简报的恢复功能</td></tr><tr><td>2.指标图表详情页-增加【去分析】入口</td><td>2.数据分析-亿欧特色新增【企业门店数据】</td><td>2.领域详情页-增加缓存提升加载性能问题</td><td></td></tr><tr><td></td><td></td><td>3.可支持查看企业招投标和专利信息</td></tr></tbody></table><h2 id="📣v1-2-1-2022-05-18"><a href="#📣v1-2-1-2022-05-18" class="headerlink" title="📣v1.2.1(2022.05.18)"></a>📣v1.2.1(2022.05.18)</h2><blockquote><p><strong>总结：</strong>增加情报监测模块信息维度，方便用户快速查看企业情报，支持上传情报源，拓展企业信息，优化高级/简单筛选查询逻辑。</p></blockquote><table><thead><tr><th>🔆 新功能</th><th>💗 新数据</th><th>❤️‍🔥 优化</th></tr></thead><tbody><tr><td>1.情报监测模块新增政策列表</td><td>1.数据分析-亿欧特色新增【公司经营数据】</td><td>1.支持高级筛选和普通筛选共用</td></tr><tr><td>2.企业列表支持选中企业查看对应情报信息</td><td>2.企业详情页增加经营数据-独家分析</td><td>2.主搜索的排序问题</td></tr><tr><td>3.支持客户上传情报源</td><td>3.企业详情页增加经营数据-招投标数据</td><td></td></tr><tr><td>4.企业详情页-融资历史支持下载图片</td><td>4.企业详情页增加经营数据-专利数据</td><td></td></tr><tr><td></td><td>5.企业详情页增加经营数据-行政处罚</td></tr></tbody></table><h2 id="📣v1-2-2022-04-28"><a href="#📣v1-2-2022-04-28" class="headerlink" title="📣v1.2(2022.04.28)"></a>📣v1.2(2022.04.28)</h2><blockquote><p><strong>总结：</strong>增加画图面板功能，支持图表样式、数据点的编辑，支持模板的保存与共享，支持插入自定义图表。</p><p><strong>亮点：</strong>添加画图面板功能，可自行配置图表样式、数据并存储为模板。根据自定义图表数据的不变特性，优化为插入图片方式。</p></blockquote><table><thead><tr><th>🔆 新功能</th><th>💗 新数据</th><th>🐞 修复</th></tr></thead><tbody><tr><td>1.数据分析-功能区新增【画图面板】</td><td>1.数据分析-亿欧特色新增【线上电商数据】</td><td>1.简报右侧数据组排序问题</td></tr><tr><td>2.画图面板支持图表样式设置和数据点编辑</td><td></td><td></td></tr><tr><td>3.支持样式模板创建，同组织下共享</td><td></td><td></td></tr><tr><td>4.设置好样式的图表支持简报插入</td><td></td></tr></tbody></table><h2 id="📣v1-1-1-2022-03-29"><a href="#📣v1-1-1-2022-03-29" class="headerlink" title="📣v1.1.1(2022.03.29)"></a>📣v1.1.1(2022.03.29)</h2><blockquote><p><strong>总结：</strong>数据分析添加查看情报入口，报告详情关联指标数据，新增行业图表，调整各模块权限。</p></blockquote><table><thead><tr><th>🔆 新功能</th><th>💗 新数据</th><th>❤️‍🔥 优化</th><th>🐞 修复</th></tr></thead><tbody><tr><td>1.数据分析-指标目录列表新增【查看报告】</td><td>1.数据分析-亿欧特色新增【报告指标】</td><td>1.行业分析-行业标签改名为【行业体系】</td><td>1.动态表格关联企业变更后的忽略/更新提示</td></tr><tr><td>2.报告详情页，新增报告关键指标数据</td><td></td><td>2.优化游客登录交互提示</td><td>2.宏观类型情报的主题展示和筛选</td></tr><tr><td>3.行业分析-新增行业图表页面</td><td></td><td>3.优化放宽访客权益</td></tr></tbody></table><h2 id="📣v1-1-2022-03-16"><a href="#📣v1-1-2022-03-16" class="headerlink" title="📣v1.1(2022.03.16)"></a>📣v1.1(2022.03.16)</h2><blockquote><p><strong>总结：</strong>添加动态表格更新提醒，新增权益中心，企业分析列表配置表单添加排序，新增宏观类型情报，权限弹框优化，注册页优化。</p><p><strong>亮点：</strong>拓展 antd 穿梭框排序功能。</p></blockquote><table><thead><tr><th>🔆 新功能</th><th>❤️‍🔥 优化</th><th>🐞 修复</th></tr></thead><tbody><tr><td>1.工作台-动态表格更新提醒</td><td>1.指标缩略图抽离组件</td><td>1.简报/报告插入 X 轴非时间类型的图表</td></tr><tr><td>2.底部 footer 区权益中心说明</td><td>2.权限弹窗优化升级</td><td>2.简报/报告在富文本删掉指标图表、情报和企业，对应树结构去掉勾选</td></tr><tr><td>3.企业分析-配置表单的穿梭框支持排序</td><td>3.注册页添加返回登录按钮</td><td></td></tr><tr><td>4.情报监测-新增【宏观】类型情报数据</td><td>4.工作台-侧边栏自动收起非当前项</td></tr></tbody></table><h2 id="📣v1-0-2022-02-28"><a href="#📣v1-0-2022-02-28" class="headerlink" title="📣v1.0(2022.02.28)"></a>📣v1.0(2022.02.28)</h2><blockquote><p><strong>总结：</strong>数据分析支持添加/编辑指标，优化登录后回到原页面，统一项目内各类弹框样式。高级筛选避免请求参数超长改为 POST 传参。</p><p><strong>亮点：</strong>通过不同场景进入登录页，记录原页面路由(参数)，并在登录后进行返回。</p></blockquote><table><thead><tr><th>🔆 新功能</th><th>❤️‍🔥 优化</th></tr></thead><tbody><tr><td>1.数据分析-新增【添加指标】功能</td><td>1.登录完成后仍定位原位置</td></tr><tr><td>2.数据分析-产品指标数据支持【编辑】功能</td><td>2.权限弹窗优化升级</td></tr><tr><td>3.工作台-动态表格新增【分享】功能</td><td>3.产品弹窗样式统一</td></tr><tr><td></td><td>4.动态表格-批量添加结构，接口优化</td></tr><tr><td></td><td>5.工作台-高级筛选接口优化</td></tr></tbody></table><h2 id="📣-v0-9-2022-01-27"><a href="#📣-v0-9-2022-01-27" class="headerlink" title="📣 v0.9(2022.01.27)"></a>📣 v0.9(2022.01.27)</h2><blockquote><p><strong>总结：</strong>简报/报告支持插入追踪企业，支持导出长图。领域活跃机构支持导出。公共 footer 样式调整，全局样式统一，优化首页加载性能。</p><p><strong>亮点：</strong>加载性能优化，添加图片懒加载，调整代码组织结构，将第三方组件打包进行优化，项目图片改用 icon 并精简图片。</p></blockquote><table><thead><tr><th>🔆 新功能</th><th>❤️‍🔥 优化</th><th>🐞 修复</th></tr></thead><tbody><tr><td>1.工作台的简报管理/报告管理-新增【企业追踪】模块</td><td>1.追踪分组和简报/报告追踪分组排序优化：按更新时间倒序</td><td>1.注册按钮连点问题修复</td></tr><tr><td>2.工作台的简报管理/报告管理-新增【导出长图】功能</td><td>2.简报/报告插入情报的评论信息处理</td><td>2.首页加载过慢性能优化</td></tr><tr><td>3.领域详情页的活跃机构-新增【导出】功能</td><td>3.时间段筛选默认开始时间为‘00:00:00’，结束时间为‘23:59:59’</td><td>3.工作台的简报/报告插入政策数据展示问题</td></tr><tr><td></td><td>4.公共 footer 区优化</td><td></td></tr><tr><td></td><td>5.其他样式调整</td></tr></tbody></table><h2 id="📣v0-8-2021-01-10"><a href="#📣v0-8-2021-01-10" class="headerlink" title="📣v0.8(2021.01.10)"></a>📣v0.8(2021.01.10)</h2><blockquote><p><strong>总结：</strong>添加企业追踪功能，添加生成动态表格功能。</p></blockquote><table><thead><tr><th>🔆 新功能</th><th>🐞 修复</th></tr></thead><tbody><tr><td>1.企业分析下企业列表-新增【企业追踪】功能</td><td>1.产品模块页面加载乱序问题</td></tr><tr><td>2.企业分析下企业列表-新增【生成动态表格】功能</td><td>2.产品图片模糊问题</td></tr><tr><td>3.工作台-新增【动态表格】功能</td></tr></tbody></table><h2 id="📣v0-7-2021-12-08"><a href="#📣v0-7-2021-12-08" class="headerlink" title="📣v0.7(2021.12.08)"></a>📣v0.7(2021.12.08)</h2><blockquote><p><strong>总结：</strong>添加首页、亿欧专家，企业筛选新增特色推荐，企业标签添加资质标签。登录界面改版。</p><p><strong>亮点：</strong>首页利用 CSS3 样式，添加各类特效。动图改用 webp 格式，缩小文件尺寸。</p></blockquote><table><thead><tr><th>🔆 新功能</th><th>❤️‍🔥 优化</th><th>🐞 修复</th></tr></thead><tbody><tr><td>1.新增【首页】模块</td><td>1.登录页面更新背景图</td><td>1.工作台下简报/报告插入饼环状图问题</td></tr><tr><td>2.行业分析模块-新增【亿欧专家】页面</td><td>2.企业标签新增展示「资质标签」</td><td>2.饼环状图下载图片不圆问题</td></tr><tr><td>3.企业分析下企业列表-新增【特色推荐】信息</td><td></td></tr></tbody></table><h2 id="📣v0-6-2-2021-11-24"><a href="#📣v0-6-2-2021-11-24" class="headerlink" title="📣v0.6.2(2021.11.24)"></a>📣v0.6.2(2021.11.24)</h2><blockquote><p><strong>总结：</strong>领域详情添加企业、事件、机构分析图表，新增产品指标图表详情，数据分析支持饼环图。全局 button 样式统一。</p><p><strong>亮点：</strong>新增领域分布图，基于 echart 矩形树图，拓展左键下钻右键跳转功能。丰富领域详情数据的展示形式，将列表数据转化为图表，使用户理解更直观。</p></blockquote><table><thead><tr><th>🔆 新功能</th><th>💗 新数据</th><th>❤️‍🔥 优化</th></tr></thead><tbody><tr><td>1.领域详情页-新增企业、事件和机构的分析图表</td><td>1.数据分析-亿欧特色新增【企业分析】</td><td>1.行业分析下全部报告高级筛选增加「报告原文附件是否为空」选项</td></tr><tr><td>2.行业分析-新增产品指标图表详情页</td><td>2.数据分析-亿欧特色新增【交易分析】</td><td>2.全局操作 button 统一样式</td></tr><tr><td>3.数据分析下图表类型-新增饼环状图</td><td>3.数据分析-亿欧特色新增【机构分析】</td></tr></tbody></table><h2 id="📣v0-6-1-2021-11-03"><a href="#📣v0-6-1-2021-11-03" class="headerlink" title="📣v0.6.1(2021.11.03)"></a>📣v0.6.1(2021.11.03)</h2><blockquote><p><strong>总结：</strong>新增全部报告、报告图表、报告详情页。简报报告右侧数据支持关键词搜索，新增个人中心的权益说明。</p></blockquote><table><thead><tr><th>🔆 新功能</th><th>❤️‍🔥 优化</th></tr></thead><tbody><tr><td>1.行业分析模块-新增【全部报告】页面</td><td>1.简报/报告右侧数据信息支持关键词检索</td></tr><tr><td>2.行业分析模块-新增【报告图表】页面</td><td>2.个人中心-账号权益期限说明</td></tr><tr><td>3.行业分析模块-新增【报告详情页】</td></tr></tbody></table><h2 id="📣v0-6-2021-10-20"><a href="#📣v0-6-2021-10-20" class="headerlink" title="📣v0.6(2021.10.20)"></a>📣v0.6(2021.10.20)</h2><blockquote><p><strong>总结：</strong>新增图表追踪功能，简报/报告支持插入指标图表、企业摘要。</p><p><strong>亮点：</strong>插入简报/报告的图表存在动态数据与静态数据两种情况，动态数据根据 id 进行实时渲染，静态为 base64 图片。导出 PDF 时首先生成 base64 图片再传递给后端进行处理。</p></blockquote><table><thead><tr><th>🔆 新功能</th></tr></thead><tbody><tr><td>1.数据分析模块-新增图表【追踪】功能</td></tr><tr><td>2.工作台-新增【数据追踪】页面</td></tr><tr><td>3.工作台-新增【追踪图表详情页】</td></tr><tr><td>4.简报/报告插入数据维度-新增【指标图表】数据</td></tr><tr><td>5.简报/报告插入数据维度-新增【企业摘要】数据</td></tr></tbody></table><h2 id="📣v0-5-2021-09-30"><a href="#📣v0-5-2021-09-30" class="headerlink" title="📣v0.5(2021.09.30)"></a>📣v0.5(2021.09.30)</h2><blockquote><p><strong>总结：</strong>新增数据分析模块，指标的搜索过滤，支持指标图形化展示，数据点位列表展示，基础图形配置切换。</p><p><strong>亮点：</strong>组件化开发，组件拆分为指标目录、指标列表、筛选器、图表、最近浏览指标列表、数据列表。</p></blockquote><table><thead><tr><th>🔆 新功能</th></tr></thead><tbody><tr><td>1.新增【数据分析】模块</td></tr></tbody></table><h2 id="📣v0-4-1-2021-08-20"><a href="#📣v0-4-1-2021-08-20" class="headerlink" title="📣v0.4.1(2021.08.20)"></a>📣v0.4.1(2021.08.20)</h2><blockquote><p><strong>总结：</strong>新增外部专家列表、产业图谱页面、全局搜索功能。高级筛选筛组件支持搜索过滤。</p><p><strong>亮点：</strong>优化高级筛选选项，全部支持搜索过滤。</p></blockquote><table><thead><tr><th>🔆 新功能</th><th>❤️‍🔥 优化</th><th>🐞 修复</th></tr></thead><tbody><tr><td>1.行业分析模块-新增【外部专家】页面</td><td>1.企业列表高级筛选对应「企业画像」优化为树状结构</td><td>1.权益弹窗文案修复</td></tr><tr><td>2.行业分析模块-新增【产业图谱】页面</td><td>2.高级筛选对应关键词输入支持中英文逗号隔开</td><td>2.榜单数据清洗逻辑</td></tr><tr><td>3.新增【全局搜索】</td><td></td></tr></tbody></table><h2 id="📣v0-4-2021-08-06"><a href="#📣v0-4-2021-08-06" class="headerlink" title="📣v0.4(2021.08.06)"></a>📣v0.4(2021.08.06)</h2><blockquote><p><strong>总结：</strong>新增行业分析，全局各模块的用户权限体系，新增用户注册。丰富高级筛选选项，添加数值类型的介于筛选。</p><p><strong>亮点：</strong>使用 antd 树形组件，并对数据进行缓存，减少请求次数。丰富高级筛选选项类型(输入框、数字框、时间框、下拉框、树形下拉框、多选下拉等)。</p></blockquote><table><thead><tr><th>🔆 新功能</th><th>❤️‍🔥 优化</th><th>🐞 修复</th></tr></thead><tbody><tr><td>1.新增【行业分析】模块</td><td>1.高级筛选对于数值项新增「介于」</td><td>1.企业和事件列表，高级筛选「不为空」修复</td></tr><tr><td>2.新增全局用户权益体系</td><td></td><td>2.企业经营数据来源完善</td></tr><tr><td>3.新增用户注册页面</td><td></td><td></td></tr><tr><td>4.情报高级筛选增加「行业主题」维度</td><td></td></tr></tbody></table><h2 id="📣v0-3-2-2021-07-20"><a href="#📣v0-3-2-2021-07-20" class="headerlink" title="📣v0.3.2(2021.07.20)"></a>📣v0.3.2(2021.07.20)</h2><blockquote><p><strong>总结：</strong>新增企业榜单功能，支持保存榜单筛选项，进行定制榜单内容，支持导出企业列表、企业 logo 列表图片。</p><p><strong>亮点：</strong>使用 html2canvas 进行导出长图操作，解决导出图片空白问题，由于 html2canvas 与 antd 的 modal 组件冲突。</p></blockquote><table><thead><tr><th>🔆 新功能</th></tr></thead><tbody><tr><td>1.企业分析模块-新增【企业榜单】功能</td></tr></tbody></table><h2 id="📣v0-3-1-2021-07-11"><a href="#📣v0-3-1-2021-07-11" class="headerlink" title="📣v0.3.1(2021.07.11)"></a>📣v0.3.1(2021.07.11)</h2><blockquote><p><strong>总结：</strong>拓展企业详情维度，展示更多企业信息。</p><p><strong>亮点：</strong>封装详情页 tab 分页业务功能组件，包含静态样式、权限判断，方便后续模块复用。</p></blockquote><table><thead><tr><th>🔆 新功能</th></tr></thead><tbody><tr><td>1.企业分析模块-新增【企业详情页】模块</td></tr></tbody></table><h2 id="📣v0-3-2021-06-30"><a href="#📣v0-3-2021-06-30" class="headerlink" title="📣v0.3(2021.06.30)"></a>📣v0.3(2021.06.30)</h2><blockquote><p><strong>总结：</strong>新增企业列表、投融资事件列表，并封装对应的高级筛选组件。</p><p><strong>亮点：</strong>高级筛选组件，并编写支持筛选、保存、编辑、回填信息等一些列操作的公共方法，方便后期复用。</p></blockquote><table><thead><tr><th>🔆 新功能</th></tr></thead><tbody><tr><td>1.企业分析模块-新增【全部企业列表】模块</td></tr><tr><td>2.企业分析模块-新增【企业投融资事件】模块</td></tr><tr><td>3.全部企业列表-新增【高级筛选】功能</td></tr></tbody></table><h2 id="📣v0-2-1-2021-06-15"><a href="#📣v0-2-1-2021-06-15" class="headerlink" title="📣v0.2.1(2021.06.15)"></a>📣v0.2.1(2021.06.15)</h2><blockquote><p><strong>总结：</strong>新增情报追踪功能，并添加情报详情的评论/@同组织员工的功能，并添加消息提醒。</p><p><strong>亮点：</strong>拓展 antd 评论组件，支持@同组织下的用户。拓展富文本编辑器插入情报功能。</p></blockquote><table><thead><tr><th>🔆 新功能</th></tr></thead><tbody><tr><td>1.工作台模块-新增追踪列表</td></tr><tr><td>2.情报监测模块-新增【用户评论】功能</td></tr><tr><td>3.工作台模块-用户消息及红点</td></tr></tbody></table><h2 id="📣v0-2-2021-05-28"><a href="#📣v0-2-2021-05-28" class="headerlink" title="📣v0.2(2021.05.28)"></a>📣v0.2(2021.05.28)</h2><blockquote><p><strong>总结：</strong>新增简报管理模块，通过 wangEditer 富文本编辑器对文本进行编辑。</p><p><strong>亮点：</strong>拓展富文本编辑器目录功能。</p></blockquote><table><thead><tr><th>🔆 新功能</th></tr></thead><tbody><tr><td>1.新增【工作台】模块</td></tr><tr><td>2.工作台模块-新增简报管理模块</td></tr></tbody></table><h2 id="📣v0-1-2021-04-27"><a href="#📣v0-1-2021-04-27" class="headerlink" title="📣v0.1(2021.04.27)"></a>📣v0.1(2021.04.27)</h2><blockquote><p><strong>总结：</strong>确认项目选型，项目初始化，搭建项目结构。添加情报监测模块，新增用户中心模块。</p></blockquote><table><thead><tr><th>🔆 新功能</th></tr></thead><tbody><tr><td>1.新增【情报监测】模块</td></tr><tr><td>2.新增用户中心</td></tr></tbody></table><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://data.iyiou.com/share/briefing/t2dbYZZ03m">亿欧数据版本记录</a></li><li><a href="https://data.iyiou.com/share/briefing/sTwN2aP01X">亿欧数据使用手册</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2022/06/06/XwopCj.jpg&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="项目总结" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/tags/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="项目总结" scheme="https://www.gaotianyang.top/tags/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>前端面试经23</title>
    <link href="https://www.gaotianyang.top/archives/20220330b5b74555/"/>
    <id>https://www.gaotianyang.top/archives/20220330b5b74555/</id>
    <published>2022-03-30T06:56:56.000Z</published>
    <updated>2023-12-13T02:36:19.856Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2022/06/06/Xwo0Mt.jpg" alt="首屏图"></p><a id="more"></a><h2 id="前端面试汇总"><a href="#前端面试汇总" class="headerlink" title="前端面试汇总"></a>前端面试汇总</h2><h3 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h3><h4 id="最近的工作经历及项目经验，用到了哪些技术，负责哪些工作"><a href="#最近的工作经历及项目经验，用到了哪些技术，负责哪些工作" class="headerlink" title="最近的工作经历及项目经验，用到了哪些技术，负责哪些工作"></a>最近的工作经历及项目经验，用到了哪些技术，负责哪些工作</h4><ul><li>React<ul><li>hook<ul><li>useState 是一个 React Hook，它允许你向组件添加一个状态变量。</li><li>useEffect 是一个 React Hook，它允许你将组件与外部系统同步。<ul><li>第二个可选参数为 [] 时初始化获取数据</li><li>第二个可选参数为 一个 或 多个值 时，监听这些值的变化而进行操作</li><li>使用 return 的清除机制 <a href="https://zh-hans.legacy.reactjs.org/docs/hooks-effect.html">文档传送门</a></li></ul></li><li>useRef 是一个 React Hook，它能帮助引用一个不需要渲染的值<ul><li>useRef 用于操作 DOM 元素 <code>useRef().current.reload()</code> <a href="https://zhuanlan.zhihu.com/p/609933594">文档传送门</a></li></ul></li><li>useMemo 是一个 React Hook，它在每次重新渲染的时候能够缓存计算的结果。</li></ul></li></ul></li><li>Antd<ul><li>pro-components</li><li>pro-table</li><li>pro-card</li></ul></li><li>single-spa</li><li>charts<ul><li>cloud-charts</li><li>echarts</li></ul></li><li>formilyjs</li><li>classNames 一个简单的支持动态多类名的工具库</li><li>eventemitter2 组件间进行事件的监听与传递</li><li>协同开发<ul><li>墨刀 在线原型</li><li>codesign 在线设计稿</li><li>Yapi 后端代码联调</li><li>禅道/JIRA 开发任务拆分管理</li><li>Jenkins CI/CD</li></ul></li><li>tailwindcss[‘teilˌwind] 它是一个 CSS 样式库，为我们提供了构建定制设计而无需使用自定义样式所需的所有构建块</li></ul><h4 id="遇到了什么问题及怎么处理的"><a href="#遇到了什么问题及怎么处理的" class="headerlink" title="遇到了什么问题及怎么处理的"></a>遇到了什么问题及怎么处理的</h4><ul><li>优化问题<ul><li>数据大屏仿 PPT 横向切换 react-transition-group<ul><li>使用 location 承接 trend 标记滚动方向</li><li>使用 CSSTransition 实现横向滚动特效</li><li>横屏切换加载时添加 load 效果，避免白屏</li></ul></li></ul></li><li>兼容问题<ul><li>九宫格动效低版本浏览器效果差异</li></ul></li><li>菜单定制化需求<ul><li>委员会管理的树形菜单与联动</li><li>根节点重复</li></ul></li><li>formilyjs 复杂场景<ul><li>数据联动</li><li>数据字典获取<ul><li>window.__globalData</li><li>window.__globalData.currentUser</li></ul></li><li>数据异步获取<ul><li>await window.__api.func()</li></ul></li><li>表单的动态生成</li></ul></li></ul><h3 id="CSS-相关"><a href="#CSS-相关" class="headerlink" title="CSS 相关"></a>CSS 相关</h3><h4 id="BFC-简单介绍，什么是-BFC，如何创建-BFC，BFC-的特性有什么。BFC-上下两个相邻的容器有什么特点"><a href="#BFC-简单介绍，什么是-BFC，如何创建-BFC，BFC-的特性有什么。BFC-上下两个相邻的容器有什么特点" class="headerlink" title="BFC 简单介绍，什么是 BFC，如何创建 BFC，BFC 的特性有什么。BFC 上下两个相邻的容器有什么特点"></a>BFC 简单介绍，什么是 BFC，如何创建 BFC，BFC 的特性有什么。BFC 上下两个相邻的容器有什么特点</h4><p>什么是 BFC(块级格式化上下文)：Block Formatting Context，解释为块级格式化上下文</p><p>创建方式：</p><ol><li>display 的值是 inline-block、table-cell、flex、table-caption 或者 inline-flex</li><li>overflow 的值不是 visible（overflow:hidden、overflow:scroll）</li><li>float 的值不是 none。（float:left 或者 float:right）</li><li>position 的值不是 static 或者 relative。（position:absolute 或者 position:fixed）</li><li>父元素与正常文件流的子元素（非浮动子元素）自动形成一个 BFC</li></ol><p>特性：</p><ol><li>父亲管儿子(子元素浮动，父元素不再塌陷)</li><li>兄弟之间划清界限(兄弟元素其一浮动重叠，另一个元素设置 BFC 便不再重叠)</li></ol><h3 id="JS-相关"><a href="#JS-相关" class="headerlink" title="JS 相关"></a>JS 相关</h3><h4 id="null-与-undefined-的区别"><a href="#null-与-undefined-的区别" class="headerlink" title="null 与 undefined 的区别"></a>null 与 undefined 的区别</h4><p>null 表示没有对象，即该处不应该有值。<br>典型用法是:作为函数的参数，表示该函数的参数不是对象。作为对象原型链的终点。</p><p>undefined 表示缺少值，就是此处应该有一个值，但是还没有定义。<br>典型用法是:变量被声明了，但没有赋值时，就等于 undefined。</p><h4 id="typeOf-判断-null-的时候是-object-还是一个普通数据类型"><a href="#typeOf-判断-null-的时候是-object-还是一个普通数据类型" class="headerlink" title="typeOf 判断 null 的时候是 object 还是一个普通数据类型"></a>typeOf 判断 null 的时候是 object 还是一个普通数据类型</h4><p>可参考 <a href="https://www.gaotianyang.top/archives/2021032932cd20c6/#检测变量的类型并区分数组和对象">检测变量的类型并区分数组和对象</a></p><table><thead><tr><th>值</th><th>类型</th></tr></thead><tbody><tr><td>typeof 1</td><td>“number”</td></tr><tr><td>typeof NaN</td><td>“number”</td></tr><tr><td>typeof “1”</td><td>“string”</td></tr><tr><td>typeof true</td><td>“boolean”</td></tr><tr><td>typeof undefined</td><td>“undefined”</td></tr><tr><td>typeof null</td><td>“object”</td></tr><tr><td>typeof []</td><td>“object”</td></tr><tr><td>typeof {}</td><td>“object”</td></tr></tbody></table><ul><li>如果返回 number，判断是否是 NAN，isNaN(a) ，</li><li>首先使用 typeof 判断，如果返回 object，判断是否为 null</li><li>判断数组 or 对象<ul><li>最后使用 toString 如果是”[object Object]”是对象，否则是数组。</li><li>最后使用 <code>[] instanceof Array</code> <code>&#123;&#125; instanceof Array</code>如果是 false 是对象，否则是数组。</li></ul></li></ul><p>为什么 null 的类型判断是 Object 呢？</p><table><thead><tr><th>数据类型</th><th>机器码标识</th></tr></thead><tbody><tr><td>对象(Object)</td><td>000</td></tr><tr><td>整数</td><td>1</td></tr><tr><td>浮点数</td><td>010</td></tr><tr><td>字符串</td><td>100</td></tr><tr><td>布尔</td><td>110</td></tr><tr><td>undefined</td><td>-2^31(即全为 1)</td></tr><tr><td>null</td><td>全为 0</td></tr></tbody></table><p>在判断数据类型时，是根据机器码低位标识来判断的，而 null 的机器码标识为全 0，而对象的机器码低位标识为 000。所以 typeof null 的结果被误判为 Object。</p><p><a href="https://juejin.cn/post/6844903895177805837">为什么 typeof null 的结果是 Object?</a></p><h4 id="扩展运算符是深拷贝还是浅拷贝"><a href="#扩展运算符是深拷贝还是浅拷贝" class="headerlink" title="扩展运算符是深拷贝还是浅拷贝"></a>扩展运算符是深拷贝还是浅拷贝</h4><blockquote><p>元素是简单类型是深拷贝，元素是引用类型是浅拷贝</p></blockquote><p>如果只是一层数组或是对象，其元素只是简单类型的元素，那么属于深拷贝 (就是一层拷贝，暂时就理解为深拷贝吧! ! ! ! )</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> aa = &#123;</span><br><span class="line">  age: <span class="number">18</span>,</span><br><span class="line">  name: <span class="string">&#x27;aaa&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> bb = [...aa];</span><br><span class="line">bb.age = <span class="number">22</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(aa.age); <span class="comment">// 18</span></span><br></pre></td></tr></table></figure><p>如果数组或对象中的元素是引用类型的元素，那么就是浅拷贝</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> aa = &#123;</span><br><span class="line">  age: <span class="number">18</span>,</span><br><span class="line">  name: <span class="string">&#x27;aaa&#x27;</span>,</span><br><span class="line">  address: &#123;</span><br><span class="line">    city: <span class="string">&#x27;shanghai&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> bb = [...aa];</span><br><span class="line">bb.address.city = <span class="string">&#x27;shenzhen&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(aa.address.city); <span class="comment">// shenzhen;</span></span><br></pre></td></tr></table></figure><p>如何使得深拷贝</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> aa = &#123;</span><br><span class="line">  age: <span class="number">18</span>,</span><br><span class="line">  name: <span class="string">&#x27;aaa&#x27;</span>,</span><br><span class="line">  address: &#123;</span><br><span class="line">    city: <span class="string">&#x27;shanghai&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> bb = &#123;</span><br><span class="line">  ...aa,</span><br><span class="line">  address: &#123; ...aa.address &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">bb.address.city = <span class="string">&#x27;shenzhen&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(aa.address.city); <span class="comment">// shanghai</span></span><br></pre></td></tr></table></figure><p>或者利用 JSON.parse(JSON.stringfy(xxx))来实现深拷贝<br>注意: JSON.parse(JSON.stringfy(xxx))的方法，如果变量中含有 Promise 对象，则不可以使用该方法</p><p><a href="https://blog.csdn.net/weixin_43925630/article/details/111299038">第一层深拷贝第二层浅拷贝</a></p><h4 id="箭头函数和普通函数的区别"><a href="#箭头函数和普通函数的区别" class="headerlink" title="箭头函数和普通函数的区别"></a>箭头函数和普通函数的区别</h4><ol><li>语法更加简洁、清晰</li><li>箭头函数不会创建自己的 this（重要！！深入理解！！）</li><li>箭头函数继承而来的 this 指向永远不变</li><li>.call()/.apply()/.bind()无法改变箭头函数中 this 的指向</li><li>箭头函数不能作为构造函数使用</li><li>箭头函数没有自己的 arguments</li><li>箭头函数没有原型 prototype</li><li>箭头函数不能用作 Generator 函数，不能使用 yeild 关键字</li></ol><p><a href="https://juejin.cn/post/6844903805960585224">ES6 - 箭头函数、箭头函数与普通函数的区别</a></p><h4 id="箭头函数为什么不能当做构造函数"><a href="#箭头函数为什么不能当做构造函数" class="headerlink" title="箭头函数为什么不能当做构造函数"></a>箭头函数为什么不能当做构造函数</h4><ul><li>从上面的运行结果也可以看到箭头函数与构造函数相比，缺少了很多东西，比如：caller，arguments，prototype，但同时也可以看到，箭头函数是有<strong>proto</strong>属性的，所以箭头函数本身是存在原型链的，他也是有自己的构造函数的，但是原型链到箭头函数这一环就停止了，因为它自己没有 prototype 属性，没法让他的实例的<strong>proto</strong>属性指向，所以箭头函数也就无法作为构造函数。</li><li>同时我们可以看到，由于箭头函数没有自己的 this 指针，通过 call() 或 apply() 方法调用一个函数时，只能传递参数，不能绑定 this，所以 call()和 apply()的第一个参数会被忽略。</li></ul><p>可参考<a href="https://www.gaotianyang.top/archives/2021032932cd20c6/#箭头函数能作为构造函数吗">箭头函数能作为构造函数吗</a></p><h4 id="new-的执行过程是怎样的"><a href="#new-的执行过程是怎样的" class="headerlink" title="new 的执行过程是怎样的"></a>new 的执行过程是怎样的</h4><ol><li>创建一个新对象</li><li>将新对象的<em>proto</em>指向构造函数的 prototype 对象</li><li>将构造函数的作用域赋值给新对象 （也就是 this 指向新对象）</li><li>执行构造函数中的代码（为这个新对象添加属性）</li><li>返回新的对象</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Obj = &#123;&#125;;</span><br><span class="line">Obj._proto_ = Person.prototype();</span><br><span class="line">Person.call(Obj);</span><br></pre></td></tr></table></figure><p>可参考<a href="https://www.gaotianyang.top/archives/2021032932cd20c6/#New关键词干了什么">New 关键词干了什么</a></p><h4 id="new-操作符实例化对象时-构造函数有返回值-字符串-会怎么样"><a href="#new-操作符实例化对象时-构造函数有返回值-字符串-会怎么样" class="headerlink" title="new 操作符实例化对象时 构造函数有返回值(字符串)会怎么样"></a>new 操作符实例化对象时 构造函数有返回值(字符串)会怎么样</h4><blockquote><p>正常将对象实例化</p></blockquote><p>当构造函数返回了函数或非 null 对象时(func、[]、{})<br>执行 var x = new X()，此时只是将 X 作为普通的函数执行，<br>函数执行的返回值直接作为变量 x 的值，变量 x 不是类 X 的实例化对象，X.prototype 也不是变量 x 的原型。</p><p>其他情况（构造函数无返回值、返回值不是对象也不是函数、返回值是 null），正常将对象实例化。</p><p><a href="https://blog.csdn.net/iispring/article/details/105108178">JavaScript 中使用 new 操作符实例化对象时构造函数有返回值的情况分析</a></p><h4 id="class-和-function-的区别"><a href="#class-和-function-的区别" class="headerlink" title="class 和 function 的区别"></a>class 和 function 的区别</h4><p>相同点：</p><p>都可以成为构造函数</p><p>不同点：</p><ul><li>class 构造函数必须使用 new 操作符</li><li>class 声明不可以提升</li><li>class 不可以用 call、apply、bind 改变执行上下文</li></ul><p><a href="https://blog.csdn.net/Jack_lzx/article/details/121098261">JavaScript class 和 function 的区别</a><br><a href="https://zhuanlan.zhihu.com/p/657235691">JavaScript ES6-class 和 ES5-构造函数 function 的区别</a></p><h4 id="class-里存在-this-吗"><a href="#class-里存在-this-吗" class="headerlink" title="class 里存在 this 吗"></a>class 里存在 this 吗</h4><p>有 this 但是不可以通过 .call 的方式进行指向</p><h3 id="浏览器相关"><a href="#浏览器相关" class="headerlink" title="浏览器相关"></a>浏览器相关</h3><h4 id="浏览器解析流程"><a href="#浏览器解析流程" class="headerlink" title="浏览器解析流程"></a>浏览器解析流程</h4><ol><li>DNS 域名解析</li><li>发起 TCP 连接</li><li>发送 HTTP 请求</li><li>服务器处理请求并返回响应结果</li><li>浏览器解析渲染页面</li><li>断开连接</li></ol><p>可参考<a href="https://www.gaotianyang.top/archives/2021032932cd20c6/#输入地址后的过程">输入地址后的过程</a></p><h4 id="DNS-域名解析有哪些操作"><a href="#DNS-域名解析有哪些操作" class="headerlink" title="DNS 域名解析有哪些操作"></a>DNS 域名解析有哪些操作</h4><ol><li>查看浏览器缓存</li><li>查看系统缓存</li><li>查看路由器缓存</li><li>查看 ISP DNS 缓存</li><li>询问根域名服务器</li><li>询问顶级域名服务器</li><li>询问权威域名（主域名）服务器</li><li>保存结果至缓存</li></ol><p><a href="https://www.sfn.cn/news/technology/detail/222.html?navId=22">一文读懂 DNS 原理及解析过程</a></p><h4 id="TCP-链接过程-3-次握手-4-次挥手"><a href="#TCP-链接过程-3-次握手-4-次挥手" class="headerlink" title="TCP 链接过程 3 次握手 4 次挥手"></a>TCP 链接过程 3 次握手 4 次挥手</h4><p><a href="https://bbs.huaweicloud.com/blogs/233667">一文搞懂 TCP 的三次握手和四次挥手</a></p><h4 id="请求如果阻塞要如何处理"><a href="#请求如果阻塞要如何处理" class="headerlink" title="请求如果阻塞要如何处理"></a>请求如果阻塞要如何处理</h4><p><a href="https://blog.csdn.net/qq_34337333/article/details/131239848">前端请求队列，解决多个请求同时请求一个接口导致阻塞的问题</a></p><h4 id="是否了解-UDP-用户数据报协议-协议"><a href="#是否了解-UDP-用户数据报协议-协议" class="headerlink" title="是否了解 UDP(用户数据报协议)协议"></a>是否了解 UDP(用户数据报协议)协议</h4><p>UDP 有不提供数据包分组、组装和不能对数据包进行排序的缺点，也就是说，当报文发送之后，是无法得知其是否安全完整到达的。当强调传输性能而不是传输的完整性时适合使用此种协议.</p><p><a href="https://baike.baidu.com/item/UDP/571511?fr=ge_ala">UDP 协议</a></p><h4 id="浏览器如何渲染-html"><a href="#浏览器如何渲染-html" class="headerlink" title="浏览器如何渲染 html"></a>浏览器如何渲染 html</h4><ol><li>解析 HTML 生成 DOM 树。</li><li>解析 CSS 生成 CSSOM 规则树。</li><li>将 DOM 树与 CSSOM 规则树合并在一起生成渲染树。</li><li>遍历渲染树开始布局，计算每个节点的位置大小信息。</li><li>将渲染树每个节点绘制到屏幕。</li></ol><p><a href="https://www.gaotianyang.top/archives/2021032932cd20c6/#浏览器渲染过程">浏览器渲染过程</a></p><h4 id="有哪些因素会阻塞浏览器渲染"><a href="#有哪些因素会阻塞浏览器渲染" class="headerlink" title="有哪些因素会阻塞浏览器渲染"></a>有哪些因素会阻塞浏览器渲染</h4><p>白屏时间的瓶颈主要体现在下载 CSS 文件、下载 JavaScript 文件和执行 JavaScript； 所以要想缩短白屏时长，可以有以下策略：</p><ol><li>内联 JavaScript、内联 CSS 来移除这两种类型的文件下载，这样获取到 HTML 文件之后就可以直接开始渲染流程了，但并不是所有的场合都适合内联。</li><li>尽量减少文件大小，比如通过 webpack 等工具移除一些不必要的注释，并压缩 JavaScript 文件。</li><li>将一些不需要在解析 HTML 阶段使用的 JavaScript 标记上 async 或者 defer。</li><li>利用媒体查询属性，在特定的场景下加载特定的 CSS 文件。</li></ol><p><a href="https://juejin.cn/post/7083752157085696014">漫漫前端路之浏览器基础——页面渲染阻塞原因分析篇</a></p><h4 id="CDN-的原理是什么"><a href="#CDN-的原理是什么" class="headerlink" title="CDN 的原理是什么"></a>CDN 的原理是什么</h4><p>CDN 的原理是: 基于分布式架构，通过将源服务器上的内容分发到多个节点服务器上，使用户能够从最近的服务器中获取所需内容。<br>这些节点服务器被称为 边缘服务器，它们通常位于不同的地理位置，并通过高速互联网连接互相交换数据。<br>用户通过接入离他们最近的 边缘服务器 来获取所需的内容，从而降低了响应时间和延迟，提高了网站的访问速度。</p><p><a href="https://www.51cto.com/article/750758.html">CDN 原理入门，你学会了吗？</a></p><h3 id="react-相关"><a href="#react-相关" class="headerlink" title="react 相关"></a>react 相关</h3><h4 id="React-函数组件和类组件的区别"><a href="#React-函数组件和类组件的区别" class="headerlink" title="React 函数组件和类组件的区别"></a>React 函数组件和类组件的区别</h4><ol><li>语法上<ol><li>函数组件它接收一个 <code>props</code> 对象返回一个 <code>react</code> 元素</li><li>类组件需要去继承 <code>React.Component</code> 并且创建 <code>render</code> 函数返回 <code>react</code> 元素</li></ol></li><li><del>状态管理</del> 使用 hooks 解决</li><li><del>生命周期钩子</del> 使用 hooks 解决</li><li>调用方式<ol><li>函数组件直接调用函数使用</li><li>类组件需要先用 <code>new</code> 操作符将其实例化，然后调用刚才生成实例的 <code>render</code> 方法</li></ol></li><li>获取渲染时的值</li></ol><ul><li>语法上</li></ul><p>函数组件是一个纯函数，它接收一个 <code>props</code> 对象返回一个 <code>react</code> 元素；<br>类组件需要去继承 <code>React.Component</code> 并且创建 <code>render</code> 函数返回 <code>react</code> 元素，虽然实现的效果相同，但需要更多的代码。</p><ul><li><del>状态管理</del></li></ul><p>因为函数组件是一个纯函数，所以不能在组件中使用 <code>setState()</code>，这也是为什么把函数组件称作为无状态组件。<br>如果要在组件中使用 <code>state</code> ，可以选择创建一个类组件或者将 <code>state</code> 提升到你的父组件中，然后通过 <code>props</code> 对象传递到子组件。</p><blockquote><p>注意：在 <code>react16.8</code> 版本中添加了 <code>hooks</code> ，使得我们可以在函数组件中使用 <code>useState</code> 钩子去管理 <code>state</code> ，使用 <code>useEffect</code> 钩子去使用生命周期函数。<br>因此，2、3 两点就不是它们的区别点。而从这个改版中我们也可以看出 React 团队更看重函数组件，而且曾提及到在 <code>react</code> 之后的版本将会对函数组件的性能方面进行提升。</p></blockquote><ul><li><del>生命周期钩子</del></li></ul><p>函数组件中不能使用生命周期钩子，原因和不能使用 <code>state</code> 一样，所有的生命周期钩子都来自于继承的 <code>React.Component</code> 中。<br>因此，如果要使用生命周期钩子，就需要使用类组件。</p><blockquote><p>注意：在 <code>react16.8</code> 版本中添加了 <code>hooks</code> ，使得我们可以在函数组件中使用 <code>useState</code> 钩子去管理 <code>state</code> ，使用 <code>useEffect</code> 钩子去使用生命周期函数。<br>因此，2、3 两点就不是它们的区别点。而从这个改版中我们也可以看出 React 团队更看重函数组件，而且曾提及到在 <code>react</code> 之后的版本将会对函数组件的性能方面进行提升。</p></blockquote><ul><li>调用方式</li></ul><p>如果 <code>SayHi</code> 是一个函数， <code>React</code> 需要调用它：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 你的代码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SayHi</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello, React<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// React 内部</span></span><br><span class="line"><span class="keyword">const</span> result = SayHi(props); <span class="comment">// » &lt;p&gt;Hello, React&lt;/p&gt;</span></span><br></pre></td></tr></table></figure><p>如果 <code>SayHi</code> 是一个类， <code>React</code> 需要先用 <code>new</code> 操作符将其实例化，然后调用刚才生成实例的 <code>render</code> 方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 你的代码</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SayHi</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello, React<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// React 内部</span></span><br><span class="line"><span class="keyword">const</span> instance = <span class="keyword">new</span> SayHi(props); <span class="comment">// » SayHi &#123;&#125;</span></span><br><span class="line"><span class="keyword">const</span> result = instance.render(); <span class="comment">// » &lt;p&gt;Hello, React&lt;/p&gt;</span></span><br></pre></td></tr></table></figure><p>可想而知，函数组件重新渲染将重新调用组件方法返回新的 <code>react</code> 元素，类组件重新渲染将 <code>new</code> 一个新的组件实例，<br>然后调用 <code>render</code> 类方法返回 <code>react</code> 元素，这也说明为什么类组件中 <code>this</code> 是可变的。</p><ul><li>获取渲染时的值</li></ul><p>考虑以下组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ProfilePage</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> showMessage = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    alert(<span class="string">&#x27;Followed &#x27;</span> + props.user);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> handleClick = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(showMessage, <span class="number">3000</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleClick&#125;</span>&gt;</span>Follow<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>UserProfile</code> 组件很简单，就一个 <code>Follow</code> 按钮，该按钮使用了 <code>setTimeout</code> 模拟网络请求。<br>用户点击这个按钮之后会弹出一个警告框。如果 <code>props.user</code> 为 <code>&#39;Dan&#39;</code>，它将在三秒钟后显示 <code>&#39;Followed Dan&#39;</code>。</p><p>我们如何将其编写为类？天真的翻译可能像这样：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProfilePage</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  showMessage() &#123;</span><br><span class="line">    alert(<span class="string">&#x27;Followed &#x27;</span> + <span class="built_in">this</span>.props.user);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handleClick() &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="built_in">this</span>.showMessage.bind(<span class="built_in">this</span>), <span class="number">3000</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleClick.bind(this)&#125;</span>&gt;</span>Follow<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通常认为这两个代码段是等效的。人们经常在这些模式之间自由重构，而没有注意到它们的含义</p><p>但是，这两个代码段是完全不同的。</p><p>分别按下面的顺序来操作 Follow 按钮：</p><ol><li>先点击 Follow 按钮</li><li>在 3s 之前更改下拉选择项的选项</li><li>阅读弹出的警告框内容</li></ol><p>这就发现函数组件和类组件是有区别的：</p><ul><li>函数组件：按上面所列的三个步骤操作时，当用户在 3s 前更改下拉选择框的选项时，h1 的用户名会立马改变，而 3s 后弹出的警告框中的用户名并不会改变</li><li>类组件：按上面所列的三个步骤操作时，当用户在 3s 前更改下拉选择框的选项时，h1 中的用户名会立马改变，而 3s 后弹出的警告框中的用户名也会改变</li></ul><p>我们可以在类的构造函数中绑定这些方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProfilePage</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="comment">// 获取 props</span></span><br><span class="line">    cosnt props = <span class="built_in">this</span>.props</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 它们不是类方法</span></span><br><span class="line">    <span class="keyword">const</span> showMessage = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        alert(<span class="string">&#x27;Followed &#x27;</span> + props.user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> handleClick = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(showMessage, <span class="number">3000</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleClick&#125;</span>&gt;</span>Follow<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样一来，函数组件和类组件所达到的效果都一样了。在类组件中可以捕获渲染时的 props。效果上看上去是一样了，但看起来怪怪的。如果在类组件中的 render 中定义函数而不是使用类方法，那么还有使用类的必要性？</p><p><a href="https://cloud.tencent.com/developer/article/1843744">React 函数组件和类组件的区别</a></p><h4 id="Usememo-是否了解，原理是什么"><a href="#Usememo-是否了解，原理是什么" class="headerlink" title="Usememo 是否了解，原理是什么"></a>Usememo 是否了解，原理是什么</h4><ul><li>useMemo 是用来缓存计算属性的，它会在发现依赖未发生改变的情况下返回旧的计算属性值的地址。</li><li>useMemo 绝不是用的越多越好，缓存这项技术本身也需要成本。</li><li>useMemo 的使用场景之一是:只需要给拥有巨大计算量的计算属性缓存即可。</li><li>useMemo 的另一个使用场景是：当有计算属性被传入子组件，并且子组件使用了 react.memo 进行了缓存的时候,为了避免子组件不必要的渲染时使用</li></ul><p><a href="https://juejin.cn/post/7108278900085489671">React 性能优化篇之 useMemo 的使用场景及其深度解读</a></p><h4 id="为什么使用-hooks"><a href="#为什么使用-hooks" class="headerlink" title="为什么使用 hooks"></a>为什么使用 hooks</h4><ol><li>更容易复用代码</li><li>清爽的代码风格+代码量更少</li><li>代码可读性更强</li><li>组件树层级变浅</li><li>不用再去考虑 this 的指向问题</li></ol><p><a href="https://zhuanlan.zhihu.com/p/392191865">为什么要使用 Hooks？</a></p><ul><li>优点：<ul><li>更容易复用代码</li><li>代码量更少</li></ul></li><li>缺点：<ul><li>响应式的 useEffect</li><li>hooks 不擅长异步的代码</li><li>custom hooks 有时严重依赖参数的不可变性</li></ul></li><li>解决方案：<ul><li>不要在 useEffect 里面写太多的依赖项，划分这些依赖项成多个单一功能的 useEffect。其实这点是遵循了软件设计的“单一职责模式”。</li><li>如果你碰到状态不同步的问题，可以考虑下手动传递参数到函数。</li><li>拆分组件，细化组件的粒度。复杂业务场景中使用 hooks，应尽可能地细分组件，使得组件的功能尽可能单一，这样的 hooks 组件更好维护。</li></ul></li></ul><p><a href="https://zhuanlan.zhihu.com/p/88593858">谈谈 react hooks 的优缺点</a></p><h4 id="usestate-赋值操作是同步的还是异步的，多次赋值，界面会渲染几次"><a href="#usestate-赋值操作是同步的还是异步的，多次赋值，界面会渲染几次" class="headerlink" title="usestate 赋值操作是同步的还是异步的，多次赋值，界面会渲染几次"></a>usestate 赋值操作是同步的还是异步的，多次赋值，界面会渲染几次</h4><p>严格来说，不是异步也不是同步。setState 有时候不会即时更新是因为 React 的优化机制，在事件处理器中批量处理更新。<br>而在某些时候，setState 会同步更新。分别看一下这两种情况。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> onClick = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">this</span>.setState(&#123; <span class="attr">a</span>: <span class="number">1</span> &#125;);</span><br><span class="line">  <span class="built_in">this</span>.setState(&#123; <span class="attr">a</span>: <span class="number">2</span> &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>组件只会更新一次</p><p>而在异步代码（promise、async/await、setTimeout/setInterval、fetch）中的更新，不会批量处理， 比如:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> onClick = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  callAPI().then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123; <span class="attr">a</span>: <span class="number">1</span> &#125;);</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123; <span class="attr">a</span>: <span class="number">2</span> &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>组件会更新两次，我们称这样的更新是 outside of react event handlers,<br>发生在 react 事件处理器之外，此时的回调在 react 执行机制完成之后进行，react 没办法批量更新。</p><p><a href="https://juejin.cn/post/6997020924205596702">关于 useState 你需要知道的一切</a></p><h4 id="为什么虚拟-dom-优于操作真实-dom"><a href="#为什么虚拟-dom-优于操作真实-dom" class="headerlink" title="为什么虚拟 dom 优于操作真实 dom"></a>为什么虚拟 dom 优于操作真实 dom</h4><ul><li>虚拟 DOM 不一定会比操作原生 DOM 更快。</li><li>虚拟 DOM 的优势在于节点进行改动的时候尽量减少开销</li><li>React 从来没说过虚拟 DOM 会比原生更快。</li><li>框架的本质是提升开发效率，让我们的注意力更集中于数据</li></ul><p><a href="https://juejin.cn/post/7130538545063657486">使用虚拟 DOM 一定会比直接操作真实 DOM 快吗？这还真不一定。</a></p><h4 id="是否了解-react-的优化算法，是如何优化的"><a href="#是否了解-react-的优化算法，是如何优化的" class="headerlink" title="是否了解 react 的优化算法，是如何优化的"></a>是否了解 react 的优化算法，是如何优化的</h4><ol><li>Web UI 中 DOM 节点跨层级的移动操作特别少，可以忽略不计。</li><li>拥有相同类的两个组件将会生成相似的树形结构，拥有不同类的两个组件将会生成不同的树形结构。</li><li>对于同一层级的一组子节点，它们可以通过唯一 id 进行区分。</li></ol><p><a href="https://juejin.cn/post/7116326409961734152">「React 深入」一文吃透虚拟 DOM 和 diff 算法</a></p><h3 id="项目相关"><a href="#项目相关" class="headerlink" title="项目相关"></a>项目相关</h3><h4 id="全面质量管理系统"><a href="#全面质量管理系统" class="headerlink" title="全面质量管理系统"></a>全面质量管理系统</h4><ul><li>九宫格 card 动效 低版本浏览器兼容性 图片替代 css 效果</li><li>大屏横向切换 渐进渐出 白屏处理</li><li>使用 cloud-charts 展示图表信息</li><li>使用 formilyjs 渲染表单 快速搭建页面 动态生成页面 复杂场景需求 联动、全局字典</li><li>组织架构 菜单与组织架构树状图联动效果</li><li>使用了 single-spa 微服务项目架构 各个子应用间的相互引用 在基座上挂载子应用</li></ul><h4 id="如何进行的各个子应用相互间引用"><a href="#如何进行的各个子应用相互间引用" class="headerlink" title="如何进行的各个子应用相互间引用"></a>如何进行的各个子应用相互间引用</h4><p>useHistory()、useLocation()需要从外层使用应用获取并传递至引用的应用</p><h4 id="各个子应用之间的-css-样式污染"><a href="#各个子应用之间的-css-样式污染" class="headerlink" title="各个子应用之间的 css 样式污染"></a>各个子应用之间的 css 样式污染</h4><ol><li>设置 ElConfigProvider</li><li>设置 SCSS 和 CSS 变量</li><li>定义子应用的 class 包裹</li></ol><p><a href="https://juejin.cn/post/7114882453956722724">微前端基座样式，污染子应用样式的解决方案</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2022/06/06/Xwo0Mt.jpg&quot; alt=&quot;首屏图&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="面试题" scheme="https://www.gaotianyang.top/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/%E5%89%8D%E7%AB%AF/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    
    <category term="技术积累" scheme="https://www.gaotianyang.top/tags/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="前端" scheme="https://www.gaotianyang.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="面试题" scheme="https://www.gaotianyang.top/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
</feed>
