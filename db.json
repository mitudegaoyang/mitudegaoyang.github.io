{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/assets/img/CNAME.png","path":"assets/img/CNAME.png","modified":1,"renderable":0},{"_id":"source/assets/img/empty.png","path":"assets/img/empty.png","modified":1,"renderable":0},{"_id":"source/assets/img/timg.jpeg","path":"assets/img/timg.jpeg","modified":1,"renderable":0},{"_id":"themes/yilia/source/main.e4b334.css","path":"main.e4b334.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.e4b334.js","path":"main.e4b334.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/mobile.538dbd.js","path":"mobile.538dbd.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/slider.ae5635.js","path":"slider.ae5635.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.320acc.woff","path":"fonts/iconfont.320acc.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.707071.svg","path":"fonts/iconfont.707071.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.c1a725.ttf","path":"fonts/iconfont.c1a725.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.eb83e5.eot","path":"fonts/iconfont.eb83e5.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/timg.jpeg","path":"img/timg.jpeg","modified":1,"renderable":1},{"_id":"themes/yilia/source/lib/gitalk/gitalk.css","path":"lib/gitalk/gitalk.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/lib/gitalk/gitalk.min.js","path":"lib/gitalk/gitalk.min.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/lib/gitalk/md5.js","path":"lib/gitalk/md5.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/lib/gitment/gitment.css","path":"lib/gitment/gitment.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/lib/gitment/gitment.js","path":"lib/gitment/gitment.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/lib/valine/Valine.min.js","path":"lib/valine/Valine.min.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/lib/valine/av-min.js","path":"lib/valine/av-min.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/lib/valine/jquery.min.js","path":"lib/valine/jquery.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/photos/lazyload.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501213868000},{"_id":"source/favicon.ico","hash":"e59fd3ba6e87523fcdebf14d1d072e1ca86f34fc","modified":1594746104135},{"_id":"source/.gitignore","hash":"4b40e2bf9a87584f198091434ed6f7ebbb829497","modified":1595028021274},{"_id":"source/CNAME","hash":"4d2230a131a51f06d626d3fbdabf1213abac40aa","modified":1596335896343},{"_id":"source/_posts/.DS_Store","hash":"b18067cbd2cc6d38cb82861591813893177608b7","modified":1594746153282},{"_id":"source/.DS_Store","hash":"54d9a60f884f950ac310dc87672582ce07f02313","modified":1594746128199},{"_id":"source/_posts/Go2Shell关于BigSur的适配.md","hash":"f7c6f8eba910d9c7fbb211ac06daab085d1cb2cd","modified":1615013923517},{"_id":"source/_posts/Dart教程.md","hash":"5b18156b57e8685c198b787fa93d6edc8f10babe","modified":1615014021356},{"_id":"source/_posts/Flutter教程.md","hash":"1689cc8ff156ed5a8db740ae94ac595cccf23920","modified":1615013086370},{"_id":"source/_posts/Yilia主题如何添加左侧SubNav图标.md","hash":"19400b27bdd9de98c69e60d5d520b9a02637154d","modified":1614690992308},{"_id":"source/_posts/UI-Grid-简介.md","hash":"5541647f04723d452e21ce93b6ca7f5a315d27bd","modified":1597197478408},{"_id":"source/_posts/Yilia主题如何添加相册功能.md","hash":"9ea5862e5ac8881da922013f64ff19e9a869c21f","modified":1597197478409},{"_id":"source/_posts/HTML常见标签.md","hash":"6d31979ebace1e8db0ca503380344117f568b964","modified":1597197478408},{"_id":"source/_posts/Yilia主题生成永久短连接.md","hash":"1a32b5736b100b00ffc6f1eaae1c47ae1bafe208","modified":1597197478410},{"_id":"source/_posts/hello-world.md","hash":"dc472af1ebeb8d00b1ba55b0aadca702aa914cb9","modified":1597197478410},{"_id":"source/_posts/Yilia主题如何添加评论功能.md","hash":"3e89556ca597765f930acb64ed4d48ffff1d1b88","modified":1597197478409},{"_id":"source/_posts/hexo添加sitemap功能.md","hash":"d122bdc8fa5f9bc8ba1fe808aa880b00eb8f0258","modified":1609290503104},{"_id":"source/_posts/hexo主题推荐.md","hash":"29b18c611ce61364505c9eb532421abb2676f1e5","modified":1597197478410},{"_id":"source/_posts/icestark的使用.md","hash":"27f758d9245b2c4903d3966bc56a10e10bba167d","modified":1614690992309},{"_id":"source/_posts/icestark的最佳实践.md","hash":"e90e64c1eb77acd3fcdd324aa0e9c0b00d5ee66e","modified":1614690992311},{"_id":"source/_posts/yilia主题进阶设置.md","hash":"fe178bbcae9deda39cbc235afb6308a4ac950364","modified":1614690992312},{"_id":"source/_posts/react-spring的使用.md","hash":"e9fcb39d04b26a21d11069ac0e65fd2a06dc9d3f","modified":1611980206666},{"_id":"source/_posts/东郊湿地公园.md","hash":"3affb2c77dc8aa55e221b8d5484d55cbbeb75866","modified":1597197478411},{"_id":"source/_posts/两数之和.md","hash":"6e350a8266832295421b1cc77e7ce2a1066cae04","modified":1597197478412},{"_id":"source/_posts/两数相加.md","hash":"166f4bf978e7eabe4ae4997a7847fe633ed8382f","modified":1597197478412},{"_id":"source/_posts/二刷鬼笑石.md","hash":"d9d2c3fd199956cef536d4e405a6f91ee13b4aaa","modified":1611980206666},{"_id":"source/_posts/丹宸永固-紫禁城建成六百年.md","hash":"a17506f6e0de274fef3c6c4c9c18eb7ff6b0028c","modified":1611980206666},{"_id":"source/_posts/云图.md","hash":"c0746a07f929a89b72f64d9629f36b0aecc03119","modified":1609290503105},{"_id":"source/_posts/入木-黄永玉版画艺术展.md","hash":"f28d64004b124813c6c33a71455072da420a8fbb","modified":1611980206666},{"_id":"source/_posts/使用dayjs替代moment.md","hash":"4b965158d18376ccbfd1513ef41e53a41d81ab93","modified":1609290503105},{"_id":"source/_posts/使用mock-js模拟数据.md","hash":"2fac7dedd2ace947725ce6edcef9a59088ff39a2","modified":1609290503106},{"_id":"source/_posts/前端微服务.md","hash":"85aa43afb61a8683b828a3676e5d9c76aa9e04ec","modified":1614690992313},{"_id":"source/_posts/坡峰岭.md","hash":"9f5e0e960d57f095c91210a1da6a3231975540fb","modified":1611980206667},{"_id":"source/_posts/天坛.md","hash":"9494ad1133644d6dc1280e5c3ade3af87e69ebec","modified":1611980206668},{"_id":"source/_posts/前端知识积累.md","hash":"7a6f29d85c6044364aa0b4356b202104b2f54614","modified":1615019965849},{"_id":"source/_posts/夜爬西山.md","hash":"f040a0e9b85ca1cd0dee29318bce125131089de8","modified":1609290503106},{"_id":"source/_posts/奥森美图.md","hash":"b0ad8d4d4553a9db4ef9eb395cc78371ba6e59af","modified":1597197478413},{"_id":"source/_posts/时间与空间复杂度.md","hash":"df6942e237e696ab09ab360e7b12517cd23e30d6","modified":1609290503106},{"_id":"source/_posts/寻味津门.md","hash":"1c1c5b48c594ebbbe5a0780ae3a9d005af51d251","modified":1597197478413},{"_id":"source/_posts/最长回文子串.md","hash":"05b3b007986c6232fd54d4bd46df791b04599d65","modified":1609290503106},{"_id":"source/_posts/无重复字符的最长子串.md","hash":"5d9ec24534f19ae70d52c3d58139ce50760cef3c","modified":1609290503106},{"_id":"source/_posts/蟒山行.md","hash":"e16f768d1a1a2d5b7c6262c6d7a8b9013e919600","modified":1611980206668},{"_id":"source/_posts/梦禅.md","hash":"68ae39df175be6aaa9ccfb4bde1e0edde9734ccb","modified":1597197478414},{"_id":"source/_posts/白帽子讲Web安全.md","hash":"008a8939bc431ea77403ff16bfa1b634d34a3a02","modified":1597197478414},{"_id":"source/_posts/游十渡.md","hash":"1b5313ba957709342318b60224a9ec1003f243f6","modified":1597197478414},{"_id":"source/_posts/逛南锣.md","hash":"f0c00272dc67400ecaf143bb821f60865f150fad","modified":1597197478415},{"_id":"source/_posts/语义化标签.md","hash":"a714fe00485cc61a44ec639722fd7a7a131a15c4","modified":1597197478415},{"_id":"source/_data/_yilia.yml","hash":"141b923166ca6b77391afbfc0e44957316f60346","modified":1596335896344},{"_id":"source/_posts/阳台山.md","hash":"fd9d2dff829576caa21aa32da4f86b5cdb8176f7","modified":1597197478415},{"_id":"source/photos/index.ejs","hash":"bace3463e5c44299c8e562377bec785c319efde6","modified":1597197478417},{"_id":"source/_posts/项目建立手册.md","hash":"d72176fb6203754b169686ffaa188a7a6acd265b","modified":1614690992314},{"_id":"source/photos/ins.css","hash":"ac28fa2dacdceb395b12fa83f4b87634669d99cf","modified":1595030810811},{"_id":"source/photos/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1595142499821},{"_id":"source/categories/index.md","hash":"f65bad4f925285e9a15e4b957b8775a4186c0c0c","modified":1596335896350},{"_id":"source/photos/ins.js","hash":"2b58cc2b50593032705a0595659c6e2378b21a68","modified":1611980206669},{"_id":"source/_posts/白帽子讲Web安全/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1594745130519},{"_id":"source/photos/ins.json","hash":"ca6fdcd8cf691e3891a422f4a429defb58532e74","modified":1611980206669},{"_id":"source/assets/img/CNAME.png","hash":"75fe6fd20175ba0657d6cf9f9f4550d07f569e12","modified":1596335896350},{"_id":"source/assets/img/empty.png","hash":"e88177c88f6b7219a3474da7d210965a6dbb57d7","modified":1501213868000},{"_id":"source/assets/img/timg.jpeg","hash":"603af1769825a1411a71842ff054ef4a15ee7468","modified":1595147603897},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1596078032000},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1509441770000},{"_id":"themes/yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1509441770000},{"_id":"themes/yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1509441770000},{"_id":"themes/yilia/.DS_Store","hash":"2582ef8bcbceea8da75af08244f6370380713271","modified":1612689322000},{"_id":"themes/yilia/README.md","hash":"22bf5132001f6a620a8c42e765db2085864fee24","modified":1595472446000},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1509441770000},{"_id":"themes/yilia/_config.yml","hash":"2b5a6ec11737bf6d5b0e34f1c5673c9af46ff6cc","modified":1614047890000},{"_id":"themes/yilia/.gitattributes","hash":"e0f24dceeb1e6878a1dd9b01a2b9df1bc037a867","modified":1509441770000},{"_id":"themes/yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1509441770000},{"_id":"themes/yilia/package.json","hash":"5f038ea4ac1b0a7f0ab08b914464904f41d3519a","modified":1601437550000},{"_id":"themes/yilia/layout/categories.ejs","hash":"3de43faaf0c44a52390aea090379777010a56268","modified":1596078032000},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1596078032000},{"_id":"themes/yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1509441770000},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1596078032000},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1596078032000},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1596078032000},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1596078034000},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1596078034000},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1596078034000},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1509441770000},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1509441770000},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1509441770000},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1509441770000},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1509441770000},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1595409518000},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1509441770000},{"_id":"themes/yilia/source/.DS_Store","hash":"dd0f5889cf2edba02445c45c41ba23f845ba1b8b","modified":1612775364000},{"_id":"themes/yilia/source/main.e4b334.css","hash":"bfb090e9044a798fcada5722c92f2e6d7a1da524","modified":1612775314000},{"_id":"themes/yilia/source/slider.ae5635.js","hash":"f5606e0a05bd929bcb549a929fc97f7d3a9f47cb","modified":1612775314000},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1596077930000},{"_id":"themes/yilia/source-src/.DS_Store","hash":"3037d5331d92d3f549f33102664cadfff9459707","modified":1612773822000},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1596077930000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1612775412000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"8b076b56e5a90ca2b23c9fd2fa228d88b74fe232","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"13ed4922ab98df12fad1de0156020ef201bbc827","modified":1597309510000},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"5782b69498cb5fdca86db401793d2a2b5f2bfb97","modified":1596422318000},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"9e747c985efb13466e93af67010c7dd4790a8b1b","modified":1612775314000},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"e7ae3d98374929fe212b499dc5bab5f7037bf87b","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"a80ea4826a745b355c0384b4f8154261924d7a09","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"8072747149ea25d2b703579aa37871806566d632","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"806496733bc7be039527df47651b09d1dcd1b51e","modified":1596091194000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"5f56d39534ba001831a74f11e8f1c5fdb4b932a0","modified":1596078032000},{"_id":"themes/yilia/source/fonts/iconfont.320acc.woff","hash":"1863e0139ed8363a3742d0d57f738598f0d2eabc","modified":1612689298000},{"_id":"themes/yilia/source/fonts/iconfont.707071.svg","hash":"9aa37d7d4789a5cf3975745b87c2245ba0080a61","modified":1612689298000},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1612689298000},{"_id":"themes/yilia/source/fonts/iconfont.c1a725.ttf","hash":"996b1b37f433c1634179dfcb710b1309953f8d2d","modified":1612689298000},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1612689298000},{"_id":"themes/yilia/source/fonts/iconfont.eb83e5.eot","hash":"a0b485e2320a0e2556295c8d269abafab54969c1","modified":1612689298000},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1612689298000},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1612689298000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1612689298000},{"_id":"themes/yilia/source/img/timg.jpeg","hash":"603af1769825a1411a71842ff054ef4a15ee7468","modified":1612771584000},{"_id":"themes/yilia/source-src/js/aside.js","hash":"754f771264548a6c5a8ad842908e59ae4e7ed099","modified":1596077930000},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1596077930000},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1596077930000},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1596077930000},{"_id":"themes/yilia/source-src/js/fix.js","hash":"7f9599ffd5c5551538e90b97023e7d6c599d1ee6","modified":1596077930000},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1596077930000},{"_id":"themes/yilia/source-src/js/main.js","hash":"3894e60827c817319e43c9ff3ed045fc3d7336ce","modified":1596077930000},{"_id":"themes/yilia/source-src/js/report.js","hash":"e66609f93cc92340cb7dee62fd30ca96cd4d7495","modified":1612774380000},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1596077930000},{"_id":"themes/yilia/source-src/js/slider.js","hash":"e846bcc5aac9c68b93f7b8de353df54d8d29f666","modified":1596077930000},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1596077930000},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"e8a35d4497fe1e0f119662ae08bd8404e5dab2a4","modified":1596077930000},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1596077930000},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1596077930000},{"_id":"themes/yilia/source-src/css/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1612681562000},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1596077930000},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1596077930000},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1596077930000},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1596077930000},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"578a67464dd0f542197f7fcee158c991db058563","modified":1596077930000},{"_id":"themes/yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1596077930000},{"_id":"themes/yilia/source-src/css/categories.scss","hash":"8989606227139da0624ba41053877feaa8d7c83e","modified":1596077930000},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1596077930000},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"f0ded217fadb95ebe6589f48dffd48e200abb324","modified":1596077930000},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"bf0479f75f9c8b46009b785bc87ff9844a8bd7d0","modified":1612687762000},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1596077930000},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"25c23c2be076f7774d9223a3ae7f24894cb938d7","modified":1596077930000},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1596077930000},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1596077930000},{"_id":"themes/yilia/source-src/css/main.scss","hash":"41bcdaebf3aed145cfc2c863dc01d3f2dd10acce","modified":1596077930000},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1596077930000},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1596077930000},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1596077930000},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"ace041d72f95b419f6a5e443191703c2b62007f4","modified":1596077930000},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1596077930000},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1596077930000},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1596077930000},{"_id":"themes/yilia/source-src/css/social.scss","hash":"85142e7d929a73b5257ee20854239a71307cd6b5","modified":1612688018000},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"1b1aa0908e58cf942b28e3881d07c5573c4129e1","modified":1596077930000},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1596077930000},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1596077930000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"0809a4829aabeb4e911a3ed04ec28db4df7dfe3f","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"ec71ffc2023cebd933c96bd35a7a23d44a30a422","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"cb588a80d76c60cc9d699c35693ea52d3dac85fd","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"5f26c9e0cc339179813fac54cbe1e51354d10eb8","modified":1612774980000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/post/gitalk.ejs","hash":"5a908b7c9896b7409d4b2690d4ff6fc6f3d891ae","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1596078032000},{"_id":"themes/yilia/layout/_partial/post/word.ejs","hash":"0d14d2c376364eeeba572f7affc9bb70b50b5237","modified":1596422338000},{"_id":"themes/yilia/layout/_partial/post/valine.ejs","hash":"b3d54fa51ff6b7b244cb9a743d69353374d2c76a","modified":1596078032000},{"_id":"themes/yilia/source/lib/gitalk/gitalk.css","hash":"42d3d627102a2602e8ede426900fbcb33a8c221b","modified":1612771678000},{"_id":"themes/yilia/source/lib/gitalk/md5.js","hash":"7bea78bd6d137861718c96d7db4108762c759a0b","modified":1612773696000},{"_id":"themes/yilia/source/lib/gitalk/gitalk.min.js","hash":"c805527edc3e259d7b2278ceb446fa69d1af7476","modified":1612771718000},{"_id":"themes/yilia/source/lib/gitment/gitment.css","hash":"1f9f5afa7f5b6cb77a71a6f682f3fbe1423a8843","modified":1612773734000},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1596077930000},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1596077930000},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1596077930000},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1596077930000},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1596077930000},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1596077930000},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1596077930000},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1596077930000},{"_id":"themes/yilia/source-src/css/fonts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1612685526000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"01085920e6e98b17d440419c5adf9ff6f05bdc60","modified":1612685458000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"811fbd20039a76bb0a9109138fd1a28f659d8857","modified":1612685458000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"9aa37d7d4789a5cf3975745b87c2245ba0080a61","modified":1612685458000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"3f5c39775a8cacffddd55807667bf78a8101e678","modified":1612685458000},{"_id":"themes/yilia/source/main.e4b334.js","hash":"aa13c8f5bc52c6f2eb0b268e5bc7fd4ee9ebf798","modified":1612775314000},{"_id":"themes/yilia/source/mobile.538dbd.js","hash":"32f73ed08676612638362bff6acccee6105b538d","modified":1612775314000},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"92bc3c19e3f1633b77ab9fdfe2317b1dde966324","modified":1612775314000},{"_id":"themes/yilia/source/lib/valine/jquery.min.js","hash":"9173e7cb0ee18efdc74059f8e3bce6759025b8ab","modified":1612770786000},{"_id":"themes/yilia/source/lib/valine/av-min.js","hash":"6d7100ab357ac92291901dbbf0d4c683d05a7672","modified":1612770752000},{"_id":"themes/yilia/yarn.lock","hash":"0e99e1a4d79a01a398ce1d8a2ad74fab002b883e","modified":1601437550000},{"_id":"themes/yilia/source/lib/valine/Valine.min.js","hash":"dfd150d43762e6e432395a6347b4e627065160fd","modified":1612770806000},{"_id":"themes/yilia/source/lib/gitment/gitment.js","hash":"83e7553c0eacb84a06144fb95649c68210109075","modified":1612773754000},{"_id":"public/photos/lazyload.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1615025925500},{"_id":"public/photos/ins.css","hash":"ac28fa2dacdceb395b12fa83f4b87634669d99cf","modified":1615025925500},{"_id":"public/photos/ins.json","hash":"9a56b039bec06d980722d6f7d3f882042f806654","modified":1615025925500},{"_id":"public/photos/ins.js","hash":"2b58cc2b50593032705a0595659c6e2378b21a68","modified":1615025925500},{"_id":"public/baidusitemap.xml","hash":"ddfa2a47db438b20456e67b2d13d9fa2d4bbb75b","modified":1615025925500},{"_id":"public/atom.xml","hash":"779e072a1e184e03216eb5f8aaf645f3e2f6fd30","modified":1615025925500},{"_id":"public/content.json","hash":"d8fdaf2c126f9ebb06cb62e5943d61ab2980725a","modified":1615025925500},{"_id":"public/sitemap.xml","hash":"8603e19b921026909d169a62e660858c66147fc5","modified":1615025925500},{"_id":"public/photos/index.html","hash":"4202f0c3398f22de44ebec9cfaf2136282bbc913","modified":1615025925500},{"_id":"public/categories/index.html","hash":"2b8103ef59250db975ebbb824c66dacae821ea13","modified":1615025925500},{"_id":"public/archives/20210306fb26c275/index.html","hash":"db7367587137926eaff71f3ecf8ca72b6971294c","modified":1615025925500},{"_id":"public/archives/202102261bf41062/index.html","hash":"f59ac806006136677bcfd4bd46747acbdbfdbbcb","modified":1615025925500},{"_id":"public/archives/202102229c01b81e/index.html","hash":"c5570e5f97ba3577bb59d2b6f156a9f37e7335c9","modified":1615025925500},{"_id":"public/archives/2021021570ca98d5/index.html","hash":"250e8d5a5e900241500bda4152e4c81ae3f29ff4","modified":1615025925500},{"_id":"public/archives/202101115b56e29a/index.html","hash":"35bbc34726612eafc3a2f2e3867e14aebd2ab8ef","modified":1615025925500},{"_id":"public/archives/20210205e928c2fc/index.html","hash":"849e854658fef4e9e72600c2383d00edb9c20c01","modified":1615025925500},{"_id":"public/archives/20210105b721b7cb/index.html","hash":"3a21448baa14e357c7b21d6732695fd13b537df1","modified":1615025925500},{"_id":"public/archives/202101044fbd9ce8/index.html","hash":"670a7657c1e72d1ad85ec2b486b46bbdabc54e4c","modified":1615025925500},{"_id":"public/archives/202011304e94e89b/index.html","hash":"c4c5fc2428525b54b864bddf31253ce877556241","modified":1615025925500},{"_id":"public/archives/20210104d0a9039b/index.html","hash":"eca73d849b50ad8c2d3bc9ba46ada74fc0f38a90","modified":1615025925500},{"_id":"public/archives/20201011e4a158b5/index.html","hash":"09726841a6e70f987d6662f5f3df5c9159d71486","modified":1615025925500},{"_id":"public/archives/202010251ed01ebb/index.html","hash":"0eb1e0e3b4befee83ab7822602e9bf3dc6ec3ed0","modified":1615025925500},{"_id":"public/archives/20200913d313b7c4/index.html","hash":"97118bf861df906a745c4dbd895de7571b53d088","modified":1615025925500},{"_id":"public/archives/20200906dfbe8392/index.html","hash":"bb49a6fc9ee3ed8be9e8b2a50f4ddf49e18444ab","modified":1615025925500},{"_id":"public/archives/2020090913c31df7/index.html","hash":"94c24a5eebb21f8a7a2fd7261d150f9f094b6cf8","modified":1615025925500},{"_id":"public/archives/20200905c48a2c76/index.html","hash":"f0e489d1a452c1a1704a5b4a6d42088b7f309299","modified":1615025925500},{"_id":"public/archives/20200824a5b1fab6/index.html","hash":"141b21cce759853d0ca9d5a0bd7fe2905b03a91e","modified":1615025925500},{"_id":"public/archives/2020082486020100/index.html","hash":"64c9a74532efabc78dd94edc45f8a35bf1653157","modified":1615025925500},{"_id":"public/archives/202008184cd9164b/index.html","hash":"3300cc9c909c1c1f59ed4dfed381f2a0db2b410c","modified":1615025925500},{"_id":"public/archives/2020081772d9b152/index.html","hash":"e95af5f1edcee68464c606b43ce7583ec6e8f8b0","modified":1615025925500},{"_id":"public/archives/20200814f023bd8e/index.html","hash":"7e97fe1278eb5856b7764cc5cfe3ae3e418a2f36","modified":1615025925500},{"_id":"public/archives/20200813e362d928/index.html","hash":"2cf9c4ec0e80b9babc4055a9c34d919a6068d479","modified":1615025925500},{"_id":"public/archives/20200804c3af7d0b/index.html","hash":"be1d46a6ab6c2ce3230bf101cd5ff1ee03e0ad40","modified":1615025925500},{"_id":"public/archives/20200803e0185335/index.html","hash":"c4a8dcc29551388654054e4f44a05f10dff35660","modified":1615025925500},{"_id":"public/archives/202008013bc8a357/index.html","hash":"b1421c77aa9aa2c58524de14340ce08ee22c73e3","modified":1615025925500},{"_id":"public/archives/20200731b6465ced/index.html","hash":"0e27f838cf3dbc77e3b37fa1f94987c57907dbda","modified":1615025925500},{"_id":"public/archives/202007298e596984/index.html","hash":"c5dedc99448f10e0cf94faa37711d0506fcf686a","modified":1615025925500},{"_id":"public/archives/20200728d98ef1d2/index.html","hash":"c0a4aad734007074775e54c89fb9664f1ee4089e","modified":1615025925500},{"_id":"public/archives/2020072522b7ca75/index.html","hash":"439e511ee4c86986d26bd6f3b22a5ac4cfc39130","modified":1615025925500},{"_id":"public/archives/202007217dfdd292/index.html","hash":"1d2b9ed0a705a5e0528ab667ed1a2280388bb8ac","modified":1615025925500},{"_id":"public/archives/20200719da1a79f6/index.html","hash":"dd647c5537ce71e078256287f7461b8ee9f7223b","modified":1615025925500},{"_id":"public/archives/20200718f57a1917/index.html","hash":"8041a4f0e2da9eebb6337dcd51b1b57770bc268d","modified":1615025925500},{"_id":"public/archives/20200717e10c0cde/index.html","hash":"38681f47ae83c15c3799d7484be19f6ec9eb4644","modified":1615025925500},{"_id":"public/archives/2020071698767319/index.html","hash":"689367d6ecf28385a68d9fadb4dd48a5a9f57fc0","modified":1615025925500},{"_id":"public/archives/20200715c2350bb4/index.html","hash":"4adb3e39618103519ef4277db23c1f8b6cbafa6d","modified":1615025925500},{"_id":"public/archives/2020071417789b6e/index.html","hash":"4436a0864aa04bb5d1eb10bdbeaae690662d1979","modified":1615025925500},{"_id":"public/archives/20200607c314148a/index.html","hash":"0978f26615a9d3ed8ab047f256feb848c294a833","modified":1615025925500},{"_id":"public/archives/202005241dc1f56e/index.html","hash":"934377200ddf8c051a70ab0bf04859930871fa74","modified":1615025925500},{"_id":"public/archives/202005161bb83427/index.html","hash":"a8cec3705b7dd5ea664ce0c6a46ab960cf641cd2","modified":1615025925500},{"_id":"public/archives/20171106f1b4373b/index.html","hash":"c9721d23038e0e82f25f39ca8048e0ad47b1852a","modified":1615025925500},{"_id":"public/archives/20171031a6b75663/index.html","hash":"63dd6a6924b6f9a07f4b79fc7c626ef31dbd5a93","modified":1615025925500},{"_id":"public/archives/2017103152398dd8/index.html","hash":"e98369516986346e0b2c698844dd5e2ed245a81a","modified":1615025925500},{"_id":"public/archives/201710264a17b156/index.html","hash":"f722c91f1c0515fcfa7e949a2a411d1585f710b7","modified":1615025925500},{"_id":"public/archives/index.html","hash":"65fb74b1e7e8090c4c43a85419f6228cb764afdc","modified":1615025925500},{"_id":"public/archives/page/2/index.html","hash":"d18c28ae339e290bdb0d0b2ceac4d971f6af7f55","modified":1615025925500},{"_id":"public/archives/page/3/index.html","hash":"169a28cad762d05a4f835b219559236c38466538","modified":1615025925500},{"_id":"public/archives/page/4/index.html","hash":"deaae0582fbe082617eef71b63f1ffb3d0dc3a98","modified":1615025925500},{"_id":"public/archives/page/5/index.html","hash":"5158306c0b76ad8f25c17ad59eaada40f26c1d88","modified":1615025925500},{"_id":"public/archives/2017/index.html","hash":"1757b9252e9549741ff69b12b457b7183793551f","modified":1615025925500},{"_id":"public/archives/2017/10/index.html","hash":"f794f45e26fbc2a2595cef3528f434c329f99271","modified":1615025925500},{"_id":"public/archives/2017/11/index.html","hash":"fef94d7af12a241ec3af5fd76e4e035059c5ab7b","modified":1615025925500},{"_id":"public/archives/2020/index.html","hash":"3bf56bd827d8a457bac7a4b80bc04a945721b002","modified":1615025925500},{"_id":"public/archives/2020/page/2/index.html","hash":"ea42e6a1684f9c94e23a95f61aedbfafbfe2f811","modified":1615025925500},{"_id":"public/archives/2020/page/3/index.html","hash":"b137a16fd22378b31154d77b1b441373b66d502f","modified":1615025925500},{"_id":"public/archives/2020/05/index.html","hash":"92ff60b9fdeb4192aff372e361b7da2b3d716176","modified":1615025925500},{"_id":"public/archives/2020/06/index.html","hash":"32bbae3cdcc16a8911f309c9a23939fcf763ed20","modified":1615025925500},{"_id":"public/archives/2020/07/index.html","hash":"d9faa30d1bcc9d95dd663124566585c9d51d2980","modified":1615025925500},{"_id":"public/archives/2020/07/page/2/index.html","hash":"8e8d396523301533ebb2b33e59171666b7a6529b","modified":1615025925500},{"_id":"public/archives/2020/08/index.html","hash":"2c0fdb1e4623faf563655834bfb577f216e92368","modified":1615025925500},{"_id":"public/archives/2020/09/index.html","hash":"44334c83489aebe921103b775186500aa0a58ec0","modified":1615025925500},{"_id":"public/archives/2020/10/index.html","hash":"a268e89b75256f693137ceff9b2061c9b3687fff","modified":1615025925500},{"_id":"public/archives/2020/11/index.html","hash":"1086cb0a21663bedcea6688fc885b96439ddb730","modified":1615025925500},{"_id":"public/archives/2021/index.html","hash":"7d0e7af53207e868542771077bd73e213df1fd41","modified":1615025925500},{"_id":"public/archives/2021/01/index.html","hash":"b27ce6a6c992a42c37098938a96c03ce65a2b3cd","modified":1615025925500},{"_id":"public/archives/2021/02/index.html","hash":"3b1cfbd6678337fd06c0c5311281a44bd31d36ef","modified":1615025925500},{"_id":"public/archives/2021/03/index.html","hash":"efb214b96683dc9f6e0dd8de81b89a66c3b3314f","modified":1615025925500},{"_id":"public/categories/技术积累/index.html","hash":"6aedafa602501f4b9017a003512c92ee7974b5ea","modified":1615025925500},{"_id":"public/categories/技术积累/page/2/index.html","hash":"6f5f33bf3b8e9d1d916e6e3e90ca4354d8c749ac","modified":1615025925500},{"_id":"public/categories/技术积累/page/3/index.html","hash":"5c307cbe98d23a21590fed8d2c5ffe6cc0818906","modified":1615025925500},{"_id":"public/categories/随笔/index.html","hash":"0f5087fea5c8a1b76108c53ed335d48e8f95ca7f","modified":1615025925500},{"_id":"public/categories/游记/index.html","hash":"32bdbf31836ba4026bc122705fe73a0509524f06","modified":1615025925500},{"_id":"public/categories/游记/page/2/index.html","hash":"4f6e04caedbf11d546e56e57a6b4eb401decd223","modified":1615025925500},{"_id":"public/categories/技术积累/flutter/index.html","hash":"d1c971b2a2e2ecb76d15d8806401865ecee91717","modified":1615025925500},{"_id":"public/categories/技术积累/前端/index.html","hash":"2707376617aad123d1dd9cea5bd2b5b4092e6058","modified":1615025925500},{"_id":"public/categories/技术积累/前端/page/2/index.html","hash":"2cd0a85b2c4ed895c21f90e81d605e200a54541e","modified":1615025925500},{"_id":"public/categories/技术积累/Mac/index.html","hash":"e4901fc99fa44bd810e91008d6da659853fb6afd","modified":1615025925500},{"_id":"public/categories/技术积累/hexo/index.html","hash":"64967d9bac71cd6040d044cf0235532a041e4a68","modified":1615025925500},{"_id":"public/categories/技术积累/LeetCode/index.html","hash":"278f91e323cec9a3a2852ea955345ab8f5646c6d","modified":1615025925500},{"_id":"public/categories/技术积累/前端/html/index.html","hash":"cdb5ab98b3e21140fd81690fb773a2c6eb6afec8","modified":1615025925500},{"_id":"public/categories/技术积累/前端/UI-Grid/index.html","hash":"39f0f51945af9c33de73caf6291cfcd4072788c6","modified":1615025925500},{"_id":"public/categories/技术积累/hexo/yilia/index.html","hash":"05f5d178bf4d54943e0dfdfacd46e033e1e2f025","modified":1615025925500},{"_id":"public/categories/技术积累/前端/微服务/index.html","hash":"db8396da35c830044d8611f2b33d3c32275f2e35","modified":1615025925500},{"_id":"public/categories/技术积累/前端/js/index.html","hash":"f0367619f329451a5df83e8fa2185b91d5d9314d","modified":1615025925500},{"_id":"public/categories/技术积累/前端/面试题/index.html","hash":"913cf99541707bbaba54211394b6a556c679be0f","modified":1615025925500},{"_id":"public/categories/技术积累/前端/算法/index.html","hash":"2899fd7a6d0fd0cd2337e8be0252fb4f30108c72","modified":1615025925500},{"_id":"public/categories/技术积累/dart/index.html","hash":"542a0837b6389f7af14eed3e040b135582df55e5","modified":1615025925500},{"_id":"public/categories/技术积累/dart/flutter/index.html","hash":"72fca04de772d2af401849e4e011d7d987b40020","modified":1615025925500},{"_id":"public/index.html","hash":"f22ee6f3bb253c06e4900e9ef9b4522a809ea254","modified":1615025925500},{"_id":"public/page/2/index.html","hash":"984abb5fca3ebb5b07c90c3a766b6ba0050fc3c0","modified":1615025925500},{"_id":"public/page/3/index.html","hash":"e61d2f66fe8cac2d598208fe35ecc2b264a41988","modified":1615025925500},{"_id":"public/page/4/index.html","hash":"16c1907690044de33bb7b6303d27d6012e7cc642","modified":1615025925500},{"_id":"public/page/5/index.html","hash":"4ed67bdd5ce64de00181af684dfb7805ed9ad12c","modified":1615025925500},{"_id":"public/tags/技术积累/index.html","hash":"8686fb573b1704f600043a23b1f6f474be244c5f","modified":1615025925500},{"_id":"public/tags/技术积累/page/2/index.html","hash":"eda327f23edd238436afeee10ac8b6c602f374bb","modified":1615025925500},{"_id":"public/tags/技术积累/page/3/index.html","hash":"a481165fed9730aa546a9916caaee1877d675bff","modified":1615025925500},{"_id":"public/tags/flutter/index.html","hash":"230d7916412b94367e06bfe1a91185a66f6f7535","modified":1615025925500},{"_id":"public/tags/前端/index.html","hash":"66185e16da1d33b2b33cc6fe7a263fd285fe0917","modified":1615025925500},{"_id":"public/tags/前端/page/2/index.html","hash":"31a50b3ed0717ffb823146e851553ba2f9d58dca","modified":1615025925500},{"_id":"public/tags/html/index.html","hash":"a82801d43d93e932b53922e0149648e4063913fd","modified":1615025925500},{"_id":"public/tags/Mac/index.html","hash":"8353f57f4af1281e7eceb0f2f8d0b507a075d84d","modified":1615025925500},{"_id":"public/tags/UI-Grid/index.html","hash":"7a0b74442a10d1feffaec6964d403038a4be0f29","modified":1615025925500},{"_id":"public/tags/hexo/index.html","hash":"2e12a99dc825b8f4f8fb1b8861f32fd35c5b5549","modified":1615025925500},{"_id":"public/tags/yilia/index.html","hash":"15fffb452db26c063761a1e57f1fd99c1a2569fd","modified":1615025925500},{"_id":"public/tags/随笔/index.html","hash":"b8788e903db36defea795d82e48dccd4b361c4ef","modified":1615025925500},{"_id":"public/tags/微服务/index.html","hash":"42368085de2f00a26925940a613d64da79907447","modified":1615025925500},{"_id":"public/tags/js/index.html","hash":"0269fa7b757d5e60fe9866a90c8e1914504d2175","modified":1615025925500},{"_id":"public/tags/游记/index.html","hash":"edcf7be497c749a8e71cac63ffcfbf45d49564d2","modified":1615025925500},{"_id":"public/tags/游记/page/2/index.html","hash":"eb57a2e141c3eb12c2ca780934b9794a346aad39","modified":1615025925500},{"_id":"public/tags/东郊湿地公园/index.html","hash":"d5d97ae7741099d7132c2e608979085b5f7dbcba","modified":1615025925500},{"_id":"public/tags/LeetCode/index.html","hash":"be5a3c8fcf5f884fc2326f3c45eb155d28a6896d","modified":1615025925500},{"_id":"public/tags/两数之和/index.html","hash":"49885b9caed7117db2188c2f893cd7aad9c5f346","modified":1615025925500},{"_id":"public/tags/简单/index.html","hash":"4d0e6d4257f59019b090107d1856c544a05a5be8","modified":1615025925500},{"_id":"public/tags/每日一练/index.html","hash":"eeb3ca832fbe70f0387a00a3f0a68ada7f98afe0","modified":1615025925500},{"_id":"public/tags/两数相加/index.html","hash":"77f09108a3dc1ef74173c0b0d091c5d7cc1705ee","modified":1615025925500},{"_id":"public/tags/中等/index.html","hash":"e940e8cc9d1110636bf5dab416bd3a7982ec8052","modified":1615025925500},{"_id":"public/tags/故宫/index.html","hash":"1f24f5043c505a4679052e14364edce8a50be7bb","modified":1615025925500},{"_id":"public/tags/西山国家森林公园/index.html","hash":"de18a5cb39f4bae5054916c0a10d3b75c1df2337","modified":1615025925500},{"_id":"public/tags/鬼笑石/index.html","hash":"165eff6d2261924fd599f3954712dedbb73da4b5","modified":1615025925500},{"_id":"public/tags/太阳宫公园/index.html","hash":"71e666c9f478e65b8b9342be5d4d4a2aaea40155","modified":1615025925500},{"_id":"public/tags/随手拍/index.html","hash":"e1a926a350eef6cd3094627e0189ff12c2815eb1","modified":1615025925500},{"_id":"public/tags/北京画院美术馆/index.html","hash":"e639a30b3f94d3f6a4a6e5f59bbc36dd6210eb28","modified":1615025925500},{"_id":"public/tags/黄永玉版画艺术展/index.html","hash":"0a7b0791aae25236c4e6356fe706e80110db9edb","modified":1615025925500},{"_id":"public/tags/面试题/index.html","hash":"b8c8cfafdcc730159c67c43857580334031d2433","modified":1615025925500},{"_id":"public/tags/坡峰岭/index.html","hash":"063dca140ec31a0961ca468b7d8cf3b11041b7d0","modified":1615025925500},{"_id":"public/tags/天坛/index.html","hash":"97f183ee8eb98d6d96917723692a807019ae9b24","modified":1615025925500},{"_id":"public/tags/奥林匹克森林公园/index.html","hash":"9077dfc10298154f3f35ee04a2ef261418c243fe","modified":1615025925500},{"_id":"public/tags/天津/index.html","hash":"4daf240333dd5eebc51f9659cc57d99b9076d5da","modified":1615025925500},{"_id":"public/tags/无重复字符的最长子串/index.html","hash":"2eb926520e6e2a30e48a39dba87e7072b17ab240","modified":1615025925500},{"_id":"public/tags/算法/index.html","hash":"80b1fd4a7440538cc3cabf4cd684a7f471a93eda","modified":1615025925500},{"_id":"public/tags/最长回文子串/index.html","hash":"f9854f2247ce503ea38d9af91b6bca45a8fd7a45","modified":1615025925500},{"_id":"public/tags/十渡/index.html","hash":"fa97dee258c8076c36388479b88a72a0fef832f1","modified":1615025925500},{"_id":"public/tags/读书会/index.html","hash":"d7a2ad8dff408f0884c4d18f906e96573b410d4b","modified":1615025925500},{"_id":"public/tags/蟒山森林公园/index.html","hash":"627c09e2455473a817080c2a26fe398af56158b5","modified":1615025925500},{"_id":"public/tags/南锣鼓巷/index.html","hash":"66578206a14b5742432811eb6c57a957604f69c9","modified":1615025925500},{"_id":"public/tags/阳台山/index.html","hash":"410d8fa510a72571cdd62ca2e3b825a043e116fa","modified":1615025925500},{"_id":"public/tags/dart/index.html","hash":"997934c21915d5a1d80f61d57d9462a64749fa93","modified":1615025925500},{"_id":"public/CNAME","hash":"4d2230a131a51f06d626d3fbdabf1213abac40aa","modified":1615025925500},{"_id":"public/favicon.ico","hash":"e59fd3ba6e87523fcdebf14d1d072e1ca86f34fc","modified":1615025925500},{"_id":"public/assets/img/CNAME.png","hash":"75fe6fd20175ba0657d6cf9f9f4550d07f569e12","modified":1615025925500},{"_id":"public/assets/img/empty.png","hash":"e88177c88f6b7219a3474da7d210965a6dbb57d7","modified":1615025925500},{"_id":"public/assets/img/timg.jpeg","hash":"603af1769825a1411a71842ff054ef4a15ee7468","modified":1615025925500},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1615025925500},{"_id":"public/fonts/iconfont.320acc.woff","hash":"1863e0139ed8363a3742d0d57f738598f0d2eabc","modified":1615025925500},{"_id":"public/fonts/iconfont.c1a725.ttf","hash":"996b1b37f433c1634179dfcb710b1309953f8d2d","modified":1615025925500},{"_id":"public/fonts/iconfont.707071.svg","hash":"9aa37d7d4789a5cf3975745b87c2245ba0080a61","modified":1615025925500},{"_id":"public/fonts/iconfont.eb83e5.eot","hash":"a0b485e2320a0e2556295c8d269abafab54969c1","modified":1615025925500},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1615025925500},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1615025925500},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1615025925500},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1615025925500},{"_id":"public/img/timg.jpeg","hash":"603af1769825a1411a71842ff054ef4a15ee7468","modified":1615025925500},{"_id":"public/lib/gitalk/md5.js","hash":"7bea78bd6d137861718c96d7db4108762c759a0b","modified":1615025925500},{"_id":"public/lib/gitalk/gitalk.css","hash":"42d3d627102a2602e8ede426900fbcb33a8c221b","modified":1615025925500},{"_id":"public/lib/gitment/gitment.css","hash":"1f9f5afa7f5b6cb77a71a6f682f3fbe1423a8843","modified":1615025925500},{"_id":"public/main.e4b334.css","hash":"bfb090e9044a798fcada5722c92f2e6d7a1da524","modified":1615025925500},{"_id":"public/slider.ae5635.js","hash":"f5606e0a05bd929bcb549a929fc97f7d3a9f47cb","modified":1615025925500},{"_id":"public/lib/gitalk/gitalk.min.js","hash":"c805527edc3e259d7b2278ceb446fa69d1af7476","modified":1615025925500},{"_id":"public/main.e4b334.js","hash":"aa13c8f5bc52c6f2eb0b268e5bc7fd4ee9ebf798","modified":1615025925500},{"_id":"public/mobile.538dbd.js","hash":"32f73ed08676612638362bff6acccee6105b538d","modified":1615025925500},{"_id":"public/lib/valine/jquery.min.js","hash":"9173e7cb0ee18efdc74059f8e3bce6759025b8ab","modified":1615025925500},{"_id":"public/lib/valine/av-min.js","hash":"6d7100ab357ac92291901dbbf0d4c683d05a7672","modified":1615025925500},{"_id":"public/lib/valine/Valine.min.js","hash":"dfd150d43762e6e432395a6347b4e627065160fd","modified":1615025925500},{"_id":"public/lib/gitment/gitment.js","hash":"83e7553c0eacb84a06144fb95649c68210109075","modified":1615025925500}],"Category":[{"name":"技术积累","_id":"cklxkqjz4001a2an94wewavnp"},{"name":"随笔","_id":"cklxkqjzh001p2an90gdq338n"},{"name":"游记","_id":"cklxkqjzl00212an953jn5ynb"},{"name":"flutter","parent":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk0z005f2an90nkw1prx"},{"name":"前端","parent":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk10005m2an9a8r6282r"},{"name":"Mac","parent":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk11005r2an99ju09opz"},{"name":"hexo","parent":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk1200612an9hdfhg1s4"},{"name":"LeetCode","parent":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk15006w2an9dwmodd1c"},{"name":"html","parent":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk1v009r2an91s486jm5"},{"name":"UI-Grid","parent":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk1v009v2an92ust2ivu"},{"name":"yilia","parent":"cklxkqk1200612an9hdfhg1s4","_id":"cklxkqk1w009y2an9f6r21ggh"},{"name":"微服务","parent":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk2000aa2an979ovho2c"},{"name":"js","parent":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk2100ad2an9eo6k9ojx"},{"name":"面试题","parent":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk2300aj2an95p9j5940"},{"name":"算法","parent":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk2300ak2an97b6hg835"},{"name":"dart","parent":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2a00ap2an962ps0hd5"},{"name":"flutter","parent":"cklxkqk2a00ap2an962ps0hd5","_id":"cklxkqk2f00c62an9068deic5"}],"Data":[{"_id":"_yilia","data":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}],"Page":[{"_content":"","source":"photos/lazyload.min.js","raw":"","date":"2020-07-19T07:08:09.729Z","updated":"2017-07-28T03:51:08.000Z","path":"photos/lazyload.min.js","layout":"false","title":"","comments":1,"_id":"cklxkqjxj00002an96fz7go9t","content":"","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"","more":""},{"layout":"post","slug":"photos","title":"相册","noDate":"true","comments":0,"abbrlink":"e26d1860","_content":"\n<link rel=\"stylesheet\" href=\"./ins.css\">\n<div class=\"photos-btn-wrap\">\n  <span class=\"photos-btn active\">摄影</span>\n  <span class=\"photos-btn\" target=\"_blank\">待续</span>\n</div>\n<div class=\"instagram itemscope\">\n  <a href=\"https://imgchr.com/album/aPOWn\" target=\"_blank\" class=\"open-ins\">图片正在加载中…</a>\n</div>\n<script>\n  (function () {\n    var loadScript = function (path) {\n      var $script = document.createElement('script')\n      document.getElementsByTagName('body')[0].appendChild($script)\n      $script.setAttribute('src', path)\n    }\n    setTimeout(function () {\n      loadScript('./ins.js')\n    }, 0)\n  })()\n</script>","source":"photos/index.ejs","raw":"---\nlayout: post\nslug: photos\ntitle: 相册\nnoDate: 'true'\ncomments: 'false'\nabbrlink: e26d1860\n---\n\n<link rel=\"stylesheet\" href=\"./ins.css\">\n<div class=\"photos-btn-wrap\">\n  <span class=\"photos-btn active\">摄影</span>\n  <span class=\"photos-btn\" target=\"_blank\">待续</span>\n</div>\n<div class=\"instagram itemscope\">\n  <a href=\"https://imgchr.com/album/aPOWn\" target=\"_blank\" class=\"open-ins\">图片正在加载中…</a>\n</div>\n<script>\n  (function () {\n    var loadScript = function (path) {\n      var $script = document.createElement('script')\n      document.getElementsByTagName('body')[0].appendChild($script)\n      $script.setAttribute('src', path)\n    }\n    setTimeout(function () {\n      loadScript('./ins.js')\n    }, 0)\n  })()\n</script>","date":"2020-08-12T01:57:58.417Z","updated":"2020-08-12T01:57:58.417Z","path":"photos/index.html","_id":"cklxkqjy200012an91jhsba01","content":"\n<link rel=\"stylesheet\" href=\"./ins.css\">\n<div class=\"photos-btn-wrap\">\n  <span class=\"photos-btn active\">摄影</span>\n  <span class=\"photos-btn\" target=\"_blank\">待续</span>\n</div>\n<div class=\"instagram itemscope\">\n  <a href=\"https://imgchr.com/album/aPOWn\" target=\"_blank\" class=\"open-ins\">图片正在加载中…</a>\n</div>\n<script>\n  (function () {\n    var loadScript = function (path) {\n      var $script = document.createElement('script')\n      document.getElementsByTagName('body')[0].appendChild($script)\n      $script.setAttribute('src', path)\n    }\n    setTimeout(function () {\n      loadScript('./ins.js')\n    }, 0)\n  })()\n</script>","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"","more":"\n<link rel=\"stylesheet\" href=\"./ins.css\">\n<div class=\"photos-btn-wrap\">\n  <span class=\"photos-btn active\">摄影</span>\n  <span class=\"photos-btn\" target=\"_blank\">待续</span>\n</div>\n<div class=\"instagram itemscope\">\n  <a href=\"https://imgchr.com/album/aPOWn\" target=\"_blank\" class=\"open-ins\">图片正在加载中…</a>\n</div>\n<script>\n  (function () {\n    var loadScript = function (path) {\n      var $script = document.createElement('script')\n      document.getElementsByTagName('body')[0].appendChild($script)\n      $script.setAttribute('src', path)\n    }\n    setTimeout(function () {\n      loadScript('./ins.js')\n    }, 0)\n  })()\n</script>"},{"_content":"#post-instagram {\n    padding: 30px;\n}\n\n#post-instagram .article-entry {\n    padding-right: 0;\n}\n\n.instagram {\n    position: relative;\n    min-height: 500px;\n}\n\n.instagram img {\n    width: 100%;\n}\n\n.instagram .year {\n    font-size: 16px;\n}\n\n.instagram .open-ins {\n    padding: 10px 0;\n    color: #cdcdcd;\n}\n\n.instagram .open-ins:hover {\n    color: #657b83;\n}\n\n.instagram .year {\n    display: inline;\n}\n\n.instagram .thumb {\n    width: 25%;\n    height: 0;\n    padding-bottom: 25%;\n    position: relative;\n    display: inline-block;\n    text-align: center;\n    background: #ededed;\n}\n\n.instagram .thumb a {\n    position: relative;\n}\n\n.instagram .album h1 em {\n    font-style: normal;\n    font-size: 14px;\n    margin-left: 10px;\n}\n\n.instagram .album ul {\n    display: flex;\n    flex-wrap: wrap;\n    clear: both;\n    width: 100%;\n    text-align: left;\n}\n\n.instagram .album li {\n    list-style: none;\n    display: inline-block;\n    box-sizing: border-box;\n    padding: 0 5px;\n    margin-bottom: -10px;\n    height: 0;\n    width: 25%;\n    position: relative;\n    padding-bottom: 25%;\n}\n\n.instagram .album li:before {\n    display: none;\n}\n\n.instagram .album div.img-box {\n    position: absolute;\n    width: 90%;\n    height: 90%;\n    -webkit-box-shadow: 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 0 1px rgba(255, 255, 255, 0.1);\n    -moz-box-shadow: 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 0 1px rgba(255, 255, 255, 0.1);\n    box-shadow: 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 0 1px rgba(255, 255, 255, 0.1);\n}\n\n.instagram .album div.img-box img {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 2;\n}\n\n.instagram .album div.img-box .img-bg {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0px;\n    width: 100%;\n    margin: -5px;\n    padding: 5px;\n    -webkit-box-shadow: 0 0 0 1px rgba(0, 0, 0, .04), 0 1px 5px rgba(0, 0, 0, 0.1);\n    -moz-box-shadow: 0 0 0 1px rgba(0, 0, 0, .04), 0 1px 5px rgba(0, 0, 0, 0.1);\n    box-shadow: 0 0 0 1px rgba(0, 0, 0, .04), 0 1px 5px rgba(0, 0, 0, 0.1);\n    -webkit-transition: all 0.15s ease-out 0.1s;\n    -moz-transition: all 0.15s ease-out 0.1s;\n    -o-transition: all 0.15s ease-out 0.1s;\n    transition: all 0.15s ease-out 0.1s;\n    opacity: 0.2;\n    cursor: pointer;\n    display: block;\n    z-index: 3;\n}\n\n.instagram .album div.img-box .icon {\n    font-size: 14px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -7px;\n    margin-top: -7px;\n    color: #999;\n    z-index: 1;\n}\n\n.instagram .album div.img-box .img-bg:hover {\n    opacity: 0;\n}\n\n.photos-btn-wrap {\n    cursor: pointer;\n    border-bottom: 1px solid #e5e5e5;\n    margin-bottom: 20px;\n}\n\n.photos-btn {\n    font-size: 16px;\n    color: #333;\n    margin-bottom: -4px;\n    padding: 5px 8px 3px;\n}\n\n.photos-btn.active {\n    color: #08c;\n    border: 1px solid #e5e5e5;\n    border-bottom: 5px solid #fff;\n}\n\n@media screen and (max-width:600px) {\n    .instagram .thumb {\n        width: 50%;\n        padding-bottom: 50%;\n    }\n\n    .instagram .album li {\n        width: 100%;\n        position: relative;\n        padding-bottom: 100%;\n        text-align: center;\n    }\n\n    .instagram .album div.img-box {\n        margin: 0;\n        width: 90%;\n        height: 90%;\n    }\n}","source":"photos/ins.css","raw":"#post-instagram {\n    padding: 30px;\n}\n\n#post-instagram .article-entry {\n    padding-right: 0;\n}\n\n.instagram {\n    position: relative;\n    min-height: 500px;\n}\n\n.instagram img {\n    width: 100%;\n}\n\n.instagram .year {\n    font-size: 16px;\n}\n\n.instagram .open-ins {\n    padding: 10px 0;\n    color: #cdcdcd;\n}\n\n.instagram .open-ins:hover {\n    color: #657b83;\n}\n\n.instagram .year {\n    display: inline;\n}\n\n.instagram .thumb {\n    width: 25%;\n    height: 0;\n    padding-bottom: 25%;\n    position: relative;\n    display: inline-block;\n    text-align: center;\n    background: #ededed;\n}\n\n.instagram .thumb a {\n    position: relative;\n}\n\n.instagram .album h1 em {\n    font-style: normal;\n    font-size: 14px;\n    margin-left: 10px;\n}\n\n.instagram .album ul {\n    display: flex;\n    flex-wrap: wrap;\n    clear: both;\n    width: 100%;\n    text-align: left;\n}\n\n.instagram .album li {\n    list-style: none;\n    display: inline-block;\n    box-sizing: border-box;\n    padding: 0 5px;\n    margin-bottom: -10px;\n    height: 0;\n    width: 25%;\n    position: relative;\n    padding-bottom: 25%;\n}\n\n.instagram .album li:before {\n    display: none;\n}\n\n.instagram .album div.img-box {\n    position: absolute;\n    width: 90%;\n    height: 90%;\n    -webkit-box-shadow: 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 0 1px rgba(255, 255, 255, 0.1);\n    -moz-box-shadow: 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 0 1px rgba(255, 255, 255, 0.1);\n    box-shadow: 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 0 1px rgba(255, 255, 255, 0.1);\n}\n\n.instagram .album div.img-box img {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 2;\n}\n\n.instagram .album div.img-box .img-bg {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0px;\n    width: 100%;\n    margin: -5px;\n    padding: 5px;\n    -webkit-box-shadow: 0 0 0 1px rgba(0, 0, 0, .04), 0 1px 5px rgba(0, 0, 0, 0.1);\n    -moz-box-shadow: 0 0 0 1px rgba(0, 0, 0, .04), 0 1px 5px rgba(0, 0, 0, 0.1);\n    box-shadow: 0 0 0 1px rgba(0, 0, 0, .04), 0 1px 5px rgba(0, 0, 0, 0.1);\n    -webkit-transition: all 0.15s ease-out 0.1s;\n    -moz-transition: all 0.15s ease-out 0.1s;\n    -o-transition: all 0.15s ease-out 0.1s;\n    transition: all 0.15s ease-out 0.1s;\n    opacity: 0.2;\n    cursor: pointer;\n    display: block;\n    z-index: 3;\n}\n\n.instagram .album div.img-box .icon {\n    font-size: 14px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -7px;\n    margin-top: -7px;\n    color: #999;\n    z-index: 1;\n}\n\n.instagram .album div.img-box .img-bg:hover {\n    opacity: 0;\n}\n\n.photos-btn-wrap {\n    cursor: pointer;\n    border-bottom: 1px solid #e5e5e5;\n    margin-bottom: 20px;\n}\n\n.photos-btn {\n    font-size: 16px;\n    color: #333;\n    margin-bottom: -4px;\n    padding: 5px 8px 3px;\n}\n\n.photos-btn.active {\n    color: #08c;\n    border: 1px solid #e5e5e5;\n    border-bottom: 5px solid #fff;\n}\n\n@media screen and (max-width:600px) {\n    .instagram .thumb {\n        width: 50%;\n        padding-bottom: 50%;\n    }\n\n    .instagram .album li {\n        width: 100%;\n        position: relative;\n        padding-bottom: 100%;\n        text-align: center;\n    }\n\n    .instagram .album div.img-box {\n        margin: 0;\n        width: 90%;\n        height: 90%;\n    }\n}","date":"2020-07-19T07:08:09.725Z","updated":"2020-07-18T00:06:50.811Z","path":"photos/ins.css","layout":"false","title":"","comments":1,"_id":"cklxkqjy600032an9bkhx6fgq","content":"#post-instagram {\n    padding: 30px;\n}\n\n#post-instagram .article-entry {\n    padding-right: 0;\n}\n\n.instagram {\n    position: relative;\n    min-height: 500px;\n}\n\n.instagram img {\n    width: 100%;\n}\n\n.instagram .year {\n    font-size: 16px;\n}\n\n.instagram .open-ins {\n    padding: 10px 0;\n    color: #cdcdcd;\n}\n\n.instagram .open-ins:hover {\n    color: #657b83;\n}\n\n.instagram .year {\n    display: inline;\n}\n\n.instagram .thumb {\n    width: 25%;\n    height: 0;\n    padding-bottom: 25%;\n    position: relative;\n    display: inline-block;\n    text-align: center;\n    background: #ededed;\n}\n\n.instagram .thumb a {\n    position: relative;\n}\n\n.instagram .album h1 em {\n    font-style: normal;\n    font-size: 14px;\n    margin-left: 10px;\n}\n\n.instagram .album ul {\n    display: flex;\n    flex-wrap: wrap;\n    clear: both;\n    width: 100%;\n    text-align: left;\n}\n\n.instagram .album li {\n    list-style: none;\n    display: inline-block;\n    box-sizing: border-box;\n    padding: 0 5px;\n    margin-bottom: -10px;\n    height: 0;\n    width: 25%;\n    position: relative;\n    padding-bottom: 25%;\n}\n\n.instagram .album li:before {\n    display: none;\n}\n\n.instagram .album div.img-box {\n    position: absolute;\n    width: 90%;\n    height: 90%;\n    -webkit-box-shadow: 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 0 1px rgba(255, 255, 255, 0.1);\n    -moz-box-shadow: 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 0 1px rgba(255, 255, 255, 0.1);\n    box-shadow: 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 0 1px rgba(255, 255, 255, 0.1);\n}\n\n.instagram .album div.img-box img {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 2;\n}\n\n.instagram .album div.img-box .img-bg {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0px;\n    width: 100%;\n    margin: -5px;\n    padding: 5px;\n    -webkit-box-shadow: 0 0 0 1px rgba(0, 0, 0, .04), 0 1px 5px rgba(0, 0, 0, 0.1);\n    -moz-box-shadow: 0 0 0 1px rgba(0, 0, 0, .04), 0 1px 5px rgba(0, 0, 0, 0.1);\n    box-shadow: 0 0 0 1px rgba(0, 0, 0, .04), 0 1px 5px rgba(0, 0, 0, 0.1);\n    -webkit-transition: all 0.15s ease-out 0.1s;\n    -moz-transition: all 0.15s ease-out 0.1s;\n    -o-transition: all 0.15s ease-out 0.1s;\n    transition: all 0.15s ease-out 0.1s;\n    opacity: 0.2;\n    cursor: pointer;\n    display: block;\n    z-index: 3;\n}\n\n.instagram .album div.img-box .icon {\n    font-size: 14px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -7px;\n    margin-top: -7px;\n    color: #999;\n    z-index: 1;\n}\n\n.instagram .album div.img-box .img-bg:hover {\n    opacity: 0;\n}\n\n.photos-btn-wrap {\n    cursor: pointer;\n    border-bottom: 1px solid #e5e5e5;\n    margin-bottom: 20px;\n}\n\n.photos-btn {\n    font-size: 16px;\n    color: #333;\n    margin-bottom: -4px;\n    padding: 5px 8px 3px;\n}\n\n.photos-btn.active {\n    color: #08c;\n    border: 1px solid #e5e5e5;\n    border-bottom: 5px solid #fff;\n}\n\n@media screen and (max-width:600px) {\n    .instagram .thumb {\n        width: 50%;\n        padding-bottom: 50%;\n    }\n\n    .instagram .album li {\n        width: 100%;\n        position: relative;\n        padding-bottom: 100%;\n        text-align: center;\n    }\n\n    .instagram .album div.img-box {\n        margin: 0;\n        width: 90%;\n        height: 90%;\n    }\n}","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"","more":"#post-instagram {\n    padding: 30px;\n}\n\n#post-instagram .article-entry {\n    padding-right: 0;\n}\n\n.instagram {\n    position: relative;\n    min-height: 500px;\n}\n\n.instagram img {\n    width: 100%;\n}\n\n.instagram .year {\n    font-size: 16px;\n}\n\n.instagram .open-ins {\n    padding: 10px 0;\n    color: #cdcdcd;\n}\n\n.instagram .open-ins:hover {\n    color: #657b83;\n}\n\n.instagram .year {\n    display: inline;\n}\n\n.instagram .thumb {\n    width: 25%;\n    height: 0;\n    padding-bottom: 25%;\n    position: relative;\n    display: inline-block;\n    text-align: center;\n    background: #ededed;\n}\n\n.instagram .thumb a {\n    position: relative;\n}\n\n.instagram .album h1 em {\n    font-style: normal;\n    font-size: 14px;\n    margin-left: 10px;\n}\n\n.instagram .album ul {\n    display: flex;\n    flex-wrap: wrap;\n    clear: both;\n    width: 100%;\n    text-align: left;\n}\n\n.instagram .album li {\n    list-style: none;\n    display: inline-block;\n    box-sizing: border-box;\n    padding: 0 5px;\n    margin-bottom: -10px;\n    height: 0;\n    width: 25%;\n    position: relative;\n    padding-bottom: 25%;\n}\n\n.instagram .album li:before {\n    display: none;\n}\n\n.instagram .album div.img-box {\n    position: absolute;\n    width: 90%;\n    height: 90%;\n    -webkit-box-shadow: 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 0 1px rgba(255, 255, 255, 0.1);\n    -moz-box-shadow: 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 0 1px rgba(255, 255, 255, 0.1);\n    box-shadow: 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 0 1px rgba(255, 255, 255, 0.1);\n}\n\n.instagram .album div.img-box img {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 2;\n}\n\n.instagram .album div.img-box .img-bg {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0px;\n    width: 100%;\n    margin: -5px;\n    padding: 5px;\n    -webkit-box-shadow: 0 0 0 1px rgba(0, 0, 0, .04), 0 1px 5px rgba(0, 0, 0, 0.1);\n    -moz-box-shadow: 0 0 0 1px rgba(0, 0, 0, .04), 0 1px 5px rgba(0, 0, 0, 0.1);\n    box-shadow: 0 0 0 1px rgba(0, 0, 0, .04), 0 1px 5px rgba(0, 0, 0, 0.1);\n    -webkit-transition: all 0.15s ease-out 0.1s;\n    -moz-transition: all 0.15s ease-out 0.1s;\n    -o-transition: all 0.15s ease-out 0.1s;\n    transition: all 0.15s ease-out 0.1s;\n    opacity: 0.2;\n    cursor: pointer;\n    display: block;\n    z-index: 3;\n}\n\n.instagram .album div.img-box .icon {\n    font-size: 14px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -7px;\n    margin-top: -7px;\n    color: #999;\n    z-index: 1;\n}\n\n.instagram .album div.img-box .img-bg:hover {\n    opacity: 0;\n}\n\n.photos-btn-wrap {\n    cursor: pointer;\n    border-bottom: 1px solid #e5e5e5;\n    margin-bottom: 20px;\n}\n\n.photos-btn {\n    font-size: 16px;\n    color: #333;\n    margin-bottom: -4px;\n    padding: 5px 8px 3px;\n}\n\n.photos-btn.active {\n    color: #08c;\n    border: 1px solid #e5e5e5;\n    border-bottom: 5px solid #fff;\n}\n\n@media screen and (max-width:600px) {\n    .instagram .thumb {\n        width: 50%;\n        padding-bottom: 50%;\n    }\n\n    .instagram .album li {\n        width: 100%;\n        position: relative;\n        padding-bottom: 100%;\n        text-align: center;\n    }\n\n    .instagram .album div.img-box {\n        margin: 0;\n        width: 90%;\n        height: 90%;\n    }\n}"},{"title":"文章分类","type":"categories","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ntype: \"categories\"\nlayout: \"categories\"\ncomments: false\n---","date":"2020-08-02T02:38:16.350Z","updated":"2020-08-02T02:38:16.350Z","path":"categories/index.html","_id":"cklxkqjy700052an9dm1k5npn","content":"","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"","more":""},{"_content":"{\n    \"hostList\": [\n        \"https://s1.ax1x.com/\",\n        \"https://s3.ax1x.com/\"\n    ],\n    \"list\": [\n        {\n            \"date\": \"2020-11\",\n            \"arr\": {\n                \"year\": 2020,\n                \"month\": 11,\n                \"src\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 1,\n                \"link\": [\n                    \"2021/01/13/sNBbLV\",\n                    \"2021/01/13/sND5TO\",\n                    \"2021/01/13/sNDokD\",\n                    \"2021/01/13/sNDTte\"\n                ],\n                \"size\": [\n                    \"1920x1075\",\n                    \"1080x1080\",\n                    \"1080x1080\",\n                    \"1440x1080\"\n                ],\n                \"text\": [\n                    \"祈年殿\",\n                    \"双环万寿亭\",\n                    \"回音壁\",\n                    \"我的初中\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        },\n        {\n            \"date\": \"2020-10\",\n            \"arr\": {\n                \"year\": 2020,\n                \"month\": 10,\n                \"src\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 1,\n                \"link\": [\n                    \"2021/01/13/sNPKDH\",\n                    \"2021/01/13/sNCzgU\",\n                    \"2021/01/13/sNPkU1\",\n                    \"2021/01/13/sNP9u4\",\n                    \"2021/01/13/sNPegO\",\n                    \"2021/01/13/sNPMbd\",\n                    \"2021/01/13/sNPZ8K\",\n                    \"2021/01/13/sNPPb9\",\n                    \"2021/01/13/sNPA4x\",\n                    \"2021/01/13/sNPCDJ\",\n                    \"2021/01/13/sNudUS\",\n                    \"2021/01/13/sNuw4g\",\n                    \"2021/01/13/sNPSvF\",\n                    \"2021/01/13/sNuNHf\",\n                    \"2021/01/13/sNuD3j\",\n                    \"2021/01/13/sNPFER\",\n                    \"2021/01/13/sNuaE8\",\n                    \"2021/01/13/sNPlVA\",\n                    \"2021/01/13/sNP1UI\",\n                    \"2021/01/13/sNPGPP\",\n                    \"2021/01/13/sNBGx1\",\n                    \"2021/01/13/sNDdO0\",\n                    \"2021/01/13/sNDDTU\",\n                    \"2021/01/13/sND0mV\",\n                    \"2021/01/13/sNDskF\",\n                    \"2021/01/13/sNDayq\",\n                    \"2021/01/13/sNDyY4\",\n                    \"2021/01/13/sND6fJ\",\n                    \"2021/01/13/sNDBwT\"\n                ],\n                \"size\": [\n                    \"1920x1080\",\n                    \"1620x1080\",\n                    \"1488x1080\",\n                    \"1920x1080\",\n                    \"1920x1080\",\n                    \"1620x1080\",\n                    \"1080x1440\",\n                    \"1080x1449\",\n                    \"1920x1080\",\n                    \"1440x1080\",\n                    \"1920x1123\",\n                    \"1920x1474\",\n                    \"1080x1920\",\n                    \"1169x1440\",\n                    \"1920x1440\",\n                    \"1935x1080\",\n                    \"1920x1386\",\n                    \"1472x1080\",\n                    \"1920x1080\",\n                    \"1080x1423\",\n                    \"1920x1075\",\n                    \"1080x1920\",\n                    \"1440x1080\",\n                    \"1080x1080\",\n                    \"1080x1080\",\n                    \"1440x1080\",\n                    \"1350x1080\",\n                    \"1080x1080\",\n                    \"1440x1080\"\n                ],\n                \"text\": [\n                    \"正殿\",\n                    \"大殿一角\",\n                    \"午门\",\n                    \"午门城楼\",\n                    \"正殿\",\n                    \"太和殿\",\n                    \"午门角楼\",\n                    \"门钉肉饼的门钉\",\n                    \"房檐\",\n                    \"东六宫\",\n                    \"叶知秋\",\n                    \"灵沼轩\",\n                    \"红墙\",\n                    \"透风\",\n                    \"龙、凤、狮子、天马、海马、狻猊、押鱼、獬豸、斗牛、行什\",\n                    \"夕阳余光\",\n                    \"长街一\",\n                    \"长街二\",\n                    \"长街三\",\n                    \"长街四\",\n                    \"峰坡岭全景\",\n                    \"你好拾月\",\n                    \"走没走过的路\",\n                    \"看没看过的风景\",\n                    \"小径通幽\",\n                    \"'云'湖\",\n                    \"叶落知秋\",\n                    \"红叶\",\n                    \"夕阳西沉\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        },\n        {\n            \"date\": \"2020-09\",\n            \"arr\": {\n                \"year\": 2020,\n                \"month\": 9,\n                \"src\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 1,\n                \"link\": [\n                    \"2021/01/13/stwS91\",\n                    \"2021/01/13/stdO74\",\n                    \"2021/01/13/stdLBF\",\n                    \"2021/01/13/stdjAJ\",\n                    \"2021/01/13/stdvN9\",\n                    \"2021/01/13/stw9c6\",\n                    \"2021/01/13/stwFBD\",\n                    \"2021/01/13/stwp1x\",\n                    \"2021/01/13/stwinO\",\n                    \"2021/01/13/stR6c4\",\n                    \"2021/01/13/stRcjJ\",\n                    \"2021/01/13/stRy3F\",\n                    \"2021/01/13/stRs9U\",\n                    \"2021/01/13/st4saR\",\n                    \"2021/01/13/st4odA\",\n                    \"2021/01/13/st4rZ9\",\n                    \"2021/01/13/st4cPx\",\n                    \"2021/01/13/st42RK\",\n                    \"2021/01/13/st4yI1\"\n                ],\n                \"size\": [\n                    \"1440x1080\",\n                    \"1080x1524\",\n                    \"1100x1080\",\n                    \"1452x1080\",\n                    \"1080x1214\",\n                    \"1178x1080\",\n                    \"1080x1350\",\n                    \"1440x1080\",\n                    \"1368x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"3594x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\"\n                ],\n                \"text\": [\n                    \"入木\",\n                    \"蔷薇 38×33cm 1990 黑白木刻\",\n                    \"古埃及人的歌 24×38.5cm 1961年 黑白木刻\",\n                    \"敬爱的周总理 32×54cm 1977年 黑白木刻\",\n                    \"翠峦的冰道 37.5×28cm 1954年 黑白木刻\",\n                    \"森林之路 27×40cm 1954年 黑白木刻\",\n                    \"颐和园 66×80.5cm 1964 黑白木刻\",\n                    \"春潮 40×55cm 1961 黑白木刻\",\n                    \"于翡冷翠 20×29cm 1991 黑白木刻\",\n                    \"远眺\",\n                    \"头文字D既视感\",\n                    \"街灯照亮城市的轮廓\",\n                    \"众星朗朗不如孤月独明\",\n                    \"蓝天白云青山绿水\",\n                    \"蟒山全景\",\n                    \"仰望最高点\",\n                    \"十三陵水库\",\n                    \"会当凌绝顶\",\n                    \"一览众山小\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        },\n        {\n            \"date\": \"2020-08\",\n            \"arr\": {\n                \"year\": 2020,\n                \"month\": 8,\n                \"src\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 0,\n                \"link\": [\n                    \"2020/08/02/aJtwpq\",\n                    \"2020/08/02/aJ8OyD\",\n                    \"2020/08/02/aJ8HW6\",\n                    \"2020/08/02/aJGTBQ\",\n                    \"2020/08/02/aJ8TF1\",\n                    \"2020/08/02/aJGbAs\",\n                    \"2020/08/02/aJ8XOe\",\n                    \"2020/08/02/aJ8veH\",\n                    \"2020/08/02/aJ8xwd\",\n                    \"2020/08/02/aJ8zTA\",\n                    \"2020/08/02/aJG9Yt\",\n                    \"2020/08/02/aJGCfP\",\n                    \"2020/08/02/aJGiSf\",\n                    \"2020/08/02/aJGFl8\",\n                    \"2020/08/02/aJGk6S\",\n                    \"2020/08/02/aJGVmQ\",\n                    \"2020/08/17/dZxwJe\",\n                    \"2020/08/17/dZxdiD\",\n                    \"2020/08/17/dZxBzd\",\n                    \"2020/08/17/dZx0RH\",\n                    \"2020/08/17/deFa28\",\n                    \"2020/08/17/deFU8f\",\n                    \"2020/08/17/dZxzl9\",\n                    \"2020/08/17/dZzCex\",\n                    \"2020/08/17/dZzpO1\",\n                    \"2020/08/24/dBvlYn\",\n                    \"2020/08/24/dBv1Wq\",\n                    \"2020/08/24/dBvQFs\",\n                    \"2020/08/24/dBvKoj\",\n                    \"2020/08/24/dBvuwQ\",\n                    \"2020/08/24/dBv8S0\",\n                    \"2020/08/24/dBvGlV\",\n                    \"2020/08/24/dBvYOU\",\n                    \"2020/08/24/dBvJyT\",\n                    \"2020/08/24/dBvNmF\",\n                    \"2020/08/24/dBvUw4\",\n                    \"2020/08/24/dBv0YR\",\n                    \"2020/08/24/dBvaTJ\",\n                    \"2020/08/24/dBvwk9\",\n                    \"2020/08/24/dBvBf1\",\n                    \"2020/08/24/dBvrSx\",\n                    \"2020/08/24/dBvsl6\",\n                    \"2020/08/24/dBv6OO\",\n                    \"2020/08/24/dBvy6K\"\n                ],\n                \"size\": [\n                    \"2048x1796\",\n                    \"2016x1512\",\n                    \"2048x1536\",\n                    \"2048x1536\",\n                    \"2048x1536\",\n                    \"2016x1512\",\n                    \"2048x1536\",\n                    \"2048x1536\",\n                    \"2048x1536\",\n                    \"2048x1536\",\n                    \"2048x1536\",\n                    \"3024x4032\",\n                    \"1574x2048\",\n                    \"2016x1512\",\n                    \"3024x4032\",\n                    \"3024x4032\",\n                    \"4032x2961\",\n                    \"4032x3024\",\n                    \"4032x3024\",\n                    \"3532x2053\",\n                    \"3024x4029\",\n                    \"3024x3024\",\n                    \"4032x3024\",\n                    \"4032x3024\",\n                    \"4032x3024\",\n                    \"1080x1080\",\n                    \"1080x1440\",\n                    \"1618x1080\",\n                    \"1642x1080\",\n                    \"1618x1080\",\n                    \"1618x1080\",\n                    \"1080x1618\",\n                    \"1618x1080\",\n                    \"1080x1440\",\n                    \"1080x1440\",\n                    \"1440x1080\",\n                    \"1080x1440\",\n                    \"1472x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1080x1440\",\n                    \"1440x1080\",\n                    \"1080x1440\",\n                    \"1080x1440\"\n                ],\n                \"text\": [\n                    \"惊鸿一瞥\",\n                    \"静林听虫\",\n                    \"\",\n                    \"荷\",\n                    \"\",\n                    \"一群野鸭在湖中游弋 时而潜入水中 好似是在嬉笑着、打闹着 诉说着夏的美好\",\n                    \"\",\n                    \"静&镜\",\n                    \"绿意盎然\",\n                    \"静谧的小中河 轻轻流淌 承载着岁月的美好\",\n                    \"🌻向日葵🌻\",\n                    \"一簇簇向日葵 顶着太阳的炙烤 蓬勃的生长\",\n                    \"这紫色的小花真是过分妖娆 看久了一阵阵眩晕感随即而来\",\n                    \"乱花渐欲迷人眼\",\n                    \"一花独秀\",\n                    \"诺大的湿地公园 走了8km只能转了个一半 下次有缘再见吧 🤣🤣🤣\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        },\n        {\n            \"date\": \"2020-07\",\n            \"arr\": {\n                \"year\": 2020,\n                \"month\": 7,\n                \"src\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 0,\n                \"link\": [\n                    \"2020/07/28/akfbqA\",\n                    \"2020/07/28/akf7KH\",\n                    \"2020/07/28/akfHrd\",\n                    \"2020/07/28/akfvPf\",\n                    \"2020/07/28/akfoxe\",\n                    \"2020/07/28/akh9MQ\",\n                    \"2020/07/28/akfOat\",\n                    \"2020/07/28/akfXIP\",\n                    \"2020/07/28/akfxG8\",\n                    \"2020/07/28/akhSxg\",\n                    \"2020/07/28/akhPqs\",\n                    \"2020/07/28/akhFZn\",\n                    \"2020/07/28/akhAI0\",\n                    \"2020/07/28/akhZGT\",\n                    \"2020/07/28/akhmzF\",\n                    \"2020/07/28/akheRU\",\n                    \"2020/07/28/akhuM4\",\n                    \"2020/07/28/akhasH\",\n                    \"2020/07/28/akhKsJ\",\n                    \"2020/07/28/akhViV\",\n                    \"2020/07/28/akfzRS\",\n                    \"2020/07/28/akhCrj\",\n                    \"2020/07/28/akhkaq\",\n                    \"2020/07/28/akhML9\",\n                    \"2020/07/28/akh1d1\",\n                    \"2020/07/28/akhYRO\",\n                    \"2020/07/28/akh3Ix\",\n                    \"2020/07/28/akhGi6\",\n                    \"2020/07/28/akhJJK\",\n                    \"2020/07/28/akhtzD\",\n                    \"2020/07/28/akhdLd\",\n                    \"2020/07/28/akhUQe\"\n                ],\n                \"size\": [\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1080x1620\",\n                    \"1080x1920\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1080x1440\",\n                    \"1080x1440\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1080x1080\",\n                    \"1440x1080\",\n                    \"892x1062\",\n                    \"1080x1364\",\n                    \"1440x1080\",\n                    \"946x1318\",\n                    \"896x994\",\n                    \"2018x1080\",\n                    \"1080x1440\",\n                    \"1620x1080\",\n                    \"1620x1080\",\n                    \"924x924\",\n                    \"1440x1080\",\n                    \"1260x1020\",\n                    \"1440x956\",\n                    \"1440x1080\",\n                    \"1440x792\",\n                    \"1440x1080\",\n                    \"1440x978\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1080x1080\"\n                ],\n                \"text\": [\n                    \"你好天津\",\n                    \"码头内景\",\n                    \"菜品\",\n                    \"兑换币\",\n                    \"粉荷花\",\n                    \"紫荷花\",\n                    \"白荷花\",\n                    \"桥\",\n                    \"莲叶\",\n                    \"莲花\",\n                    \"狮子头\",\n                    \"瓷房子\",\n                    \"回转楼梯，隐秘的角落既视感\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"一眼望穿\",\n                    \"\",\n                    \"怒火燎原\",\n                    \"夜色\",\n                    \"\",\n                    \"无糖拿铁\",\n                    \"老城区的清晨\",\n                    \"远眺\",\n                    \"七里海湿地\",\n                    \"潮白河\",\n                    \"\",\n                    \"\",\n                    \"似曾相识燕归来\",\n                    \"\",\n                    \"芦苇荡\",\n                    \"渔·家\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        },\n        {\n            \"date\": \"2020-06\",\n            \"arr\": {\n                \"year\": 2020,\n                \"month\": 6,\n                \"src\": [\n                    \"https://s1.ax1x.com/2020/07/17/UywSTP.jpg\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 0,\n                \"link\": [\n                    \"2020/07/17/UywSTP\",\n                    \"2020/07/17/Uydzwt\",\n                    \"2020/07/17/UydxeI\",\n                    \"2020/07/17/UydjOA\",\n                    \"2020/07/17/UydXyd\",\n                    \"2020/07/17/UydLSe\",\n                    \"2020/07/17/UydbWD\",\n                    \"2020/07/17/UydHJO\",\n                    \"2020/07/17/Uyd7FK\",\n                    \"2020/07/17/Uydoo6\"\n                ],\n                \"size\": [\n                    \"1492x1080\",\n                    \"1762x1080\",\n                    \"1080x1440\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\"\n                ],\n                \"text\": [\n                    \"\",\n                    \"\",\n                    \"背影\",\n                    \"崇山峻岭\",\n                    \"清澈见底的小溪\",\n                    \"早安\",\n                    \"2年前的栈道，看起来够险的\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        },\n        {\n            \"date\": \"2020-05\",\n            \"arr\": {\n                \"year\": 2020,\n                \"month\": 5,\n                \"src\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 0,\n                \"link\": [\n                    \"2020/07/20/UfjC6A\",\n                    \"2020/07/20/UfXzfe\",\n                    \"2020/07/20/UfXXTK\",\n                    \"2020/07/20/UfXvFO\",\n                    \"2020/07/20/UfXxYD\",\n                    \"2020/07/22/U7jNee\",\n                    \"2020/07/22/U7judJ\",\n                    \"2020/07/22/U7jJsO\",\n                    \"2020/07/22/U7jKo9\",\n                    \"2020/07/22/U7jnZ4\",\n                    \"2020/07/22/U7jQiR\",\n                    \"2020/07/22/U7jlJ1\",\n                    \"2020/07/22/U7jGQK\",\n                    \"2020/07/22/U7jYLD\"\n                ],\n                \"size\": [\n                    \"2016x1512\",\n                    \"1080x1634\",\n                    \"1440x1080\",\n                    \"1080x1570\",\n                    \"1080x1440\",\n                    \"4876x1078\",\n                    \"1000x1808\",\n                    \"4192x1078\",\n                    \"1080x1440\",\n                    \"1080x1440\",\n                    \"1920x1080\",\n                    \"1078x1808\",\n                    \"1080x1440\",\n                    \"1920x1080\"\n                ],\n                \"text\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        },\n        {\n            \"date\": \"2017-10\",\n            \"arr\": {\n                \"year\": 2017,\n                \"month\": 10,\n                \"src\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 0,\n                \"link\": [\n                    \"2020/07/17/UyiFYQ\",\n                    \"2020/07/17/UyPzOP\",\n                    \"2020/07/17/UyPvQI\",\n                    \"2020/07/17/UyPjSA\",\n                    \"2020/07/17/UyPOWd\",\n                    \"2020/07/17/UyPLJH\",\n                    \"2020/07/17/UyPqFe\",\n                    \"2020/07/17/UyPHoD\",\n                    \"2020/07/17/UyP7dO\"\n                ],\n                \"size\": [\n                    \"1440x1080\",\n                    \"1080x1440\",\n                    \"1080x1440\",\n                    \"1080x1440\",\n                    \"1080x1440\",\n                    \"1440x1080\",\n                    \"1080x1440\",\n                    \"1080x1440\",\n                    \"1440x1080\"\n                ],\n                \"text\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        }\n    ]\n}","source":"photos/ins.json","raw":"{\n    \"hostList\": [\n        \"https://s1.ax1x.com/\",\n        \"https://s3.ax1x.com/\"\n    ],\n    \"list\": [\n        {\n            \"date\": \"2020-11\",\n            \"arr\": {\n                \"year\": 2020,\n                \"month\": 11,\n                \"src\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 1,\n                \"link\": [\n                    \"2021/01/13/sNBbLV\",\n                    \"2021/01/13/sND5TO\",\n                    \"2021/01/13/sNDokD\",\n                    \"2021/01/13/sNDTte\"\n                ],\n                \"size\": [\n                    \"1920x1075\",\n                    \"1080x1080\",\n                    \"1080x1080\",\n                    \"1440x1080\"\n                ],\n                \"text\": [\n                    \"祈年殿\",\n                    \"双环万寿亭\",\n                    \"回音壁\",\n                    \"我的初中\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        },\n        {\n            \"date\": \"2020-10\",\n            \"arr\": {\n                \"year\": 2020,\n                \"month\": 10,\n                \"src\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 1,\n                \"link\": [\n                    \"2021/01/13/sNPKDH\",\n                    \"2021/01/13/sNCzgU\",\n                    \"2021/01/13/sNPkU1\",\n                    \"2021/01/13/sNP9u4\",\n                    \"2021/01/13/sNPegO\",\n                    \"2021/01/13/sNPMbd\",\n                    \"2021/01/13/sNPZ8K\",\n                    \"2021/01/13/sNPPb9\",\n                    \"2021/01/13/sNPA4x\",\n                    \"2021/01/13/sNPCDJ\",\n                    \"2021/01/13/sNudUS\",\n                    \"2021/01/13/sNuw4g\",\n                    \"2021/01/13/sNPSvF\",\n                    \"2021/01/13/sNuNHf\",\n                    \"2021/01/13/sNuD3j\",\n                    \"2021/01/13/sNPFER\",\n                    \"2021/01/13/sNuaE8\",\n                    \"2021/01/13/sNPlVA\",\n                    \"2021/01/13/sNP1UI\",\n                    \"2021/01/13/sNPGPP\",\n                    \"2021/01/13/sNBGx1\",\n                    \"2021/01/13/sNDdO0\",\n                    \"2021/01/13/sNDDTU\",\n                    \"2021/01/13/sND0mV\",\n                    \"2021/01/13/sNDskF\",\n                    \"2021/01/13/sNDayq\",\n                    \"2021/01/13/sNDyY4\",\n                    \"2021/01/13/sND6fJ\",\n                    \"2021/01/13/sNDBwT\"\n                ],\n                \"size\": [\n                    \"1920x1080\",\n                    \"1620x1080\",\n                    \"1488x1080\",\n                    \"1920x1080\",\n                    \"1920x1080\",\n                    \"1620x1080\",\n                    \"1080x1440\",\n                    \"1080x1449\",\n                    \"1920x1080\",\n                    \"1440x1080\",\n                    \"1920x1123\",\n                    \"1920x1474\",\n                    \"1080x1920\",\n                    \"1169x1440\",\n                    \"1920x1440\",\n                    \"1935x1080\",\n                    \"1920x1386\",\n                    \"1472x1080\",\n                    \"1920x1080\",\n                    \"1080x1423\",\n                    \"1920x1075\",\n                    \"1080x1920\",\n                    \"1440x1080\",\n                    \"1080x1080\",\n                    \"1080x1080\",\n                    \"1440x1080\",\n                    \"1350x1080\",\n                    \"1080x1080\",\n                    \"1440x1080\"\n                ],\n                \"text\": [\n                    \"正殿\",\n                    \"大殿一角\",\n                    \"午门\",\n                    \"午门城楼\",\n                    \"正殿\",\n                    \"太和殿\",\n                    \"午门角楼\",\n                    \"门钉肉饼的门钉\",\n                    \"房檐\",\n                    \"东六宫\",\n                    \"叶知秋\",\n                    \"灵沼轩\",\n                    \"红墙\",\n                    \"透风\",\n                    \"龙、凤、狮子、天马、海马、狻猊、押鱼、獬豸、斗牛、行什\",\n                    \"夕阳余光\",\n                    \"长街一\",\n                    \"长街二\",\n                    \"长街三\",\n                    \"长街四\",\n                    \"峰坡岭全景\",\n                    \"你好拾月\",\n                    \"走没走过的路\",\n                    \"看没看过的风景\",\n                    \"小径通幽\",\n                    \"'云'湖\",\n                    \"叶落知秋\",\n                    \"红叶\",\n                    \"夕阳西沉\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        },\n        {\n            \"date\": \"2020-09\",\n            \"arr\": {\n                \"year\": 2020,\n                \"month\": 9,\n                \"src\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 1,\n                \"link\": [\n                    \"2021/01/13/stwS91\",\n                    \"2021/01/13/stdO74\",\n                    \"2021/01/13/stdLBF\",\n                    \"2021/01/13/stdjAJ\",\n                    \"2021/01/13/stdvN9\",\n                    \"2021/01/13/stw9c6\",\n                    \"2021/01/13/stwFBD\",\n                    \"2021/01/13/stwp1x\",\n                    \"2021/01/13/stwinO\",\n                    \"2021/01/13/stR6c4\",\n                    \"2021/01/13/stRcjJ\",\n                    \"2021/01/13/stRy3F\",\n                    \"2021/01/13/stRs9U\",\n                    \"2021/01/13/st4saR\",\n                    \"2021/01/13/st4odA\",\n                    \"2021/01/13/st4rZ9\",\n                    \"2021/01/13/st4cPx\",\n                    \"2021/01/13/st42RK\",\n                    \"2021/01/13/st4yI1\"\n                ],\n                \"size\": [\n                    \"1440x1080\",\n                    \"1080x1524\",\n                    \"1100x1080\",\n                    \"1452x1080\",\n                    \"1080x1214\",\n                    \"1178x1080\",\n                    \"1080x1350\",\n                    \"1440x1080\",\n                    \"1368x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"3594x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\"\n                ],\n                \"text\": [\n                    \"入木\",\n                    \"蔷薇 38×33cm 1990 黑白木刻\",\n                    \"古埃及人的歌 24×38.5cm 1961年 黑白木刻\",\n                    \"敬爱的周总理 32×54cm 1977年 黑白木刻\",\n                    \"翠峦的冰道 37.5×28cm 1954年 黑白木刻\",\n                    \"森林之路 27×40cm 1954年 黑白木刻\",\n                    \"颐和园 66×80.5cm 1964 黑白木刻\",\n                    \"春潮 40×55cm 1961 黑白木刻\",\n                    \"于翡冷翠 20×29cm 1991 黑白木刻\",\n                    \"远眺\",\n                    \"头文字D既视感\",\n                    \"街灯照亮城市的轮廓\",\n                    \"众星朗朗不如孤月独明\",\n                    \"蓝天白云青山绿水\",\n                    \"蟒山全景\",\n                    \"仰望最高点\",\n                    \"十三陵水库\",\n                    \"会当凌绝顶\",\n                    \"一览众山小\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        },\n        {\n            \"date\": \"2020-08\",\n            \"arr\": {\n                \"year\": 2020,\n                \"month\": 8,\n                \"src\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 0,\n                \"link\": [\n                    \"2020/08/02/aJtwpq\",\n                    \"2020/08/02/aJ8OyD\",\n                    \"2020/08/02/aJ8HW6\",\n                    \"2020/08/02/aJGTBQ\",\n                    \"2020/08/02/aJ8TF1\",\n                    \"2020/08/02/aJGbAs\",\n                    \"2020/08/02/aJ8XOe\",\n                    \"2020/08/02/aJ8veH\",\n                    \"2020/08/02/aJ8xwd\",\n                    \"2020/08/02/aJ8zTA\",\n                    \"2020/08/02/aJG9Yt\",\n                    \"2020/08/02/aJGCfP\",\n                    \"2020/08/02/aJGiSf\",\n                    \"2020/08/02/aJGFl8\",\n                    \"2020/08/02/aJGk6S\",\n                    \"2020/08/02/aJGVmQ\",\n                    \"2020/08/17/dZxwJe\",\n                    \"2020/08/17/dZxdiD\",\n                    \"2020/08/17/dZxBzd\",\n                    \"2020/08/17/dZx0RH\",\n                    \"2020/08/17/deFa28\",\n                    \"2020/08/17/deFU8f\",\n                    \"2020/08/17/dZxzl9\",\n                    \"2020/08/17/dZzCex\",\n                    \"2020/08/17/dZzpO1\",\n                    \"2020/08/24/dBvlYn\",\n                    \"2020/08/24/dBv1Wq\",\n                    \"2020/08/24/dBvQFs\",\n                    \"2020/08/24/dBvKoj\",\n                    \"2020/08/24/dBvuwQ\",\n                    \"2020/08/24/dBv8S0\",\n                    \"2020/08/24/dBvGlV\",\n                    \"2020/08/24/dBvYOU\",\n                    \"2020/08/24/dBvJyT\",\n                    \"2020/08/24/dBvNmF\",\n                    \"2020/08/24/dBvUw4\",\n                    \"2020/08/24/dBv0YR\",\n                    \"2020/08/24/dBvaTJ\",\n                    \"2020/08/24/dBvwk9\",\n                    \"2020/08/24/dBvBf1\",\n                    \"2020/08/24/dBvrSx\",\n                    \"2020/08/24/dBvsl6\",\n                    \"2020/08/24/dBv6OO\",\n                    \"2020/08/24/dBvy6K\"\n                ],\n                \"size\": [\n                    \"2048x1796\",\n                    \"2016x1512\",\n                    \"2048x1536\",\n                    \"2048x1536\",\n                    \"2048x1536\",\n                    \"2016x1512\",\n                    \"2048x1536\",\n                    \"2048x1536\",\n                    \"2048x1536\",\n                    \"2048x1536\",\n                    \"2048x1536\",\n                    \"3024x4032\",\n                    \"1574x2048\",\n                    \"2016x1512\",\n                    \"3024x4032\",\n                    \"3024x4032\",\n                    \"4032x2961\",\n                    \"4032x3024\",\n                    \"4032x3024\",\n                    \"3532x2053\",\n                    \"3024x4029\",\n                    \"3024x3024\",\n                    \"4032x3024\",\n                    \"4032x3024\",\n                    \"4032x3024\",\n                    \"1080x1080\",\n                    \"1080x1440\",\n                    \"1618x1080\",\n                    \"1642x1080\",\n                    \"1618x1080\",\n                    \"1618x1080\",\n                    \"1080x1618\",\n                    \"1618x1080\",\n                    \"1080x1440\",\n                    \"1080x1440\",\n                    \"1440x1080\",\n                    \"1080x1440\",\n                    \"1472x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1080x1440\",\n                    \"1440x1080\",\n                    \"1080x1440\",\n                    \"1080x1440\"\n                ],\n                \"text\": [\n                    \"惊鸿一瞥\",\n                    \"静林听虫\",\n                    \"\",\n                    \"荷\",\n                    \"\",\n                    \"一群野鸭在湖中游弋 时而潜入水中 好似是在嬉笑着、打闹着 诉说着夏的美好\",\n                    \"\",\n                    \"静&镜\",\n                    \"绿意盎然\",\n                    \"静谧的小中河 轻轻流淌 承载着岁月的美好\",\n                    \"🌻向日葵🌻\",\n                    \"一簇簇向日葵 顶着太阳的炙烤 蓬勃的生长\",\n                    \"这紫色的小花真是过分妖娆 看久了一阵阵眩晕感随即而来\",\n                    \"乱花渐欲迷人眼\",\n                    \"一花独秀\",\n                    \"诺大的湿地公园 走了8km只能转了个一半 下次有缘再见吧 🤣🤣🤣\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        },\n        {\n            \"date\": \"2020-07\",\n            \"arr\": {\n                \"year\": 2020,\n                \"month\": 7,\n                \"src\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 0,\n                \"link\": [\n                    \"2020/07/28/akfbqA\",\n                    \"2020/07/28/akf7KH\",\n                    \"2020/07/28/akfHrd\",\n                    \"2020/07/28/akfvPf\",\n                    \"2020/07/28/akfoxe\",\n                    \"2020/07/28/akh9MQ\",\n                    \"2020/07/28/akfOat\",\n                    \"2020/07/28/akfXIP\",\n                    \"2020/07/28/akfxG8\",\n                    \"2020/07/28/akhSxg\",\n                    \"2020/07/28/akhPqs\",\n                    \"2020/07/28/akhFZn\",\n                    \"2020/07/28/akhAI0\",\n                    \"2020/07/28/akhZGT\",\n                    \"2020/07/28/akhmzF\",\n                    \"2020/07/28/akheRU\",\n                    \"2020/07/28/akhuM4\",\n                    \"2020/07/28/akhasH\",\n                    \"2020/07/28/akhKsJ\",\n                    \"2020/07/28/akhViV\",\n                    \"2020/07/28/akfzRS\",\n                    \"2020/07/28/akhCrj\",\n                    \"2020/07/28/akhkaq\",\n                    \"2020/07/28/akhML9\",\n                    \"2020/07/28/akh1d1\",\n                    \"2020/07/28/akhYRO\",\n                    \"2020/07/28/akh3Ix\",\n                    \"2020/07/28/akhGi6\",\n                    \"2020/07/28/akhJJK\",\n                    \"2020/07/28/akhtzD\",\n                    \"2020/07/28/akhdLd\",\n                    \"2020/07/28/akhUQe\"\n                ],\n                \"size\": [\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1080x1620\",\n                    \"1080x1920\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1080x1440\",\n                    \"1080x1440\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1080x1080\",\n                    \"1440x1080\",\n                    \"892x1062\",\n                    \"1080x1364\",\n                    \"1440x1080\",\n                    \"946x1318\",\n                    \"896x994\",\n                    \"2018x1080\",\n                    \"1080x1440\",\n                    \"1620x1080\",\n                    \"1620x1080\",\n                    \"924x924\",\n                    \"1440x1080\",\n                    \"1260x1020\",\n                    \"1440x956\",\n                    \"1440x1080\",\n                    \"1440x792\",\n                    \"1440x1080\",\n                    \"1440x978\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1080x1080\"\n                ],\n                \"text\": [\n                    \"你好天津\",\n                    \"码头内景\",\n                    \"菜品\",\n                    \"兑换币\",\n                    \"粉荷花\",\n                    \"紫荷花\",\n                    \"白荷花\",\n                    \"桥\",\n                    \"莲叶\",\n                    \"莲花\",\n                    \"狮子头\",\n                    \"瓷房子\",\n                    \"回转楼梯，隐秘的角落既视感\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"一眼望穿\",\n                    \"\",\n                    \"怒火燎原\",\n                    \"夜色\",\n                    \"\",\n                    \"无糖拿铁\",\n                    \"老城区的清晨\",\n                    \"远眺\",\n                    \"七里海湿地\",\n                    \"潮白河\",\n                    \"\",\n                    \"\",\n                    \"似曾相识燕归来\",\n                    \"\",\n                    \"芦苇荡\",\n                    \"渔·家\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        },\n        {\n            \"date\": \"2020-06\",\n            \"arr\": {\n                \"year\": 2020,\n                \"month\": 6,\n                \"src\": [\n                    \"https://s1.ax1x.com/2020/07/17/UywSTP.jpg\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 0,\n                \"link\": [\n                    \"2020/07/17/UywSTP\",\n                    \"2020/07/17/Uydzwt\",\n                    \"2020/07/17/UydxeI\",\n                    \"2020/07/17/UydjOA\",\n                    \"2020/07/17/UydXyd\",\n                    \"2020/07/17/UydLSe\",\n                    \"2020/07/17/UydbWD\",\n                    \"2020/07/17/UydHJO\",\n                    \"2020/07/17/Uyd7FK\",\n                    \"2020/07/17/Uydoo6\"\n                ],\n                \"size\": [\n                    \"1492x1080\",\n                    \"1762x1080\",\n                    \"1080x1440\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\",\n                    \"1440x1080\"\n                ],\n                \"text\": [\n                    \"\",\n                    \"\",\n                    \"背影\",\n                    \"崇山峻岭\",\n                    \"清澈见底的小溪\",\n                    \"早安\",\n                    \"2年前的栈道，看起来够险的\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        },\n        {\n            \"date\": \"2020-05\",\n            \"arr\": {\n                \"year\": 2020,\n                \"month\": 5,\n                \"src\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 0,\n                \"link\": [\n                    \"2020/07/20/UfjC6A\",\n                    \"2020/07/20/UfXzfe\",\n                    \"2020/07/20/UfXXTK\",\n                    \"2020/07/20/UfXvFO\",\n                    \"2020/07/20/UfXxYD\",\n                    \"2020/07/22/U7jNee\",\n                    \"2020/07/22/U7judJ\",\n                    \"2020/07/22/U7jJsO\",\n                    \"2020/07/22/U7jKo9\",\n                    \"2020/07/22/U7jnZ4\",\n                    \"2020/07/22/U7jQiR\",\n                    \"2020/07/22/U7jlJ1\",\n                    \"2020/07/22/U7jGQK\",\n                    \"2020/07/22/U7jYLD\"\n                ],\n                \"size\": [\n                    \"2016x1512\",\n                    \"1080x1634\",\n                    \"1440x1080\",\n                    \"1080x1570\",\n                    \"1080x1440\",\n                    \"4876x1078\",\n                    \"1000x1808\",\n                    \"4192x1078\",\n                    \"1080x1440\",\n                    \"1080x1440\",\n                    \"1920x1080\",\n                    \"1078x1808\",\n                    \"1080x1440\",\n                    \"1920x1080\"\n                ],\n                \"text\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        },\n        {\n            \"date\": \"2017-10\",\n            \"arr\": {\n                \"year\": 2017,\n                \"month\": 10,\n                \"src\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"hostNum\": 0,\n                \"link\": [\n                    \"2020/07/17/UyiFYQ\",\n                    \"2020/07/17/UyPzOP\",\n                    \"2020/07/17/UyPvQI\",\n                    \"2020/07/17/UyPjSA\",\n                    \"2020/07/17/UyPOWd\",\n                    \"2020/07/17/UyPLJH\",\n                    \"2020/07/17/UyPqFe\",\n                    \"2020/07/17/UyPHoD\",\n                    \"2020/07/17/UyP7dO\"\n                ],\n                \"size\": [\n                    \"1440x1080\",\n                    \"1080x1440\",\n                    \"1080x1440\",\n                    \"1080x1440\",\n                    \"1080x1440\",\n                    \"1440x1080\",\n                    \"1080x1440\",\n                    \"1080x1440\",\n                    \"1440x1080\"\n                ],\n                \"text\": [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ],\n                \"type\": [\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\",\n                    \"image\"\n                ]\n            }\n        }\n    ]\n}","date":"2021-01-30T04:16:46.669Z","updated":"2021-01-30T04:16:46.669Z","path":"photos/ins.json","layout":"false","title":"","comments":1,"_id":"cklxkqjz300182an92tfn1o0t","content":"{\"hostList\":[\"https://s1.ax1x.com/\",\"https://s3.ax1x.com/\"],\"list\":[{\"date\":\"2020-11\",\"arr\":{\"year\":2020,\"month\":11,\"src\":[\"\",\"\",\"\",\"\"],\"hostNum\":1,\"link\":[\"2021/01/13/sNBbLV\",\"2021/01/13/sND5TO\",\"2021/01/13/sNDokD\",\"2021/01/13/sNDTte\"],\"size\":[\"1920x1075\",\"1080x1080\",\"1080x1080\",\"1440x1080\"],\"text\":[\"祈年殿\",\"双环万寿亭\",\"回音壁\",\"我的初中\"],\"type\":[\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2020-10\",\"arr\":{\"year\":2020,\"month\":10,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"hostNum\":1,\"link\":[\"2021/01/13/sNPKDH\",\"2021/01/13/sNCzgU\",\"2021/01/13/sNPkU1\",\"2021/01/13/sNP9u4\",\"2021/01/13/sNPegO\",\"2021/01/13/sNPMbd\",\"2021/01/13/sNPZ8K\",\"2021/01/13/sNPPb9\",\"2021/01/13/sNPA4x\",\"2021/01/13/sNPCDJ\",\"2021/01/13/sNudUS\",\"2021/01/13/sNuw4g\",\"2021/01/13/sNPSvF\",\"2021/01/13/sNuNHf\",\"2021/01/13/sNuD3j\",\"2021/01/13/sNPFER\",\"2021/01/13/sNuaE8\",\"2021/01/13/sNPlVA\",\"2021/01/13/sNP1UI\",\"2021/01/13/sNPGPP\",\"2021/01/13/sNBGx1\",\"2021/01/13/sNDdO0\",\"2021/01/13/sNDDTU\",\"2021/01/13/sND0mV\",\"2021/01/13/sNDskF\",\"2021/01/13/sNDayq\",\"2021/01/13/sNDyY4\",\"2021/01/13/sND6fJ\",\"2021/01/13/sNDBwT\"],\"size\":[\"1920x1080\",\"1620x1080\",\"1488x1080\",\"1920x1080\",\"1920x1080\",\"1620x1080\",\"1080x1440\",\"1080x1449\",\"1920x1080\",\"1440x1080\",\"1920x1123\",\"1920x1474\",\"1080x1920\",\"1169x1440\",\"1920x1440\",\"1935x1080\",\"1920x1386\",\"1472x1080\",\"1920x1080\",\"1080x1423\",\"1920x1075\",\"1080x1920\",\"1440x1080\",\"1080x1080\",\"1080x1080\",\"1440x1080\",\"1350x1080\",\"1080x1080\",\"1440x1080\"],\"text\":[\"正殿\",\"大殿一角\",\"午门\",\"午门城楼\",\"正殿\",\"太和殿\",\"午门角楼\",\"门钉肉饼的门钉\",\"房檐\",\"东六宫\",\"叶知秋\",\"灵沼轩\",\"红墙\",\"透风\",\"龙、凤、狮子、天马、海马、狻猊、押鱼、獬豸、斗牛、行什\",\"夕阳余光\",\"长街一\",\"长街二\",\"长街三\",\"长街四\",\"峰坡岭全景\",\"你好拾月\",\"走没走过的路\",\"看没看过的风景\",\"小径通幽\",\"'云'湖\",\"叶落知秋\",\"红叶\",\"夕阳西沉\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2020-09\",\"arr\":{\"year\":2020,\"month\":9,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"hostNum\":1,\"link\":[\"2021/01/13/stwS91\",\"2021/01/13/stdO74\",\"2021/01/13/stdLBF\",\"2021/01/13/stdjAJ\",\"2021/01/13/stdvN9\",\"2021/01/13/stw9c6\",\"2021/01/13/stwFBD\",\"2021/01/13/stwp1x\",\"2021/01/13/stwinO\",\"2021/01/13/stR6c4\",\"2021/01/13/stRcjJ\",\"2021/01/13/stRy3F\",\"2021/01/13/stRs9U\",\"2021/01/13/st4saR\",\"2021/01/13/st4odA\",\"2021/01/13/st4rZ9\",\"2021/01/13/st4cPx\",\"2021/01/13/st42RK\",\"2021/01/13/st4yI1\"],\"size\":[\"1440x1080\",\"1080x1524\",\"1100x1080\",\"1452x1080\",\"1080x1214\",\"1178x1080\",\"1080x1350\",\"1440x1080\",\"1368x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"3594x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\"],\"text\":[\"入木\",\"蔷薇 38×33cm 1990 黑白木刻\",\"古埃及人的歌 24×38.5cm 1961年 黑白木刻\",\"敬爱的周总理 32×54cm 1977年 黑白木刻\",\"翠峦的冰道 37.5×28cm 1954年 黑白木刻\",\"森林之路 27×40cm 1954年 黑白木刻\",\"颐和园 66×80.5cm 1964 黑白木刻\",\"春潮 40×55cm 1961 黑白木刻\",\"于翡冷翠 20×29cm 1991 黑白木刻\",\"远眺\",\"头文字D既视感\",\"街灯照亮城市的轮廓\",\"众星朗朗不如孤月独明\",\"蓝天白云青山绿水\",\"蟒山全景\",\"仰望最高点\",\"十三陵水库\",\"会当凌绝顶\",\"一览众山小\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2020-08\",\"arr\":{\"year\":2020,\"month\":8,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"hostNum\":0,\"link\":[\"2020/08/02/aJtwpq\",\"2020/08/02/aJ8OyD\",\"2020/08/02/aJ8HW6\",\"2020/08/02/aJGTBQ\",\"2020/08/02/aJ8TF1\",\"2020/08/02/aJGbAs\",\"2020/08/02/aJ8XOe\",\"2020/08/02/aJ8veH\",\"2020/08/02/aJ8xwd\",\"2020/08/02/aJ8zTA\",\"2020/08/02/aJG9Yt\",\"2020/08/02/aJGCfP\",\"2020/08/02/aJGiSf\",\"2020/08/02/aJGFl8\",\"2020/08/02/aJGk6S\",\"2020/08/02/aJGVmQ\",\"2020/08/17/dZxwJe\",\"2020/08/17/dZxdiD\",\"2020/08/17/dZxBzd\",\"2020/08/17/dZx0RH\",\"2020/08/17/deFa28\",\"2020/08/17/deFU8f\",\"2020/08/17/dZxzl9\",\"2020/08/17/dZzCex\",\"2020/08/17/dZzpO1\",\"2020/08/24/dBvlYn\",\"2020/08/24/dBv1Wq\",\"2020/08/24/dBvQFs\",\"2020/08/24/dBvKoj\",\"2020/08/24/dBvuwQ\",\"2020/08/24/dBv8S0\",\"2020/08/24/dBvGlV\",\"2020/08/24/dBvYOU\",\"2020/08/24/dBvJyT\",\"2020/08/24/dBvNmF\",\"2020/08/24/dBvUw4\",\"2020/08/24/dBv0YR\",\"2020/08/24/dBvaTJ\",\"2020/08/24/dBvwk9\",\"2020/08/24/dBvBf1\",\"2020/08/24/dBvrSx\",\"2020/08/24/dBvsl6\",\"2020/08/24/dBv6OO\",\"2020/08/24/dBvy6K\"],\"size\":[\"2048x1796\",\"2016x1512\",\"2048x1536\",\"2048x1536\",\"2048x1536\",\"2016x1512\",\"2048x1536\",\"2048x1536\",\"2048x1536\",\"2048x1536\",\"2048x1536\",\"3024x4032\",\"1574x2048\",\"2016x1512\",\"3024x4032\",\"3024x4032\",\"4032x2961\",\"4032x3024\",\"4032x3024\",\"3532x2053\",\"3024x4029\",\"3024x3024\",\"4032x3024\",\"4032x3024\",\"4032x3024\",\"1080x1080\",\"1080x1440\",\"1618x1080\",\"1642x1080\",\"1618x1080\",\"1618x1080\",\"1080x1618\",\"1618x1080\",\"1080x1440\",\"1080x1440\",\"1440x1080\",\"1080x1440\",\"1472x1080\",\"1440x1080\",\"1440x1080\",\"1080x1440\",\"1440x1080\",\"1080x1440\",\"1080x1440\"],\"text\":[\"惊鸿一瞥\",\"静林听虫\",\"\",\"荷\",\"\",\"一群野鸭在湖中游弋 时而潜入水中 好似是在嬉笑着、打闹着 诉说着夏的美好\",\"\",\"静&镜\",\"绿意盎然\",\"静谧的小中河 轻轻流淌 承载着岁月的美好\",\"🌻向日葵🌻\",\"一簇簇向日葵 顶着太阳的炙烤 蓬勃的生长\",\"这紫色的小花真是过分妖娆 看久了一阵阵眩晕感随即而来\",\"乱花渐欲迷人眼\",\"一花独秀\",\"诺大的湿地公园 走了8km只能转了个一半 下次有缘再见吧 🤣🤣🤣\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2020-07\",\"arr\":{\"year\":2020,\"month\":7,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"hostNum\":0,\"link\":[\"2020/07/28/akfbqA\",\"2020/07/28/akf7KH\",\"2020/07/28/akfHrd\",\"2020/07/28/akfvPf\",\"2020/07/28/akfoxe\",\"2020/07/28/akh9MQ\",\"2020/07/28/akfOat\",\"2020/07/28/akfXIP\",\"2020/07/28/akfxG8\",\"2020/07/28/akhSxg\",\"2020/07/28/akhPqs\",\"2020/07/28/akhFZn\",\"2020/07/28/akhAI0\",\"2020/07/28/akhZGT\",\"2020/07/28/akhmzF\",\"2020/07/28/akheRU\",\"2020/07/28/akhuM4\",\"2020/07/28/akhasH\",\"2020/07/28/akhKsJ\",\"2020/07/28/akhViV\",\"2020/07/28/akfzRS\",\"2020/07/28/akhCrj\",\"2020/07/28/akhkaq\",\"2020/07/28/akhML9\",\"2020/07/28/akh1d1\",\"2020/07/28/akhYRO\",\"2020/07/28/akh3Ix\",\"2020/07/28/akhGi6\",\"2020/07/28/akhJJK\",\"2020/07/28/akhtzD\",\"2020/07/28/akhdLd\",\"2020/07/28/akhUQe\"],\"size\":[\"1440x1080\",\"1440x1080\",\"1080x1620\",\"1080x1920\",\"1440x1080\",\"1440x1080\",\"1080x1440\",\"1080x1440\",\"1440x1080\",\"1440x1080\",\"1080x1080\",\"1440x1080\",\"892x1062\",\"1080x1364\",\"1440x1080\",\"946x1318\",\"896x994\",\"2018x1080\",\"1080x1440\",\"1620x1080\",\"1620x1080\",\"924x924\",\"1440x1080\",\"1260x1020\",\"1440x956\",\"1440x1080\",\"1440x792\",\"1440x1080\",\"1440x978\",\"1440x1080\",\"1440x1080\",\"1080x1080\"],\"text\":[\"你好天津\",\"码头内景\",\"菜品\",\"兑换币\",\"粉荷花\",\"紫荷花\",\"白荷花\",\"桥\",\"莲叶\",\"莲花\",\"狮子头\",\"瓷房子\",\"回转楼梯，隐秘的角落既视感\",\"\",\"\",\"\",\"一眼望穿\",\"\",\"怒火燎原\",\"夜色\",\"\",\"无糖拿铁\",\"老城区的清晨\",\"远眺\",\"七里海湿地\",\"潮白河\",\"\",\"\",\"似曾相识燕归来\",\"\",\"芦苇荡\",\"渔·家\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2020-06\",\"arr\":{\"year\":2020,\"month\":6,\"src\":[\"https://s1.ax1x.com/2020/07/17/UywSTP.jpg\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"hostNum\":0,\"link\":[\"2020/07/17/UywSTP\",\"2020/07/17/Uydzwt\",\"2020/07/17/UydxeI\",\"2020/07/17/UydjOA\",\"2020/07/17/UydXyd\",\"2020/07/17/UydLSe\",\"2020/07/17/UydbWD\",\"2020/07/17/UydHJO\",\"2020/07/17/Uyd7FK\",\"2020/07/17/Uydoo6\"],\"size\":[\"1492x1080\",\"1762x1080\",\"1080x1440\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\"],\"text\":[\"\",\"\",\"背影\",\"崇山峻岭\",\"清澈见底的小溪\",\"早安\",\"2年前的栈道，看起来够险的\",\"\",\"\",\"\",\"\",\"\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2020-05\",\"arr\":{\"year\":2020,\"month\":5,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"hostNum\":0,\"link\":[\"2020/07/20/UfjC6A\",\"2020/07/20/UfXzfe\",\"2020/07/20/UfXXTK\",\"2020/07/20/UfXvFO\",\"2020/07/20/UfXxYD\",\"2020/07/22/U7jNee\",\"2020/07/22/U7judJ\",\"2020/07/22/U7jJsO\",\"2020/07/22/U7jKo9\",\"2020/07/22/U7jnZ4\",\"2020/07/22/U7jQiR\",\"2020/07/22/U7jlJ1\",\"2020/07/22/U7jGQK\",\"2020/07/22/U7jYLD\"],\"size\":[\"2016x1512\",\"1080x1634\",\"1440x1080\",\"1080x1570\",\"1080x1440\",\"4876x1078\",\"1000x1808\",\"4192x1078\",\"1080x1440\",\"1080x1440\",\"1920x1080\",\"1078x1808\",\"1080x1440\",\"1920x1080\"],\"text\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2017-10\",\"arr\":{\"year\":2017,\"month\":10,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"hostNum\":0,\"link\":[\"2020/07/17/UyiFYQ\",\"2020/07/17/UyPzOP\",\"2020/07/17/UyPvQI\",\"2020/07/17/UyPjSA\",\"2020/07/17/UyPOWd\",\"2020/07/17/UyPLJH\",\"2020/07/17/UyPqFe\",\"2020/07/17/UyPHoD\",\"2020/07/17/UyP7dO\"],\"size\":[\"1440x1080\",\"1080x1440\",\"1080x1440\",\"1080x1440\",\"1080x1440\",\"1440x1080\",\"1080x1440\",\"1080x1440\",\"1440x1080\"],\"text\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}}]}","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"","more":"{\"hostList\":[\"https://s1.ax1x.com/\",\"https://s3.ax1x.com/\"],\"list\":[{\"date\":\"2020-11\",\"arr\":{\"year\":2020,\"month\":11,\"src\":[\"\",\"\",\"\",\"\"],\"hostNum\":1,\"link\":[\"2021/01/13/sNBbLV\",\"2021/01/13/sND5TO\",\"2021/01/13/sNDokD\",\"2021/01/13/sNDTte\"],\"size\":[\"1920x1075\",\"1080x1080\",\"1080x1080\",\"1440x1080\"],\"text\":[\"祈年殿\",\"双环万寿亭\",\"回音壁\",\"我的初中\"],\"type\":[\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2020-10\",\"arr\":{\"year\":2020,\"month\":10,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"hostNum\":1,\"link\":[\"2021/01/13/sNPKDH\",\"2021/01/13/sNCzgU\",\"2021/01/13/sNPkU1\",\"2021/01/13/sNP9u4\",\"2021/01/13/sNPegO\",\"2021/01/13/sNPMbd\",\"2021/01/13/sNPZ8K\",\"2021/01/13/sNPPb9\",\"2021/01/13/sNPA4x\",\"2021/01/13/sNPCDJ\",\"2021/01/13/sNudUS\",\"2021/01/13/sNuw4g\",\"2021/01/13/sNPSvF\",\"2021/01/13/sNuNHf\",\"2021/01/13/sNuD3j\",\"2021/01/13/sNPFER\",\"2021/01/13/sNuaE8\",\"2021/01/13/sNPlVA\",\"2021/01/13/sNP1UI\",\"2021/01/13/sNPGPP\",\"2021/01/13/sNBGx1\",\"2021/01/13/sNDdO0\",\"2021/01/13/sNDDTU\",\"2021/01/13/sND0mV\",\"2021/01/13/sNDskF\",\"2021/01/13/sNDayq\",\"2021/01/13/sNDyY4\",\"2021/01/13/sND6fJ\",\"2021/01/13/sNDBwT\"],\"size\":[\"1920x1080\",\"1620x1080\",\"1488x1080\",\"1920x1080\",\"1920x1080\",\"1620x1080\",\"1080x1440\",\"1080x1449\",\"1920x1080\",\"1440x1080\",\"1920x1123\",\"1920x1474\",\"1080x1920\",\"1169x1440\",\"1920x1440\",\"1935x1080\",\"1920x1386\",\"1472x1080\",\"1920x1080\",\"1080x1423\",\"1920x1075\",\"1080x1920\",\"1440x1080\",\"1080x1080\",\"1080x1080\",\"1440x1080\",\"1350x1080\",\"1080x1080\",\"1440x1080\"],\"text\":[\"正殿\",\"大殿一角\",\"午门\",\"午门城楼\",\"正殿\",\"太和殿\",\"午门角楼\",\"门钉肉饼的门钉\",\"房檐\",\"东六宫\",\"叶知秋\",\"灵沼轩\",\"红墙\",\"透风\",\"龙、凤、狮子、天马、海马、狻猊、押鱼、獬豸、斗牛、行什\",\"夕阳余光\",\"长街一\",\"长街二\",\"长街三\",\"长街四\",\"峰坡岭全景\",\"你好拾月\",\"走没走过的路\",\"看没看过的风景\",\"小径通幽\",\"'云'湖\",\"叶落知秋\",\"红叶\",\"夕阳西沉\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2020-09\",\"arr\":{\"year\":2020,\"month\":9,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"hostNum\":1,\"link\":[\"2021/01/13/stwS91\",\"2021/01/13/stdO74\",\"2021/01/13/stdLBF\",\"2021/01/13/stdjAJ\",\"2021/01/13/stdvN9\",\"2021/01/13/stw9c6\",\"2021/01/13/stwFBD\",\"2021/01/13/stwp1x\",\"2021/01/13/stwinO\",\"2021/01/13/stR6c4\",\"2021/01/13/stRcjJ\",\"2021/01/13/stRy3F\",\"2021/01/13/stRs9U\",\"2021/01/13/st4saR\",\"2021/01/13/st4odA\",\"2021/01/13/st4rZ9\",\"2021/01/13/st4cPx\",\"2021/01/13/st42RK\",\"2021/01/13/st4yI1\"],\"size\":[\"1440x1080\",\"1080x1524\",\"1100x1080\",\"1452x1080\",\"1080x1214\",\"1178x1080\",\"1080x1350\",\"1440x1080\",\"1368x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"3594x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\"],\"text\":[\"入木\",\"蔷薇 38×33cm 1990 黑白木刻\",\"古埃及人的歌 24×38.5cm 1961年 黑白木刻\",\"敬爱的周总理 32×54cm 1977年 黑白木刻\",\"翠峦的冰道 37.5×28cm 1954年 黑白木刻\",\"森林之路 27×40cm 1954年 黑白木刻\",\"颐和园 66×80.5cm 1964 黑白木刻\",\"春潮 40×55cm 1961 黑白木刻\",\"于翡冷翠 20×29cm 1991 黑白木刻\",\"远眺\",\"头文字D既视感\",\"街灯照亮城市的轮廓\",\"众星朗朗不如孤月独明\",\"蓝天白云青山绿水\",\"蟒山全景\",\"仰望最高点\",\"十三陵水库\",\"会当凌绝顶\",\"一览众山小\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2020-08\",\"arr\":{\"year\":2020,\"month\":8,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"hostNum\":0,\"link\":[\"2020/08/02/aJtwpq\",\"2020/08/02/aJ8OyD\",\"2020/08/02/aJ8HW6\",\"2020/08/02/aJGTBQ\",\"2020/08/02/aJ8TF1\",\"2020/08/02/aJGbAs\",\"2020/08/02/aJ8XOe\",\"2020/08/02/aJ8veH\",\"2020/08/02/aJ8xwd\",\"2020/08/02/aJ8zTA\",\"2020/08/02/aJG9Yt\",\"2020/08/02/aJGCfP\",\"2020/08/02/aJGiSf\",\"2020/08/02/aJGFl8\",\"2020/08/02/aJGk6S\",\"2020/08/02/aJGVmQ\",\"2020/08/17/dZxwJe\",\"2020/08/17/dZxdiD\",\"2020/08/17/dZxBzd\",\"2020/08/17/dZx0RH\",\"2020/08/17/deFa28\",\"2020/08/17/deFU8f\",\"2020/08/17/dZxzl9\",\"2020/08/17/dZzCex\",\"2020/08/17/dZzpO1\",\"2020/08/24/dBvlYn\",\"2020/08/24/dBv1Wq\",\"2020/08/24/dBvQFs\",\"2020/08/24/dBvKoj\",\"2020/08/24/dBvuwQ\",\"2020/08/24/dBv8S0\",\"2020/08/24/dBvGlV\",\"2020/08/24/dBvYOU\",\"2020/08/24/dBvJyT\",\"2020/08/24/dBvNmF\",\"2020/08/24/dBvUw4\",\"2020/08/24/dBv0YR\",\"2020/08/24/dBvaTJ\",\"2020/08/24/dBvwk9\",\"2020/08/24/dBvBf1\",\"2020/08/24/dBvrSx\",\"2020/08/24/dBvsl6\",\"2020/08/24/dBv6OO\",\"2020/08/24/dBvy6K\"],\"size\":[\"2048x1796\",\"2016x1512\",\"2048x1536\",\"2048x1536\",\"2048x1536\",\"2016x1512\",\"2048x1536\",\"2048x1536\",\"2048x1536\",\"2048x1536\",\"2048x1536\",\"3024x4032\",\"1574x2048\",\"2016x1512\",\"3024x4032\",\"3024x4032\",\"4032x2961\",\"4032x3024\",\"4032x3024\",\"3532x2053\",\"3024x4029\",\"3024x3024\",\"4032x3024\",\"4032x3024\",\"4032x3024\",\"1080x1080\",\"1080x1440\",\"1618x1080\",\"1642x1080\",\"1618x1080\",\"1618x1080\",\"1080x1618\",\"1618x1080\",\"1080x1440\",\"1080x1440\",\"1440x1080\",\"1080x1440\",\"1472x1080\",\"1440x1080\",\"1440x1080\",\"1080x1440\",\"1440x1080\",\"1080x1440\",\"1080x1440\"],\"text\":[\"惊鸿一瞥\",\"静林听虫\",\"\",\"荷\",\"\",\"一群野鸭在湖中游弋 时而潜入水中 好似是在嬉笑着、打闹着 诉说着夏的美好\",\"\",\"静&镜\",\"绿意盎然\",\"静谧的小中河 轻轻流淌 承载着岁月的美好\",\"🌻向日葵🌻\",\"一簇簇向日葵 顶着太阳的炙烤 蓬勃的生长\",\"这紫色的小花真是过分妖娆 看久了一阵阵眩晕感随即而来\",\"乱花渐欲迷人眼\",\"一花独秀\",\"诺大的湿地公园 走了8km只能转了个一半 下次有缘再见吧 🤣🤣🤣\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2020-07\",\"arr\":{\"year\":2020,\"month\":7,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"hostNum\":0,\"link\":[\"2020/07/28/akfbqA\",\"2020/07/28/akf7KH\",\"2020/07/28/akfHrd\",\"2020/07/28/akfvPf\",\"2020/07/28/akfoxe\",\"2020/07/28/akh9MQ\",\"2020/07/28/akfOat\",\"2020/07/28/akfXIP\",\"2020/07/28/akfxG8\",\"2020/07/28/akhSxg\",\"2020/07/28/akhPqs\",\"2020/07/28/akhFZn\",\"2020/07/28/akhAI0\",\"2020/07/28/akhZGT\",\"2020/07/28/akhmzF\",\"2020/07/28/akheRU\",\"2020/07/28/akhuM4\",\"2020/07/28/akhasH\",\"2020/07/28/akhKsJ\",\"2020/07/28/akhViV\",\"2020/07/28/akfzRS\",\"2020/07/28/akhCrj\",\"2020/07/28/akhkaq\",\"2020/07/28/akhML9\",\"2020/07/28/akh1d1\",\"2020/07/28/akhYRO\",\"2020/07/28/akh3Ix\",\"2020/07/28/akhGi6\",\"2020/07/28/akhJJK\",\"2020/07/28/akhtzD\",\"2020/07/28/akhdLd\",\"2020/07/28/akhUQe\"],\"size\":[\"1440x1080\",\"1440x1080\",\"1080x1620\",\"1080x1920\",\"1440x1080\",\"1440x1080\",\"1080x1440\",\"1080x1440\",\"1440x1080\",\"1440x1080\",\"1080x1080\",\"1440x1080\",\"892x1062\",\"1080x1364\",\"1440x1080\",\"946x1318\",\"896x994\",\"2018x1080\",\"1080x1440\",\"1620x1080\",\"1620x1080\",\"924x924\",\"1440x1080\",\"1260x1020\",\"1440x956\",\"1440x1080\",\"1440x792\",\"1440x1080\",\"1440x978\",\"1440x1080\",\"1440x1080\",\"1080x1080\"],\"text\":[\"你好天津\",\"码头内景\",\"菜品\",\"兑换币\",\"粉荷花\",\"紫荷花\",\"白荷花\",\"桥\",\"莲叶\",\"莲花\",\"狮子头\",\"瓷房子\",\"回转楼梯，隐秘的角落既视感\",\"\",\"\",\"\",\"一眼望穿\",\"\",\"怒火燎原\",\"夜色\",\"\",\"无糖拿铁\",\"老城区的清晨\",\"远眺\",\"七里海湿地\",\"潮白河\",\"\",\"\",\"似曾相识燕归来\",\"\",\"芦苇荡\",\"渔·家\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2020-06\",\"arr\":{\"year\":2020,\"month\":6,\"src\":[\"https://s1.ax1x.com/2020/07/17/UywSTP.jpg\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"hostNum\":0,\"link\":[\"2020/07/17/UywSTP\",\"2020/07/17/Uydzwt\",\"2020/07/17/UydxeI\",\"2020/07/17/UydjOA\",\"2020/07/17/UydXyd\",\"2020/07/17/UydLSe\",\"2020/07/17/UydbWD\",\"2020/07/17/UydHJO\",\"2020/07/17/Uyd7FK\",\"2020/07/17/Uydoo6\"],\"size\":[\"1492x1080\",\"1762x1080\",\"1080x1440\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\",\"1440x1080\"],\"text\":[\"\",\"\",\"背影\",\"崇山峻岭\",\"清澈见底的小溪\",\"早安\",\"2年前的栈道，看起来够险的\",\"\",\"\",\"\",\"\",\"\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2020-05\",\"arr\":{\"year\":2020,\"month\":5,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"hostNum\":0,\"link\":[\"2020/07/20/UfjC6A\",\"2020/07/20/UfXzfe\",\"2020/07/20/UfXXTK\",\"2020/07/20/UfXvFO\",\"2020/07/20/UfXxYD\",\"2020/07/22/U7jNee\",\"2020/07/22/U7judJ\",\"2020/07/22/U7jJsO\",\"2020/07/22/U7jKo9\",\"2020/07/22/U7jnZ4\",\"2020/07/22/U7jQiR\",\"2020/07/22/U7jlJ1\",\"2020/07/22/U7jGQK\",\"2020/07/22/U7jYLD\"],\"size\":[\"2016x1512\",\"1080x1634\",\"1440x1080\",\"1080x1570\",\"1080x1440\",\"4876x1078\",\"1000x1808\",\"4192x1078\",\"1080x1440\",\"1080x1440\",\"1920x1080\",\"1078x1808\",\"1080x1440\",\"1920x1080\"],\"text\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2017-10\",\"arr\":{\"year\":2017,\"month\":10,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"hostNum\":0,\"link\":[\"2020/07/17/UyiFYQ\",\"2020/07/17/UyPzOP\",\"2020/07/17/UyPvQI\",\"2020/07/17/UyPjSA\",\"2020/07/17/UyPOWd\",\"2020/07/17/UyPLJH\",\"2020/07/17/UyPqFe\",\"2020/07/17/UyPHoD\",\"2020/07/17/UyP7dO\"],\"size\":[\"1440x1080\",\"1080x1440\",\"1080x1440\",\"1080x1440\",\"1080x1440\",\"1440x1080\",\"1080x1440\",\"1080x1440\",\"1440x1080\"],\"text\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}}]}"},{"_content":"/******/\n(function (modules) { // webpackBootstrap\n    /******/ // The module cache\n    /******/\n    var installedModules = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __webpack_require__(moduleId) {\n        /******/\n        /******/ // Check if module is in cache\n        /******/\n        if (installedModules[moduleId])\n            /******/\n            return installedModules[moduleId].exports;\n        /******/\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = installedModules[moduleId] = {\n            /******/\n            exports: {},\n            /******/\n            id: moduleId,\n            /******/\n            loaded: false\n            /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Flag the module as loaded\n        /******/\n        module.loaded = true;\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n    }\n    /******/\n    /******/\n    /******/ // expose the modules object (__webpack_modules__)\n    /******/\n    __webpack_require__.m = modules;\n    /******/\n    /******/ // expose the module cache\n    /******/\n    __webpack_require__.c = installedModules;\n    /******/\n    /******/ // __webpack_public_path__\n    /******/\n    __webpack_require__.p = \"/dist/\";\n    /******/\n    /******/ // Load entry module and return exports\n    /******/\n    return __webpack_require__(0);\n    /******/\n})\n    /************************************************************************/\n    /******/\n    ([\n        /* 0 */\n        /***/\n        function (module, exports, __webpack_require__) {\n\n            'use strict';\n\n            __webpack_require__(1);\n\n            var _view = __webpack_require__(2);\n\n            var _view2 = _interopRequireDefault(_view);\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n\n            /**\n             * @name impush-client \n             * @description 这个项目让我发家致富…\n             * @date 2016-12-1\n             */\n\n            var _collection = [];\n            var _count = 0;\n            var searchData;\n\n            function addMask(elem) {\n                var rect = elem.getBoundingClientRect();\n                var style = getComputedStyle(elem, null);\n\n                var mask = document.createElement('i');\n                mask.className = 'icon-film';\n                mask.style.color = '#fff';\n                mask.style.fontSize = '26px';\n                mask.style.position = 'absolute';\n                mask.style.right = '10px';\n                mask.style.bottom = '10px';\n                mask.style.zIndex = 1;\n                elem.parentNode.appendChild(mask);\n            }\n\n            var createVideoIncon = function createVideoIncon() {\n                var $videoImg = document.querySelectorAll('.thumb a[data-type=\"video\"]');\n                for (var i = 0, len = $videoImg.length; i < len; i++) {\n                    addMask($videoImg[i]);\n                }\n            };\n            var render = function render(res) {\n                var ulTmpl = \"\";\n                for (var j = 0, len2 = res.list.length; j < len2; j++) {\n                    var data = res.list[j].arr;\n                    var host = res.hostList[data.hostNum];\n                    var liTmpl = \"\";\n                    for (var i = 0, len = data.link.length; i < len; i++) {\n                        var minSrc = host + data.link[i] + '.th.jpg';\n                        var src = host + data.link[i];\n                        var type = data.type[i];\n                        var target = src + (type === 'video' ? '.mp4' : '.jpg');\n                        var size = data.size[i];\n                        src += '.jpg';\n\n                        liTmpl += '<figure class=\"thumb\" itemprop=\"associatedMedia\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\\\n                <a href=\"' + src + '\" itemprop=\"contentUrl\" data-size=\"' + size + '\" data-type=\"' + type + '\" data-target=\"' + target + '\">\\\n                  <img class=\"reward-img\" data-type=\"' + type + '\" data-src=\"' + minSrc + '\" src=\"/assets/img/empty.png\" itemprop=\"thumbnail\" onload=\"lzld(this)\">\\\n                </a>\\\n                <figcaption style=\"display:none\" itemprop=\"caption description\">' + data.text[i] + '</figcaption>\\\n            </figure>';\n                    }\n                    ulTmpl = ulTmpl + '<section class=\"archives album\"><h1 class=\"year\">' + data.year + '<em>' + data.month + '月</em></h1>\\\n        <ul class=\"img-box-ul\">' + liTmpl + '</ul>\\\n        </section>';\n                }\n                document.querySelector('.instagram').innerHTML = '<div class=\"photos\" itemscope=\"\">' + ulTmpl + '</div>';\n                createVideoIncon();\n                _view2.default.init();\n            };\n\n            var replacer = function replacer(str) {\n                var arr = str.split(\"/\");\n                return \"/assets/ins/\" + arr[arr.length - 1];\n            };\n\n            var ctrler = function ctrler(data) {\n                var imgObj = {};\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var y = data[i].y;\n                    var m = data[i].m;\n                    var src = replacer(data[i].src);\n                    var text = data[i].text;\n                    var key = y + \"\" + ((m + \"\").length == 1 ? \"0\" + m : m);\n                    if (imgObj[key]) {\n                        imgObj[key].srclist.push(src);\n                        imgObj[key].text.push(text);\n                    } else {\n                        imgObj[key] = {\n                            year: y,\n                            month: m,\n                            srclist: [src],\n                            text: [text]\n                        };\n                    }\n                }\n                render(imgObj);\n            };\n\n            function loadData(success) {\n                if (!searchData) {\n                    var xhr = new XMLHttpRequest();\n                    xhr.open('GET', './ins.json?t=' + +new Date(), true);\n\n                    xhr.onload = function () {\n                        if (this.status >= 200 && this.status < 300) {\n                            var res = JSON.parse(this.response);\n                            searchData = res;\n                            success(searchData);\n                        } else {\n                            console.error(this.statusText);\n                        }\n                    };\n\n                    xhr.onerror = function () {\n                        console.error(this.statusText);\n                    };\n\n                    xhr.send();\n                } else {\n                    success(searchData);\n                }\n            }\n\n            var Ins = {\n                init: function init() {\n                    loadData(function (data) {\n                        render(data);\n                    });\n                }\n            };\n\n            Ins.init();\n\n            // export default impush;\n\n            /***/\n        },\n        /* 1 */\n        /***/\n        function (module, exports, __webpack_require__) {\n\n            /* WEBPACK VAR INJECTION */\n            (function (global) {\n                'use strict';\n\n                var inViewport = __webpack_require__(3);\n                var lazyAttrs = ['data-src'];\n\n                global.lzld = lazyload();\n\n                // Provide libs using getAttribute early to get the good src\n                // and not the fake data-src\n                replaceGetAttribute('Image');\n                replaceGetAttribute('IFrame');\n\n                function registerLazyAttr(attr) {\n                    if (indexOf.call(lazyAttrs, attr) === -1) {\n                        lazyAttrs.push(attr);\n                    }\n                }\n\n                function lazyload(opts) {\n                    opts = merge({\n                        'offset': 333,\n                        'src': 'data-src',\n                        'container': false\n                    }, opts || {});\n\n                    if (typeof opts.src === 'string') {\n                        registerLazyAttr(opts.src);\n                    }\n\n                    var elts = [];\n\n                    function show(elt) {\n                        var src = findRealSrc(elt);\n\n                        if (src) {\n                            elt.src = src;\n                        }\n\n                        elt.setAttribute('data-lzled', true);\n                        elts[indexOf.call(elts, elt)] = null;\n                    }\n\n                    function findRealSrc(elt) {\n                        if (typeof opts.src === 'function') {\n                            return opts.src(elt);\n                        }\n\n                        return elt.getAttribute(opts.src);\n                    }\n\n                    function register(elt) {\n                        elt.onload = null;\n                        elt.removeAttribute('onload');\n                        elt.onerror = null;\n                        elt.removeAttribute('onerror');\n\n                        if (indexOf.call(elts, elt) === -1) {\n                            inViewport(elt, opts, show);\n                        }\n                    }\n\n                    return register;\n                }\n\n                function replaceGetAttribute(elementName) {\n                    var fullname = 'HTML' + elementName + 'Element';\n                    if (fullname in global === false) {\n                        return;\n                    }\n\n                    var original = global[fullname].prototype.getAttribute;\n                    global[fullname].prototype.getAttribute = function (name) {\n                        if (name === 'src') {\n                            var realSrc;\n                            for (var i = 0, max = lazyAttrs.length; i < max; i++) {\n                                realSrc = original.call(this, lazyAttrs[i]);\n                                if (realSrc) {\n                                    break;\n                                }\n                            }\n\n                            return realSrc || original.call(this, name);\n                        }\n\n                        // our own lazyloader will go through theses lines\n                        // because we use getAttribute(opts.src)\n                        return original.call(this, name);\n                    };\n                }\n\n                function merge(defaults, opts) {\n                    for (var name in defaults) {\n                        if (opts[name] === undefined) {\n                            opts[name] = defaults[name];\n                        }\n                    }\n\n                    return opts;\n                }\n\n                // http://webreflection.blogspot.fr/2011/06/partial-polyfills.html\n                function indexOf(value) {\n                    for (var i = this.length; i-- && this[i] !== value;) { }\n                    return i;\n                }\n\n                module.exports = lazyload;\n\n                // export default impush;\n                /* WEBPACK VAR INJECTION */\n            }.call(exports, (function () {\n                return this;\n            }())))\n\n            /***/\n        },\n        /* 2 */\n        /***/\n        function (module, exports) {\n\n            'use strict';\n\n            var initPhotoSwipeFromDOM = function initPhotoSwipeFromDOM(gallerySelector) {\n\n                // parse slide data (url, title, size ...) from DOM elements \n                // (children of gallerySelector)\n                var parseThumbnailElements = function parseThumbnailElements(el) {\n                    el = el.parentNode.parentNode;\n                    var thumbElements = el.getElementsByClassName('thumb'),\n                        numNodes = thumbElements.length,\n                        items = [],\n                        figureEl,\n                        linkEl,\n                        size,\n                        type,\n                        // video or not\n                        target,\n                        item;\n\n                    for (var i = 0; i < numNodes; i++) {\n\n                        figureEl = thumbElements[i]; // \n\n                        // include only element nodes \n                        if (figureEl.nodeType !== 1) {\n                            continue;\n                        }\n\n                        linkEl = figureEl.children[0]; // \n\n                        size = linkEl.getAttribute('data-size').split('x');\n                        type = linkEl.getAttribute('data-type');\n                        target = linkEl.getAttribute('data-target');\n                        // create slide object\n                        item = {\n                            src: linkEl.getAttribute('href'),\n                            w: parseInt(size[0], 10),\n                            h: parseInt(size[1], 10)\n                        };\n\n                        if (figureEl.children.length > 1) {\n                            item.title = figureEl.children[1].innerHTML;\n                        }\n\n                        if (linkEl.children.length > 0) {\n                            item.msrc = linkEl.children[0].getAttribute('src');\n                            item.type = type;\n                            item.target = target;\n                            item.html = '<video src=\"' + target + '\" controls=\"controls\" autoplay=\"autoplay\"></video>';\n                            if (type === 'video') {\n                                //item.src = null;\n                            }\n                        }\n\n                        item.el = figureEl; // save link to element for getThumbBoundsFn\n                        items.push(item);\n                    }\n\n                    return items;\n                };\n\n                // find nearest parent element\n                var closest = function closest(el, fn) {\n                    return el && (fn(el) ? el : closest(el.parentNode, fn));\n                };\n\n                // triggers when user clicks on thumbnail\n                var onThumbnailsClick = function onThumbnailsClick(e) {\n                    e = e || window.event;\n                    e.preventDefault ? e.preventDefault() : e.returnValue = false;\n\n                    var eTarget = e.target || e.srcElement;\n\n                    // find root element of slide\n                    var clickedListItem = closest(eTarget, function (el) {\n                        return el.tagName && el.tagName.toUpperCase() === 'FIGURE';\n                    });\n\n                    if (!clickedListItem) {\n                        return;\n                    }\n\n                    // find index of clicked item by looping through all child nodes\n                    // alternatively, you may define index via data- attribute\n                    var clickedGallery = clickedListItem.parentNode,\n\n                        // childNodes = clickedListItem.parentNode.childNodes,\n                        // numChildNodes = childNodes.length,\n                        childNodes = document.getElementsByClassName('thumb'),\n                        numChildNodes = childNodes.length,\n                        nodeIndex = 0,\n                        index;\n\n                    for (var i = 0; i < numChildNodes; i++) {\n                        if (childNodes[i].nodeType !== 1) {\n                            continue;\n                        }\n\n                        if (childNodes[i] === clickedListItem) {\n                            index = nodeIndex;\n                            break;\n                        }\n                        nodeIndex++;\n                    }\n\n                    if (index >= 0) {\n                        // open PhotoSwipe if valid index found\n                        openPhotoSwipe(index, clickedGallery);\n                    }\n                    return false;\n                };\n\n                // parse picture index and gallery index from URL (#&pid=1&gid=2)\n                var photoswipeParseHash = function photoswipeParseHash() {\n                    var hash = window.location.hash.substring(1),\n                        params = {};\n\n                    if (hash.length < 5) {\n                        return params;\n                    }\n\n                    var vars = hash.split('&');\n                    for (var i = 0; i < vars.length; i++) {\n                        if (!vars[i]) {\n                            continue;\n                        }\n                        var pair = vars[i].split('=');\n                        if (pair.length < 2) {\n                            continue;\n                        }\n                        params[pair[0]] = pair[1];\n                    }\n\n                    if (params.gid) {\n                        params.gid = parseInt(params.gid, 10);\n                    }\n\n                    return params;\n                };\n\n                var openPhotoSwipe = function openPhotoSwipe(index, galleryElement, disableAnimation, fromURL) {\n                    var pswpElement = document.querySelectorAll('.pswp')[0],\n                        gallery,\n                        options,\n                        items;\n\n                    items = parseThumbnailElements(galleryElement);\n                    console.log(items)\n                    // define options (if needed)\n                    options = {\n\n                        // define gallery index (for URL)\n                        galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n\n                        getThumbBoundsFn: function getThumbBoundsFn(index) {\n                            // See Options -> getThumbBoundsFn section of documentation for more info\n                            var thumbnail = items[index].el.getElementsByTagName('img')[0],\n                                // find thumbnail\n                                pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n                                rect = thumbnail.getBoundingClientRect();\n\n                            return {\n                                x: rect.left,\n                                y: rect.top + pageYScroll,\n                                w: rect.width\n                            };\n                        }\n\n                    };\n\n                    // PhotoSwipe opened from URL\n                    if (fromURL) {\n                        if (options.galleryPIDs) {\n                            // parse real index when custom PIDs are used \n                            // http://photoswipe.com/documentation/faq.html#custom-pid-in-url\n                            for (var j = 0; j < items.length; j++) {\n                                if (items[j].pid == index) {\n                                    options.index = j;\n                                    break;\n                                }\n                            }\n                        } else {\n                            // in URL indexes start from 1\n                            options.index = parseInt(index, 10) - 1;\n                        }\n                    } else {\n                        options.index = parseInt(index, 10);\n                    }\n\n                    // exit if index not found\n                    if (isNaN(options.index)) {\n                        return;\n                    }\n\n                    if (disableAnimation) {\n                        options.showAnimationDuration = 0;\n                    }\n\n                    // Pass data to PhotoSwipe and initialize it\n                    gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\n                    gallery.init();\n\n                    var $tempVideo;\n                    var stopVideoHandle = function stopVideoHandle() {\n                        if ($tempVideo) {\n                            $tempVideo.remove();\n                            $tempVideo = null;\n                        }\n                    };\n                    var changeHandle = function changeHandle() {\n                        var item = gallery.currItem;\n                        stopVideoHandle();\n                        if (item.type === 'video') {\n                            var $ctn = item.container;\n                            var style = $ctn.getElementsByClassName('pswp__img')[0].style;\n                            var $video = document.createElement('video');\n                            $video.setAttribute('autoplay', 'autoplay');\n                            $video.setAttribute('controls', 'controls');\n                            $video.setAttribute('src', item.target);\n                            $video.style.width = style.width;\n                            $video.style.height = style.height;\n                            $video.style.position = 'absolute';\n                            $video.style.zIndex = 2;\n                            $tempVideo = $video;\n                            $ctn.appendChild($video);\n                        }\n                    };\n                    gallery.listen('initialZoomIn', changeHandle);\n                    gallery.listen('afterChange', changeHandle);\n                    gallery.listen('initialZoomOut', stopVideoHandle);\n                };\n\n                // loop through all gallery elements and bind events\n                var galleryElements = document.querySelectorAll(gallerySelector);\n                for (var i = 0, l = galleryElements.length; i < l; i++) {\n                    galleryElements[i].setAttribute('data-pswp-uid', i + 1);\n                    galleryElements[i].onclick = onThumbnailsClick;\n                }\n\n                // Parse URL and open gallery if it contains #&pid=3&gid=1\n                var hashData = photoswipeParseHash();\n                if (hashData.pid && hashData.gid) {\n                    openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);\n                }\n            };\n\n            var Viewer = function () {\n                function init() {\n                    initPhotoSwipeFromDOM('.photos');\n                }\n                return {\n                    init: init\n                };\n            }();\n\n            module.exports = Viewer;\n\n            /***/\n        },\n        /* 3 */\n        /***/\n        function (module, exports) {\n\n            /* WEBPACK VAR INJECTION */\n            (function (global) {\n                module.exports = inViewport;\n\n                var instances = [];\n                var supportsMutationObserver = typeof global.MutationObserver === 'function';\n\n                function inViewport(elt, params, cb) {\n                    var opts = {\n                        container: global.document.body,\n                        offset: 0\n                    };\n\n                    if (params === undefined || typeof params === 'function') {\n                        cb = params;\n                        params = {};\n                    }\n\n                    var container = opts.container = params.container || opts.container;\n                    var offset = opts.offset = params.offset || opts.offset;\n\n                    for (var i = 0; i < instances.length; i++) {\n                        if (instances[i].container === container) {\n                            return instances[i].isInViewport(elt, offset, cb);\n                        }\n                    }\n\n                    return instances[\n                        instances.push(createInViewport(container)) - 1\n                    ].isInViewport(elt, offset, cb);\n                }\n\n                function addEvent(el, type, fn) {\n                    if (el.attachEvent) {\n                        el.attachEvent('on' + type, fn);\n                    } else {\n                        el.addEventListener(type, fn, false);\n                    }\n                }\n\n                function debounce(func, wait, immediate) {\n                    var timeout;\n                    return function () {\n                        var context = this,\n                            args = arguments;\n                        var callNow = immediate && !timeout;\n                        clearTimeout(timeout);\n                        timeout = setTimeout(later, wait);\n                        if (callNow) func.apply(context, args);\n\n                        function later() {\n                            timeout = null;\n                            if (!immediate) func.apply(context, args);\n                        }\n                    };\n                }\n\n                // https://github.com/jquery/sizzle/blob/3136f48b90e3edc84cbaaa6f6f7734ef03775a07/sizzle.js#L708\n                var contains = function () {\n                    if (!global.document) {\n                        return true;\n                    }\n                    return global.document.documentElement.compareDocumentPosition ?\n                        function (a, b) {\n                            return !!(a.compareDocumentPosition(b) & 16);\n                        } :\n                        global.document.documentElement.contains ?\n                            function (a, b) {\n                                return a !== b && (a.contains ? a.contains(b) : false);\n                            } :\n                            function (a, b) {\n                                while (b = b.parentNode) {\n                                    if (b === a) {\n                                        return true;\n                                    }\n                                }\n                                return false;\n                            };\n                }\n\n                function createInViewport(container) {\n                    var watches = createWatches();\n\n                    var scrollContainer = container === global.document.body ? global : container;\n                    var debouncedCheck = debounce(watches.checkAll(watchInViewport), 15);\n\n                    addEvent(scrollContainer, 'scroll', debouncedCheck);\n\n                    if (scrollContainer === global) {\n                        addEvent(global, 'resize', debouncedCheck);\n                    }\n\n                    if (supportsMutationObserver) {\n                        observeDOM(watches, container, debouncedCheck);\n                    }\n\n                    // failsafe check, every 200ms we check for visible images\n                    // usecase: a hidden parent containing eleements\n                    // when the parent becomes visible, we have no event that the children\n                    // became visible\n                    setInterval(debouncedCheck, 150);\n\n                    function isInViewport(elt, offset, cb) {\n                        if (!cb) {\n                            return isVisible(elt, offset);\n                        }\n\n                        var remote = createRemote(elt, offset, cb);\n                        remote.watch();\n                        return remote;\n                    }\n\n                    function createRemote(elt, offset, cb) {\n                        function watch() {\n                            watches.add(elt, offset, cb);\n                        }\n\n                        function dispose() {\n                            watches.remove(elt);\n                        }\n\n                        return {\n                            watch: watch,\n                            dispose: dispose\n                        };\n                    }\n\n                    function watchInViewport(elt, offset, cb) {\n                        if (isVisible(elt, offset)) {\n                            watches.remove(elt);\n                            cb(elt);\n                        }\n                    }\n\n                    function isVisible(elt, offset) {\n                        if (!contains(global.document.documentElement, elt) || !contains(global.document.documentElement, container)) {\n                            return false;\n                        }\n\n                        // Check if the element is visible\n                        // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js\n                        if (!elt.offsetWidth || !elt.offsetHeight) {\n                            return false;\n                        }\n\n                        var eltRect = elt.getBoundingClientRect();\n                        var viewport = {};\n\n                        if (container === global.document.body) {\n                            viewport = {\n                                top: -offset,\n                                left: -offset,\n                                right: global.document.documentElement.clientWidth + offset,\n                                bottom: global.document.documentElement.clientHeight + offset\n                            };\n                        } else {\n                            var containerRect = container.getBoundingClientRect();\n                            viewport = {\n                                top: containerRect.top - offset,\n                                left: containerRect.left - offset,\n                                right: containerRect.right + offset,\n                                bottom: containerRect.bottom + offset\n                            };\n                        }\n\n                        // The element must overlap with the visible part of the viewport\n                        var visible =\n                            (\n                                (eltRect.right > viewport.left) &&\n                                (eltRect.left < viewport.right) &&\n                                (eltRect.bottom > viewport.top) &&\n                                (eltRect.top < viewport.bottom)\n                            );\n\n                        return visible;\n                    }\n\n                    return {\n                        container: container,\n                        isInViewport: isInViewport\n                    };\n                }\n\n                function createWatches() {\n                    var watches = [];\n\n                    function add(elt, offset, cb) {\n                        if (!isWatched(elt)) {\n                            watches.push([elt, offset, cb]);\n                        }\n                    }\n\n                    function remove(elt) {\n                        var pos = indexOf(elt);\n                        if (pos !== -1) {\n                            watches.splice(pos, 1);\n                        }\n                    }\n\n                    function indexOf(elt) {\n                        for (var i = watches.length - 1; i >= 0; i--) {\n                            if (watches[i][0] === elt) {\n                                return i;\n                            }\n                        }\n                        return -1;\n                    }\n\n                    function isWatched(elt) {\n                        return indexOf(elt) !== -1;\n                    }\n\n                    function checkAll(cb) {\n                        return function () {\n                            for (var i = watches.length - 1; i >= 0; i--) {\n                                cb.apply(this, watches[i]);\n                            }\n                        };\n                    }\n\n                    return {\n                        add: add,\n                        remove: remove,\n                        isWatched: isWatched,\n                        checkAll: checkAll\n                    };\n                }\n\n                function observeDOM(watches, container, cb) {\n                    var observer = new MutationObserver(watch);\n                    var filter = Array.prototype.filter;\n                    var concat = Array.prototype.concat;\n\n                    observer.observe(container, {\n                        childList: true,\n                        subtree: true,\n                        // changes like style/width/height/display will be catched\n                        attributes: true\n                    });\n\n                    function watch(mutations) {\n                        // some new DOM nodes where previously watched\n                        // we should check their positions\n                        if (mutations.some(knownNodes) === true) {\n                            setTimeout(cb, 0);\n                        }\n                    }\n\n                    function knownNodes(mutation) {\n                        var nodes = concat.call([],\n                            Array.prototype.slice.call(mutation.addedNodes),\n                            mutation.target\n                        );\n                        return filter.call(nodes, watches.isWatched).length > 0;\n                    }\n                }\n\n                /* WEBPACK VAR INJECTION */\n            }.call(exports, (function () {\n                return this;\n            }())))\n\n            /***/\n        }\n        /******/\n    ]);","source":"photos/ins.js","raw":"/******/\n(function (modules) { // webpackBootstrap\n    /******/ // The module cache\n    /******/\n    var installedModules = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __webpack_require__(moduleId) {\n        /******/\n        /******/ // Check if module is in cache\n        /******/\n        if (installedModules[moduleId])\n            /******/\n            return installedModules[moduleId].exports;\n        /******/\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = installedModules[moduleId] = {\n            /******/\n            exports: {},\n            /******/\n            id: moduleId,\n            /******/\n            loaded: false\n            /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Flag the module as loaded\n        /******/\n        module.loaded = true;\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n    }\n    /******/\n    /******/\n    /******/ // expose the modules object (__webpack_modules__)\n    /******/\n    __webpack_require__.m = modules;\n    /******/\n    /******/ // expose the module cache\n    /******/\n    __webpack_require__.c = installedModules;\n    /******/\n    /******/ // __webpack_public_path__\n    /******/\n    __webpack_require__.p = \"/dist/\";\n    /******/\n    /******/ // Load entry module and return exports\n    /******/\n    return __webpack_require__(0);\n    /******/\n})\n    /************************************************************************/\n    /******/\n    ([\n        /* 0 */\n        /***/\n        function (module, exports, __webpack_require__) {\n\n            'use strict';\n\n            __webpack_require__(1);\n\n            var _view = __webpack_require__(2);\n\n            var _view2 = _interopRequireDefault(_view);\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n\n            /**\n             * @name impush-client \n             * @description 这个项目让我发家致富…\n             * @date 2016-12-1\n             */\n\n            var _collection = [];\n            var _count = 0;\n            var searchData;\n\n            function addMask(elem) {\n                var rect = elem.getBoundingClientRect();\n                var style = getComputedStyle(elem, null);\n\n                var mask = document.createElement('i');\n                mask.className = 'icon-film';\n                mask.style.color = '#fff';\n                mask.style.fontSize = '26px';\n                mask.style.position = 'absolute';\n                mask.style.right = '10px';\n                mask.style.bottom = '10px';\n                mask.style.zIndex = 1;\n                elem.parentNode.appendChild(mask);\n            }\n\n            var createVideoIncon = function createVideoIncon() {\n                var $videoImg = document.querySelectorAll('.thumb a[data-type=\"video\"]');\n                for (var i = 0, len = $videoImg.length; i < len; i++) {\n                    addMask($videoImg[i]);\n                }\n            };\n            var render = function render(res) {\n                var ulTmpl = \"\";\n                for (var j = 0, len2 = res.list.length; j < len2; j++) {\n                    var data = res.list[j].arr;\n                    var host = res.hostList[data.hostNum];\n                    var liTmpl = \"\";\n                    for (var i = 0, len = data.link.length; i < len; i++) {\n                        var minSrc = host + data.link[i] + '.th.jpg';\n                        var src = host + data.link[i];\n                        var type = data.type[i];\n                        var target = src + (type === 'video' ? '.mp4' : '.jpg');\n                        var size = data.size[i];\n                        src += '.jpg';\n\n                        liTmpl += '<figure class=\"thumb\" itemprop=\"associatedMedia\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\\\n                <a href=\"' + src + '\" itemprop=\"contentUrl\" data-size=\"' + size + '\" data-type=\"' + type + '\" data-target=\"' + target + '\">\\\n                  <img class=\"reward-img\" data-type=\"' + type + '\" data-src=\"' + minSrc + '\" src=\"/assets/img/empty.png\" itemprop=\"thumbnail\" onload=\"lzld(this)\">\\\n                </a>\\\n                <figcaption style=\"display:none\" itemprop=\"caption description\">' + data.text[i] + '</figcaption>\\\n            </figure>';\n                    }\n                    ulTmpl = ulTmpl + '<section class=\"archives album\"><h1 class=\"year\">' + data.year + '<em>' + data.month + '月</em></h1>\\\n        <ul class=\"img-box-ul\">' + liTmpl + '</ul>\\\n        </section>';\n                }\n                document.querySelector('.instagram').innerHTML = '<div class=\"photos\" itemscope=\"\">' + ulTmpl + '</div>';\n                createVideoIncon();\n                _view2.default.init();\n            };\n\n            var replacer = function replacer(str) {\n                var arr = str.split(\"/\");\n                return \"/assets/ins/\" + arr[arr.length - 1];\n            };\n\n            var ctrler = function ctrler(data) {\n                var imgObj = {};\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var y = data[i].y;\n                    var m = data[i].m;\n                    var src = replacer(data[i].src);\n                    var text = data[i].text;\n                    var key = y + \"\" + ((m + \"\").length == 1 ? \"0\" + m : m);\n                    if (imgObj[key]) {\n                        imgObj[key].srclist.push(src);\n                        imgObj[key].text.push(text);\n                    } else {\n                        imgObj[key] = {\n                            year: y,\n                            month: m,\n                            srclist: [src],\n                            text: [text]\n                        };\n                    }\n                }\n                render(imgObj);\n            };\n\n            function loadData(success) {\n                if (!searchData) {\n                    var xhr = new XMLHttpRequest();\n                    xhr.open('GET', './ins.json?t=' + +new Date(), true);\n\n                    xhr.onload = function () {\n                        if (this.status >= 200 && this.status < 300) {\n                            var res = JSON.parse(this.response);\n                            searchData = res;\n                            success(searchData);\n                        } else {\n                            console.error(this.statusText);\n                        }\n                    };\n\n                    xhr.onerror = function () {\n                        console.error(this.statusText);\n                    };\n\n                    xhr.send();\n                } else {\n                    success(searchData);\n                }\n            }\n\n            var Ins = {\n                init: function init() {\n                    loadData(function (data) {\n                        render(data);\n                    });\n                }\n            };\n\n            Ins.init();\n\n            // export default impush;\n\n            /***/\n        },\n        /* 1 */\n        /***/\n        function (module, exports, __webpack_require__) {\n\n            /* WEBPACK VAR INJECTION */\n            (function (global) {\n                'use strict';\n\n                var inViewport = __webpack_require__(3);\n                var lazyAttrs = ['data-src'];\n\n                global.lzld = lazyload();\n\n                // Provide libs using getAttribute early to get the good src\n                // and not the fake data-src\n                replaceGetAttribute('Image');\n                replaceGetAttribute('IFrame');\n\n                function registerLazyAttr(attr) {\n                    if (indexOf.call(lazyAttrs, attr) === -1) {\n                        lazyAttrs.push(attr);\n                    }\n                }\n\n                function lazyload(opts) {\n                    opts = merge({\n                        'offset': 333,\n                        'src': 'data-src',\n                        'container': false\n                    }, opts || {});\n\n                    if (typeof opts.src === 'string') {\n                        registerLazyAttr(opts.src);\n                    }\n\n                    var elts = [];\n\n                    function show(elt) {\n                        var src = findRealSrc(elt);\n\n                        if (src) {\n                            elt.src = src;\n                        }\n\n                        elt.setAttribute('data-lzled', true);\n                        elts[indexOf.call(elts, elt)] = null;\n                    }\n\n                    function findRealSrc(elt) {\n                        if (typeof opts.src === 'function') {\n                            return opts.src(elt);\n                        }\n\n                        return elt.getAttribute(opts.src);\n                    }\n\n                    function register(elt) {\n                        elt.onload = null;\n                        elt.removeAttribute('onload');\n                        elt.onerror = null;\n                        elt.removeAttribute('onerror');\n\n                        if (indexOf.call(elts, elt) === -1) {\n                            inViewport(elt, opts, show);\n                        }\n                    }\n\n                    return register;\n                }\n\n                function replaceGetAttribute(elementName) {\n                    var fullname = 'HTML' + elementName + 'Element';\n                    if (fullname in global === false) {\n                        return;\n                    }\n\n                    var original = global[fullname].prototype.getAttribute;\n                    global[fullname].prototype.getAttribute = function (name) {\n                        if (name === 'src') {\n                            var realSrc;\n                            for (var i = 0, max = lazyAttrs.length; i < max; i++) {\n                                realSrc = original.call(this, lazyAttrs[i]);\n                                if (realSrc) {\n                                    break;\n                                }\n                            }\n\n                            return realSrc || original.call(this, name);\n                        }\n\n                        // our own lazyloader will go through theses lines\n                        // because we use getAttribute(opts.src)\n                        return original.call(this, name);\n                    };\n                }\n\n                function merge(defaults, opts) {\n                    for (var name in defaults) {\n                        if (opts[name] === undefined) {\n                            opts[name] = defaults[name];\n                        }\n                    }\n\n                    return opts;\n                }\n\n                // http://webreflection.blogspot.fr/2011/06/partial-polyfills.html\n                function indexOf(value) {\n                    for (var i = this.length; i-- && this[i] !== value;) { }\n                    return i;\n                }\n\n                module.exports = lazyload;\n\n                // export default impush;\n                /* WEBPACK VAR INJECTION */\n            }.call(exports, (function () {\n                return this;\n            }())))\n\n            /***/\n        },\n        /* 2 */\n        /***/\n        function (module, exports) {\n\n            'use strict';\n\n            var initPhotoSwipeFromDOM = function initPhotoSwipeFromDOM(gallerySelector) {\n\n                // parse slide data (url, title, size ...) from DOM elements \n                // (children of gallerySelector)\n                var parseThumbnailElements = function parseThumbnailElements(el) {\n                    el = el.parentNode.parentNode;\n                    var thumbElements = el.getElementsByClassName('thumb'),\n                        numNodes = thumbElements.length,\n                        items = [],\n                        figureEl,\n                        linkEl,\n                        size,\n                        type,\n                        // video or not\n                        target,\n                        item;\n\n                    for (var i = 0; i < numNodes; i++) {\n\n                        figureEl = thumbElements[i]; // \n\n                        // include only element nodes \n                        if (figureEl.nodeType !== 1) {\n                            continue;\n                        }\n\n                        linkEl = figureEl.children[0]; // \n\n                        size = linkEl.getAttribute('data-size').split('x');\n                        type = linkEl.getAttribute('data-type');\n                        target = linkEl.getAttribute('data-target');\n                        // create slide object\n                        item = {\n                            src: linkEl.getAttribute('href'),\n                            w: parseInt(size[0], 10),\n                            h: parseInt(size[1], 10)\n                        };\n\n                        if (figureEl.children.length > 1) {\n                            item.title = figureEl.children[1].innerHTML;\n                        }\n\n                        if (linkEl.children.length > 0) {\n                            item.msrc = linkEl.children[0].getAttribute('src');\n                            item.type = type;\n                            item.target = target;\n                            item.html = '<video src=\"' + target + '\" controls=\"controls\" autoplay=\"autoplay\"></video>';\n                            if (type === 'video') {\n                                //item.src = null;\n                            }\n                        }\n\n                        item.el = figureEl; // save link to element for getThumbBoundsFn\n                        items.push(item);\n                    }\n\n                    return items;\n                };\n\n                // find nearest parent element\n                var closest = function closest(el, fn) {\n                    return el && (fn(el) ? el : closest(el.parentNode, fn));\n                };\n\n                // triggers when user clicks on thumbnail\n                var onThumbnailsClick = function onThumbnailsClick(e) {\n                    e = e || window.event;\n                    e.preventDefault ? e.preventDefault() : e.returnValue = false;\n\n                    var eTarget = e.target || e.srcElement;\n\n                    // find root element of slide\n                    var clickedListItem = closest(eTarget, function (el) {\n                        return el.tagName && el.tagName.toUpperCase() === 'FIGURE';\n                    });\n\n                    if (!clickedListItem) {\n                        return;\n                    }\n\n                    // find index of clicked item by looping through all child nodes\n                    // alternatively, you may define index via data- attribute\n                    var clickedGallery = clickedListItem.parentNode,\n\n                        // childNodes = clickedListItem.parentNode.childNodes,\n                        // numChildNodes = childNodes.length,\n                        childNodes = document.getElementsByClassName('thumb'),\n                        numChildNodes = childNodes.length,\n                        nodeIndex = 0,\n                        index;\n\n                    for (var i = 0; i < numChildNodes; i++) {\n                        if (childNodes[i].nodeType !== 1) {\n                            continue;\n                        }\n\n                        if (childNodes[i] === clickedListItem) {\n                            index = nodeIndex;\n                            break;\n                        }\n                        nodeIndex++;\n                    }\n\n                    if (index >= 0) {\n                        // open PhotoSwipe if valid index found\n                        openPhotoSwipe(index, clickedGallery);\n                    }\n                    return false;\n                };\n\n                // parse picture index and gallery index from URL (#&pid=1&gid=2)\n                var photoswipeParseHash = function photoswipeParseHash() {\n                    var hash = window.location.hash.substring(1),\n                        params = {};\n\n                    if (hash.length < 5) {\n                        return params;\n                    }\n\n                    var vars = hash.split('&');\n                    for (var i = 0; i < vars.length; i++) {\n                        if (!vars[i]) {\n                            continue;\n                        }\n                        var pair = vars[i].split('=');\n                        if (pair.length < 2) {\n                            continue;\n                        }\n                        params[pair[0]] = pair[1];\n                    }\n\n                    if (params.gid) {\n                        params.gid = parseInt(params.gid, 10);\n                    }\n\n                    return params;\n                };\n\n                var openPhotoSwipe = function openPhotoSwipe(index, galleryElement, disableAnimation, fromURL) {\n                    var pswpElement = document.querySelectorAll('.pswp')[0],\n                        gallery,\n                        options,\n                        items;\n\n                    items = parseThumbnailElements(galleryElement);\n                    console.log(items)\n                    // define options (if needed)\n                    options = {\n\n                        // define gallery index (for URL)\n                        galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n\n                        getThumbBoundsFn: function getThumbBoundsFn(index) {\n                            // See Options -> getThumbBoundsFn section of documentation for more info\n                            var thumbnail = items[index].el.getElementsByTagName('img')[0],\n                                // find thumbnail\n                                pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n                                rect = thumbnail.getBoundingClientRect();\n\n                            return {\n                                x: rect.left,\n                                y: rect.top + pageYScroll,\n                                w: rect.width\n                            };\n                        }\n\n                    };\n\n                    // PhotoSwipe opened from URL\n                    if (fromURL) {\n                        if (options.galleryPIDs) {\n                            // parse real index when custom PIDs are used \n                            // http://photoswipe.com/documentation/faq.html#custom-pid-in-url\n                            for (var j = 0; j < items.length; j++) {\n                                if (items[j].pid == index) {\n                                    options.index = j;\n                                    break;\n                                }\n                            }\n                        } else {\n                            // in URL indexes start from 1\n                            options.index = parseInt(index, 10) - 1;\n                        }\n                    } else {\n                        options.index = parseInt(index, 10);\n                    }\n\n                    // exit if index not found\n                    if (isNaN(options.index)) {\n                        return;\n                    }\n\n                    if (disableAnimation) {\n                        options.showAnimationDuration = 0;\n                    }\n\n                    // Pass data to PhotoSwipe and initialize it\n                    gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\n                    gallery.init();\n\n                    var $tempVideo;\n                    var stopVideoHandle = function stopVideoHandle() {\n                        if ($tempVideo) {\n                            $tempVideo.remove();\n                            $tempVideo = null;\n                        }\n                    };\n                    var changeHandle = function changeHandle() {\n                        var item = gallery.currItem;\n                        stopVideoHandle();\n                        if (item.type === 'video') {\n                            var $ctn = item.container;\n                            var style = $ctn.getElementsByClassName('pswp__img')[0].style;\n                            var $video = document.createElement('video');\n                            $video.setAttribute('autoplay', 'autoplay');\n                            $video.setAttribute('controls', 'controls');\n                            $video.setAttribute('src', item.target);\n                            $video.style.width = style.width;\n                            $video.style.height = style.height;\n                            $video.style.position = 'absolute';\n                            $video.style.zIndex = 2;\n                            $tempVideo = $video;\n                            $ctn.appendChild($video);\n                        }\n                    };\n                    gallery.listen('initialZoomIn', changeHandle);\n                    gallery.listen('afterChange', changeHandle);\n                    gallery.listen('initialZoomOut', stopVideoHandle);\n                };\n\n                // loop through all gallery elements and bind events\n                var galleryElements = document.querySelectorAll(gallerySelector);\n                for (var i = 0, l = galleryElements.length; i < l; i++) {\n                    galleryElements[i].setAttribute('data-pswp-uid', i + 1);\n                    galleryElements[i].onclick = onThumbnailsClick;\n                }\n\n                // Parse URL and open gallery if it contains #&pid=3&gid=1\n                var hashData = photoswipeParseHash();\n                if (hashData.pid && hashData.gid) {\n                    openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);\n                }\n            };\n\n            var Viewer = function () {\n                function init() {\n                    initPhotoSwipeFromDOM('.photos');\n                }\n                return {\n                    init: init\n                };\n            }();\n\n            module.exports = Viewer;\n\n            /***/\n        },\n        /* 3 */\n        /***/\n        function (module, exports) {\n\n            /* WEBPACK VAR INJECTION */\n            (function (global) {\n                module.exports = inViewport;\n\n                var instances = [];\n                var supportsMutationObserver = typeof global.MutationObserver === 'function';\n\n                function inViewport(elt, params, cb) {\n                    var opts = {\n                        container: global.document.body,\n                        offset: 0\n                    };\n\n                    if (params === undefined || typeof params === 'function') {\n                        cb = params;\n                        params = {};\n                    }\n\n                    var container = opts.container = params.container || opts.container;\n                    var offset = opts.offset = params.offset || opts.offset;\n\n                    for (var i = 0; i < instances.length; i++) {\n                        if (instances[i].container === container) {\n                            return instances[i].isInViewport(elt, offset, cb);\n                        }\n                    }\n\n                    return instances[\n                        instances.push(createInViewport(container)) - 1\n                    ].isInViewport(elt, offset, cb);\n                }\n\n                function addEvent(el, type, fn) {\n                    if (el.attachEvent) {\n                        el.attachEvent('on' + type, fn);\n                    } else {\n                        el.addEventListener(type, fn, false);\n                    }\n                }\n\n                function debounce(func, wait, immediate) {\n                    var timeout;\n                    return function () {\n                        var context = this,\n                            args = arguments;\n                        var callNow = immediate && !timeout;\n                        clearTimeout(timeout);\n                        timeout = setTimeout(later, wait);\n                        if (callNow) func.apply(context, args);\n\n                        function later() {\n                            timeout = null;\n                            if (!immediate) func.apply(context, args);\n                        }\n                    };\n                }\n\n                // https://github.com/jquery/sizzle/blob/3136f48b90e3edc84cbaaa6f6f7734ef03775a07/sizzle.js#L708\n                var contains = function () {\n                    if (!global.document) {\n                        return true;\n                    }\n                    return global.document.documentElement.compareDocumentPosition ?\n                        function (a, b) {\n                            return !!(a.compareDocumentPosition(b) & 16);\n                        } :\n                        global.document.documentElement.contains ?\n                            function (a, b) {\n                                return a !== b && (a.contains ? a.contains(b) : false);\n                            } :\n                            function (a, b) {\n                                while (b = b.parentNode) {\n                                    if (b === a) {\n                                        return true;\n                                    }\n                                }\n                                return false;\n                            };\n                }\n\n                function createInViewport(container) {\n                    var watches = createWatches();\n\n                    var scrollContainer = container === global.document.body ? global : container;\n                    var debouncedCheck = debounce(watches.checkAll(watchInViewport), 15);\n\n                    addEvent(scrollContainer, 'scroll', debouncedCheck);\n\n                    if (scrollContainer === global) {\n                        addEvent(global, 'resize', debouncedCheck);\n                    }\n\n                    if (supportsMutationObserver) {\n                        observeDOM(watches, container, debouncedCheck);\n                    }\n\n                    // failsafe check, every 200ms we check for visible images\n                    // usecase: a hidden parent containing eleements\n                    // when the parent becomes visible, we have no event that the children\n                    // became visible\n                    setInterval(debouncedCheck, 150);\n\n                    function isInViewport(elt, offset, cb) {\n                        if (!cb) {\n                            return isVisible(elt, offset);\n                        }\n\n                        var remote = createRemote(elt, offset, cb);\n                        remote.watch();\n                        return remote;\n                    }\n\n                    function createRemote(elt, offset, cb) {\n                        function watch() {\n                            watches.add(elt, offset, cb);\n                        }\n\n                        function dispose() {\n                            watches.remove(elt);\n                        }\n\n                        return {\n                            watch: watch,\n                            dispose: dispose\n                        };\n                    }\n\n                    function watchInViewport(elt, offset, cb) {\n                        if (isVisible(elt, offset)) {\n                            watches.remove(elt);\n                            cb(elt);\n                        }\n                    }\n\n                    function isVisible(elt, offset) {\n                        if (!contains(global.document.documentElement, elt) || !contains(global.document.documentElement, container)) {\n                            return false;\n                        }\n\n                        // Check if the element is visible\n                        // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js\n                        if (!elt.offsetWidth || !elt.offsetHeight) {\n                            return false;\n                        }\n\n                        var eltRect = elt.getBoundingClientRect();\n                        var viewport = {};\n\n                        if (container === global.document.body) {\n                            viewport = {\n                                top: -offset,\n                                left: -offset,\n                                right: global.document.documentElement.clientWidth + offset,\n                                bottom: global.document.documentElement.clientHeight + offset\n                            };\n                        } else {\n                            var containerRect = container.getBoundingClientRect();\n                            viewport = {\n                                top: containerRect.top - offset,\n                                left: containerRect.left - offset,\n                                right: containerRect.right + offset,\n                                bottom: containerRect.bottom + offset\n                            };\n                        }\n\n                        // The element must overlap with the visible part of the viewport\n                        var visible =\n                            (\n                                (eltRect.right > viewport.left) &&\n                                (eltRect.left < viewport.right) &&\n                                (eltRect.bottom > viewport.top) &&\n                                (eltRect.top < viewport.bottom)\n                            );\n\n                        return visible;\n                    }\n\n                    return {\n                        container: container,\n                        isInViewport: isInViewport\n                    };\n                }\n\n                function createWatches() {\n                    var watches = [];\n\n                    function add(elt, offset, cb) {\n                        if (!isWatched(elt)) {\n                            watches.push([elt, offset, cb]);\n                        }\n                    }\n\n                    function remove(elt) {\n                        var pos = indexOf(elt);\n                        if (pos !== -1) {\n                            watches.splice(pos, 1);\n                        }\n                    }\n\n                    function indexOf(elt) {\n                        for (var i = watches.length - 1; i >= 0; i--) {\n                            if (watches[i][0] === elt) {\n                                return i;\n                            }\n                        }\n                        return -1;\n                    }\n\n                    function isWatched(elt) {\n                        return indexOf(elt) !== -1;\n                    }\n\n                    function checkAll(cb) {\n                        return function () {\n                            for (var i = watches.length - 1; i >= 0; i--) {\n                                cb.apply(this, watches[i]);\n                            }\n                        };\n                    }\n\n                    return {\n                        add: add,\n                        remove: remove,\n                        isWatched: isWatched,\n                        checkAll: checkAll\n                    };\n                }\n\n                function observeDOM(watches, container, cb) {\n                    var observer = new MutationObserver(watch);\n                    var filter = Array.prototype.filter;\n                    var concat = Array.prototype.concat;\n\n                    observer.observe(container, {\n                        childList: true,\n                        subtree: true,\n                        // changes like style/width/height/display will be catched\n                        attributes: true\n                    });\n\n                    function watch(mutations) {\n                        // some new DOM nodes where previously watched\n                        // we should check their positions\n                        if (mutations.some(knownNodes) === true) {\n                            setTimeout(cb, 0);\n                        }\n                    }\n\n                    function knownNodes(mutation) {\n                        var nodes = concat.call([],\n                            Array.prototype.slice.call(mutation.addedNodes),\n                            mutation.target\n                        );\n                        return filter.call(nodes, watches.isWatched).length > 0;\n                    }\n                }\n\n                /* WEBPACK VAR INJECTION */\n            }.call(exports, (function () {\n                return this;\n            }())))\n\n            /***/\n        }\n        /******/\n    ]);","date":"2021-01-30T04:16:46.669Z","updated":"2021-01-30T04:16:46.669Z","path":"photos/ins.js","layout":"false","title":"","comments":1,"_id":"cklxkqk0z005e2an98arpeju7","content":"/******/\n(function (modules) { // webpackBootstrap\n    /******/ // The module cache\n    /******/\n    var installedModules = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __webpack_require__(moduleId) {\n        /******/\n        /******/ // Check if module is in cache\n        /******/\n        if (installedModules[moduleId])\n            /******/\n            return installedModules[moduleId].exports;\n        /******/\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = installedModules[moduleId] = {\n            /******/\n            exports: {},\n            /******/\n            id: moduleId,\n            /******/\n            loaded: false\n            /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Flag the module as loaded\n        /******/\n        module.loaded = true;\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n    }\n    /******/\n    /******/\n    /******/ // expose the modules object (__webpack_modules__)\n    /******/\n    __webpack_require__.m = modules;\n    /******/\n    /******/ // expose the module cache\n    /******/\n    __webpack_require__.c = installedModules;\n    /******/\n    /******/ // __webpack_public_path__\n    /******/\n    __webpack_require__.p = \"/dist/\";\n    /******/\n    /******/ // Load entry module and return exports\n    /******/\n    return __webpack_require__(0);\n    /******/\n})\n    /************************************************************************/\n    /******/\n    ([\n        /* 0 */\n        /***/\n        function (module, exports, __webpack_require__) {\n\n            'use strict';\n\n            __webpack_require__(1);\n\n            var _view = __webpack_require__(2);\n\n            var _view2 = _interopRequireDefault(_view);\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n\n            /**\n             * @name impush-client \n             * @description 这个项目让我发家致富…\n             * @date 2016-12-1\n             */\n\n            var _collection = [];\n            var _count = 0;\n            var searchData;\n\n            function addMask(elem) {\n                var rect = elem.getBoundingClientRect();\n                var style = getComputedStyle(elem, null);\n\n                var mask = document.createElement('i');\n                mask.className = 'icon-film';\n                mask.style.color = '#fff';\n                mask.style.fontSize = '26px';\n                mask.style.position = 'absolute';\n                mask.style.right = '10px';\n                mask.style.bottom = '10px';\n                mask.style.zIndex = 1;\n                elem.parentNode.appendChild(mask);\n            }\n\n            var createVideoIncon = function createVideoIncon() {\n                var $videoImg = document.querySelectorAll('.thumb a[data-type=\"video\"]');\n                for (var i = 0, len = $videoImg.length; i < len; i++) {\n                    addMask($videoImg[i]);\n                }\n            };\n            var render = function render(res) {\n                var ulTmpl = \"\";\n                for (var j = 0, len2 = res.list.length; j < len2; j++) {\n                    var data = res.list[j].arr;\n                    var host = res.hostList[data.hostNum];\n                    var liTmpl = \"\";\n                    for (var i = 0, len = data.link.length; i < len; i++) {\n                        var minSrc = host + data.link[i] + '.th.jpg';\n                        var src = host + data.link[i];\n                        var type = data.type[i];\n                        var target = src + (type === 'video' ? '.mp4' : '.jpg');\n                        var size = data.size[i];\n                        src += '.jpg';\n\n                        liTmpl += '<figure class=\"thumb\" itemprop=\"associatedMedia\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\\\n                <a href=\"' + src + '\" itemprop=\"contentUrl\" data-size=\"' + size + '\" data-type=\"' + type + '\" data-target=\"' + target + '\">\\\n                  <img class=\"reward-img\" data-type=\"' + type + '\" data-src=\"' + minSrc + '\" src=\"/assets/img/empty.png\" itemprop=\"thumbnail\" onload=\"lzld(this)\">\\\n                </a>\\\n                <figcaption style=\"display:none\" itemprop=\"caption description\">' + data.text[i] + '</figcaption>\\\n            </figure>';\n                    }\n                    ulTmpl = ulTmpl + '<section class=\"archives album\"><h1 class=\"year\">' + data.year + '<em>' + data.month + '月</em></h1>\\\n        <ul class=\"img-box-ul\">' + liTmpl + '</ul>\\\n        </section>';\n                }\n                document.querySelector('.instagram').innerHTML = '<div class=\"photos\" itemscope=\"\">' + ulTmpl + '</div>';\n                createVideoIncon();\n                _view2.default.init();\n            };\n\n            var replacer = function replacer(str) {\n                var arr = str.split(\"/\");\n                return \"/assets/ins/\" + arr[arr.length - 1];\n            };\n\n            var ctrler = function ctrler(data) {\n                var imgObj = {};\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var y = data[i].y;\n                    var m = data[i].m;\n                    var src = replacer(data[i].src);\n                    var text = data[i].text;\n                    var key = y + \"\" + ((m + \"\").length == 1 ? \"0\" + m : m);\n                    if (imgObj[key]) {\n                        imgObj[key].srclist.push(src);\n                        imgObj[key].text.push(text);\n                    } else {\n                        imgObj[key] = {\n                            year: y,\n                            month: m,\n                            srclist: [src],\n                            text: [text]\n                        };\n                    }\n                }\n                render(imgObj);\n            };\n\n            function loadData(success) {\n                if (!searchData) {\n                    var xhr = new XMLHttpRequest();\n                    xhr.open('GET', './ins.json?t=' + +new Date(), true);\n\n                    xhr.onload = function () {\n                        if (this.status >= 200 && this.status < 300) {\n                            var res = JSON.parse(this.response);\n                            searchData = res;\n                            success(searchData);\n                        } else {\n                            console.error(this.statusText);\n                        }\n                    };\n\n                    xhr.onerror = function () {\n                        console.error(this.statusText);\n                    };\n\n                    xhr.send();\n                } else {\n                    success(searchData);\n                }\n            }\n\n            var Ins = {\n                init: function init() {\n                    loadData(function (data) {\n                        render(data);\n                    });\n                }\n            };\n\n            Ins.init();\n\n            // export default impush;\n\n            /***/\n        },\n        /* 1 */\n        /***/\n        function (module, exports, __webpack_require__) {\n\n            /* WEBPACK VAR INJECTION */\n            (function (global) {\n                'use strict';\n\n                var inViewport = __webpack_require__(3);\n                var lazyAttrs = ['data-src'];\n\n                global.lzld = lazyload();\n\n                // Provide libs using getAttribute early to get the good src\n                // and not the fake data-src\n                replaceGetAttribute('Image');\n                replaceGetAttribute('IFrame');\n\n                function registerLazyAttr(attr) {\n                    if (indexOf.call(lazyAttrs, attr) === -1) {\n                        lazyAttrs.push(attr);\n                    }\n                }\n\n                function lazyload(opts) {\n                    opts = merge({\n                        'offset': 333,\n                        'src': 'data-src',\n                        'container': false\n                    }, opts || {});\n\n                    if (typeof opts.src === 'string') {\n                        registerLazyAttr(opts.src);\n                    }\n\n                    var elts = [];\n\n                    function show(elt) {\n                        var src = findRealSrc(elt);\n\n                        if (src) {\n                            elt.src = src;\n                        }\n\n                        elt.setAttribute('data-lzled', true);\n                        elts[indexOf.call(elts, elt)] = null;\n                    }\n\n                    function findRealSrc(elt) {\n                        if (typeof opts.src === 'function') {\n                            return opts.src(elt);\n                        }\n\n                        return elt.getAttribute(opts.src);\n                    }\n\n                    function register(elt) {\n                        elt.onload = null;\n                        elt.removeAttribute('onload');\n                        elt.onerror = null;\n                        elt.removeAttribute('onerror');\n\n                        if (indexOf.call(elts, elt) === -1) {\n                            inViewport(elt, opts, show);\n                        }\n                    }\n\n                    return register;\n                }\n\n                function replaceGetAttribute(elementName) {\n                    var fullname = 'HTML' + elementName + 'Element';\n                    if (fullname in global === false) {\n                        return;\n                    }\n\n                    var original = global[fullname].prototype.getAttribute;\n                    global[fullname].prototype.getAttribute = function (name) {\n                        if (name === 'src') {\n                            var realSrc;\n                            for (var i = 0, max = lazyAttrs.length; i < max; i++) {\n                                realSrc = original.call(this, lazyAttrs[i]);\n                                if (realSrc) {\n                                    break;\n                                }\n                            }\n\n                            return realSrc || original.call(this, name);\n                        }\n\n                        // our own lazyloader will go through theses lines\n                        // because we use getAttribute(opts.src)\n                        return original.call(this, name);\n                    };\n                }\n\n                function merge(defaults, opts) {\n                    for (var name in defaults) {\n                        if (opts[name] === undefined) {\n                            opts[name] = defaults[name];\n                        }\n                    }\n\n                    return opts;\n                }\n\n                // http://webreflection.blogspot.fr/2011/06/partial-polyfills.html\n                function indexOf(value) {\n                    for (var i = this.length; i-- && this[i] !== value;) { }\n                    return i;\n                }\n\n                module.exports = lazyload;\n\n                // export default impush;\n                /* WEBPACK VAR INJECTION */\n            }.call(exports, (function () {\n                return this;\n            }())))\n\n            /***/\n        },\n        /* 2 */\n        /***/\n        function (module, exports) {\n\n            'use strict';\n\n            var initPhotoSwipeFromDOM = function initPhotoSwipeFromDOM(gallerySelector) {\n\n                // parse slide data (url, title, size ...) from DOM elements \n                // (children of gallerySelector)\n                var parseThumbnailElements = function parseThumbnailElements(el) {\n                    el = el.parentNode.parentNode;\n                    var thumbElements = el.getElementsByClassName('thumb'),\n                        numNodes = thumbElements.length,\n                        items = [],\n                        figureEl,\n                        linkEl,\n                        size,\n                        type,\n                        // video or not\n                        target,\n                        item;\n\n                    for (var i = 0; i < numNodes; i++) {\n\n                        figureEl = thumbElements[i]; // \n\n                        // include only element nodes \n                        if (figureEl.nodeType !== 1) {\n                            continue;\n                        }\n\n                        linkEl = figureEl.children[0]; // \n\n                        size = linkEl.getAttribute('data-size').split('x');\n                        type = linkEl.getAttribute('data-type');\n                        target = linkEl.getAttribute('data-target');\n                        // create slide object\n                        item = {\n                            src: linkEl.getAttribute('href'),\n                            w: parseInt(size[0], 10),\n                            h: parseInt(size[1], 10)\n                        };\n\n                        if (figureEl.children.length > 1) {\n                            item.title = figureEl.children[1].innerHTML;\n                        }\n\n                        if (linkEl.children.length > 0) {\n                            item.msrc = linkEl.children[0].getAttribute('src');\n                            item.type = type;\n                            item.target = target;\n                            item.html = '<video src=\"' + target + '\" controls=\"controls\" autoplay=\"autoplay\"></video>';\n                            if (type === 'video') {\n                                //item.src = null;\n                            }\n                        }\n\n                        item.el = figureEl; // save link to element for getThumbBoundsFn\n                        items.push(item);\n                    }\n\n                    return items;\n                };\n\n                // find nearest parent element\n                var closest = function closest(el, fn) {\n                    return el && (fn(el) ? el : closest(el.parentNode, fn));\n                };\n\n                // triggers when user clicks on thumbnail\n                var onThumbnailsClick = function onThumbnailsClick(e) {\n                    e = e || window.event;\n                    e.preventDefault ? e.preventDefault() : e.returnValue = false;\n\n                    var eTarget = e.target || e.srcElement;\n\n                    // find root element of slide\n                    var clickedListItem = closest(eTarget, function (el) {\n                        return el.tagName && el.tagName.toUpperCase() === 'FIGURE';\n                    });\n\n                    if (!clickedListItem) {\n                        return;\n                    }\n\n                    // find index of clicked item by looping through all child nodes\n                    // alternatively, you may define index via data- attribute\n                    var clickedGallery = clickedListItem.parentNode,\n\n                        // childNodes = clickedListItem.parentNode.childNodes,\n                        // numChildNodes = childNodes.length,\n                        childNodes = document.getElementsByClassName('thumb'),\n                        numChildNodes = childNodes.length,\n                        nodeIndex = 0,\n                        index;\n\n                    for (var i = 0; i < numChildNodes; i++) {\n                        if (childNodes[i].nodeType !== 1) {\n                            continue;\n                        }\n\n                        if (childNodes[i] === clickedListItem) {\n                            index = nodeIndex;\n                            break;\n                        }\n                        nodeIndex++;\n                    }\n\n                    if (index >= 0) {\n                        // open PhotoSwipe if valid index found\n                        openPhotoSwipe(index, clickedGallery);\n                    }\n                    return false;\n                };\n\n                // parse picture index and gallery index from URL (#&pid=1&gid=2)\n                var photoswipeParseHash = function photoswipeParseHash() {\n                    var hash = window.location.hash.substring(1),\n                        params = {};\n\n                    if (hash.length < 5) {\n                        return params;\n                    }\n\n                    var vars = hash.split('&');\n                    for (var i = 0; i < vars.length; i++) {\n                        if (!vars[i]) {\n                            continue;\n                        }\n                        var pair = vars[i].split('=');\n                        if (pair.length < 2) {\n                            continue;\n                        }\n                        params[pair[0]] = pair[1];\n                    }\n\n                    if (params.gid) {\n                        params.gid = parseInt(params.gid, 10);\n                    }\n\n                    return params;\n                };\n\n                var openPhotoSwipe = function openPhotoSwipe(index, galleryElement, disableAnimation, fromURL) {\n                    var pswpElement = document.querySelectorAll('.pswp')[0],\n                        gallery,\n                        options,\n                        items;\n\n                    items = parseThumbnailElements(galleryElement);\n                    console.log(items)\n                    // define options (if needed)\n                    options = {\n\n                        // define gallery index (for URL)\n                        galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n\n                        getThumbBoundsFn: function getThumbBoundsFn(index) {\n                            // See Options -> getThumbBoundsFn section of documentation for more info\n                            var thumbnail = items[index].el.getElementsByTagName('img')[0],\n                                // find thumbnail\n                                pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n                                rect = thumbnail.getBoundingClientRect();\n\n                            return {\n                                x: rect.left,\n                                y: rect.top + pageYScroll,\n                                w: rect.width\n                            };\n                        }\n\n                    };\n\n                    // PhotoSwipe opened from URL\n                    if (fromURL) {\n                        if (options.galleryPIDs) {\n                            // parse real index when custom PIDs are used \n                            // http://photoswipe.com/documentation/faq.html#custom-pid-in-url\n                            for (var j = 0; j < items.length; j++) {\n                                if (items[j].pid == index) {\n                                    options.index = j;\n                                    break;\n                                }\n                            }\n                        } else {\n                            // in URL indexes start from 1\n                            options.index = parseInt(index, 10) - 1;\n                        }\n                    } else {\n                        options.index = parseInt(index, 10);\n                    }\n\n                    // exit if index not found\n                    if (isNaN(options.index)) {\n                        return;\n                    }\n\n                    if (disableAnimation) {\n                        options.showAnimationDuration = 0;\n                    }\n\n                    // Pass data to PhotoSwipe and initialize it\n                    gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\n                    gallery.init();\n\n                    var $tempVideo;\n                    var stopVideoHandle = function stopVideoHandle() {\n                        if ($tempVideo) {\n                            $tempVideo.remove();\n                            $tempVideo = null;\n                        }\n                    };\n                    var changeHandle = function changeHandle() {\n                        var item = gallery.currItem;\n                        stopVideoHandle();\n                        if (item.type === 'video') {\n                            var $ctn = item.container;\n                            var style = $ctn.getElementsByClassName('pswp__img')[0].style;\n                            var $video = document.createElement('video');\n                            $video.setAttribute('autoplay', 'autoplay');\n                            $video.setAttribute('controls', 'controls');\n                            $video.setAttribute('src', item.target);\n                            $video.style.width = style.width;\n                            $video.style.height = style.height;\n                            $video.style.position = 'absolute';\n                            $video.style.zIndex = 2;\n                            $tempVideo = $video;\n                            $ctn.appendChild($video);\n                        }\n                    };\n                    gallery.listen('initialZoomIn', changeHandle);\n                    gallery.listen('afterChange', changeHandle);\n                    gallery.listen('initialZoomOut', stopVideoHandle);\n                };\n\n                // loop through all gallery elements and bind events\n                var galleryElements = document.querySelectorAll(gallerySelector);\n                for (var i = 0, l = galleryElements.length; i < l; i++) {\n                    galleryElements[i].setAttribute('data-pswp-uid', i + 1);\n                    galleryElements[i].onclick = onThumbnailsClick;\n                }\n\n                // Parse URL and open gallery if it contains #&pid=3&gid=1\n                var hashData = photoswipeParseHash();\n                if (hashData.pid && hashData.gid) {\n                    openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);\n                }\n            };\n\n            var Viewer = function () {\n                function init() {\n                    initPhotoSwipeFromDOM('.photos');\n                }\n                return {\n                    init: init\n                };\n            }();\n\n            module.exports = Viewer;\n\n            /***/\n        },\n        /* 3 */\n        /***/\n        function (module, exports) {\n\n            /* WEBPACK VAR INJECTION */\n            (function (global) {\n                module.exports = inViewport;\n\n                var instances = [];\n                var supportsMutationObserver = typeof global.MutationObserver === 'function';\n\n                function inViewport(elt, params, cb) {\n                    var opts = {\n                        container: global.document.body,\n                        offset: 0\n                    };\n\n                    if (params === undefined || typeof params === 'function') {\n                        cb = params;\n                        params = {};\n                    }\n\n                    var container = opts.container = params.container || opts.container;\n                    var offset = opts.offset = params.offset || opts.offset;\n\n                    for (var i = 0; i < instances.length; i++) {\n                        if (instances[i].container === container) {\n                            return instances[i].isInViewport(elt, offset, cb);\n                        }\n                    }\n\n                    return instances[\n                        instances.push(createInViewport(container)) - 1\n                    ].isInViewport(elt, offset, cb);\n                }\n\n                function addEvent(el, type, fn) {\n                    if (el.attachEvent) {\n                        el.attachEvent('on' + type, fn);\n                    } else {\n                        el.addEventListener(type, fn, false);\n                    }\n                }\n\n                function debounce(func, wait, immediate) {\n                    var timeout;\n                    return function () {\n                        var context = this,\n                            args = arguments;\n                        var callNow = immediate && !timeout;\n                        clearTimeout(timeout);\n                        timeout = setTimeout(later, wait);\n                        if (callNow) func.apply(context, args);\n\n                        function later() {\n                            timeout = null;\n                            if (!immediate) func.apply(context, args);\n                        }\n                    };\n                }\n\n                // https://github.com/jquery/sizzle/blob/3136f48b90e3edc84cbaaa6f6f7734ef03775a07/sizzle.js#L708\n                var contains = function () {\n                    if (!global.document) {\n                        return true;\n                    }\n                    return global.document.documentElement.compareDocumentPosition ?\n                        function (a, b) {\n                            return !!(a.compareDocumentPosition(b) & 16);\n                        } :\n                        global.document.documentElement.contains ?\n                            function (a, b) {\n                                return a !== b && (a.contains ? a.contains(b) : false);\n                            } :\n                            function (a, b) {\n                                while (b = b.parentNode) {\n                                    if (b === a) {\n                                        return true;\n                                    }\n                                }\n                                return false;\n                            };\n                }\n\n                function createInViewport(container) {\n                    var watches = createWatches();\n\n                    var scrollContainer = container === global.document.body ? global : container;\n                    var debouncedCheck = debounce(watches.checkAll(watchInViewport), 15);\n\n                    addEvent(scrollContainer, 'scroll', debouncedCheck);\n\n                    if (scrollContainer === global) {\n                        addEvent(global, 'resize', debouncedCheck);\n                    }\n\n                    if (supportsMutationObserver) {\n                        observeDOM(watches, container, debouncedCheck);\n                    }\n\n                    // failsafe check, every 200ms we check for visible images\n                    // usecase: a hidden parent containing eleements\n                    // when the parent becomes visible, we have no event that the children\n                    // became visible\n                    setInterval(debouncedCheck, 150);\n\n                    function isInViewport(elt, offset, cb) {\n                        if (!cb) {\n                            return isVisible(elt, offset);\n                        }\n\n                        var remote = createRemote(elt, offset, cb);\n                        remote.watch();\n                        return remote;\n                    }\n\n                    function createRemote(elt, offset, cb) {\n                        function watch() {\n                            watches.add(elt, offset, cb);\n                        }\n\n                        function dispose() {\n                            watches.remove(elt);\n                        }\n\n                        return {\n                            watch: watch,\n                            dispose: dispose\n                        };\n                    }\n\n                    function watchInViewport(elt, offset, cb) {\n                        if (isVisible(elt, offset)) {\n                            watches.remove(elt);\n                            cb(elt);\n                        }\n                    }\n\n                    function isVisible(elt, offset) {\n                        if (!contains(global.document.documentElement, elt) || !contains(global.document.documentElement, container)) {\n                            return false;\n                        }\n\n                        // Check if the element is visible\n                        // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js\n                        if (!elt.offsetWidth || !elt.offsetHeight) {\n                            return false;\n                        }\n\n                        var eltRect = elt.getBoundingClientRect();\n                        var viewport = {};\n\n                        if (container === global.document.body) {\n                            viewport = {\n                                top: -offset,\n                                left: -offset,\n                                right: global.document.documentElement.clientWidth + offset,\n                                bottom: global.document.documentElement.clientHeight + offset\n                            };\n                        } else {\n                            var containerRect = container.getBoundingClientRect();\n                            viewport = {\n                                top: containerRect.top - offset,\n                                left: containerRect.left - offset,\n                                right: containerRect.right + offset,\n                                bottom: containerRect.bottom + offset\n                            };\n                        }\n\n                        // The element must overlap with the visible part of the viewport\n                        var visible =\n                            (\n                                (eltRect.right > viewport.left) &&\n                                (eltRect.left < viewport.right) &&\n                                (eltRect.bottom > viewport.top) &&\n                                (eltRect.top < viewport.bottom)\n                            );\n\n                        return visible;\n                    }\n\n                    return {\n                        container: container,\n                        isInViewport: isInViewport\n                    };\n                }\n\n                function createWatches() {\n                    var watches = [];\n\n                    function add(elt, offset, cb) {\n                        if (!isWatched(elt)) {\n                            watches.push([elt, offset, cb]);\n                        }\n                    }\n\n                    function remove(elt) {\n                        var pos = indexOf(elt);\n                        if (pos !== -1) {\n                            watches.splice(pos, 1);\n                        }\n                    }\n\n                    function indexOf(elt) {\n                        for (var i = watches.length - 1; i >= 0; i--) {\n                            if (watches[i][0] === elt) {\n                                return i;\n                            }\n                        }\n                        return -1;\n                    }\n\n                    function isWatched(elt) {\n                        return indexOf(elt) !== -1;\n                    }\n\n                    function checkAll(cb) {\n                        return function () {\n                            for (var i = watches.length - 1; i >= 0; i--) {\n                                cb.apply(this, watches[i]);\n                            }\n                        };\n                    }\n\n                    return {\n                        add: add,\n                        remove: remove,\n                        isWatched: isWatched,\n                        checkAll: checkAll\n                    };\n                }\n\n                function observeDOM(watches, container, cb) {\n                    var observer = new MutationObserver(watch);\n                    var filter = Array.prototype.filter;\n                    var concat = Array.prototype.concat;\n\n                    observer.observe(container, {\n                        childList: true,\n                        subtree: true,\n                        // changes like style/width/height/display will be catched\n                        attributes: true\n                    });\n\n                    function watch(mutations) {\n                        // some new DOM nodes where previously watched\n                        // we should check their positions\n                        if (mutations.some(knownNodes) === true) {\n                            setTimeout(cb, 0);\n                        }\n                    }\n\n                    function knownNodes(mutation) {\n                        var nodes = concat.call([],\n                            Array.prototype.slice.call(mutation.addedNodes),\n                            mutation.target\n                        );\n                        return filter.call(nodes, watches.isWatched).length > 0;\n                    }\n                }\n\n                /* WEBPACK VAR INJECTION */\n            }.call(exports, (function () {\n                return this;\n            }())))\n\n            /***/\n        }\n        /******/\n    ]);","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"","more":"/******/\n(function (modules) { // webpackBootstrap\n    /******/ // The module cache\n    /******/\n    var installedModules = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __webpack_require__(moduleId) {\n        /******/\n        /******/ // Check if module is in cache\n        /******/\n        if (installedModules[moduleId])\n            /******/\n            return installedModules[moduleId].exports;\n        /******/\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = installedModules[moduleId] = {\n            /******/\n            exports: {},\n            /******/\n            id: moduleId,\n            /******/\n            loaded: false\n            /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Flag the module as loaded\n        /******/\n        module.loaded = true;\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n    }\n    /******/\n    /******/\n    /******/ // expose the modules object (__webpack_modules__)\n    /******/\n    __webpack_require__.m = modules;\n    /******/\n    /******/ // expose the module cache\n    /******/\n    __webpack_require__.c = installedModules;\n    /******/\n    /******/ // __webpack_public_path__\n    /******/\n    __webpack_require__.p = \"/dist/\";\n    /******/\n    /******/ // Load entry module and return exports\n    /******/\n    return __webpack_require__(0);\n    /******/\n})\n    /************************************************************************/\n    /******/\n    ([\n        /* 0 */\n        /***/\n        function (module, exports, __webpack_require__) {\n\n            'use strict';\n\n            __webpack_require__(1);\n\n            var _view = __webpack_require__(2);\n\n            var _view2 = _interopRequireDefault(_view);\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n\n            /**\n             * @name impush-client \n             * @description 这个项目让我发家致富…\n             * @date 2016-12-1\n             */\n\n            var _collection = [];\n            var _count = 0;\n            var searchData;\n\n            function addMask(elem) {\n                var rect = elem.getBoundingClientRect();\n                var style = getComputedStyle(elem, null);\n\n                var mask = document.createElement('i');\n                mask.className = 'icon-film';\n                mask.style.color = '#fff';\n                mask.style.fontSize = '26px';\n                mask.style.position = 'absolute';\n                mask.style.right = '10px';\n                mask.style.bottom = '10px';\n                mask.style.zIndex = 1;\n                elem.parentNode.appendChild(mask);\n            }\n\n            var createVideoIncon = function createVideoIncon() {\n                var $videoImg = document.querySelectorAll('.thumb a[data-type=\"video\"]');\n                for (var i = 0, len = $videoImg.length; i < len; i++) {\n                    addMask($videoImg[i]);\n                }\n            };\n            var render = function render(res) {\n                var ulTmpl = \"\";\n                for (var j = 0, len2 = res.list.length; j < len2; j++) {\n                    var data = res.list[j].arr;\n                    var host = res.hostList[data.hostNum];\n                    var liTmpl = \"\";\n                    for (var i = 0, len = data.link.length; i < len; i++) {\n                        var minSrc = host + data.link[i] + '.th.jpg';\n                        var src = host + data.link[i];\n                        var type = data.type[i];\n                        var target = src + (type === 'video' ? '.mp4' : '.jpg');\n                        var size = data.size[i];\n                        src += '.jpg';\n\n                        liTmpl += '<figure class=\"thumb\" itemprop=\"associatedMedia\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\\\n                <a href=\"' + src + '\" itemprop=\"contentUrl\" data-size=\"' + size + '\" data-type=\"' + type + '\" data-target=\"' + target + '\">\\\n                  <img class=\"reward-img\" data-type=\"' + type + '\" data-src=\"' + minSrc + '\" src=\"/assets/img/empty.png\" itemprop=\"thumbnail\" onload=\"lzld(this)\">\\\n                </a>\\\n                <figcaption style=\"display:none\" itemprop=\"caption description\">' + data.text[i] + '</figcaption>\\\n            </figure>';\n                    }\n                    ulTmpl = ulTmpl + '<section class=\"archives album\"><h1 class=\"year\">' + data.year + '<em>' + data.month + '月</em></h1>\\\n        <ul class=\"img-box-ul\">' + liTmpl + '</ul>\\\n        </section>';\n                }\n                document.querySelector('.instagram').innerHTML = '<div class=\"photos\" itemscope=\"\">' + ulTmpl + '</div>';\n                createVideoIncon();\n                _view2.default.init();\n            };\n\n            var replacer = function replacer(str) {\n                var arr = str.split(\"/\");\n                return \"/assets/ins/\" + arr[arr.length - 1];\n            };\n\n            var ctrler = function ctrler(data) {\n                var imgObj = {};\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var y = data[i].y;\n                    var m = data[i].m;\n                    var src = replacer(data[i].src);\n                    var text = data[i].text;\n                    var key = y + \"\" + ((m + \"\").length == 1 ? \"0\" + m : m);\n                    if (imgObj[key]) {\n                        imgObj[key].srclist.push(src);\n                        imgObj[key].text.push(text);\n                    } else {\n                        imgObj[key] = {\n                            year: y,\n                            month: m,\n                            srclist: [src],\n                            text: [text]\n                        };\n                    }\n                }\n                render(imgObj);\n            };\n\n            function loadData(success) {\n                if (!searchData) {\n                    var xhr = new XMLHttpRequest();\n                    xhr.open('GET', './ins.json?t=' + +new Date(), true);\n\n                    xhr.onload = function () {\n                        if (this.status >= 200 && this.status < 300) {\n                            var res = JSON.parse(this.response);\n                            searchData = res;\n                            success(searchData);\n                        } else {\n                            console.error(this.statusText);\n                        }\n                    };\n\n                    xhr.onerror = function () {\n                        console.error(this.statusText);\n                    };\n\n                    xhr.send();\n                } else {\n                    success(searchData);\n                }\n            }\n\n            var Ins = {\n                init: function init() {\n                    loadData(function (data) {\n                        render(data);\n                    });\n                }\n            };\n\n            Ins.init();\n\n            // export default impush;\n\n            /***/\n        },\n        /* 1 */\n        /***/\n        function (module, exports, __webpack_require__) {\n\n            /* WEBPACK VAR INJECTION */\n            (function (global) {\n                'use strict';\n\n                var inViewport = __webpack_require__(3);\n                var lazyAttrs = ['data-src'];\n\n                global.lzld = lazyload();\n\n                // Provide libs using getAttribute early to get the good src\n                // and not the fake data-src\n                replaceGetAttribute('Image');\n                replaceGetAttribute('IFrame');\n\n                function registerLazyAttr(attr) {\n                    if (indexOf.call(lazyAttrs, attr) === -1) {\n                        lazyAttrs.push(attr);\n                    }\n                }\n\n                function lazyload(opts) {\n                    opts = merge({\n                        'offset': 333,\n                        'src': 'data-src',\n                        'container': false\n                    }, opts || {});\n\n                    if (typeof opts.src === 'string') {\n                        registerLazyAttr(opts.src);\n                    }\n\n                    var elts = [];\n\n                    function show(elt) {\n                        var src = findRealSrc(elt);\n\n                        if (src) {\n                            elt.src = src;\n                        }\n\n                        elt.setAttribute('data-lzled', true);\n                        elts[indexOf.call(elts, elt)] = null;\n                    }\n\n                    function findRealSrc(elt) {\n                        if (typeof opts.src === 'function') {\n                            return opts.src(elt);\n                        }\n\n                        return elt.getAttribute(opts.src);\n                    }\n\n                    function register(elt) {\n                        elt.onload = null;\n                        elt.removeAttribute('onload');\n                        elt.onerror = null;\n                        elt.removeAttribute('onerror');\n\n                        if (indexOf.call(elts, elt) === -1) {\n                            inViewport(elt, opts, show);\n                        }\n                    }\n\n                    return register;\n                }\n\n                function replaceGetAttribute(elementName) {\n                    var fullname = 'HTML' + elementName + 'Element';\n                    if (fullname in global === false) {\n                        return;\n                    }\n\n                    var original = global[fullname].prototype.getAttribute;\n                    global[fullname].prototype.getAttribute = function (name) {\n                        if (name === 'src') {\n                            var realSrc;\n                            for (var i = 0, max = lazyAttrs.length; i < max; i++) {\n                                realSrc = original.call(this, lazyAttrs[i]);\n                                if (realSrc) {\n                                    break;\n                                }\n                            }\n\n                            return realSrc || original.call(this, name);\n                        }\n\n                        // our own lazyloader will go through theses lines\n                        // because we use getAttribute(opts.src)\n                        return original.call(this, name);\n                    };\n                }\n\n                function merge(defaults, opts) {\n                    for (var name in defaults) {\n                        if (opts[name] === undefined) {\n                            opts[name] = defaults[name];\n                        }\n                    }\n\n                    return opts;\n                }\n\n                // http://webreflection.blogspot.fr/2011/06/partial-polyfills.html\n                function indexOf(value) {\n                    for (var i = this.length; i-- && this[i] !== value;) { }\n                    return i;\n                }\n\n                module.exports = lazyload;\n\n                // export default impush;\n                /* WEBPACK VAR INJECTION */\n            }.call(exports, (function () {\n                return this;\n            }())))\n\n            /***/\n        },\n        /* 2 */\n        /***/\n        function (module, exports) {\n\n            'use strict';\n\n            var initPhotoSwipeFromDOM = function initPhotoSwipeFromDOM(gallerySelector) {\n\n                // parse slide data (url, title, size ...) from DOM elements \n                // (children of gallerySelector)\n                var parseThumbnailElements = function parseThumbnailElements(el) {\n                    el = el.parentNode.parentNode;\n                    var thumbElements = el.getElementsByClassName('thumb'),\n                        numNodes = thumbElements.length,\n                        items = [],\n                        figureEl,\n                        linkEl,\n                        size,\n                        type,\n                        // video or not\n                        target,\n                        item;\n\n                    for (var i = 0; i < numNodes; i++) {\n\n                        figureEl = thumbElements[i]; // \n\n                        // include only element nodes \n                        if (figureEl.nodeType !== 1) {\n                            continue;\n                        }\n\n                        linkEl = figureEl.children[0]; // \n\n                        size = linkEl.getAttribute('data-size').split('x');\n                        type = linkEl.getAttribute('data-type');\n                        target = linkEl.getAttribute('data-target');\n                        // create slide object\n                        item = {\n                            src: linkEl.getAttribute('href'),\n                            w: parseInt(size[0], 10),\n                            h: parseInt(size[1], 10)\n                        };\n\n                        if (figureEl.children.length > 1) {\n                            item.title = figureEl.children[1].innerHTML;\n                        }\n\n                        if (linkEl.children.length > 0) {\n                            item.msrc = linkEl.children[0].getAttribute('src');\n                            item.type = type;\n                            item.target = target;\n                            item.html = '<video src=\"' + target + '\" controls=\"controls\" autoplay=\"autoplay\"></video>';\n                            if (type === 'video') {\n                                //item.src = null;\n                            }\n                        }\n\n                        item.el = figureEl; // save link to element for getThumbBoundsFn\n                        items.push(item);\n                    }\n\n                    return items;\n                };\n\n                // find nearest parent element\n                var closest = function closest(el, fn) {\n                    return el && (fn(el) ? el : closest(el.parentNode, fn));\n                };\n\n                // triggers when user clicks on thumbnail\n                var onThumbnailsClick = function onThumbnailsClick(e) {\n                    e = e || window.event;\n                    e.preventDefault ? e.preventDefault() : e.returnValue = false;\n\n                    var eTarget = e.target || e.srcElement;\n\n                    // find root element of slide\n                    var clickedListItem = closest(eTarget, function (el) {\n                        return el.tagName && el.tagName.toUpperCase() === 'FIGURE';\n                    });\n\n                    if (!clickedListItem) {\n                        return;\n                    }\n\n                    // find index of clicked item by looping through all child nodes\n                    // alternatively, you may define index via data- attribute\n                    var clickedGallery = clickedListItem.parentNode,\n\n                        // childNodes = clickedListItem.parentNode.childNodes,\n                        // numChildNodes = childNodes.length,\n                        childNodes = document.getElementsByClassName('thumb'),\n                        numChildNodes = childNodes.length,\n                        nodeIndex = 0,\n                        index;\n\n                    for (var i = 0; i < numChildNodes; i++) {\n                        if (childNodes[i].nodeType !== 1) {\n                            continue;\n                        }\n\n                        if (childNodes[i] === clickedListItem) {\n                            index = nodeIndex;\n                            break;\n                        }\n                        nodeIndex++;\n                    }\n\n                    if (index >= 0) {\n                        // open PhotoSwipe if valid index found\n                        openPhotoSwipe(index, clickedGallery);\n                    }\n                    return false;\n                };\n\n                // parse picture index and gallery index from URL (#&pid=1&gid=2)\n                var photoswipeParseHash = function photoswipeParseHash() {\n                    var hash = window.location.hash.substring(1),\n                        params = {};\n\n                    if (hash.length < 5) {\n                        return params;\n                    }\n\n                    var vars = hash.split('&');\n                    for (var i = 0; i < vars.length; i++) {\n                        if (!vars[i]) {\n                            continue;\n                        }\n                        var pair = vars[i].split('=');\n                        if (pair.length < 2) {\n                            continue;\n                        }\n                        params[pair[0]] = pair[1];\n                    }\n\n                    if (params.gid) {\n                        params.gid = parseInt(params.gid, 10);\n                    }\n\n                    return params;\n                };\n\n                var openPhotoSwipe = function openPhotoSwipe(index, galleryElement, disableAnimation, fromURL) {\n                    var pswpElement = document.querySelectorAll('.pswp')[0],\n                        gallery,\n                        options,\n                        items;\n\n                    items = parseThumbnailElements(galleryElement);\n                    console.log(items)\n                    // define options (if needed)\n                    options = {\n\n                        // define gallery index (for URL)\n                        galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n\n                        getThumbBoundsFn: function getThumbBoundsFn(index) {\n                            // See Options -> getThumbBoundsFn section of documentation for more info\n                            var thumbnail = items[index].el.getElementsByTagName('img')[0],\n                                // find thumbnail\n                                pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n                                rect = thumbnail.getBoundingClientRect();\n\n                            return {\n                                x: rect.left,\n                                y: rect.top + pageYScroll,\n                                w: rect.width\n                            };\n                        }\n\n                    };\n\n                    // PhotoSwipe opened from URL\n                    if (fromURL) {\n                        if (options.galleryPIDs) {\n                            // parse real index when custom PIDs are used \n                            // http://photoswipe.com/documentation/faq.html#custom-pid-in-url\n                            for (var j = 0; j < items.length; j++) {\n                                if (items[j].pid == index) {\n                                    options.index = j;\n                                    break;\n                                }\n                            }\n                        } else {\n                            // in URL indexes start from 1\n                            options.index = parseInt(index, 10) - 1;\n                        }\n                    } else {\n                        options.index = parseInt(index, 10);\n                    }\n\n                    // exit if index not found\n                    if (isNaN(options.index)) {\n                        return;\n                    }\n\n                    if (disableAnimation) {\n                        options.showAnimationDuration = 0;\n                    }\n\n                    // Pass data to PhotoSwipe and initialize it\n                    gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\n                    gallery.init();\n\n                    var $tempVideo;\n                    var stopVideoHandle = function stopVideoHandle() {\n                        if ($tempVideo) {\n                            $tempVideo.remove();\n                            $tempVideo = null;\n                        }\n                    };\n                    var changeHandle = function changeHandle() {\n                        var item = gallery.currItem;\n                        stopVideoHandle();\n                        if (item.type === 'video') {\n                            var $ctn = item.container;\n                            var style = $ctn.getElementsByClassName('pswp__img')[0].style;\n                            var $video = document.createElement('video');\n                            $video.setAttribute('autoplay', 'autoplay');\n                            $video.setAttribute('controls', 'controls');\n                            $video.setAttribute('src', item.target);\n                            $video.style.width = style.width;\n                            $video.style.height = style.height;\n                            $video.style.position = 'absolute';\n                            $video.style.zIndex = 2;\n                            $tempVideo = $video;\n                            $ctn.appendChild($video);\n                        }\n                    };\n                    gallery.listen('initialZoomIn', changeHandle);\n                    gallery.listen('afterChange', changeHandle);\n                    gallery.listen('initialZoomOut', stopVideoHandle);\n                };\n\n                // loop through all gallery elements and bind events\n                var galleryElements = document.querySelectorAll(gallerySelector);\n                for (var i = 0, l = galleryElements.length; i < l; i++) {\n                    galleryElements[i].setAttribute('data-pswp-uid', i + 1);\n                    galleryElements[i].onclick = onThumbnailsClick;\n                }\n\n                // Parse URL and open gallery if it contains #&pid=3&gid=1\n                var hashData = photoswipeParseHash();\n                if (hashData.pid && hashData.gid) {\n                    openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);\n                }\n            };\n\n            var Viewer = function () {\n                function init() {\n                    initPhotoSwipeFromDOM('.photos');\n                }\n                return {\n                    init: init\n                };\n            }();\n\n            module.exports = Viewer;\n\n            /***/\n        },\n        /* 3 */\n        /***/\n        function (module, exports) {\n\n            /* WEBPACK VAR INJECTION */\n            (function (global) {\n                module.exports = inViewport;\n\n                var instances = [];\n                var supportsMutationObserver = typeof global.MutationObserver === 'function';\n\n                function inViewport(elt, params, cb) {\n                    var opts = {\n                        container: global.document.body,\n                        offset: 0\n                    };\n\n                    if (params === undefined || typeof params === 'function') {\n                        cb = params;\n                        params = {};\n                    }\n\n                    var container = opts.container = params.container || opts.container;\n                    var offset = opts.offset = params.offset || opts.offset;\n\n                    for (var i = 0; i < instances.length; i++) {\n                        if (instances[i].container === container) {\n                            return instances[i].isInViewport(elt, offset, cb);\n                        }\n                    }\n\n                    return instances[\n                        instances.push(createInViewport(container)) - 1\n                    ].isInViewport(elt, offset, cb);\n                }\n\n                function addEvent(el, type, fn) {\n                    if (el.attachEvent) {\n                        el.attachEvent('on' + type, fn);\n                    } else {\n                        el.addEventListener(type, fn, false);\n                    }\n                }\n\n                function debounce(func, wait, immediate) {\n                    var timeout;\n                    return function () {\n                        var context = this,\n                            args = arguments;\n                        var callNow = immediate && !timeout;\n                        clearTimeout(timeout);\n                        timeout = setTimeout(later, wait);\n                        if (callNow) func.apply(context, args);\n\n                        function later() {\n                            timeout = null;\n                            if (!immediate) func.apply(context, args);\n                        }\n                    };\n                }\n\n                // https://github.com/jquery/sizzle/blob/3136f48b90e3edc84cbaaa6f6f7734ef03775a07/sizzle.js#L708\n                var contains = function () {\n                    if (!global.document) {\n                        return true;\n                    }\n                    return global.document.documentElement.compareDocumentPosition ?\n                        function (a, b) {\n                            return !!(a.compareDocumentPosition(b) & 16);\n                        } :\n                        global.document.documentElement.contains ?\n                            function (a, b) {\n                                return a !== b && (a.contains ? a.contains(b) : false);\n                            } :\n                            function (a, b) {\n                                while (b = b.parentNode) {\n                                    if (b === a) {\n                                        return true;\n                                    }\n                                }\n                                return false;\n                            };\n                }\n\n                function createInViewport(container) {\n                    var watches = createWatches();\n\n                    var scrollContainer = container === global.document.body ? global : container;\n                    var debouncedCheck = debounce(watches.checkAll(watchInViewport), 15);\n\n                    addEvent(scrollContainer, 'scroll', debouncedCheck);\n\n                    if (scrollContainer === global) {\n                        addEvent(global, 'resize', debouncedCheck);\n                    }\n\n                    if (supportsMutationObserver) {\n                        observeDOM(watches, container, debouncedCheck);\n                    }\n\n                    // failsafe check, every 200ms we check for visible images\n                    // usecase: a hidden parent containing eleements\n                    // when the parent becomes visible, we have no event that the children\n                    // became visible\n                    setInterval(debouncedCheck, 150);\n\n                    function isInViewport(elt, offset, cb) {\n                        if (!cb) {\n                            return isVisible(elt, offset);\n                        }\n\n                        var remote = createRemote(elt, offset, cb);\n                        remote.watch();\n                        return remote;\n                    }\n\n                    function createRemote(elt, offset, cb) {\n                        function watch() {\n                            watches.add(elt, offset, cb);\n                        }\n\n                        function dispose() {\n                            watches.remove(elt);\n                        }\n\n                        return {\n                            watch: watch,\n                            dispose: dispose\n                        };\n                    }\n\n                    function watchInViewport(elt, offset, cb) {\n                        if (isVisible(elt, offset)) {\n                            watches.remove(elt);\n                            cb(elt);\n                        }\n                    }\n\n                    function isVisible(elt, offset) {\n                        if (!contains(global.document.documentElement, elt) || !contains(global.document.documentElement, container)) {\n                            return false;\n                        }\n\n                        // Check if the element is visible\n                        // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js\n                        if (!elt.offsetWidth || !elt.offsetHeight) {\n                            return false;\n                        }\n\n                        var eltRect = elt.getBoundingClientRect();\n                        var viewport = {};\n\n                        if (container === global.document.body) {\n                            viewport = {\n                                top: -offset,\n                                left: -offset,\n                                right: global.document.documentElement.clientWidth + offset,\n                                bottom: global.document.documentElement.clientHeight + offset\n                            };\n                        } else {\n                            var containerRect = container.getBoundingClientRect();\n                            viewport = {\n                                top: containerRect.top - offset,\n                                left: containerRect.left - offset,\n                                right: containerRect.right + offset,\n                                bottom: containerRect.bottom + offset\n                            };\n                        }\n\n                        // The element must overlap with the visible part of the viewport\n                        var visible =\n                            (\n                                (eltRect.right > viewport.left) &&\n                                (eltRect.left < viewport.right) &&\n                                (eltRect.bottom > viewport.top) &&\n                                (eltRect.top < viewport.bottom)\n                            );\n\n                        return visible;\n                    }\n\n                    return {\n                        container: container,\n                        isInViewport: isInViewport\n                    };\n                }\n\n                function createWatches() {\n                    var watches = [];\n\n                    function add(elt, offset, cb) {\n                        if (!isWatched(elt)) {\n                            watches.push([elt, offset, cb]);\n                        }\n                    }\n\n                    function remove(elt) {\n                        var pos = indexOf(elt);\n                        if (pos !== -1) {\n                            watches.splice(pos, 1);\n                        }\n                    }\n\n                    function indexOf(elt) {\n                        for (var i = watches.length - 1; i >= 0; i--) {\n                            if (watches[i][0] === elt) {\n                                return i;\n                            }\n                        }\n                        return -1;\n                    }\n\n                    function isWatched(elt) {\n                        return indexOf(elt) !== -1;\n                    }\n\n                    function checkAll(cb) {\n                        return function () {\n                            for (var i = watches.length - 1; i >= 0; i--) {\n                                cb.apply(this, watches[i]);\n                            }\n                        };\n                    }\n\n                    return {\n                        add: add,\n                        remove: remove,\n                        isWatched: isWatched,\n                        checkAll: checkAll\n                    };\n                }\n\n                function observeDOM(watches, container, cb) {\n                    var observer = new MutationObserver(watch);\n                    var filter = Array.prototype.filter;\n                    var concat = Array.prototype.concat;\n\n                    observer.observe(container, {\n                        childList: true,\n                        subtree: true,\n                        // changes like style/width/height/display will be catched\n                        attributes: true\n                    });\n\n                    function watch(mutations) {\n                        // some new DOM nodes where previously watched\n                        // we should check their positions\n                        if (mutations.some(knownNodes) === true) {\n                            setTimeout(cb, 0);\n                        }\n                    }\n\n                    function knownNodes(mutation) {\n                        var nodes = concat.call([],\n                            Array.prototype.slice.call(mutation.addedNodes),\n                            mutation.target\n                        );\n                        return filter.call(nodes, watches.isWatched).length > 0;\n                    }\n                }\n\n                /* WEBPACK VAR INJECTION */\n            }.call(exports, (function () {\n                return this;\n            }())))\n\n            /***/\n        }\n        /******/\n    ]);"}],"Post":[{"title":"Flutter教程","abbrlink":"1bf41062","date":"2021-02-26T02:33:35.000Z","toc":true,"_content":"\n![首屏图](https://s3.ax1x.com/2021/03/01/6iJtn1.png)\n\n<!-- more -->\n\n## Flutter介绍\n\n## Flutter环境搭建\n\n### Windows系统安装Flutter\n\n### Mac系统安装Flutter\n\n#### 准备工作\n\n1. 升级MacOS至最新系统\n2. 安装最新版本的Xcode\n3. 运行一次Xcode\n4. 电脑上安装[brew](https://brew.sh)\n\n#### 安装Flutter\n\n##### 下载Flutter\n\n[下载地址](https://flutter.cn/docs/development/tools/sdk/releases?tab=macos)\n\n![下载地址](https://s3.ax1x.com/2021/02/26/yxRVaR.png)\n\n##### 将Flutter解压至安装目录下\n\n![安装目录](https://s3.ax1x.com/2021/02/26/yxWmwj.png)\n\n##### 配置Flutter环境变量\n\n* 打开环境变量配置文件\n\n```shell\nvim ~/.bash_profile\n```\n\n* flutter环境变量配置\n\n```shell\n# 注意：下面第一行的环境变量需要改为自己flutter的安装目录\nexport PATH=/Users/gaotianyang/flutter_mac/flutter/bin:$PATH\nexport PUB_HOSTED_URL=https://pub.flutter-io.cn\nexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn\n```\n\n* 让环境变量立即生效\n\n```shell\nsource ~/.bash_profile\n```\n\n* 验证flutter是否配置成功\n\n```shell\nflutter -h\n```\n\n![安装成功](https://s3.ax1x.com/2021/02/26/yxh8Z4.png)\n\n> 注意：如果`flutter -h`提示flutter不是内置命令之类的错误，可能是sdk没有配置成功或者sdk下载时出错，需重新下载并配置。\n\n#### 运行Flutter doctor检测环境\n\n```shell\n# 检测flutter环境\n$ flutter doctor\n```\n\n根据Flutter doctor报错提示进行修复\n\n直至只提示缺少安卓环境为止\n\n![检测成功](https://s3.ax1x.com/2021/02/26/yxIswF.png)\n\n#### 生成Flutter项目\n\n通过以下步骤来创建你的第一个 Flutter 应用并进行测试：\n\n* 通过运行以下命令来创建一个新的 Flutter 应用：\n\n```shell\n# 创建项目 flutter create [项目名称]\n$ flutter create my_app\n```\n\n* 上述命令创建了一个 my_app 的目录，包含了 Flutter 初始的应用模版，切换路径到这个目录内：\n\n```shell\n# 进入项目目录\n$ cd my_app\n```\n\n* 确保模拟器已经处于运行状态，输入以下命令来启动应用：\n\n```shell\n# 运行flutter项目\n$ flutter run\n```\n\n#### 修改Flutter SDK目录权限及项目权限\n\n如果项目运行提示权限不足可使用如下指令进行修改\n\n```shell\n# sudo chmod -R 777 [对应项目文件名]\n$ sudo chmod -R 777 flutterDemo\n# 修改SDK文件夹权限\n$ cd /Users/gaotianyang/flutter_mac\n$ sudo chmod -R 777 flutter\n```\n\n#### Xcode打开Flutter项目模拟器运行项目\n\n* Xcode运行项目双击项目目录下的文件\n\n![Xcode运行项目](https://s3.ax1x.com/2021/02/26/yzeUQs.png)\n\n* 运行模拟器\n\n![运行模拟器](https://s3.ax1x.com/2021/02/26/yzmUhD.png)\n\n##### 可能会有报错导致模拟器启动失败\n\n* `Runner.app/Info.plist does not exist. The Flutter \"Thin Binary\" build phase must run after \"Copy Bundle Resources\".`\n\n> 解决方法：打开Xcode菜单,选择 \"Product\" > \"Clean Build Folder\". 清空项目预览文件，再重新启动模拟器。\n\n* 打开项目后项目白屏\n\n> 解决方法：再重新启动模拟器，重新打开项目。\n\n#### Vscode配置及开发Flutter项目\n\n##### 安装Flutter插件Dart插件\n\n安装Flutter、Flutter插件提示插件\n\n![Flutter插件](https://s3.ax1x.com/2021/02/26/yznNbq.png)\n\n安装Dart插件\n\n![Dart插件](https://s3.ax1x.com/2021/02/26/yzndaV.png)\n\n##### 启动模拟器\n\n```shell\n# 启动模拟器\n$ open -a Simulator\n```\n\n##### 运行应用\n\n```shell\n# 运行应用\n$ flutter run\n```\n\n##### 模式切换\n\n* R 启动热更新，重新加载项目\n* O 切换为安卓/iOS模式\n* P 打开/关闭网格，可以方便掌握布局情况\n* Q 退出调试预览模式\n\n## Flutter目录结构\n\n```text\n项目目录\n├── README.md\n├── android         // 安卓平台相关代码资源\n├── build           // 运行项目生成的编译目录\n├── ios             // iOS平台相关代码资源\n├── lib             // flutter相关代码，编写项目主要在这个目录\n├── test            // 测试文件目录\n├── flutterDemo.iml\n├── pubspec.lock\n└── pubspec.yaml    // 项目配置文件：项目名称、描述、第三方库依赖\n```\n\n### Flutter入口\n\n每一个 flutter 项目的 lib 目录里面都有一个 main.dart 这个文件就是 flutter 的入口文件\n\n`main.dart` 里面的\n\n```dart\nvoid main(){ \n    runApp(MyApp()); \n}\n// 也可以简写 \nvoid main()=>runApp(MyApp());\n```\n\n其中的 main 方法是 dart 的入口方法。runApp 方法是 flutter 的入口方法。\n\nMyApp 是自定义的一个组件\n\n### 首个Demo Center组件\n\n`main.dart` 里面的\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(Center(\n    child: Text(\n      \"Welcome Flutter\",\n      textDirection: TextDirection.ltr,\n    ),\n  ));\n}\n```\n\n执行R进行重新编译\n\n![首个Demo](https://s3.ax1x.com/2021/02/26/yzBhnI.png)\n\n### 自定义Widget\n\n`main.dart` 里面的\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\n// 自定义组件\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    // TODO: implement build\n    return Center(\n      child: Text(\n        \"Welcome Flutter\",\n        textDirection: TextDirection.ltr,\n      ),\n    );\n  }\n}\n```\n\n执行r进行重新加载\n\n### Text组件简单介绍\n\n给文字调整字号和颜色\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    // TODO: implement build\n    return Center(\n      child: Text(\"Welcome Flutter\",\n          textDirection: TextDirection.ltr,\n          style: TextStyle(fontSize: 40.0, color: Colors.yellow\n              // color: Color.fromRGBO(255, 0, 255, 0.7)\n              )),\n    );\n  }\n}\n```\n\n#### textDirection\n\n文本显示方式`TextDirection.ltr`从左到右\n\n#### style\n\n文本样式\n\n### MaterialApp组件\n\nMaterialApp 是一个方便的 Widget，它封装了应用程序实现 Material Design 所需要的 一些 Widget。一般作为顶层(根) widget 使用。\n\n常用的属性：\n\n* home（主页）\n* title（标题）\n* color（颜色）\n* theme（主题）\n* routes（路由）\n* ...\n\n### Scaffold组件\n\nScaffold 是 Material Design 布局结构的基本实现。此类提供了用于显示 drawer、 snackbar 和底部 sheet 的 API。\n\nScaffold 有下面几个主要属性：\n\n* appBar - 显示在界面顶部的一个 AppBar。\n* body - 当前界面所显示的主要内容 Widget。\n* drawer - 抽屉菜单控件。\n* ...\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\n//自定义组件\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    // TODO: implement build\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(title: Text('Flutter Demo')),\n        body: HomeContent(),\n      ),\n      theme: ThemeData(primarySwatch: Colors.yellow),\n    );\n  }\n}\n\n//\nclass HomeContent extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    // TODO: implement build\n    return Center(\n        child: Text(\n      '你好Flutter 111',\n      textDirection: TextDirection.ltr,\n      style: TextStyle(\n        fontSize: 40.0,\n        color: Colors.yellow,\n        // color: Color.fromRGBO(244, 233, 121, 0.5),\n      ),\n    ));\n  }\n}\n```\n\n![使用MaterialApp及Scaffold](https://s3.ax1x.com/2021/03/01/6Pvkxx.png)\n\n## Flutter组件\n\n### Container组件\n\n|名称|功能|\n|:--:|:--:|\n|alignment|topCenter：顶部居中对齐</br>topLeft：顶部左对齐</br>topRight：顶部右对齐</br>center：水平垂直居中对齐</br>centerLeft：垂直居中水平居左对齐</br>centerRight：垂直居中水平居右对齐</br>bottomCenter 底部居中对齐</br>bottomLeft：底部居左对齐</br>bottomRight：底部居右对齐|\n|decoration|decoration: BoxDecoration( color: Colors.blue, border: Border.all( color: Colors.red, width: 2.0, ),borderRadius: BorderRadius.all( Radius.circular(8.0) ) )|\n|margin|margin 属性是表示 Container 与外部其他 组件的距离。</br>EdgeInsets.all(20.0),|\n|padding|padding 就 是 Container 的 内 边 距 ， 指 Container 边缘与 Child 之间的距离</br>padding: EdgeInsets.all(10.0)|\n|transform|让 Container 容易进行一些旋转之类的</br>transform: Matrix4.rotationZ(0.2)|\n|height|容器高度|\n|width|容器宽度|\n|child|容器子元素|\n\n[更多参数](https://api.flutter.dev/flutter/widgets/Container-class.html)\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('home'),\n        ),\n        body: HomeContent(),\n      ),\n      theme: ThemeData(primarySwatch: Colors.lightBlue),\n    );\n  }\n}\n\nclass HomeContent extends StatelessWidget {\n  build(BuildContext context) {\n    return Center(\n      child: Container(\n        child: Text(\n          '我是超长长长长长长长长长长长文本',\n          textAlign: TextAlign.center,\n          overflow: TextOverflow.ellipsis,\n          maxLines: 1,\n          textScaleFactor: 2,\n          style: TextStyle(\n            fontSize: 16.0,\n            color: Colors.red,\n            // color: Color.fromARGB(a, r, g, b),\n            fontWeight: FontWeight.w800,\n            fontStyle: FontStyle.italic,\n            decoration: TextDecoration.lineThrough,\n            decorationColor: Colors.green,\n            decorationStyle: TextDecorationStyle.dashed,\n            letterSpacing: 5.0,\n          ),\n        ),\n        height: 300.0,\n        width: 300.0,\n        decoration: BoxDecoration(\n          color: Colors.yellow,\n          border: Border.all(\n            color: Colors.blue,\n            width: 2.0,\n          ),\n          borderRadius: BorderRadius.all(\n            // Radius.circular(150), // 圆形\n            Radius.circular(50),\n          ),\n        ),\n        // padding: EdgeInsets.all(20),\n        padding: EdgeInsets.fromLTRB(10, 10, 5, 5),\n        margin: EdgeInsets.fromLTRB(10, 10, 5, 5),\n        // transform: Matrix4.translationValues(100, 10, 10),  // 位移\n        // transform: Matrix4.rotationZ(0.3),  // 旋转\n        // transform: Matrix4.diagonal3Values(1.3, 1, 1), // 缩放\n        alignment: Alignment.center,\n      ),\n    );\n  }\n}\n```\n\n![使用Container组件](https://s3.ax1x.com/2021/03/01/6iG5O1.png)\n\n### Text组件\n\n|名称|功能|\n|:--:|:--:|\n|textAlign|文本对齐方式（center 居中，left 左 对齐，right 右对齐，justfy 两端对齐）|\n|textDirection|文本方向（ltr 从左至右，rtl 从右至 左）|\n|overflow|文字超出屏幕之后的处理方式（clip 裁剪，fade 渐隐，ellipsis 省略号）|\n|textScaleFactor|字体显示倍率|\n|maxLines|文字显示最大行数|\n|style|字体的样式设置|\n\n下面是 TextStyle 的参数\n\n|名称|功能|\n|:--:|:--:|\n|decoration|文字装饰线（none 没有线，lineThrough 删除线，overline 上划线，underline 下划线）|\n|decorationColor|文字装饰线颜色|\n|decorationStyle|文字装饰线风格（[dashed,dotted]虚线， double 两根线，solid 一根实线，wavy 波浪 线）|\n|wordSpacing|单词间隙（如果是负值，会让单词变得更紧凑）|\n|letterSpacing|字母间隙（如果是负值，会让字母变得更紧凑）|\n|fontStyle|文字样式（italic 斜体，normal 正常体）|\n|fontSize|文字大小|\n|color|文字颜色|\n|fontWeight|字体粗细（bold 粗体，normal 正常体）|\n\n[更多参数](https://api.flutter.dev/flutter/painting/TextStyle-class.html)\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('home'),\n        ),\n        body: HomeContent(),\n      ),\n      theme: ThemeData(primarySwatch: Colors.lightBlue),\n    );\n  }\n}\n\nclass HomeContent extends StatelessWidget {\n  build(BuildContext context) {\n    return Center(\n      child: Container(\n        child: Text(\n          '我是文本',\n          textAlign: TextAlign.center,\n          style: TextStyle(\n            fontSize: 16.0,\n          ),\n        ),\n        height: 300.0,\n        width: 300.0,\n        alignment: Alignment.center,\n        decoration: BoxDecoration(\n          color: Colors.yellow,\n          border: Border.all(\n            color: Colors.blue,\n            width: 2.0,\n          ),\n        ),\n      ),\n    );\n  }\n}\n```\n\n![使用Text组件](https://s3.ax1x.com/2021/03/01/6PzWx1.png)\n\n## 参考资料\n\n* [B站-Dart Flutter教程_Dart Flutter入门实战视频教程-2020年新出-第14讲以后是Flutter教程](https://www.bilibili.com/video/BV1S4411E7LY?from=search&seid=18237173814777031437)\n","source":"_posts/Flutter教程.md","raw":"---\ntitle: Flutter教程\nabbrlink: 1bf41062\ndate: 2021-02-26 10:33:35\ntags:\n  - 技术积累\n  - flutter\ncategories:\n  - 技术积累\n  - flutter\ntoc: true\n---\n\n![首屏图](https://s3.ax1x.com/2021/03/01/6iJtn1.png)\n\n<!-- more -->\n\n## Flutter介绍\n\n## Flutter环境搭建\n\n### Windows系统安装Flutter\n\n### Mac系统安装Flutter\n\n#### 准备工作\n\n1. 升级MacOS至最新系统\n2. 安装最新版本的Xcode\n3. 运行一次Xcode\n4. 电脑上安装[brew](https://brew.sh)\n\n#### 安装Flutter\n\n##### 下载Flutter\n\n[下载地址](https://flutter.cn/docs/development/tools/sdk/releases?tab=macos)\n\n![下载地址](https://s3.ax1x.com/2021/02/26/yxRVaR.png)\n\n##### 将Flutter解压至安装目录下\n\n![安装目录](https://s3.ax1x.com/2021/02/26/yxWmwj.png)\n\n##### 配置Flutter环境变量\n\n* 打开环境变量配置文件\n\n```shell\nvim ~/.bash_profile\n```\n\n* flutter环境变量配置\n\n```shell\n# 注意：下面第一行的环境变量需要改为自己flutter的安装目录\nexport PATH=/Users/gaotianyang/flutter_mac/flutter/bin:$PATH\nexport PUB_HOSTED_URL=https://pub.flutter-io.cn\nexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn\n```\n\n* 让环境变量立即生效\n\n```shell\nsource ~/.bash_profile\n```\n\n* 验证flutter是否配置成功\n\n```shell\nflutter -h\n```\n\n![安装成功](https://s3.ax1x.com/2021/02/26/yxh8Z4.png)\n\n> 注意：如果`flutter -h`提示flutter不是内置命令之类的错误，可能是sdk没有配置成功或者sdk下载时出错，需重新下载并配置。\n\n#### 运行Flutter doctor检测环境\n\n```shell\n# 检测flutter环境\n$ flutter doctor\n```\n\n根据Flutter doctor报错提示进行修复\n\n直至只提示缺少安卓环境为止\n\n![检测成功](https://s3.ax1x.com/2021/02/26/yxIswF.png)\n\n#### 生成Flutter项目\n\n通过以下步骤来创建你的第一个 Flutter 应用并进行测试：\n\n* 通过运行以下命令来创建一个新的 Flutter 应用：\n\n```shell\n# 创建项目 flutter create [项目名称]\n$ flutter create my_app\n```\n\n* 上述命令创建了一个 my_app 的目录，包含了 Flutter 初始的应用模版，切换路径到这个目录内：\n\n```shell\n# 进入项目目录\n$ cd my_app\n```\n\n* 确保模拟器已经处于运行状态，输入以下命令来启动应用：\n\n```shell\n# 运行flutter项目\n$ flutter run\n```\n\n#### 修改Flutter SDK目录权限及项目权限\n\n如果项目运行提示权限不足可使用如下指令进行修改\n\n```shell\n# sudo chmod -R 777 [对应项目文件名]\n$ sudo chmod -R 777 flutterDemo\n# 修改SDK文件夹权限\n$ cd /Users/gaotianyang/flutter_mac\n$ sudo chmod -R 777 flutter\n```\n\n#### Xcode打开Flutter项目模拟器运行项目\n\n* Xcode运行项目双击项目目录下的文件\n\n![Xcode运行项目](https://s3.ax1x.com/2021/02/26/yzeUQs.png)\n\n* 运行模拟器\n\n![运行模拟器](https://s3.ax1x.com/2021/02/26/yzmUhD.png)\n\n##### 可能会有报错导致模拟器启动失败\n\n* `Runner.app/Info.plist does not exist. The Flutter \"Thin Binary\" build phase must run after \"Copy Bundle Resources\".`\n\n> 解决方法：打开Xcode菜单,选择 \"Product\" > \"Clean Build Folder\". 清空项目预览文件，再重新启动模拟器。\n\n* 打开项目后项目白屏\n\n> 解决方法：再重新启动模拟器，重新打开项目。\n\n#### Vscode配置及开发Flutter项目\n\n##### 安装Flutter插件Dart插件\n\n安装Flutter、Flutter插件提示插件\n\n![Flutter插件](https://s3.ax1x.com/2021/02/26/yznNbq.png)\n\n安装Dart插件\n\n![Dart插件](https://s3.ax1x.com/2021/02/26/yzndaV.png)\n\n##### 启动模拟器\n\n```shell\n# 启动模拟器\n$ open -a Simulator\n```\n\n##### 运行应用\n\n```shell\n# 运行应用\n$ flutter run\n```\n\n##### 模式切换\n\n* R 启动热更新，重新加载项目\n* O 切换为安卓/iOS模式\n* P 打开/关闭网格，可以方便掌握布局情况\n* Q 退出调试预览模式\n\n## Flutter目录结构\n\n```text\n项目目录\n├── README.md\n├── android         // 安卓平台相关代码资源\n├── build           // 运行项目生成的编译目录\n├── ios             // iOS平台相关代码资源\n├── lib             // flutter相关代码，编写项目主要在这个目录\n├── test            // 测试文件目录\n├── flutterDemo.iml\n├── pubspec.lock\n└── pubspec.yaml    // 项目配置文件：项目名称、描述、第三方库依赖\n```\n\n### Flutter入口\n\n每一个 flutter 项目的 lib 目录里面都有一个 main.dart 这个文件就是 flutter 的入口文件\n\n`main.dart` 里面的\n\n```dart\nvoid main(){ \n    runApp(MyApp()); \n}\n// 也可以简写 \nvoid main()=>runApp(MyApp());\n```\n\n其中的 main 方法是 dart 的入口方法。runApp 方法是 flutter 的入口方法。\n\nMyApp 是自定义的一个组件\n\n### 首个Demo Center组件\n\n`main.dart` 里面的\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(Center(\n    child: Text(\n      \"Welcome Flutter\",\n      textDirection: TextDirection.ltr,\n    ),\n  ));\n}\n```\n\n执行R进行重新编译\n\n![首个Demo](https://s3.ax1x.com/2021/02/26/yzBhnI.png)\n\n### 自定义Widget\n\n`main.dart` 里面的\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\n// 自定义组件\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    // TODO: implement build\n    return Center(\n      child: Text(\n        \"Welcome Flutter\",\n        textDirection: TextDirection.ltr,\n      ),\n    );\n  }\n}\n```\n\n执行r进行重新加载\n\n### Text组件简单介绍\n\n给文字调整字号和颜色\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    // TODO: implement build\n    return Center(\n      child: Text(\"Welcome Flutter\",\n          textDirection: TextDirection.ltr,\n          style: TextStyle(fontSize: 40.0, color: Colors.yellow\n              // color: Color.fromRGBO(255, 0, 255, 0.7)\n              )),\n    );\n  }\n}\n```\n\n#### textDirection\n\n文本显示方式`TextDirection.ltr`从左到右\n\n#### style\n\n文本样式\n\n### MaterialApp组件\n\nMaterialApp 是一个方便的 Widget，它封装了应用程序实现 Material Design 所需要的 一些 Widget。一般作为顶层(根) widget 使用。\n\n常用的属性：\n\n* home（主页）\n* title（标题）\n* color（颜色）\n* theme（主题）\n* routes（路由）\n* ...\n\n### Scaffold组件\n\nScaffold 是 Material Design 布局结构的基本实现。此类提供了用于显示 drawer、 snackbar 和底部 sheet 的 API。\n\nScaffold 有下面几个主要属性：\n\n* appBar - 显示在界面顶部的一个 AppBar。\n* body - 当前界面所显示的主要内容 Widget。\n* drawer - 抽屉菜单控件。\n* ...\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\n//自定义组件\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    // TODO: implement build\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(title: Text('Flutter Demo')),\n        body: HomeContent(),\n      ),\n      theme: ThemeData(primarySwatch: Colors.yellow),\n    );\n  }\n}\n\n//\nclass HomeContent extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    // TODO: implement build\n    return Center(\n        child: Text(\n      '你好Flutter 111',\n      textDirection: TextDirection.ltr,\n      style: TextStyle(\n        fontSize: 40.0,\n        color: Colors.yellow,\n        // color: Color.fromRGBO(244, 233, 121, 0.5),\n      ),\n    ));\n  }\n}\n```\n\n![使用MaterialApp及Scaffold](https://s3.ax1x.com/2021/03/01/6Pvkxx.png)\n\n## Flutter组件\n\n### Container组件\n\n|名称|功能|\n|:--:|:--:|\n|alignment|topCenter：顶部居中对齐</br>topLeft：顶部左对齐</br>topRight：顶部右对齐</br>center：水平垂直居中对齐</br>centerLeft：垂直居中水平居左对齐</br>centerRight：垂直居中水平居右对齐</br>bottomCenter 底部居中对齐</br>bottomLeft：底部居左对齐</br>bottomRight：底部居右对齐|\n|decoration|decoration: BoxDecoration( color: Colors.blue, border: Border.all( color: Colors.red, width: 2.0, ),borderRadius: BorderRadius.all( Radius.circular(8.0) ) )|\n|margin|margin 属性是表示 Container 与外部其他 组件的距离。</br>EdgeInsets.all(20.0),|\n|padding|padding 就 是 Container 的 内 边 距 ， 指 Container 边缘与 Child 之间的距离</br>padding: EdgeInsets.all(10.0)|\n|transform|让 Container 容易进行一些旋转之类的</br>transform: Matrix4.rotationZ(0.2)|\n|height|容器高度|\n|width|容器宽度|\n|child|容器子元素|\n\n[更多参数](https://api.flutter.dev/flutter/widgets/Container-class.html)\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('home'),\n        ),\n        body: HomeContent(),\n      ),\n      theme: ThemeData(primarySwatch: Colors.lightBlue),\n    );\n  }\n}\n\nclass HomeContent extends StatelessWidget {\n  build(BuildContext context) {\n    return Center(\n      child: Container(\n        child: Text(\n          '我是超长长长长长长长长长长长文本',\n          textAlign: TextAlign.center,\n          overflow: TextOverflow.ellipsis,\n          maxLines: 1,\n          textScaleFactor: 2,\n          style: TextStyle(\n            fontSize: 16.0,\n            color: Colors.red,\n            // color: Color.fromARGB(a, r, g, b),\n            fontWeight: FontWeight.w800,\n            fontStyle: FontStyle.italic,\n            decoration: TextDecoration.lineThrough,\n            decorationColor: Colors.green,\n            decorationStyle: TextDecorationStyle.dashed,\n            letterSpacing: 5.0,\n          ),\n        ),\n        height: 300.0,\n        width: 300.0,\n        decoration: BoxDecoration(\n          color: Colors.yellow,\n          border: Border.all(\n            color: Colors.blue,\n            width: 2.0,\n          ),\n          borderRadius: BorderRadius.all(\n            // Radius.circular(150), // 圆形\n            Radius.circular(50),\n          ),\n        ),\n        // padding: EdgeInsets.all(20),\n        padding: EdgeInsets.fromLTRB(10, 10, 5, 5),\n        margin: EdgeInsets.fromLTRB(10, 10, 5, 5),\n        // transform: Matrix4.translationValues(100, 10, 10),  // 位移\n        // transform: Matrix4.rotationZ(0.3),  // 旋转\n        // transform: Matrix4.diagonal3Values(1.3, 1, 1), // 缩放\n        alignment: Alignment.center,\n      ),\n    );\n  }\n}\n```\n\n![使用Container组件](https://s3.ax1x.com/2021/03/01/6iG5O1.png)\n\n### Text组件\n\n|名称|功能|\n|:--:|:--:|\n|textAlign|文本对齐方式（center 居中，left 左 对齐，right 右对齐，justfy 两端对齐）|\n|textDirection|文本方向（ltr 从左至右，rtl 从右至 左）|\n|overflow|文字超出屏幕之后的处理方式（clip 裁剪，fade 渐隐，ellipsis 省略号）|\n|textScaleFactor|字体显示倍率|\n|maxLines|文字显示最大行数|\n|style|字体的样式设置|\n\n下面是 TextStyle 的参数\n\n|名称|功能|\n|:--:|:--:|\n|decoration|文字装饰线（none 没有线，lineThrough 删除线，overline 上划线，underline 下划线）|\n|decorationColor|文字装饰线颜色|\n|decorationStyle|文字装饰线风格（[dashed,dotted]虚线， double 两根线，solid 一根实线，wavy 波浪 线）|\n|wordSpacing|单词间隙（如果是负值，会让单词变得更紧凑）|\n|letterSpacing|字母间隙（如果是负值，会让字母变得更紧凑）|\n|fontStyle|文字样式（italic 斜体，normal 正常体）|\n|fontSize|文字大小|\n|color|文字颜色|\n|fontWeight|字体粗细（bold 粗体，normal 正常体）|\n\n[更多参数](https://api.flutter.dev/flutter/painting/TextStyle-class.html)\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('home'),\n        ),\n        body: HomeContent(),\n      ),\n      theme: ThemeData(primarySwatch: Colors.lightBlue),\n    );\n  }\n}\n\nclass HomeContent extends StatelessWidget {\n  build(BuildContext context) {\n    return Center(\n      child: Container(\n        child: Text(\n          '我是文本',\n          textAlign: TextAlign.center,\n          style: TextStyle(\n            fontSize: 16.0,\n          ),\n        ),\n        height: 300.0,\n        width: 300.0,\n        alignment: Alignment.center,\n        decoration: BoxDecoration(\n          color: Colors.yellow,\n          border: Border.all(\n            color: Colors.blue,\n            width: 2.0,\n          ),\n        ),\n      ),\n    );\n  }\n}\n```\n\n![使用Text组件](https://s3.ax1x.com/2021/03/01/6PzWx1.png)\n\n## 参考资料\n\n* [B站-Dart Flutter教程_Dart Flutter入门实战视频教程-2020年新出-第14讲以后是Flutter教程](https://www.bilibili.com/video/BV1S4411E7LY?from=search&seid=18237173814777031437)\n","slug":"Flutter教程","published":1,"updated":"2021-03-06T06:44:46.370Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjy200022an94aofg2cq","content":"<p><img src=\"https://s3.ax1x.com/2021/03/01/6iJtn1.png\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<h2 id=\"Flutter介绍\"><a href=\"#Flutter介绍\" class=\"headerlink\" title=\"Flutter介绍\"></a>Flutter介绍</h2><h2 id=\"Flutter环境搭建\"><a href=\"#Flutter环境搭建\" class=\"headerlink\" title=\"Flutter环境搭建\"></a>Flutter环境搭建</h2><h3 id=\"Windows系统安装Flutter\"><a href=\"#Windows系统安装Flutter\" class=\"headerlink\" title=\"Windows系统安装Flutter\"></a>Windows系统安装Flutter</h3><h3 id=\"Mac系统安装Flutter\"><a href=\"#Mac系统安装Flutter\" class=\"headerlink\" title=\"Mac系统安装Flutter\"></a>Mac系统安装Flutter</h3><h4 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h4><ol>\n<li>升级MacOS至最新系统</li>\n<li>安装最新版本的Xcode</li>\n<li>运行一次Xcode</li>\n<li>电脑上安装<a href=\"https://brew.sh\">brew</a></li>\n</ol>\n<h4 id=\"安装Flutter\"><a href=\"#安装Flutter\" class=\"headerlink\" title=\"安装Flutter\"></a>安装Flutter</h4><h5 id=\"下载Flutter\"><a href=\"#下载Flutter\" class=\"headerlink\" title=\"下载Flutter\"></a>下载Flutter</h5><p><a href=\"https://flutter.cn/docs/development/tools/sdk/releases?tab=macos\">下载地址</a></p>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yxRVaR.png\" alt=\"下载地址\"></p>\n<h5 id=\"将Flutter解压至安装目录下\"><a href=\"#将Flutter解压至安装目录下\" class=\"headerlink\" title=\"将Flutter解压至安装目录下\"></a>将Flutter解压至安装目录下</h5><p><img src=\"https://s3.ax1x.com/2021/02/26/yxWmwj.png\" alt=\"安装目录\"></p>\n<h5 id=\"配置Flutter环境变量\"><a href=\"#配置Flutter环境变量\" class=\"headerlink\" title=\"配置Flutter环境变量\"></a>配置Flutter环境变量</h5><ul>\n<li>打开环境变量配置文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<ul>\n<li>flutter环境变量配置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 注意：下面第一行的环境变量需要改为自己flutter的安装目录</span></span><br><span class=\"line\">export PATH=/Users/gaotianyang/flutter_mac/flutter/bin:$PATH</span><br><span class=\"line\">export PUB_HOSTED_URL=https://pub.flutter-io.cn</span><br><span class=\"line\">export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</span><br></pre></td></tr></table></figure>\n<ul>\n<li>让环境变量立即生效</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<ul>\n<li>验证flutter是否配置成功</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter -h</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yxh8Z4.png\" alt=\"安装成功\"></p>\n<blockquote>\n<p>注意：如果<code>flutter -h</code>提示flutter不是内置命令之类的错误，可能是sdk没有配置成功或者sdk下载时出错，需重新下载并配置。</p>\n</blockquote>\n<h4 id=\"运行Flutter-doctor检测环境\"><a href=\"#运行Flutter-doctor检测环境\" class=\"headerlink\" title=\"运行Flutter doctor检测环境\"></a>运行Flutter doctor检测环境</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 检测flutter环境</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> flutter doctor</span></span><br></pre></td></tr></table></figure>\n<p>根据Flutter doctor报错提示进行修复</p>\n<p>直至只提示缺少安卓环境为止</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yxIswF.png\" alt=\"检测成功\"></p>\n<h4 id=\"生成Flutter项目\"><a href=\"#生成Flutter项目\" class=\"headerlink\" title=\"生成Flutter项目\"></a>生成Flutter项目</h4><p>通过以下步骤来创建你的第一个 Flutter 应用并进行测试：</p>\n<ul>\n<li>通过运行以下命令来创建一个新的 Flutter 应用：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 创建项目 flutter create [项目名称]</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> flutter create my_app</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>上述命令创建了一个 my_app 的目录，包含了 Flutter 初始的应用模版，切换路径到这个目录内：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 进入项目目录</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> my_app</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>确保模拟器已经处于运行状态，输入以下命令来启动应用：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 运行flutter项目</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> flutter run</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"修改Flutter-SDK目录权限及项目权限\"><a href=\"#修改Flutter-SDK目录权限及项目权限\" class=\"headerlink\" title=\"修改Flutter SDK目录权限及项目权限\"></a>修改Flutter SDK目录权限及项目权限</h4><p>如果项目运行提示权限不足可使用如下指令进行修改</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> sudo chmod -R 777 [对应项目文件名]</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo chmod -R 777 flutterDemo</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 修改SDK文件夹权限</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> /Users/gaotianyang/flutter_mac</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo chmod -R 777 flutter</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Xcode打开Flutter项目模拟器运行项目\"><a href=\"#Xcode打开Flutter项目模拟器运行项目\" class=\"headerlink\" title=\"Xcode打开Flutter项目模拟器运行项目\"></a>Xcode打开Flutter项目模拟器运行项目</h4><ul>\n<li>Xcode运行项目双击项目目录下的文件</li>\n</ul>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yzeUQs.png\" alt=\"Xcode运行项目\"></p>\n<ul>\n<li>运行模拟器</li>\n</ul>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yzmUhD.png\" alt=\"运行模拟器\"></p>\n<h5 id=\"可能会有报错导致模拟器启动失败\"><a href=\"#可能会有报错导致模拟器启动失败\" class=\"headerlink\" title=\"可能会有报错导致模拟器启动失败\"></a>可能会有报错导致模拟器启动失败</h5><ul>\n<li><code>Runner.app/Info.plist does not exist. The Flutter &quot;Thin Binary&quot; build phase must run after &quot;Copy Bundle Resources&quot;.</code></li>\n</ul>\n<blockquote>\n<p>解决方法：打开Xcode菜单,选择 “Product” &gt; “Clean Build Folder”. 清空项目预览文件，再重新启动模拟器。</p>\n</blockquote>\n<ul>\n<li>打开项目后项目白屏</li>\n</ul>\n<blockquote>\n<p>解决方法：再重新启动模拟器，重新打开项目。</p>\n</blockquote>\n<h4 id=\"Vscode配置及开发Flutter项目\"><a href=\"#Vscode配置及开发Flutter项目\" class=\"headerlink\" title=\"Vscode配置及开发Flutter项目\"></a>Vscode配置及开发Flutter项目</h4><h5 id=\"安装Flutter插件Dart插件\"><a href=\"#安装Flutter插件Dart插件\" class=\"headerlink\" title=\"安装Flutter插件Dart插件\"></a>安装Flutter插件Dart插件</h5><p>安装Flutter、Flutter插件提示插件</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yznNbq.png\" alt=\"Flutter插件\"></p>\n<p>安装Dart插件</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yzndaV.png\" alt=\"Dart插件\"></p>\n<h5 id=\"启动模拟器\"><a href=\"#启动模拟器\" class=\"headerlink\" title=\"启动模拟器\"></a>启动模拟器</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 启动模拟器</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> open -a Simulator</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"运行应用\"><a href=\"#运行应用\" class=\"headerlink\" title=\"运行应用\"></a>运行应用</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 运行应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> flutter run</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"模式切换\"><a href=\"#模式切换\" class=\"headerlink\" title=\"模式切换\"></a>模式切换</h5><ul>\n<li>R 启动热更新，重新加载项目</li>\n<li>O 切换为安卓/iOS模式</li>\n<li>P 打开/关闭网格，可以方便掌握布局情况</li>\n<li>Q 退出调试预览模式</li>\n</ul>\n<h2 id=\"Flutter目录结构\"><a href=\"#Flutter目录结构\" class=\"headerlink\" title=\"Flutter目录结构\"></a>Flutter目录结构</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">项目目录</span><br><span class=\"line\">├── README.md</span><br><span class=\"line\">├── android         // 安卓平台相关代码资源</span><br><span class=\"line\">├── build           // 运行项目生成的编译目录</span><br><span class=\"line\">├── ios             // iOS平台相关代码资源</span><br><span class=\"line\">├── lib             // flutter相关代码，编写项目主要在这个目录</span><br><span class=\"line\">├── test            // 测试文件目录</span><br><span class=\"line\">├── flutterDemo.iml</span><br><span class=\"line\">├── pubspec.lock</span><br><span class=\"line\">└── pubspec.yaml    // 项目配置文件：项目名称、描述、第三方库依赖</span><br></pre></td></tr></table></figure>\n<h3 id=\"Flutter入口\"><a href=\"#Flutter入口\" class=\"headerlink\" title=\"Flutter入口\"></a>Flutter入口</h3><p>每一个 flutter 项目的 lib 目录里面都有一个 main.dart 这个文件就是 flutter 的入口文件</p>\n<p><code>main.dart</code> 里面的</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123; </span><br><span class=\"line\">    runApp(MyApp()); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 也可以简写 </span></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()=&gt;runApp(MyApp());</span><br></pre></td></tr></table></figure>\n<p>其中的 main 方法是 dart 的入口方法。runApp 方法是 flutter 的入口方法。</p>\n<p>MyApp 是自定义的一个组件</p>\n<h3 id=\"首个Demo-Center组件\"><a href=\"#首个Demo-Center组件\" class=\"headerlink\" title=\"首个Demo Center组件\"></a>首个Demo Center组件</h3><p><code>main.dart</code> 里面的</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  runApp(Center(</span><br><span class=\"line\">    child: Text(</span><br><span class=\"line\">      <span class=\"string\">&quot;Welcome Flutter&quot;</span>,</span><br><span class=\"line\">      textDirection: TextDirection.ltr,</span><br><span class=\"line\">    ),</span><br><span class=\"line\">  ));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行R进行重新编译</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yzBhnI.png\" alt=\"首个Demo\"></p>\n<h3 id=\"自定义Widget\"><a href=\"#自定义Widget\" class=\"headerlink\" title=\"自定义Widget\"></a>自定义Widget</h3><p><code>main.dart</code> 里面的</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  runApp(MyApp());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自定义组件</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApp</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement build</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> Center(</span><br><span class=\"line\">      child: Text(</span><br><span class=\"line\">        <span class=\"string\">&quot;Welcome Flutter&quot;</span>,</span><br><span class=\"line\">        textDirection: TextDirection.ltr,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行r进行重新加载</p>\n<h3 id=\"Text组件简单介绍\"><a href=\"#Text组件简单介绍\" class=\"headerlink\" title=\"Text组件简单介绍\"></a>Text组件简单介绍</h3><p>给文字调整字号和颜色</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  runApp(MyApp());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApp</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement build</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> Center(</span><br><span class=\"line\">      child: Text(<span class=\"string\">&quot;Welcome Flutter&quot;</span>,</span><br><span class=\"line\">          textDirection: TextDirection.ltr,</span><br><span class=\"line\">          style: TextStyle(fontSize: <span class=\"number\">40.0</span>, color: Colors.yellow</span><br><span class=\"line\">              <span class=\"comment\">// color: Color.fromRGBO(255, 0, 255, 0.7)</span></span><br><span class=\"line\">              )),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"textDirection\"><a href=\"#textDirection\" class=\"headerlink\" title=\"textDirection\"></a>textDirection</h4><p>文本显示方式<code>TextDirection.ltr</code>从左到右</p>\n<h4 id=\"style\"><a href=\"#style\" class=\"headerlink\" title=\"style\"></a>style</h4><p>文本样式</p>\n<h3 id=\"MaterialApp组件\"><a href=\"#MaterialApp组件\" class=\"headerlink\" title=\"MaterialApp组件\"></a>MaterialApp组件</h3><p>MaterialApp 是一个方便的 Widget，它封装了应用程序实现 Material Design 所需要的 一些 Widget。一般作为顶层(根) widget 使用。</p>\n<p>常用的属性：</p>\n<ul>\n<li>home（主页）</li>\n<li>title（标题）</li>\n<li>color（颜色）</li>\n<li>theme（主题）</li>\n<li>routes（路由）</li>\n<li>…</li>\n</ul>\n<h3 id=\"Scaffold组件\"><a href=\"#Scaffold组件\" class=\"headerlink\" title=\"Scaffold组件\"></a>Scaffold组件</h3><p>Scaffold 是 Material Design 布局结构的基本实现。此类提供了用于显示 drawer、 snackbar 和底部 sheet 的 API。</p>\n<p>Scaffold 有下面几个主要属性：</p>\n<ul>\n<li>appBar - 显示在界面顶部的一个 AppBar。</li>\n<li>body - 当前界面所显示的主要内容 Widget。</li>\n<li>drawer - 抽屉菜单控件。</li>\n<li>…</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  runApp(MyApp());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//自定义组件</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApp</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement build</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> MaterialApp(</span><br><span class=\"line\">      home: Scaffold(</span><br><span class=\"line\">        appBar: AppBar(title: Text(<span class=\"string\">&#x27;Flutter Demo&#x27;</span>)),</span><br><span class=\"line\">        body: HomeContent(),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      theme: ThemeData(primarySwatch: Colors.yellow),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomeContent</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement build</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> Center(</span><br><span class=\"line\">        child: Text(</span><br><span class=\"line\">      <span class=\"string\">&#x27;你好Flutter 111&#x27;</span>,</span><br><span class=\"line\">      textDirection: TextDirection.ltr,</span><br><span class=\"line\">      style: TextStyle(</span><br><span class=\"line\">        fontSize: <span class=\"number\">40.0</span>,</span><br><span class=\"line\">        color: Colors.yellow,</span><br><span class=\"line\">        <span class=\"comment\">// color: Color.fromRGBO(244, 233, 121, 0.5),</span></span><br><span class=\"line\">      ),</span><br><span class=\"line\">    ));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.ax1x.com/2021/03/01/6Pvkxx.png\" alt=\"使用MaterialApp及Scaffold\"></p>\n<h2 id=\"Flutter组件\"><a href=\"#Flutter组件\" class=\"headerlink\" title=\"Flutter组件\"></a>Flutter组件</h2><h3 id=\"Container组件\"><a href=\"#Container组件\" class=\"headerlink\" title=\"Container组件\"></a>Container组件</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">alignment</td>\n<td style=\"text-align:center\">topCenter：顶部居中对齐</br>topLeft：顶部左对齐</br>topRight：顶部右对齐</br>center：水平垂直居中对齐</br>centerLeft：垂直居中水平居左对齐</br>centerRight：垂直居中水平居右对齐</br>bottomCenter 底部居中对齐</br>bottomLeft：底部居左对齐</br>bottomRight：底部居右对齐</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">decoration</td>\n<td style=\"text-align:center\">decoration: BoxDecoration( color: Colors.blue, border: Border.all( color: Colors.red, width: 2.0, ),borderRadius: BorderRadius.all( Radius.circular(8.0) ) )</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">margin</td>\n<td style=\"text-align:center\">margin 属性是表示 Container 与外部其他 组件的距离。</br>EdgeInsets.all(20.0),</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">padding</td>\n<td style=\"text-align:center\">padding 就 是 Container 的 内 边 距 ， 指 Container 边缘与 Child 之间的距离</br>padding: EdgeInsets.all(10.0)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">transform</td>\n<td style=\"text-align:center\">让 Container 容易进行一些旋转之类的</br>transform: Matrix4.rotationZ(0.2)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">height</td>\n<td style=\"text-align:center\">容器高度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">width</td>\n<td style=\"text-align:center\">容器宽度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">child</td>\n<td style=\"text-align:center\">容器子元素</td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"https://api.flutter.dev/flutter/widgets/Container-class.html\">更多参数</a></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  runApp(MyApp());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApp</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MaterialApp(</span><br><span class=\"line\">      home: Scaffold(</span><br><span class=\"line\">        appBar: AppBar(</span><br><span class=\"line\">          title: Text(<span class=\"string\">&#x27;home&#x27;</span>),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        body: HomeContent(),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      theme: ThemeData(primarySwatch: Colors.lightBlue),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomeContent</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Center(</span><br><span class=\"line\">      child: Container(</span><br><span class=\"line\">        child: Text(</span><br><span class=\"line\">          <span class=\"string\">&#x27;我是超长长长长长长长长长长长文本&#x27;</span>,</span><br><span class=\"line\">          textAlign: TextAlign.center,</span><br><span class=\"line\">          overflow: TextOverflow.ellipsis,</span><br><span class=\"line\">          maxLines: <span class=\"number\">1</span>,</span><br><span class=\"line\">          textScaleFactor: <span class=\"number\">2</span>,</span><br><span class=\"line\">          style: TextStyle(</span><br><span class=\"line\">            fontSize: <span class=\"number\">16.0</span>,</span><br><span class=\"line\">            color: Colors.red,</span><br><span class=\"line\">            <span class=\"comment\">// color: Color.fromARGB(a, r, g, b),</span></span><br><span class=\"line\">            fontWeight: FontWeight.w800,</span><br><span class=\"line\">            fontStyle: FontStyle.italic,</span><br><span class=\"line\">            decoration: TextDecoration.lineThrough,</span><br><span class=\"line\">            decorationColor: Colors.green,</span><br><span class=\"line\">            decorationStyle: TextDecorationStyle.dashed,</span><br><span class=\"line\">            letterSpacing: <span class=\"number\">5.0</span>,</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        height: <span class=\"number\">300.0</span>,</span><br><span class=\"line\">        width: <span class=\"number\">300.0</span>,</span><br><span class=\"line\">        decoration: BoxDecoration(</span><br><span class=\"line\">          color: Colors.yellow,</span><br><span class=\"line\">          border: Border.all(</span><br><span class=\"line\">            color: Colors.blue,</span><br><span class=\"line\">            width: <span class=\"number\">2.0</span>,</span><br><span class=\"line\">          ),</span><br><span class=\"line\">          borderRadius: BorderRadius.all(</span><br><span class=\"line\">            <span class=\"comment\">// Radius.circular(150), // 圆形</span></span><br><span class=\"line\">            Radius.circular(<span class=\"number\">50</span>),</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        <span class=\"comment\">// padding: EdgeInsets.all(20),</span></span><br><span class=\"line\">        padding: EdgeInsets.fromLTRB(<span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">5</span>, <span class=\"number\">5</span>),</span><br><span class=\"line\">        margin: EdgeInsets.fromLTRB(<span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">5</span>, <span class=\"number\">5</span>),</span><br><span class=\"line\">        <span class=\"comment\">// transform: Matrix4.translationValues(100, 10, 10),  // 位移</span></span><br><span class=\"line\">        <span class=\"comment\">// transform: Matrix4.rotationZ(0.3),  // 旋转</span></span><br><span class=\"line\">        <span class=\"comment\">// transform: Matrix4.diagonal3Values(1.3, 1, 1), // 缩放</span></span><br><span class=\"line\">        alignment: Alignment.center,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.ax1x.com/2021/03/01/6iG5O1.png\" alt=\"使用Container组件\"></p>\n<h3 id=\"Text组件\"><a href=\"#Text组件\" class=\"headerlink\" title=\"Text组件\"></a>Text组件</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">textAlign</td>\n<td style=\"text-align:center\">文本对齐方式（center 居中，left 左 对齐，right 右对齐，justfy 两端对齐）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">textDirection</td>\n<td style=\"text-align:center\">文本方向（ltr 从左至右，rtl 从右至 左）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">overflow</td>\n<td style=\"text-align:center\">文字超出屏幕之后的处理方式（clip 裁剪，fade 渐隐，ellipsis 省略号）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">textScaleFactor</td>\n<td style=\"text-align:center\">字体显示倍率</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">maxLines</td>\n<td style=\"text-align:center\">文字显示最大行数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">style</td>\n<td style=\"text-align:center\">字体的样式设置</td>\n</tr>\n</tbody>\n</table>\n<p>下面是 TextStyle 的参数</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">decoration</td>\n<td style=\"text-align:center\">文字装饰线（none 没有线，lineThrough 删除线，overline 上划线，underline 下划线）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">decorationColor</td>\n<td style=\"text-align:center\">文字装饰线颜色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">decorationStyle</td>\n<td style=\"text-align:center\">文字装饰线风格（[dashed,dotted]虚线， double 两根线，solid 一根实线，wavy 波浪 线）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">wordSpacing</td>\n<td style=\"text-align:center\">单词间隙（如果是负值，会让单词变得更紧凑）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">letterSpacing</td>\n<td style=\"text-align:center\">字母间隙（如果是负值，会让字母变得更紧凑）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">fontStyle</td>\n<td style=\"text-align:center\">文字样式（italic 斜体，normal 正常体）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">fontSize</td>\n<td style=\"text-align:center\">文字大小</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">color</td>\n<td style=\"text-align:center\">文字颜色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">fontWeight</td>\n<td style=\"text-align:center\">字体粗细（bold 粗体，normal 正常体）</td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"https://api.flutter.dev/flutter/painting/TextStyle-class.html\">更多参数</a></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  runApp(MyApp());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApp</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MaterialApp(</span><br><span class=\"line\">      home: Scaffold(</span><br><span class=\"line\">        appBar: AppBar(</span><br><span class=\"line\">          title: Text(<span class=\"string\">&#x27;home&#x27;</span>),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        body: HomeContent(),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      theme: ThemeData(primarySwatch: Colors.lightBlue),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomeContent</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Center(</span><br><span class=\"line\">      child: Container(</span><br><span class=\"line\">        child: Text(</span><br><span class=\"line\">          <span class=\"string\">&#x27;我是文本&#x27;</span>,</span><br><span class=\"line\">          textAlign: TextAlign.center,</span><br><span class=\"line\">          style: TextStyle(</span><br><span class=\"line\">            fontSize: <span class=\"number\">16.0</span>,</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        height: <span class=\"number\">300.0</span>,</span><br><span class=\"line\">        width: <span class=\"number\">300.0</span>,</span><br><span class=\"line\">        alignment: Alignment.center,</span><br><span class=\"line\">        decoration: BoxDecoration(</span><br><span class=\"line\">          color: Colors.yellow,</span><br><span class=\"line\">          border: Border.all(</span><br><span class=\"line\">            color: Colors.blue,</span><br><span class=\"line\">            width: <span class=\"number\">2.0</span>,</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.ax1x.com/2021/03/01/6PzWx1.png\" alt=\"使用Text组件\"></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.bilibili.com/video/BV1S4411E7LY?from=search&amp;seid=18237173814777031437\">B站-Dart Flutter教程_Dart Flutter入门实战视频教程-2020年新出-第14讲以后是Flutter教程</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s3.ax1x.com/2021/03/01/6iJtn1.png\" alt=\"首屏图\"></p>","more":"<h2 id=\"Flutter介绍\"><a href=\"#Flutter介绍\" class=\"headerlink\" title=\"Flutter介绍\"></a>Flutter介绍</h2><h2 id=\"Flutter环境搭建\"><a href=\"#Flutter环境搭建\" class=\"headerlink\" title=\"Flutter环境搭建\"></a>Flutter环境搭建</h2><h3 id=\"Windows系统安装Flutter\"><a href=\"#Windows系统安装Flutter\" class=\"headerlink\" title=\"Windows系统安装Flutter\"></a>Windows系统安装Flutter</h3><h3 id=\"Mac系统安装Flutter\"><a href=\"#Mac系统安装Flutter\" class=\"headerlink\" title=\"Mac系统安装Flutter\"></a>Mac系统安装Flutter</h3><h4 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h4><ol>\n<li>升级MacOS至最新系统</li>\n<li>安装最新版本的Xcode</li>\n<li>运行一次Xcode</li>\n<li>电脑上安装<a href=\"https://brew.sh\">brew</a></li>\n</ol>\n<h4 id=\"安装Flutter\"><a href=\"#安装Flutter\" class=\"headerlink\" title=\"安装Flutter\"></a>安装Flutter</h4><h5 id=\"下载Flutter\"><a href=\"#下载Flutter\" class=\"headerlink\" title=\"下载Flutter\"></a>下载Flutter</h5><p><a href=\"https://flutter.cn/docs/development/tools/sdk/releases?tab=macos\">下载地址</a></p>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yxRVaR.png\" alt=\"下载地址\"></p>\n<h5 id=\"将Flutter解压至安装目录下\"><a href=\"#将Flutter解压至安装目录下\" class=\"headerlink\" title=\"将Flutter解压至安装目录下\"></a>将Flutter解压至安装目录下</h5><p><img src=\"https://s3.ax1x.com/2021/02/26/yxWmwj.png\" alt=\"安装目录\"></p>\n<h5 id=\"配置Flutter环境变量\"><a href=\"#配置Flutter环境变量\" class=\"headerlink\" title=\"配置Flutter环境变量\"></a>配置Flutter环境变量</h5><ul>\n<li>打开环境变量配置文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<ul>\n<li>flutter环境变量配置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 注意：下面第一行的环境变量需要改为自己flutter的安装目录</span></span><br><span class=\"line\">export PATH=/Users/gaotianyang/flutter_mac/flutter/bin:$PATH</span><br><span class=\"line\">export PUB_HOSTED_URL=https://pub.flutter-io.cn</span><br><span class=\"line\">export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</span><br></pre></td></tr></table></figure>\n<ul>\n<li>让环境变量立即生效</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<ul>\n<li>验证flutter是否配置成功</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter -h</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yxh8Z4.png\" alt=\"安装成功\"></p>\n<blockquote>\n<p>注意：如果<code>flutter -h</code>提示flutter不是内置命令之类的错误，可能是sdk没有配置成功或者sdk下载时出错，需重新下载并配置。</p>\n</blockquote>\n<h4 id=\"运行Flutter-doctor检测环境\"><a href=\"#运行Flutter-doctor检测环境\" class=\"headerlink\" title=\"运行Flutter doctor检测环境\"></a>运行Flutter doctor检测环境</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 检测flutter环境</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> flutter doctor</span></span><br></pre></td></tr></table></figure>\n<p>根据Flutter doctor报错提示进行修复</p>\n<p>直至只提示缺少安卓环境为止</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yxIswF.png\" alt=\"检测成功\"></p>\n<h4 id=\"生成Flutter项目\"><a href=\"#生成Flutter项目\" class=\"headerlink\" title=\"生成Flutter项目\"></a>生成Flutter项目</h4><p>通过以下步骤来创建你的第一个 Flutter 应用并进行测试：</p>\n<ul>\n<li>通过运行以下命令来创建一个新的 Flutter 应用：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 创建项目 flutter create [项目名称]</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> flutter create my_app</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>上述命令创建了一个 my_app 的目录，包含了 Flutter 初始的应用模版，切换路径到这个目录内：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 进入项目目录</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> my_app</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>确保模拟器已经处于运行状态，输入以下命令来启动应用：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 运行flutter项目</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> flutter run</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"修改Flutter-SDK目录权限及项目权限\"><a href=\"#修改Flutter-SDK目录权限及项目权限\" class=\"headerlink\" title=\"修改Flutter SDK目录权限及项目权限\"></a>修改Flutter SDK目录权限及项目权限</h4><p>如果项目运行提示权限不足可使用如下指令进行修改</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> sudo chmod -R 777 [对应项目文件名]</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo chmod -R 777 flutterDemo</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 修改SDK文件夹权限</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> /Users/gaotianyang/flutter_mac</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo chmod -R 777 flutter</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Xcode打开Flutter项目模拟器运行项目\"><a href=\"#Xcode打开Flutter项目模拟器运行项目\" class=\"headerlink\" title=\"Xcode打开Flutter项目模拟器运行项目\"></a>Xcode打开Flutter项目模拟器运行项目</h4><ul>\n<li>Xcode运行项目双击项目目录下的文件</li>\n</ul>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yzeUQs.png\" alt=\"Xcode运行项目\"></p>\n<ul>\n<li>运行模拟器</li>\n</ul>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yzmUhD.png\" alt=\"运行模拟器\"></p>\n<h5 id=\"可能会有报错导致模拟器启动失败\"><a href=\"#可能会有报错导致模拟器启动失败\" class=\"headerlink\" title=\"可能会有报错导致模拟器启动失败\"></a>可能会有报错导致模拟器启动失败</h5><ul>\n<li><code>Runner.app/Info.plist does not exist. The Flutter &quot;Thin Binary&quot; build phase must run after &quot;Copy Bundle Resources&quot;.</code></li>\n</ul>\n<blockquote>\n<p>解决方法：打开Xcode菜单,选择 “Product” &gt; “Clean Build Folder”. 清空项目预览文件，再重新启动模拟器。</p>\n</blockquote>\n<ul>\n<li>打开项目后项目白屏</li>\n</ul>\n<blockquote>\n<p>解决方法：再重新启动模拟器，重新打开项目。</p>\n</blockquote>\n<h4 id=\"Vscode配置及开发Flutter项目\"><a href=\"#Vscode配置及开发Flutter项目\" class=\"headerlink\" title=\"Vscode配置及开发Flutter项目\"></a>Vscode配置及开发Flutter项目</h4><h5 id=\"安装Flutter插件Dart插件\"><a href=\"#安装Flutter插件Dart插件\" class=\"headerlink\" title=\"安装Flutter插件Dart插件\"></a>安装Flutter插件Dart插件</h5><p>安装Flutter、Flutter插件提示插件</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yznNbq.png\" alt=\"Flutter插件\"></p>\n<p>安装Dart插件</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yzndaV.png\" alt=\"Dart插件\"></p>\n<h5 id=\"启动模拟器\"><a href=\"#启动模拟器\" class=\"headerlink\" title=\"启动模拟器\"></a>启动模拟器</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 启动模拟器</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> open -a Simulator</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"运行应用\"><a href=\"#运行应用\" class=\"headerlink\" title=\"运行应用\"></a>运行应用</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 运行应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> flutter run</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"模式切换\"><a href=\"#模式切换\" class=\"headerlink\" title=\"模式切换\"></a>模式切换</h5><ul>\n<li>R 启动热更新，重新加载项目</li>\n<li>O 切换为安卓/iOS模式</li>\n<li>P 打开/关闭网格，可以方便掌握布局情况</li>\n<li>Q 退出调试预览模式</li>\n</ul>\n<h2 id=\"Flutter目录结构\"><a href=\"#Flutter目录结构\" class=\"headerlink\" title=\"Flutter目录结构\"></a>Flutter目录结构</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">项目目录</span><br><span class=\"line\">├── README.md</span><br><span class=\"line\">├── android         // 安卓平台相关代码资源</span><br><span class=\"line\">├── build           // 运行项目生成的编译目录</span><br><span class=\"line\">├── ios             // iOS平台相关代码资源</span><br><span class=\"line\">├── lib             // flutter相关代码，编写项目主要在这个目录</span><br><span class=\"line\">├── test            // 测试文件目录</span><br><span class=\"line\">├── flutterDemo.iml</span><br><span class=\"line\">├── pubspec.lock</span><br><span class=\"line\">└── pubspec.yaml    // 项目配置文件：项目名称、描述、第三方库依赖</span><br></pre></td></tr></table></figure>\n<h3 id=\"Flutter入口\"><a href=\"#Flutter入口\" class=\"headerlink\" title=\"Flutter入口\"></a>Flutter入口</h3><p>每一个 flutter 项目的 lib 目录里面都有一个 main.dart 这个文件就是 flutter 的入口文件</p>\n<p><code>main.dart</code> 里面的</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123; </span><br><span class=\"line\">    runApp(MyApp()); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 也可以简写 </span></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()=&gt;runApp(MyApp());</span><br></pre></td></tr></table></figure>\n<p>其中的 main 方法是 dart 的入口方法。runApp 方法是 flutter 的入口方法。</p>\n<p>MyApp 是自定义的一个组件</p>\n<h3 id=\"首个Demo-Center组件\"><a href=\"#首个Demo-Center组件\" class=\"headerlink\" title=\"首个Demo Center组件\"></a>首个Demo Center组件</h3><p><code>main.dart</code> 里面的</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  runApp(Center(</span><br><span class=\"line\">    child: Text(</span><br><span class=\"line\">      <span class=\"string\">&quot;Welcome Flutter&quot;</span>,</span><br><span class=\"line\">      textDirection: TextDirection.ltr,</span><br><span class=\"line\">    ),</span><br><span class=\"line\">  ));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行R进行重新编译</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/26/yzBhnI.png\" alt=\"首个Demo\"></p>\n<h3 id=\"自定义Widget\"><a href=\"#自定义Widget\" class=\"headerlink\" title=\"自定义Widget\"></a>自定义Widget</h3><p><code>main.dart</code> 里面的</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  runApp(MyApp());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自定义组件</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApp</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement build</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> Center(</span><br><span class=\"line\">      child: Text(</span><br><span class=\"line\">        <span class=\"string\">&quot;Welcome Flutter&quot;</span>,</span><br><span class=\"line\">        textDirection: TextDirection.ltr,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行r进行重新加载</p>\n<h3 id=\"Text组件简单介绍\"><a href=\"#Text组件简单介绍\" class=\"headerlink\" title=\"Text组件简单介绍\"></a>Text组件简单介绍</h3><p>给文字调整字号和颜色</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  runApp(MyApp());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApp</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement build</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> Center(</span><br><span class=\"line\">      child: Text(<span class=\"string\">&quot;Welcome Flutter&quot;</span>,</span><br><span class=\"line\">          textDirection: TextDirection.ltr,</span><br><span class=\"line\">          style: TextStyle(fontSize: <span class=\"number\">40.0</span>, color: Colors.yellow</span><br><span class=\"line\">              <span class=\"comment\">// color: Color.fromRGBO(255, 0, 255, 0.7)</span></span><br><span class=\"line\">              )),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"textDirection\"><a href=\"#textDirection\" class=\"headerlink\" title=\"textDirection\"></a>textDirection</h4><p>文本显示方式<code>TextDirection.ltr</code>从左到右</p>\n<h4 id=\"style\"><a href=\"#style\" class=\"headerlink\" title=\"style\"></a>style</h4><p>文本样式</p>\n<h3 id=\"MaterialApp组件\"><a href=\"#MaterialApp组件\" class=\"headerlink\" title=\"MaterialApp组件\"></a>MaterialApp组件</h3><p>MaterialApp 是一个方便的 Widget，它封装了应用程序实现 Material Design 所需要的 一些 Widget。一般作为顶层(根) widget 使用。</p>\n<p>常用的属性：</p>\n<ul>\n<li>home（主页）</li>\n<li>title（标题）</li>\n<li>color（颜色）</li>\n<li>theme（主题）</li>\n<li>routes（路由）</li>\n<li>…</li>\n</ul>\n<h3 id=\"Scaffold组件\"><a href=\"#Scaffold组件\" class=\"headerlink\" title=\"Scaffold组件\"></a>Scaffold组件</h3><p>Scaffold 是 Material Design 布局结构的基本实现。此类提供了用于显示 drawer、 snackbar 和底部 sheet 的 API。</p>\n<p>Scaffold 有下面几个主要属性：</p>\n<ul>\n<li>appBar - 显示在界面顶部的一个 AppBar。</li>\n<li>body - 当前界面所显示的主要内容 Widget。</li>\n<li>drawer - 抽屉菜单控件。</li>\n<li>…</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  runApp(MyApp());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//自定义组件</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApp</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement build</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> MaterialApp(</span><br><span class=\"line\">      home: Scaffold(</span><br><span class=\"line\">        appBar: AppBar(title: Text(<span class=\"string\">&#x27;Flutter Demo&#x27;</span>)),</span><br><span class=\"line\">        body: HomeContent(),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      theme: ThemeData(primarySwatch: Colors.yellow),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomeContent</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement build</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> Center(</span><br><span class=\"line\">        child: Text(</span><br><span class=\"line\">      <span class=\"string\">&#x27;你好Flutter 111&#x27;</span>,</span><br><span class=\"line\">      textDirection: TextDirection.ltr,</span><br><span class=\"line\">      style: TextStyle(</span><br><span class=\"line\">        fontSize: <span class=\"number\">40.0</span>,</span><br><span class=\"line\">        color: Colors.yellow,</span><br><span class=\"line\">        <span class=\"comment\">// color: Color.fromRGBO(244, 233, 121, 0.5),</span></span><br><span class=\"line\">      ),</span><br><span class=\"line\">    ));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.ax1x.com/2021/03/01/6Pvkxx.png\" alt=\"使用MaterialApp及Scaffold\"></p>\n<h2 id=\"Flutter组件\"><a href=\"#Flutter组件\" class=\"headerlink\" title=\"Flutter组件\"></a>Flutter组件</h2><h3 id=\"Container组件\"><a href=\"#Container组件\" class=\"headerlink\" title=\"Container组件\"></a>Container组件</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">alignment</td>\n<td style=\"text-align:center\">topCenter：顶部居中对齐</br>topLeft：顶部左对齐</br>topRight：顶部右对齐</br>center：水平垂直居中对齐</br>centerLeft：垂直居中水平居左对齐</br>centerRight：垂直居中水平居右对齐</br>bottomCenter 底部居中对齐</br>bottomLeft：底部居左对齐</br>bottomRight：底部居右对齐</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">decoration</td>\n<td style=\"text-align:center\">decoration: BoxDecoration( color: Colors.blue, border: Border.all( color: Colors.red, width: 2.0, ),borderRadius: BorderRadius.all( Radius.circular(8.0) ) )</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">margin</td>\n<td style=\"text-align:center\">margin 属性是表示 Container 与外部其他 组件的距离。</br>EdgeInsets.all(20.0),</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">padding</td>\n<td style=\"text-align:center\">padding 就 是 Container 的 内 边 距 ， 指 Container 边缘与 Child 之间的距离</br>padding: EdgeInsets.all(10.0)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">transform</td>\n<td style=\"text-align:center\">让 Container 容易进行一些旋转之类的</br>transform: Matrix4.rotationZ(0.2)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">height</td>\n<td style=\"text-align:center\">容器高度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">width</td>\n<td style=\"text-align:center\">容器宽度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">child</td>\n<td style=\"text-align:center\">容器子元素</td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"https://api.flutter.dev/flutter/widgets/Container-class.html\">更多参数</a></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  runApp(MyApp());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApp</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MaterialApp(</span><br><span class=\"line\">      home: Scaffold(</span><br><span class=\"line\">        appBar: AppBar(</span><br><span class=\"line\">          title: Text(<span class=\"string\">&#x27;home&#x27;</span>),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        body: HomeContent(),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      theme: ThemeData(primarySwatch: Colors.lightBlue),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomeContent</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Center(</span><br><span class=\"line\">      child: Container(</span><br><span class=\"line\">        child: Text(</span><br><span class=\"line\">          <span class=\"string\">&#x27;我是超长长长长长长长长长长长文本&#x27;</span>,</span><br><span class=\"line\">          textAlign: TextAlign.center,</span><br><span class=\"line\">          overflow: TextOverflow.ellipsis,</span><br><span class=\"line\">          maxLines: <span class=\"number\">1</span>,</span><br><span class=\"line\">          textScaleFactor: <span class=\"number\">2</span>,</span><br><span class=\"line\">          style: TextStyle(</span><br><span class=\"line\">            fontSize: <span class=\"number\">16.0</span>,</span><br><span class=\"line\">            color: Colors.red,</span><br><span class=\"line\">            <span class=\"comment\">// color: Color.fromARGB(a, r, g, b),</span></span><br><span class=\"line\">            fontWeight: FontWeight.w800,</span><br><span class=\"line\">            fontStyle: FontStyle.italic,</span><br><span class=\"line\">            decoration: TextDecoration.lineThrough,</span><br><span class=\"line\">            decorationColor: Colors.green,</span><br><span class=\"line\">            decorationStyle: TextDecorationStyle.dashed,</span><br><span class=\"line\">            letterSpacing: <span class=\"number\">5.0</span>,</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        height: <span class=\"number\">300.0</span>,</span><br><span class=\"line\">        width: <span class=\"number\">300.0</span>,</span><br><span class=\"line\">        decoration: BoxDecoration(</span><br><span class=\"line\">          color: Colors.yellow,</span><br><span class=\"line\">          border: Border.all(</span><br><span class=\"line\">            color: Colors.blue,</span><br><span class=\"line\">            width: <span class=\"number\">2.0</span>,</span><br><span class=\"line\">          ),</span><br><span class=\"line\">          borderRadius: BorderRadius.all(</span><br><span class=\"line\">            <span class=\"comment\">// Radius.circular(150), // 圆形</span></span><br><span class=\"line\">            Radius.circular(<span class=\"number\">50</span>),</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        <span class=\"comment\">// padding: EdgeInsets.all(20),</span></span><br><span class=\"line\">        padding: EdgeInsets.fromLTRB(<span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">5</span>, <span class=\"number\">5</span>),</span><br><span class=\"line\">        margin: EdgeInsets.fromLTRB(<span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">5</span>, <span class=\"number\">5</span>),</span><br><span class=\"line\">        <span class=\"comment\">// transform: Matrix4.translationValues(100, 10, 10),  // 位移</span></span><br><span class=\"line\">        <span class=\"comment\">// transform: Matrix4.rotationZ(0.3),  // 旋转</span></span><br><span class=\"line\">        <span class=\"comment\">// transform: Matrix4.diagonal3Values(1.3, 1, 1), // 缩放</span></span><br><span class=\"line\">        alignment: Alignment.center,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.ax1x.com/2021/03/01/6iG5O1.png\" alt=\"使用Container组件\"></p>\n<h3 id=\"Text组件\"><a href=\"#Text组件\" class=\"headerlink\" title=\"Text组件\"></a>Text组件</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">textAlign</td>\n<td style=\"text-align:center\">文本对齐方式（center 居中，left 左 对齐，right 右对齐，justfy 两端对齐）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">textDirection</td>\n<td style=\"text-align:center\">文本方向（ltr 从左至右，rtl 从右至 左）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">overflow</td>\n<td style=\"text-align:center\">文字超出屏幕之后的处理方式（clip 裁剪，fade 渐隐，ellipsis 省略号）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">textScaleFactor</td>\n<td style=\"text-align:center\">字体显示倍率</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">maxLines</td>\n<td style=\"text-align:center\">文字显示最大行数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">style</td>\n<td style=\"text-align:center\">字体的样式设置</td>\n</tr>\n</tbody>\n</table>\n<p>下面是 TextStyle 的参数</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">decoration</td>\n<td style=\"text-align:center\">文字装饰线（none 没有线，lineThrough 删除线，overline 上划线，underline 下划线）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">decorationColor</td>\n<td style=\"text-align:center\">文字装饰线颜色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">decorationStyle</td>\n<td style=\"text-align:center\">文字装饰线风格（[dashed,dotted]虚线， double 两根线，solid 一根实线，wavy 波浪 线）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">wordSpacing</td>\n<td style=\"text-align:center\">单词间隙（如果是负值，会让单词变得更紧凑）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">letterSpacing</td>\n<td style=\"text-align:center\">字母间隙（如果是负值，会让字母变得更紧凑）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">fontStyle</td>\n<td style=\"text-align:center\">文字样式（italic 斜体，normal 正常体）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">fontSize</td>\n<td style=\"text-align:center\">文字大小</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">color</td>\n<td style=\"text-align:center\">文字颜色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">fontWeight</td>\n<td style=\"text-align:center\">字体粗细（bold 粗体，normal 正常体）</td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"https://api.flutter.dev/flutter/painting/TextStyle-class.html\">更多参数</a></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  runApp(MyApp());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApp</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MaterialApp(</span><br><span class=\"line\">      home: Scaffold(</span><br><span class=\"line\">        appBar: AppBar(</span><br><span class=\"line\">          title: Text(<span class=\"string\">&#x27;home&#x27;</span>),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        body: HomeContent(),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      theme: ThemeData(primarySwatch: Colors.lightBlue),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomeContent</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Center(</span><br><span class=\"line\">      child: Container(</span><br><span class=\"line\">        child: Text(</span><br><span class=\"line\">          <span class=\"string\">&#x27;我是文本&#x27;</span>,</span><br><span class=\"line\">          textAlign: TextAlign.center,</span><br><span class=\"line\">          style: TextStyle(</span><br><span class=\"line\">            fontSize: <span class=\"number\">16.0</span>,</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        height: <span class=\"number\">300.0</span>,</span><br><span class=\"line\">        width: <span class=\"number\">300.0</span>,</span><br><span class=\"line\">        alignment: Alignment.center,</span><br><span class=\"line\">        decoration: BoxDecoration(</span><br><span class=\"line\">          color: Colors.yellow,</span><br><span class=\"line\">          border: Border.all(</span><br><span class=\"line\">            color: Colors.blue,</span><br><span class=\"line\">            width: <span class=\"number\">2.0</span>,</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.ax1x.com/2021/03/01/6PzWx1.png\" alt=\"使用Text组件\"></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.bilibili.com/video/BV1S4411E7LY?from=search&amp;seid=18237173814777031437\">B站-Dart Flutter教程_Dart Flutter入门实战视频教程-2020年新出-第14讲以后是Flutter教程</a></li>\n</ul>"},{"title":"HTML常见标签","toc":true,"abbrlink":"98767319","date":"2020-07-16T08:13:05.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/07/17/Us38TH.jpg)\n\n<!-- more -->\n\n## 元素的构成\n\n![元素的构成](https://s1.ax1x.com/2020/07/16/UDYNbF.png)\n\n## 链接\n\n> a代表链接，链接到一个地址\n\n```html\n标签：\n    <a></a>\n属性：\n    href：链接地址\n    target：打开方式\n        _blank：新标签页打开\n        _self：当前页面打开（默认）\n    title：链接提示\n```\n\n```html\n示例：\n// 打开一个新的页面显示链接内容\n<a href =\"http://baidu.com\" target=\"_blank\" title=\"baidu\">百度.com</a>\n// 不会跳转\n<a href = \"#\">百度.com</a>  \n// 跳转到id为about的页面上\n<a href = \"#about\">百度.com</a>\n// 跳转到相对于根路径下的id为getCourse的页面  \n<a href =\"/getCourse\">百度.com</>\n```\n\n## 文本标记\n\n### 标题元素\n\n> h1~h6代表标题，逐层弱化\n\n```html\n<h1></h1>\n<h2></h2>\n<h3></h3>\n<h4></h4>\n<h5></h5>\n<h6></h6>\n```\n\n### 文本样式\n\n> HTML中被废弃的标签`<b><u><i><s>`，替代的标签语义化更强\n\n&nbsp;\n\n> `<big>`标签呈现大号字体效果\n使用 `<big>` 标签可以很容易地放大字体。这简直不能再简单了：浏览器显示包含在 `<big>` 标签和其相应的 `<big>` 标签之间的文字时，其字体比周围的文字要大一号。但是，如果文字已经是最大号字体，这个 `<big>` 标签将不起任何作用。\n更妙的是，可以嵌套 `<big>` 标签来放大文本。每一个 `<big>` 标签都可以使字体大一号，直到上限 7 号文本，正如字体模型所定义的那样。\n但是使用 `<big>` 标签的时候还是要小心，因为浏览器总是很宽大地试图去理解各种标签，对于那些不支持 `<big>` 标签的浏览器来说，它经常将其认为是粗体字标签。\n\n```html\n加重语气：\n    <strong></strong>\n粗体(已弃用-效果同加重语气)：\n    <b></b>\n插入字：\n    <ins></ins>\n下划线(已弃用-效果同插入字)：\n    <u></u>\n强调文字：\n    <em></em>\n斜体(已弃用-效果同强调文字)：\n    <i></i>\n删除字：\n    <del></del>\n删除线(已弃用-效果同删除字)：\n    <s></s>\n大号字：\n    <big></big>\n小号字：\n    <small></small>\n上标：\n    <sup></sup>\n下标：\n    <sub></sub>\n```\n\n### 引用\n\n> HTML中通过`<q>`定义短的引用，且浏览器通常会为 `<q>` 元素包围引号。\n\n```html\n代码：\n    <p>WWF 的目标是：<q>构建人与自然和谐共存的世界。</q></p>\n效果：\n    WWF 的目标是：\"构建人与自然和谐共存的世界。\"\n```\n\n### 段落元素\n\n> p代表段落，表示大段文字，浏览器会自动地在段落的前后添加空行。\n使用空的段落标记 `<p></p>` 去插入一个空行是个坏习惯，用 `<br />` 标签代替它！\n\n```html\n<p></p>\n```\n\n### 换行元素\n\n```html\n<br/>\n```\n\n### 分割线元素\n\n```html\n标签：\n    <hr/>\n属性：\n    size：尺寸\n    width：宽度\n    color：颜色\n    align：水平对齐方式\n        left/center/right\n```\n\n### 注释\n\n```html\n<!--  这是一段注释，在浏览器中不会显示 -->\n```\n\n### 分区元素\n\n> div,语义为“一大块”,其一大作用就是文档布局，可用于给页面划分区块，让结构更清晰，它取代了使用表格定义布局的老式方法。\ndiv是块级元素，它是可用于组合其他 HTML 元素的容器，且没有特定的含义，浏览器会在其前后显示折行。\n如果与 CSS 一同使用，`<div>` 元素可用于对大的内容块设置样式属性。\n\n```html\n块分区元素：\n    <div></div>\n行内分区元素：\n    <span></span>\n```\n\n### 内联元素\n\n> span：是内联元素，可用作文本的容器，也没有特定的含义，当与 CSS 一同使用时，`<span>` 元素可用于为部分文本设置样式属性。\nem：是内联元素，可用作文本的容器，表示其范围内的文本需要被强调显示。\nstrong :是内联元素，可用作文本的容器，表示其范围内的文本很重要，强调性更强\n\n```html\n    <span></span>\n    <strong></strong>\n    <em></em>\n```\n\n```html\n示例：\n<p>优惠<strong>100</strong>元</p>\n<p>小谷<em>2</em>岁了</p>\n```\n\n### 块级元素与行内元素\n\n```html\n块级元素：\n    <p></p>\n    <div></div>\n    <h1></h1>\n    ~\n    <h6></h6>\n行内元素：\n    <img/>\n    <a></a>\n    <i></i>\n    <b></b>\n    <s></s>\n    <u></u>\n    <sub></sub>\n    <sup></sup>\n    <span></span>\n```\n\n## 图像\n\n> img代表展示一张图片，src是其必备属性，代表了图片的名称及地址，alt属性是指当图片显示不出来时，它就会显示，起到一个占位说明的作用。\n\n```html\n标签：\n    <img/>\n属性：\n    src：图片地址\n    alt：图片说明\n    width：图像宽度\n    height：图像高度\n```\n\n## iframe\n\n> 在当前页面上嵌入一个页面，注意跨域操作问题。\n\n```html\n标签：\n    <iframe></iframe>\n属性：\n    src：嵌入地址\n    name：名称\n```\n\n```html\n示例：\n<iframe src=\"http://baidu.com\" name=\"myPager\"></iframe>\n<p><a href=\"http://www.w3cschool.cc\" target=\"myPager\">W3Cschool.cc</a></p>\n```\n\n## 表格\n\n> table用于展示表格，每个表格均有若干行（由 `<tr>` 标签定义），每行被分割为若干单元格（由 `<td>` 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。\n不要用table来做布局，使用 `<table>` 元素进行文档布局不是表格的正确用法，`<table>` 元素的作用是显示表格化的数据，且thread、tbody、tfoot可省略，浏览器会自动添加borader-collapse，用于合并边框。\n\n```html\n标签：\n    <table></table>\n属性：\n    width：宽度\n    height：高度\n    border：边框宽度\n    bgcolor：背景颜色\n    cellpadding：内边距\n    cellspacing：外边距\n    align：水平对齐方式\n        left/center/right\n```\n\n### 子元素\n\n```html\n标签：\n    <tr></tr>（创建表行）\n属性：\n    bgcolor：背景颜色\n    align：水平对齐方式\n        left/center/right\n    valign：垂直对齐方式\n        top/middle/bottom\n\n标签：\n    <td></td>（创建单元格）\n属性：\n    width：宽度\n    height：高度\n    align：水平对齐方式\n    valign：垂直对齐方式\n\n<caption></caption>（表格标题）\n<th></th>（列标题）\n<thead></thead>（表头）\n<tbody></tbody>（表主体）\n<tfoot></tfoot> （表尾）\n```\n\n## 列表\n\n### 有序列表\n\n> ol: order list 有序列表 用于表示带步骤或者编号的并列内容，ol的直接子元素只能是li，而且可以嵌套。\n\n```html\n<ol>\n    <li></li>\n</ol>\n属性：\n    type：标识类型，默认为数字排列\n        1（默认）/a/A/i/I\n    start：定义起始值，默认从1开始\n```\n\n### 无序列表\n\n> ul: unsort list 无序列表，其直接子元素是li，用于表示并列的内容，而且可以嵌套。\n\n```html\n<ul>\n    <li></li>\n</ul>\n属性:\n    type：标识类型\n        disc（默认）/circle/square/none\n```\n\n### 自定义列表\n\n> 自定义列表，用于展示一系列\"标题：内容...\"的场景。\ndl:自定义列表，dt:自定义标题，dd:自定义描述。\n\n```html\n<dl>\n    <dt>列表中的标题</dt>\n    <dd>列表中的数据</dd>\n</dl>\n```\n\n## 表单\n\n```html\n标签：\n    <form></form>\n属性：\n    name：表单名称\n    action：提交地址\n    method：提交方式\n        get/post\n```\n\n### input\n\n```html\n标签：\n    <input/>\n属性：\n    name：控件名称\n    type：控件类型\n    value：值\n    disabled：禁用\n```\n\n### 常用表单控件\n\n```html\n文本框：\n    <input type=\"text\"/>\n密码框：\n    <input type=\"password\"/>\n    属性：\n        readonly：控件只读\n        maxlength：限制字符数\n单选按钮：\n    <input type=\"radio\"/>\n复选框：\n    <input type=\"checkbox\"/>\n    属性：\n        checked：设置默认被选中\n提交按钮：\n    <input type=\"submit\"/>\n重置按钮：\n    <input type=\"reset\"/>\n普通按钮：\n    <input type=\"button\"/>\n图片按钮：\n    <input type=\"image\" src=\"\"/>\n文件选择框：\n    <input type=\"file\"/>\n隐藏域：\n    <input type=\"hidden\"/>\n```\n\n### button\n\n> 按钮\n\n```html\n<button>内容</button>\n```\n\n### select 和 option\n\n```html\n<section name=\"\">\n    <option value=\"\" selected></option>\n</section>\n```\n\n## 结构标记\n\n```html\n<header></header>\n<nav></nav>\n<aside></aside>\n<article></article>\n<section></section>\n<footer></footer>\n```\n\n## 参考资料\n\n* [HTML常见标签](https://www.jianshu.com/p/e0fc0c31f174)\n* [HTML 常用标签及属性](https://juejin.im/post/5bfa2cfbe51d4509834cc06d)\n* [HTML常用标签属性及事件属性](https://www.jianshu.com/p/31d2eda9f9cf)\n","source":"_posts/HTML常见标签.md","raw":"---\ntitle: HTML常见标签\ntags:\n  - 技术积累\n  - 前端\n  - html\ncategories:\n  - 技术积累\n  - 前端\n  - html\ntoc: true\nabbrlink: '98767319'\ndate: 2020-07-16 16:13:05\n---\n\n![首屏图](https://s1.ax1x.com/2020/07/17/Us38TH.jpg)\n\n<!-- more -->\n\n## 元素的构成\n\n![元素的构成](https://s1.ax1x.com/2020/07/16/UDYNbF.png)\n\n## 链接\n\n> a代表链接，链接到一个地址\n\n```html\n标签：\n    <a></a>\n属性：\n    href：链接地址\n    target：打开方式\n        _blank：新标签页打开\n        _self：当前页面打开（默认）\n    title：链接提示\n```\n\n```html\n示例：\n// 打开一个新的页面显示链接内容\n<a href =\"http://baidu.com\" target=\"_blank\" title=\"baidu\">百度.com</a>\n// 不会跳转\n<a href = \"#\">百度.com</a>  \n// 跳转到id为about的页面上\n<a href = \"#about\">百度.com</a>\n// 跳转到相对于根路径下的id为getCourse的页面  \n<a href =\"/getCourse\">百度.com</>\n```\n\n## 文本标记\n\n### 标题元素\n\n> h1~h6代表标题，逐层弱化\n\n```html\n<h1></h1>\n<h2></h2>\n<h3></h3>\n<h4></h4>\n<h5></h5>\n<h6></h6>\n```\n\n### 文本样式\n\n> HTML中被废弃的标签`<b><u><i><s>`，替代的标签语义化更强\n\n&nbsp;\n\n> `<big>`标签呈现大号字体效果\n使用 `<big>` 标签可以很容易地放大字体。这简直不能再简单了：浏览器显示包含在 `<big>` 标签和其相应的 `<big>` 标签之间的文字时，其字体比周围的文字要大一号。但是，如果文字已经是最大号字体，这个 `<big>` 标签将不起任何作用。\n更妙的是，可以嵌套 `<big>` 标签来放大文本。每一个 `<big>` 标签都可以使字体大一号，直到上限 7 号文本，正如字体模型所定义的那样。\n但是使用 `<big>` 标签的时候还是要小心，因为浏览器总是很宽大地试图去理解各种标签，对于那些不支持 `<big>` 标签的浏览器来说，它经常将其认为是粗体字标签。\n\n```html\n加重语气：\n    <strong></strong>\n粗体(已弃用-效果同加重语气)：\n    <b></b>\n插入字：\n    <ins></ins>\n下划线(已弃用-效果同插入字)：\n    <u></u>\n强调文字：\n    <em></em>\n斜体(已弃用-效果同强调文字)：\n    <i></i>\n删除字：\n    <del></del>\n删除线(已弃用-效果同删除字)：\n    <s></s>\n大号字：\n    <big></big>\n小号字：\n    <small></small>\n上标：\n    <sup></sup>\n下标：\n    <sub></sub>\n```\n\n### 引用\n\n> HTML中通过`<q>`定义短的引用，且浏览器通常会为 `<q>` 元素包围引号。\n\n```html\n代码：\n    <p>WWF 的目标是：<q>构建人与自然和谐共存的世界。</q></p>\n效果：\n    WWF 的目标是：\"构建人与自然和谐共存的世界。\"\n```\n\n### 段落元素\n\n> p代表段落，表示大段文字，浏览器会自动地在段落的前后添加空行。\n使用空的段落标记 `<p></p>` 去插入一个空行是个坏习惯，用 `<br />` 标签代替它！\n\n```html\n<p></p>\n```\n\n### 换行元素\n\n```html\n<br/>\n```\n\n### 分割线元素\n\n```html\n标签：\n    <hr/>\n属性：\n    size：尺寸\n    width：宽度\n    color：颜色\n    align：水平对齐方式\n        left/center/right\n```\n\n### 注释\n\n```html\n<!--  这是一段注释，在浏览器中不会显示 -->\n```\n\n### 分区元素\n\n> div,语义为“一大块”,其一大作用就是文档布局，可用于给页面划分区块，让结构更清晰，它取代了使用表格定义布局的老式方法。\ndiv是块级元素，它是可用于组合其他 HTML 元素的容器，且没有特定的含义，浏览器会在其前后显示折行。\n如果与 CSS 一同使用，`<div>` 元素可用于对大的内容块设置样式属性。\n\n```html\n块分区元素：\n    <div></div>\n行内分区元素：\n    <span></span>\n```\n\n### 内联元素\n\n> span：是内联元素，可用作文本的容器，也没有特定的含义，当与 CSS 一同使用时，`<span>` 元素可用于为部分文本设置样式属性。\nem：是内联元素，可用作文本的容器，表示其范围内的文本需要被强调显示。\nstrong :是内联元素，可用作文本的容器，表示其范围内的文本很重要，强调性更强\n\n```html\n    <span></span>\n    <strong></strong>\n    <em></em>\n```\n\n```html\n示例：\n<p>优惠<strong>100</strong>元</p>\n<p>小谷<em>2</em>岁了</p>\n```\n\n### 块级元素与行内元素\n\n```html\n块级元素：\n    <p></p>\n    <div></div>\n    <h1></h1>\n    ~\n    <h6></h6>\n行内元素：\n    <img/>\n    <a></a>\n    <i></i>\n    <b></b>\n    <s></s>\n    <u></u>\n    <sub></sub>\n    <sup></sup>\n    <span></span>\n```\n\n## 图像\n\n> img代表展示一张图片，src是其必备属性，代表了图片的名称及地址，alt属性是指当图片显示不出来时，它就会显示，起到一个占位说明的作用。\n\n```html\n标签：\n    <img/>\n属性：\n    src：图片地址\n    alt：图片说明\n    width：图像宽度\n    height：图像高度\n```\n\n## iframe\n\n> 在当前页面上嵌入一个页面，注意跨域操作问题。\n\n```html\n标签：\n    <iframe></iframe>\n属性：\n    src：嵌入地址\n    name：名称\n```\n\n```html\n示例：\n<iframe src=\"http://baidu.com\" name=\"myPager\"></iframe>\n<p><a href=\"http://www.w3cschool.cc\" target=\"myPager\">W3Cschool.cc</a></p>\n```\n\n## 表格\n\n> table用于展示表格，每个表格均有若干行（由 `<tr>` 标签定义），每行被分割为若干单元格（由 `<td>` 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。\n不要用table来做布局，使用 `<table>` 元素进行文档布局不是表格的正确用法，`<table>` 元素的作用是显示表格化的数据，且thread、tbody、tfoot可省略，浏览器会自动添加borader-collapse，用于合并边框。\n\n```html\n标签：\n    <table></table>\n属性：\n    width：宽度\n    height：高度\n    border：边框宽度\n    bgcolor：背景颜色\n    cellpadding：内边距\n    cellspacing：外边距\n    align：水平对齐方式\n        left/center/right\n```\n\n### 子元素\n\n```html\n标签：\n    <tr></tr>（创建表行）\n属性：\n    bgcolor：背景颜色\n    align：水平对齐方式\n        left/center/right\n    valign：垂直对齐方式\n        top/middle/bottom\n\n标签：\n    <td></td>（创建单元格）\n属性：\n    width：宽度\n    height：高度\n    align：水平对齐方式\n    valign：垂直对齐方式\n\n<caption></caption>（表格标题）\n<th></th>（列标题）\n<thead></thead>（表头）\n<tbody></tbody>（表主体）\n<tfoot></tfoot> （表尾）\n```\n\n## 列表\n\n### 有序列表\n\n> ol: order list 有序列表 用于表示带步骤或者编号的并列内容，ol的直接子元素只能是li，而且可以嵌套。\n\n```html\n<ol>\n    <li></li>\n</ol>\n属性：\n    type：标识类型，默认为数字排列\n        1（默认）/a/A/i/I\n    start：定义起始值，默认从1开始\n```\n\n### 无序列表\n\n> ul: unsort list 无序列表，其直接子元素是li，用于表示并列的内容，而且可以嵌套。\n\n```html\n<ul>\n    <li></li>\n</ul>\n属性:\n    type：标识类型\n        disc（默认）/circle/square/none\n```\n\n### 自定义列表\n\n> 自定义列表，用于展示一系列\"标题：内容...\"的场景。\ndl:自定义列表，dt:自定义标题，dd:自定义描述。\n\n```html\n<dl>\n    <dt>列表中的标题</dt>\n    <dd>列表中的数据</dd>\n</dl>\n```\n\n## 表单\n\n```html\n标签：\n    <form></form>\n属性：\n    name：表单名称\n    action：提交地址\n    method：提交方式\n        get/post\n```\n\n### input\n\n```html\n标签：\n    <input/>\n属性：\n    name：控件名称\n    type：控件类型\n    value：值\n    disabled：禁用\n```\n\n### 常用表单控件\n\n```html\n文本框：\n    <input type=\"text\"/>\n密码框：\n    <input type=\"password\"/>\n    属性：\n        readonly：控件只读\n        maxlength：限制字符数\n单选按钮：\n    <input type=\"radio\"/>\n复选框：\n    <input type=\"checkbox\"/>\n    属性：\n        checked：设置默认被选中\n提交按钮：\n    <input type=\"submit\"/>\n重置按钮：\n    <input type=\"reset\"/>\n普通按钮：\n    <input type=\"button\"/>\n图片按钮：\n    <input type=\"image\" src=\"\"/>\n文件选择框：\n    <input type=\"file\"/>\n隐藏域：\n    <input type=\"hidden\"/>\n```\n\n### button\n\n> 按钮\n\n```html\n<button>内容</button>\n```\n\n### select 和 option\n\n```html\n<section name=\"\">\n    <option value=\"\" selected></option>\n</section>\n```\n\n## 结构标记\n\n```html\n<header></header>\n<nav></nav>\n<aside></aside>\n<article></article>\n<section></section>\n<footer></footer>\n```\n\n## 参考资料\n\n* [HTML常见标签](https://www.jianshu.com/p/e0fc0c31f174)\n* [HTML 常用标签及属性](https://juejin.im/post/5bfa2cfbe51d4509834cc06d)\n* [HTML常用标签属性及事件属性](https://www.jianshu.com/p/31d2eda9f9cf)\n","slug":"HTML常见标签","published":1,"updated":"2020-08-12T01:57:58.408Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjy600042an9dudn7edf","content":"<p><img src=\"https://s1.ax1x.com/2020/07/17/Us38TH.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<h2 id=\"元素的构成\"><a href=\"#元素的构成\" class=\"headerlink\" title=\"元素的构成\"></a>元素的构成</h2><p><img src=\"https://s1.ax1x.com/2020/07/16/UDYNbF.png\" alt=\"元素的构成\"></p>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><blockquote>\n<p>a代表链接，链接到一个地址</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    href：链接地址</span><br><span class=\"line\">    target：打开方式</span><br><span class=\"line\">        _blank：新标签页打开</span><br><span class=\"line\">        _self：当前页面打开（默认）</span><br><span class=\"line\">    title：链接提示</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例：</span><br><span class=\"line\">// 打开一个新的页面显示链接内容</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span> =<span class=\"string\">&quot;http://baidu.com&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;baidu&quot;</span>&gt;</span>百度.com<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">// 不会跳转</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span> = <span class=\"string\">&quot;#&quot;</span>&gt;</span>百度.com<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>  </span><br><span class=\"line\">// 跳转到id为about的页面上</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span> = <span class=\"string\">&quot;#about&quot;</span>&gt;</span>百度.com<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">// 跳转到相对于根路径下的id为getCourse的页面  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span> =<span class=\"string\">&quot;/getCourse&quot;</span>&gt;</span>百度.com<span class=\"tag\">&lt;/&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"文本标记\"><a href=\"#文本标记\" class=\"headerlink\" title=\"文本标记\"></a>文本标记</h2><h3 id=\"标题元素\"><a href=\"#标题元素\" class=\"headerlink\" title=\"标题元素\"></a>标题元素</h3><blockquote>\n<p>h1~h6代表标题，逐层弱化</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"文本样式\"><a href=\"#文本样式\" class=\"headerlink\" title=\"文本样式\"></a>文本样式</h3><blockquote>\n<p>HTML中被废弃的标签<code>&lt;b&gt;&lt;u&gt;&lt;i&gt;&lt;s&gt;</code>，替代的标签语义化更强</p>\n</blockquote>\n<p>&nbsp;</p>\n<blockquote>\n<p><code>&lt;big&gt;</code>标签呈现大号字体效果<br>使用 <code>&lt;big&gt;</code> 标签可以很容易地放大字体。这简直不能再简单了：浏览器显示包含在 <code>&lt;big&gt;</code> 标签和其相应的 <code>&lt;big&gt;</code> 标签之间的文字时，其字体比周围的文字要大一号。但是，如果文字已经是最大号字体，这个 <code>&lt;big&gt;</code> 标签将不起任何作用。<br>更妙的是，可以嵌套 <code>&lt;big&gt;</code> 标签来放大文本。每一个 <code>&lt;big&gt;</code> 标签都可以使字体大一号，直到上限 7 号文本，正如字体模型所定义的那样。<br>但是使用 <code>&lt;big&gt;</code> 标签的时候还是要小心，因为浏览器总是很宽大地试图去理解各种标签，对于那些不支持 <code>&lt;big&gt;</code> 标签的浏览器来说，它经常将其认为是粗体字标签。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">加重语气：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span></span><br><span class=\"line\">粗体(已弃用-效果同加重语气)：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span></span><br><span class=\"line\">插入字：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ins</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ins</span>&gt;</span></span><br><span class=\"line\">下划线(已弃用-效果同插入字)：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">u</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">u</span>&gt;</span></span><br><span class=\"line\">强调文字：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span></span><br><span class=\"line\">斜体(已弃用-效果同强调文字)：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">删除字：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">del</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">del</span>&gt;</span></span><br><span class=\"line\">删除线(已弃用-效果同删除字)：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">s</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">s</span>&gt;</span></span><br><span class=\"line\">大号字：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">big</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">big</span>&gt;</span></span><br><span class=\"line\">小号字：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">small</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span></span><br><span class=\"line\">上标：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sup</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">sup</span>&gt;</span></span><br><span class=\"line\">下标：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sub</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">sub</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><blockquote>\n<p>HTML中通过<code>&lt;q&gt;</code>定义短的引用，且浏览器通常会为 <code>&lt;q&gt;</code> 元素包围引号。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>WWF 的目标是：<span class=\"tag\">&lt;<span class=\"name\">q</span>&gt;</span>构建人与自然和谐共存的世界。<span class=\"tag\">&lt;/<span class=\"name\">q</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">效果：</span><br><span class=\"line\">    WWF 的目标是：&quot;构建人与自然和谐共存的世界。&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"段落元素\"><a href=\"#段落元素\" class=\"headerlink\" title=\"段落元素\"></a>段落元素</h3><blockquote>\n<p>p代表段落，表示大段文字，浏览器会自动地在段落的前后添加空行。<br>使用空的段落标记 <code>&lt;p&gt;&lt;/p&gt;</code> 去插入一个空行是个坏习惯，用 <code>&lt;br /&gt;</code> 标签代替它！</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"换行元素\"><a href=\"#换行元素\" class=\"headerlink\" title=\"换行元素\"></a>换行元素</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"分割线元素\"><a href=\"#分割线元素\" class=\"headerlink\" title=\"分割线元素\"></a>分割线元素</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span>/&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    size：尺寸</span><br><span class=\"line\">    width：宽度</span><br><span class=\"line\">    color：颜色</span><br><span class=\"line\">    align：水平对齐方式</span><br><span class=\"line\">        left/center/right</span><br></pre></td></tr></table></figure>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--  这是一段注释，在浏览器中不会显示 --&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"分区元素\"><a href=\"#分区元素\" class=\"headerlink\" title=\"分区元素\"></a>分区元素</h3><blockquote>\n<p>div,语义为“一大块”,其一大作用就是文档布局，可用于给页面划分区块，让结构更清晰，它取代了使用表格定义布局的老式方法。<br>div是块级元素，它是可用于组合其他 HTML 元素的容器，且没有特定的含义，浏览器会在其前后显示折行。<br>如果与 CSS 一同使用，<code>&lt;div&gt;</code> 元素可用于对大的内容块设置样式属性。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">块分区元素：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">行内分区元素：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"内联元素\"><a href=\"#内联元素\" class=\"headerlink\" title=\"内联元素\"></a>内联元素</h3><blockquote>\n<p>span：是内联元素，可用作文本的容器，也没有特定的含义，当与 CSS 一同使用时，<code>&lt;span&gt;</code> 元素可用于为部分文本设置样式属性。<br>em：是内联元素，可用作文本的容器，表示其范围内的文本需要被强调显示。<br>strong :是内联元素，可用作文本的容器，表示其范围内的文本很重要，强调性更强</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例：</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>优惠<span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>100<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span>元<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>小谷<span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span>岁了<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块级元素与行内元素\"><a href=\"#块级元素与行内元素\" class=\"headerlink\" title=\"块级元素与行内元素\"></a>块级元素与行内元素</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">块级元素：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    ~</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\">行内元素：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">s</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">s</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">u</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">u</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sub</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">sub</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sup</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">sup</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"图像\"><a href=\"#图像\" class=\"headerlink\" title=\"图像\"></a>图像</h2><blockquote>\n<p>img代表展示一张图片，src是其必备属性，代表了图片的名称及地址，alt属性是指当图片显示不出来时，它就会显示，起到一个占位说明的作用。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span>/&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    src：图片地址</span><br><span class=\"line\">    alt：图片说明</span><br><span class=\"line\">    width：图像宽度</span><br><span class=\"line\">    height：图像高度</span><br></pre></td></tr></table></figure>\n<h2 id=\"iframe\"><a href=\"#iframe\" class=\"headerlink\" title=\"iframe\"></a>iframe</h2><blockquote>\n<p>在当前页面上嵌入一个页面，注意跨域操作问题。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">iframe</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    src：嵌入地址</span><br><span class=\"line\">    name：名称</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例：</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://baidu.com&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;myPager&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://www.w3cschool.cc&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;myPager&quot;</span>&gt;</span>W3Cschool.cc<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><blockquote>\n<p>table用于展示表格，每个表格均有若干行（由 <code>&lt;tr&gt;</code> 标签定义），每行被分割为若干单元格（由 <code>&lt;td&gt;</code> 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。<br>不要用table来做布局，使用 <code>&lt;table&gt;</code> 元素进行文档布局不是表格的正确用法，<code>&lt;table&gt;</code> 元素的作用是显示表格化的数据，且thread、tbody、tfoot可省略，浏览器会自动添加borader-collapse，用于合并边框。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    width：宽度</span><br><span class=\"line\">    height：高度</span><br><span class=\"line\">    border：边框宽度</span><br><span class=\"line\">    bgcolor：背景颜色</span><br><span class=\"line\">    cellpadding：内边距</span><br><span class=\"line\">    cellspacing：外边距</span><br><span class=\"line\">    align：水平对齐方式</span><br><span class=\"line\">        left/center/right</span><br></pre></td></tr></table></figure>\n<h3 id=\"子元素\"><a href=\"#子元素\" class=\"headerlink\" title=\"子元素\"></a>子元素</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span>（创建表行）</span><br><span class=\"line\">属性：</span><br><span class=\"line\">    bgcolor：背景颜色</span><br><span class=\"line\">    align：水平对齐方式</span><br><span class=\"line\">        left/center/right</span><br><span class=\"line\">    valign：垂直对齐方式</span><br><span class=\"line\">        top/middle/bottom</span><br><span class=\"line\"></span><br><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>（创建单元格）</span><br><span class=\"line\">属性：</span><br><span class=\"line\">    width：宽度</span><br><span class=\"line\">    height：高度</span><br><span class=\"line\">    align：水平对齐方式</span><br><span class=\"line\">    valign：垂直对齐方式</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">caption</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">caption</span>&gt;</span>（表格标题）</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span>（列标题）</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span>（表头）</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span>（表主体）</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tfoot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">tfoot</span>&gt;</span> （表尾）</span><br></pre></td></tr></table></figure>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><h3 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h3><blockquote>\n<p>ol: order list 有序列表 用于表示带步骤或者编号的并列内容，ol的直接子元素只能是li，而且可以嵌套。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    type：标识类型，默认为数字排列</span><br><span class=\"line\">        1（默认）/a/A/i/I</span><br><span class=\"line\">    start：定义起始值，默认从1开始</span><br></pre></td></tr></table></figure>\n<h3 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h3><blockquote>\n<p>ul: unsort list 无序列表，其直接子元素是li，用于表示并列的内容，而且可以嵌套。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">属性:</span><br><span class=\"line\">    type：标识类型</span><br><span class=\"line\">        disc（默认）/circle/square/none</span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义列表\"><a href=\"#自定义列表\" class=\"headerlink\" title=\"自定义列表\"></a>自定义列表</h3><blockquote>\n<p>自定义列表，用于展示一系列”标题：内容…”的场景。<br>dl:自定义列表，dt:自定义标题，dd:自定义描述。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>列表中的标题<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>列表中的数据<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"表单\"><a href=\"#表单\" class=\"headerlink\" title=\"表单\"></a>表单</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    name：表单名称</span><br><span class=\"line\">    action：提交地址</span><br><span class=\"line\">    method：提交方式</span><br><span class=\"line\">        get/post</span><br></pre></td></tr></table></figure>\n<h3 id=\"input\"><a href=\"#input\" class=\"headerlink\" title=\"input\"></a>input</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span>/&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    name：控件名称</span><br><span class=\"line\">    type：控件类型</span><br><span class=\"line\">    value：值</span><br><span class=\"line\">    disabled：禁用</span><br></pre></td></tr></table></figure>\n<h3 id=\"常用表单控件\"><a href=\"#常用表单控件\" class=\"headerlink\" title=\"常用表单控件\"></a>常用表单控件</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文本框：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>/&gt;</span></span><br><span class=\"line\">密码框：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span>/&gt;</span></span><br><span class=\"line\">    属性：</span><br><span class=\"line\">        readonly：控件只读</span><br><span class=\"line\">        maxlength：限制字符数</span><br><span class=\"line\">单选按钮：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span>/&gt;</span></span><br><span class=\"line\">复选框：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span>/&gt;</span></span><br><span class=\"line\">    属性：</span><br><span class=\"line\">        checked：设置默认被选中</span><br><span class=\"line\">提交按钮：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span>/&gt;</span></span><br><span class=\"line\">重置按钮：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;reset&quot;</span>/&gt;</span></span><br><span class=\"line\">普通按钮：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span>/&gt;</span></span><br><span class=\"line\">图片按钮：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;image&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">文件选择框：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span>/&gt;</span></span><br><span class=\"line\">隐藏域：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"button\"><a href=\"#button\" class=\"headerlink\" title=\"button\"></a>button</h3><blockquote>\n<p>按钮</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>内容<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"select-和-option\"><a href=\"#select-和-option\" class=\"headerlink\" title=\"select 和 option\"></a>select 和 option</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">selected</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"结构标记\"><a href=\"#结构标记\" class=\"headerlink\" title=\"结构标记\"></a>结构标记</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">aside</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">aside</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">article</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">footer</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">footer</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.jianshu.com/p/e0fc0c31f174\">HTML常见标签</a></li>\n<li><a href=\"https://juejin.im/post/5bfa2cfbe51d4509834cc06d\">HTML 常用标签及属性</a></li>\n<li><a href=\"https://www.jianshu.com/p/31d2eda9f9cf\">HTML常用标签属性及事件属性</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/07/17/Us38TH.jpg\" alt=\"首屏图\"></p>","more":"<h2 id=\"元素的构成\"><a href=\"#元素的构成\" class=\"headerlink\" title=\"元素的构成\"></a>元素的构成</h2><p><img src=\"https://s1.ax1x.com/2020/07/16/UDYNbF.png\" alt=\"元素的构成\"></p>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><blockquote>\n<p>a代表链接，链接到一个地址</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    href：链接地址</span><br><span class=\"line\">    target：打开方式</span><br><span class=\"line\">        _blank：新标签页打开</span><br><span class=\"line\">        _self：当前页面打开（默认）</span><br><span class=\"line\">    title：链接提示</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例：</span><br><span class=\"line\">// 打开一个新的页面显示链接内容</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span> =<span class=\"string\">&quot;http://baidu.com&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;baidu&quot;</span>&gt;</span>百度.com<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">// 不会跳转</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span> = <span class=\"string\">&quot;#&quot;</span>&gt;</span>百度.com<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>  </span><br><span class=\"line\">// 跳转到id为about的页面上</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span> = <span class=\"string\">&quot;#about&quot;</span>&gt;</span>百度.com<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">// 跳转到相对于根路径下的id为getCourse的页面  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span> =<span class=\"string\">&quot;/getCourse&quot;</span>&gt;</span>百度.com<span class=\"tag\">&lt;/&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"文本标记\"><a href=\"#文本标记\" class=\"headerlink\" title=\"文本标记\"></a>文本标记</h2><h3 id=\"标题元素\"><a href=\"#标题元素\" class=\"headerlink\" title=\"标题元素\"></a>标题元素</h3><blockquote>\n<p>h1~h6代表标题，逐层弱化</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"文本样式\"><a href=\"#文本样式\" class=\"headerlink\" title=\"文本样式\"></a>文本样式</h3><blockquote>\n<p>HTML中被废弃的标签<code>&lt;b&gt;&lt;u&gt;&lt;i&gt;&lt;s&gt;</code>，替代的标签语义化更强</p>\n</blockquote>\n<p>&nbsp;</p>\n<blockquote>\n<p><code>&lt;big&gt;</code>标签呈现大号字体效果<br>使用 <code>&lt;big&gt;</code> 标签可以很容易地放大字体。这简直不能再简单了：浏览器显示包含在 <code>&lt;big&gt;</code> 标签和其相应的 <code>&lt;big&gt;</code> 标签之间的文字时，其字体比周围的文字要大一号。但是，如果文字已经是最大号字体，这个 <code>&lt;big&gt;</code> 标签将不起任何作用。<br>更妙的是，可以嵌套 <code>&lt;big&gt;</code> 标签来放大文本。每一个 <code>&lt;big&gt;</code> 标签都可以使字体大一号，直到上限 7 号文本，正如字体模型所定义的那样。<br>但是使用 <code>&lt;big&gt;</code> 标签的时候还是要小心，因为浏览器总是很宽大地试图去理解各种标签，对于那些不支持 <code>&lt;big&gt;</code> 标签的浏览器来说，它经常将其认为是粗体字标签。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">加重语气：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span></span><br><span class=\"line\">粗体(已弃用-效果同加重语气)：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span></span><br><span class=\"line\">插入字：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ins</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ins</span>&gt;</span></span><br><span class=\"line\">下划线(已弃用-效果同插入字)：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">u</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">u</span>&gt;</span></span><br><span class=\"line\">强调文字：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span></span><br><span class=\"line\">斜体(已弃用-效果同强调文字)：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">删除字：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">del</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">del</span>&gt;</span></span><br><span class=\"line\">删除线(已弃用-效果同删除字)：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">s</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">s</span>&gt;</span></span><br><span class=\"line\">大号字：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">big</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">big</span>&gt;</span></span><br><span class=\"line\">小号字：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">small</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span></span><br><span class=\"line\">上标：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sup</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">sup</span>&gt;</span></span><br><span class=\"line\">下标：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sub</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">sub</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><blockquote>\n<p>HTML中通过<code>&lt;q&gt;</code>定义短的引用，且浏览器通常会为 <code>&lt;q&gt;</code> 元素包围引号。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>WWF 的目标是：<span class=\"tag\">&lt;<span class=\"name\">q</span>&gt;</span>构建人与自然和谐共存的世界。<span class=\"tag\">&lt;/<span class=\"name\">q</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">效果：</span><br><span class=\"line\">    WWF 的目标是：&quot;构建人与自然和谐共存的世界。&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"段落元素\"><a href=\"#段落元素\" class=\"headerlink\" title=\"段落元素\"></a>段落元素</h3><blockquote>\n<p>p代表段落，表示大段文字，浏览器会自动地在段落的前后添加空行。<br>使用空的段落标记 <code>&lt;p&gt;&lt;/p&gt;</code> 去插入一个空行是个坏习惯，用 <code>&lt;br /&gt;</code> 标签代替它！</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"换行元素\"><a href=\"#换行元素\" class=\"headerlink\" title=\"换行元素\"></a>换行元素</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"分割线元素\"><a href=\"#分割线元素\" class=\"headerlink\" title=\"分割线元素\"></a>分割线元素</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span>/&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    size：尺寸</span><br><span class=\"line\">    width：宽度</span><br><span class=\"line\">    color：颜色</span><br><span class=\"line\">    align：水平对齐方式</span><br><span class=\"line\">        left/center/right</span><br></pre></td></tr></table></figure>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--  这是一段注释，在浏览器中不会显示 --&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"分区元素\"><a href=\"#分区元素\" class=\"headerlink\" title=\"分区元素\"></a>分区元素</h3><blockquote>\n<p>div,语义为“一大块”,其一大作用就是文档布局，可用于给页面划分区块，让结构更清晰，它取代了使用表格定义布局的老式方法。<br>div是块级元素，它是可用于组合其他 HTML 元素的容器，且没有特定的含义，浏览器会在其前后显示折行。<br>如果与 CSS 一同使用，<code>&lt;div&gt;</code> 元素可用于对大的内容块设置样式属性。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">块分区元素：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">行内分区元素：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"内联元素\"><a href=\"#内联元素\" class=\"headerlink\" title=\"内联元素\"></a>内联元素</h3><blockquote>\n<p>span：是内联元素，可用作文本的容器，也没有特定的含义，当与 CSS 一同使用时，<code>&lt;span&gt;</code> 元素可用于为部分文本设置样式属性。<br>em：是内联元素，可用作文本的容器，表示其范围内的文本需要被强调显示。<br>strong :是内联元素，可用作文本的容器，表示其范围内的文本很重要，强调性更强</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例：</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>优惠<span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>100<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span>元<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>小谷<span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span>岁了<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块级元素与行内元素\"><a href=\"#块级元素与行内元素\" class=\"headerlink\" title=\"块级元素与行内元素\"></a>块级元素与行内元素</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">块级元素：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    ~</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\">行内元素：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">s</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">s</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">u</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">u</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sub</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">sub</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sup</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">sup</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"图像\"><a href=\"#图像\" class=\"headerlink\" title=\"图像\"></a>图像</h2><blockquote>\n<p>img代表展示一张图片，src是其必备属性，代表了图片的名称及地址，alt属性是指当图片显示不出来时，它就会显示，起到一个占位说明的作用。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span>/&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    src：图片地址</span><br><span class=\"line\">    alt：图片说明</span><br><span class=\"line\">    width：图像宽度</span><br><span class=\"line\">    height：图像高度</span><br></pre></td></tr></table></figure>\n<h2 id=\"iframe\"><a href=\"#iframe\" class=\"headerlink\" title=\"iframe\"></a>iframe</h2><blockquote>\n<p>在当前页面上嵌入一个页面，注意跨域操作问题。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">iframe</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    src：嵌入地址</span><br><span class=\"line\">    name：名称</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例：</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://baidu.com&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;myPager&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://www.w3cschool.cc&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;myPager&quot;</span>&gt;</span>W3Cschool.cc<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><blockquote>\n<p>table用于展示表格，每个表格均有若干行（由 <code>&lt;tr&gt;</code> 标签定义），每行被分割为若干单元格（由 <code>&lt;td&gt;</code> 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。<br>不要用table来做布局，使用 <code>&lt;table&gt;</code> 元素进行文档布局不是表格的正确用法，<code>&lt;table&gt;</code> 元素的作用是显示表格化的数据，且thread、tbody、tfoot可省略，浏览器会自动添加borader-collapse，用于合并边框。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    width：宽度</span><br><span class=\"line\">    height：高度</span><br><span class=\"line\">    border：边框宽度</span><br><span class=\"line\">    bgcolor：背景颜色</span><br><span class=\"line\">    cellpadding：内边距</span><br><span class=\"line\">    cellspacing：外边距</span><br><span class=\"line\">    align：水平对齐方式</span><br><span class=\"line\">        left/center/right</span><br></pre></td></tr></table></figure>\n<h3 id=\"子元素\"><a href=\"#子元素\" class=\"headerlink\" title=\"子元素\"></a>子元素</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span>（创建表行）</span><br><span class=\"line\">属性：</span><br><span class=\"line\">    bgcolor：背景颜色</span><br><span class=\"line\">    align：水平对齐方式</span><br><span class=\"line\">        left/center/right</span><br><span class=\"line\">    valign：垂直对齐方式</span><br><span class=\"line\">        top/middle/bottom</span><br><span class=\"line\"></span><br><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>（创建单元格）</span><br><span class=\"line\">属性：</span><br><span class=\"line\">    width：宽度</span><br><span class=\"line\">    height：高度</span><br><span class=\"line\">    align：水平对齐方式</span><br><span class=\"line\">    valign：垂直对齐方式</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">caption</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">caption</span>&gt;</span>（表格标题）</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span>（列标题）</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span>（表头）</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span>（表主体）</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tfoot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">tfoot</span>&gt;</span> （表尾）</span><br></pre></td></tr></table></figure>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><h3 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h3><blockquote>\n<p>ol: order list 有序列表 用于表示带步骤或者编号的并列内容，ol的直接子元素只能是li，而且可以嵌套。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    type：标识类型，默认为数字排列</span><br><span class=\"line\">        1（默认）/a/A/i/I</span><br><span class=\"line\">    start：定义起始值，默认从1开始</span><br></pre></td></tr></table></figure>\n<h3 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h3><blockquote>\n<p>ul: unsort list 无序列表，其直接子元素是li，用于表示并列的内容，而且可以嵌套。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">属性:</span><br><span class=\"line\">    type：标识类型</span><br><span class=\"line\">        disc（默认）/circle/square/none</span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义列表\"><a href=\"#自定义列表\" class=\"headerlink\" title=\"自定义列表\"></a>自定义列表</h3><blockquote>\n<p>自定义列表，用于展示一系列”标题：内容…”的场景。<br>dl:自定义列表，dt:自定义标题，dd:自定义描述。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>列表中的标题<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>列表中的数据<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"表单\"><a href=\"#表单\" class=\"headerlink\" title=\"表单\"></a>表单</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    name：表单名称</span><br><span class=\"line\">    action：提交地址</span><br><span class=\"line\">    method：提交方式</span><br><span class=\"line\">        get/post</span><br></pre></td></tr></table></figure>\n<h3 id=\"input\"><a href=\"#input\" class=\"headerlink\" title=\"input\"></a>input</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标签：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span>/&gt;</span></span><br><span class=\"line\">属性：</span><br><span class=\"line\">    name：控件名称</span><br><span class=\"line\">    type：控件类型</span><br><span class=\"line\">    value：值</span><br><span class=\"line\">    disabled：禁用</span><br></pre></td></tr></table></figure>\n<h3 id=\"常用表单控件\"><a href=\"#常用表单控件\" class=\"headerlink\" title=\"常用表单控件\"></a>常用表单控件</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文本框：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>/&gt;</span></span><br><span class=\"line\">密码框：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span>/&gt;</span></span><br><span class=\"line\">    属性：</span><br><span class=\"line\">        readonly：控件只读</span><br><span class=\"line\">        maxlength：限制字符数</span><br><span class=\"line\">单选按钮：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span>/&gt;</span></span><br><span class=\"line\">复选框：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span>/&gt;</span></span><br><span class=\"line\">    属性：</span><br><span class=\"line\">        checked：设置默认被选中</span><br><span class=\"line\">提交按钮：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span>/&gt;</span></span><br><span class=\"line\">重置按钮：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;reset&quot;</span>/&gt;</span></span><br><span class=\"line\">普通按钮：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span>/&gt;</span></span><br><span class=\"line\">图片按钮：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;image&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">文件选择框：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span>/&gt;</span></span><br><span class=\"line\">隐藏域：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;hidden&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"button\"><a href=\"#button\" class=\"headerlink\" title=\"button\"></a>button</h3><blockquote>\n<p>按钮</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>内容<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"select-和-option\"><a href=\"#select-和-option\" class=\"headerlink\" title=\"select 和 option\"></a>select 和 option</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">selected</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"结构标记\"><a href=\"#结构标记\" class=\"headerlink\" title=\"结构标记\"></a>结构标记</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">aside</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">aside</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">article</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">footer</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">footer</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.jianshu.com/p/e0fc0c31f174\">HTML常见标签</a></li>\n<li><a href=\"https://juejin.im/post/5bfa2cfbe51d4509834cc06d\">HTML 常用标签及属性</a></li>\n<li><a href=\"https://www.jianshu.com/p/31d2eda9f9cf\">HTML常用标签属性及事件属性</a></li>\n</ul>"},{"title":"Go2Shell关于BigSur的适配","abbrlink":"fb26c275","date":"2021-03-06T06:43:14.000Z","toc":true,"_content":"\n![首屏图](https://s3.ax1x.com/2021/02/26/yxRURf.jpg)\n\n<!-- more -->\n\n## Go2Shell介绍\n\nGo2Shell for mac是一款非常高效的即时终端窗口，无需学习曲线，\n只需单击鼠标即可完成所需的工作，是您可以使用的最快，最直观的工具之一。\n使用Go2Shell非常简单，您只需要打开一个Terminal窗口，\n写下`open -a Go2Shell --args config`参数，然后按Return键即可。\n\n## 问题描述\n\nGo2shell 很久不更新，导致新系统不再支持使用，Go2shell无法使用的替代方案，和原版基本一致\n\n## 解决方案\n\nGithub有人分享的，下载后复制到应用程序目录，然后按住Cmd+鼠标左键拖动到Finder的工具栏中就可以了，\n图标和效果基本和原版Go2shell一致，支持最新的Big Sur。\n\n* [CSDN下载地址](https://download.csdn.net/download/u011478374/13210059)\n* [Github下载地址](https://github.com/Breathleas/Go2Shell)\n\n![Go2shell](https://s3.ax1x.com/2021/03/06/6nhoEF.png)\n\n安装包共有4个\n\n* Go2Shell_iTerm    // 使用iTerm打开当前目录\n* Go2Shell_iTerm_newWin    // 使用iTerm在新窗口打开当前目录\n* Go2Shell_Term    // 使用Term打开当前目录\n* Go2Shell_Term_newWin    // 使用Term在新窗口打开当前目录\n\n## 参考资料\n\n* [Go2Shell for mac(即时终端窗口) v2.5](https://zhuanlan.zhihu.com/p/113184152)\n* [Mac 必备神器之Go2Shell，最新版支持Big Sur](https://blog.csdn.net/u011478374/article/details/109754818)\n* [github-Go2Shell](https://github.com/Breathleas/Go2Shell)\n","source":"_posts/Go2Shell关于BigSur的适配.md","raw":"---\ntitle: Go2Shell关于BigSur的适配\nabbrlink: fb26c275\ndate: 2021-03-06 14:43:14\ntags:\n  - 技术积累\n  - Mac\ncategories:\n  - 技术积累\n  - Mac\ntoc: true\n---\n\n![首屏图](https://s3.ax1x.com/2021/02/26/yxRURf.jpg)\n\n<!-- more -->\n\n## Go2Shell介绍\n\nGo2Shell for mac是一款非常高效的即时终端窗口，无需学习曲线，\n只需单击鼠标即可完成所需的工作，是您可以使用的最快，最直观的工具之一。\n使用Go2Shell非常简单，您只需要打开一个Terminal窗口，\n写下`open -a Go2Shell --args config`参数，然后按Return键即可。\n\n## 问题描述\n\nGo2shell 很久不更新，导致新系统不再支持使用，Go2shell无法使用的替代方案，和原版基本一致\n\n## 解决方案\n\nGithub有人分享的，下载后复制到应用程序目录，然后按住Cmd+鼠标左键拖动到Finder的工具栏中就可以了，\n图标和效果基本和原版Go2shell一致，支持最新的Big Sur。\n\n* [CSDN下载地址](https://download.csdn.net/download/u011478374/13210059)\n* [Github下载地址](https://github.com/Breathleas/Go2Shell)\n\n![Go2shell](https://s3.ax1x.com/2021/03/06/6nhoEF.png)\n\n安装包共有4个\n\n* Go2Shell_iTerm    // 使用iTerm打开当前目录\n* Go2Shell_iTerm_newWin    // 使用iTerm在新窗口打开当前目录\n* Go2Shell_Term    // 使用Term打开当前目录\n* Go2Shell_Term_newWin    // 使用Term在新窗口打开当前目录\n\n## 参考资料\n\n* [Go2Shell for mac(即时终端窗口) v2.5](https://zhuanlan.zhihu.com/p/113184152)\n* [Mac 必备神器之Go2Shell，最新版支持Big Sur](https://blog.csdn.net/u011478374/article/details/109754818)\n* [github-Go2Shell](https://github.com/Breathleas/Go2Shell)\n","slug":"Go2Shell关于BigSur的适配","published":1,"updated":"2021-03-06T06:58:43.517Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjy800062an978wa6iy3","content":"<p><img src=\"https://s3.ax1x.com/2021/02/26/yxRURf.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<h2 id=\"Go2Shell介绍\"><a href=\"#Go2Shell介绍\" class=\"headerlink\" title=\"Go2Shell介绍\"></a>Go2Shell介绍</h2><p>Go2Shell for mac是一款非常高效的即时终端窗口，无需学习曲线，<br>只需单击鼠标即可完成所需的工作，是您可以使用的最快，最直观的工具之一。<br>使用Go2Shell非常简单，您只需要打开一个Terminal窗口，<br>写下<code>open -a Go2Shell --args config</code>参数，然后按Return键即可。</p>\n<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>Go2shell 很久不更新，导致新系统不再支持使用，Go2shell无法使用的替代方案，和原版基本一致</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>Github有人分享的，下载后复制到应用程序目录，然后按住Cmd+鼠标左键拖动到Finder的工具栏中就可以了，<br>图标和效果基本和原版Go2shell一致，支持最新的Big Sur。</p>\n<ul>\n<li><a href=\"https://download.csdn.net/download/u011478374/13210059\">CSDN下载地址</a></li>\n<li><a href=\"https://github.com/Breathleas/Go2Shell\">Github下载地址</a></li>\n</ul>\n<p><img src=\"https://s3.ax1x.com/2021/03/06/6nhoEF.png\" alt=\"Go2shell\"></p>\n<p>安装包共有4个</p>\n<ul>\n<li>Go2Shell_iTerm    // 使用iTerm打开当前目录</li>\n<li>Go2Shell_iTerm_newWin    // 使用iTerm在新窗口打开当前目录</li>\n<li>Go2Shell_Term    // 使用Term打开当前目录</li>\n<li>Go2Shell_Term_newWin    // 使用Term在新窗口打开当前目录</li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/113184152\">Go2Shell for mac(即时终端窗口) v2.5</a></li>\n<li><a href=\"https://blog.csdn.net/u011478374/article/details/109754818\">Mac 必备神器之Go2Shell，最新版支持Big Sur</a></li>\n<li><a href=\"https://github.com/Breathleas/Go2Shell\">github-Go2Shell</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s3.ax1x.com/2021/02/26/yxRURf.jpg\" alt=\"首屏图\"></p>","more":"<h2 id=\"Go2Shell介绍\"><a href=\"#Go2Shell介绍\" class=\"headerlink\" title=\"Go2Shell介绍\"></a>Go2Shell介绍</h2><p>Go2Shell for mac是一款非常高效的即时终端窗口，无需学习曲线，<br>只需单击鼠标即可完成所需的工作，是您可以使用的最快，最直观的工具之一。<br>使用Go2Shell非常简单，您只需要打开一个Terminal窗口，<br>写下<code>open -a Go2Shell --args config</code>参数，然后按Return键即可。</p>\n<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>Go2shell 很久不更新，导致新系统不再支持使用，Go2shell无法使用的替代方案，和原版基本一致</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>Github有人分享的，下载后复制到应用程序目录，然后按住Cmd+鼠标左键拖动到Finder的工具栏中就可以了，<br>图标和效果基本和原版Go2shell一致，支持最新的Big Sur。</p>\n<ul>\n<li><a href=\"https://download.csdn.net/download/u011478374/13210059\">CSDN下载地址</a></li>\n<li><a href=\"https://github.com/Breathleas/Go2Shell\">Github下载地址</a></li>\n</ul>\n<p><img src=\"https://s3.ax1x.com/2021/03/06/6nhoEF.png\" alt=\"Go2shell\"></p>\n<p>安装包共有4个</p>\n<ul>\n<li>Go2Shell_iTerm    // 使用iTerm打开当前目录</li>\n<li>Go2Shell_iTerm_newWin    // 使用iTerm在新窗口打开当前目录</li>\n<li>Go2Shell_Term    // 使用Term打开当前目录</li>\n<li>Go2Shell_Term_newWin    // 使用Term在新窗口打开当前目录</li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/113184152\">Go2Shell for mac(即时终端窗口) v2.5</a></li>\n<li><a href=\"https://blog.csdn.net/u011478374/article/details/109754818\">Mac 必备神器之Go2Shell，最新版支持Big Sur</a></li>\n<li><a href=\"https://github.com/Breathleas/Go2Shell\">github-Go2Shell</a></li>\n</ul>"},{"title":"UI-Grid 简介","abbrlink":"52398dd8","date":"2017-10-31T08:57:17.000Z","_content":"\nUI-Grid 3.0 (原 ng-grid)是一个不依赖于其他AngularJS，完全独立的 angular 表格系统。它围绕表格的核心设计模块和功能，功能的分层就像是angular的模型和指令。这些让它的核心代码小而精，并且能让你使用它来实现复杂的功能。\n\n<!-- more -->\n\n在核心模块中，可以获得：\n\n- 虚拟的行和列，视图中可见的行和列才会显示\n- 绑定单元格一系列属性和方法\n- 列的排序有三种状态：Asc, Desc, None\n- 列的过滤\n- 使用自定义模板更改页眉和单元格内容\n- i18nService 允许标记翻译\n\n在这个例子中，我们创建了最基本的表格。\n方法如下：\n\n- 引入uiGrid的js和css\n\n```html\n<link rel=\"styleSheet\" href=\"release/ui-grid.min.css\"/>\n<script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.3.16/angular.min.js\"></script>\n<script src=\"/release/ui-grid.min.js\"></script>\n```\n\n- 依赖注入\n\n```html\nvar app = angular.module('app', ['ui.grid']);\n```\n\n- 或者使用\n\n```html\nvar app = angular.module('app', [require('angular-ui-grid')]);\n```\n\n- 添加css样式\n\n```html\n.myGrid {\n    width: 500px;\n    height: 250px;\n  }\n```\n\n- $scope中添加数组对象\n\n```html\n$scope.myData = [\n        {\n            \"firstName\": \"Cox\",\n            \"lastName\": \"Carney\"...\n```\n\n- 使用ui-grid指令并指定json数据到引用的data属性上\n\n```html\n<div ng-controller=\"MainCtrl\">\n  <div ui-grid=\"{ data: myData }\" class=\"myGrid\"></div>\n</div>\n```\n\nindex.html\n\n```html\n<!doctype html>\n<html ng-app=\"app\">\n  <head>\n    <script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.5.0/angular.js\"></script>\n    <script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.5.0/angular-touch.js\"></script>\n    <script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.5.0/angular-animate.js\"></script>\n    <script src=\"http://ui-grid.info/docs/grunt-scripts/csv.js\"></script>\n    <script src=\"http://ui-grid.info/docs/grunt-scripts/pdfmake.js\"></script>\n    <script src=\"http://ui-grid.info/docs/grunt-scripts/vfs_fonts.js\"></script>\n    <script src=\"/release/ui-grid.js\"></script>\n    <script src=\"/release/ui-grid.css\"></script>\n    <script src=\"app.js\"></script>\n  </head>\n  <body>\n    <div ng-controller=\"MainCtrl\">\n      <div id=\"grid1\" ui-grid=\"{ data: myData }\" class=\"grid\"></div>\n    </div>\n  </body>\n</html>\n```\n\nmain.css\n\n```html\n.grid {\n  width: 500px;\n  height: 250px;\n}\n```\n\napp.js\n\n```html\nvar app = angular.module('app', ['ngTouch', 'ui.grid']);\n\napp.controller('MainCtrl', ['$scope', function ($scope) {\n\n  $scope.myData = [\n    {\n        \"firstName\": \"Cox\",\n        \"lastName\": \"Carney\",\n        \"company\": \"Enormo\",\n        \"employed\": true\n    },\n    {\n        \"firstName\": \"Lorraine\",\n        \"lastName\": \"Wise\",\n        \"company\": \"Comveyer\",\n        \"employed\": false\n    },\n    {\n        \"firstName\": \"Nancy\",\n        \"lastName\": \"Waters\",\n        \"company\": \"Fuelton\",\n        \"employed\": false\n    }\n];\n}]);\n```\n\n![样式](https://s1.ax1x.com/2020/07/17/UyFpcR.png)\n\n原文：[101 intro to UI-Grid](http://ui-grid.info/docs/#/tutorial/101_intro)\n","source":"_posts/UI-Grid-简介.md","raw":"---\ntitle: UI-Grid 简介\ntags:\n  - 技术积累\n  - 前端\n  - UI-Grid\ncategories:\n  - 技术积累\n  - 前端\n  - UI-Grid\nabbrlink: 52398dd8\ndate: 2017-10-31 16:57:17\n---\n\nUI-Grid 3.0 (原 ng-grid)是一个不依赖于其他AngularJS，完全独立的 angular 表格系统。它围绕表格的核心设计模块和功能，功能的分层就像是angular的模型和指令。这些让它的核心代码小而精，并且能让你使用它来实现复杂的功能。\n\n<!-- more -->\n\n在核心模块中，可以获得：\n\n- 虚拟的行和列，视图中可见的行和列才会显示\n- 绑定单元格一系列属性和方法\n- 列的排序有三种状态：Asc, Desc, None\n- 列的过滤\n- 使用自定义模板更改页眉和单元格内容\n- i18nService 允许标记翻译\n\n在这个例子中，我们创建了最基本的表格。\n方法如下：\n\n- 引入uiGrid的js和css\n\n```html\n<link rel=\"styleSheet\" href=\"release/ui-grid.min.css\"/>\n<script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.3.16/angular.min.js\"></script>\n<script src=\"/release/ui-grid.min.js\"></script>\n```\n\n- 依赖注入\n\n```html\nvar app = angular.module('app', ['ui.grid']);\n```\n\n- 或者使用\n\n```html\nvar app = angular.module('app', [require('angular-ui-grid')]);\n```\n\n- 添加css样式\n\n```html\n.myGrid {\n    width: 500px;\n    height: 250px;\n  }\n```\n\n- $scope中添加数组对象\n\n```html\n$scope.myData = [\n        {\n            \"firstName\": \"Cox\",\n            \"lastName\": \"Carney\"...\n```\n\n- 使用ui-grid指令并指定json数据到引用的data属性上\n\n```html\n<div ng-controller=\"MainCtrl\">\n  <div ui-grid=\"{ data: myData }\" class=\"myGrid\"></div>\n</div>\n```\n\nindex.html\n\n```html\n<!doctype html>\n<html ng-app=\"app\">\n  <head>\n    <script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.5.0/angular.js\"></script>\n    <script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.5.0/angular-touch.js\"></script>\n    <script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.5.0/angular-animate.js\"></script>\n    <script src=\"http://ui-grid.info/docs/grunt-scripts/csv.js\"></script>\n    <script src=\"http://ui-grid.info/docs/grunt-scripts/pdfmake.js\"></script>\n    <script src=\"http://ui-grid.info/docs/grunt-scripts/vfs_fonts.js\"></script>\n    <script src=\"/release/ui-grid.js\"></script>\n    <script src=\"/release/ui-grid.css\"></script>\n    <script src=\"app.js\"></script>\n  </head>\n  <body>\n    <div ng-controller=\"MainCtrl\">\n      <div id=\"grid1\" ui-grid=\"{ data: myData }\" class=\"grid\"></div>\n    </div>\n  </body>\n</html>\n```\n\nmain.css\n\n```html\n.grid {\n  width: 500px;\n  height: 250px;\n}\n```\n\napp.js\n\n```html\nvar app = angular.module('app', ['ngTouch', 'ui.grid']);\n\napp.controller('MainCtrl', ['$scope', function ($scope) {\n\n  $scope.myData = [\n    {\n        \"firstName\": \"Cox\",\n        \"lastName\": \"Carney\",\n        \"company\": \"Enormo\",\n        \"employed\": true\n    },\n    {\n        \"firstName\": \"Lorraine\",\n        \"lastName\": \"Wise\",\n        \"company\": \"Comveyer\",\n        \"employed\": false\n    },\n    {\n        \"firstName\": \"Nancy\",\n        \"lastName\": \"Waters\",\n        \"company\": \"Fuelton\",\n        \"employed\": false\n    }\n];\n}]);\n```\n\n![样式](https://s1.ax1x.com/2020/07/17/UyFpcR.png)\n\n原文：[101 intro to UI-Grid](http://ui-grid.info/docs/#/tutorial/101_intro)\n","slug":"UI-Grid-简介","published":1,"updated":"2020-08-12T01:57:58.408Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjy900072an9he63769x","content":"<p>UI-Grid 3.0 (原 ng-grid)是一个不依赖于其他AngularJS，完全独立的 angular 表格系统。它围绕表格的核心设计模块和功能，功能的分层就像是angular的模型和指令。这些让它的核心代码小而精，并且能让你使用它来实现复杂的功能。</p>\n<a id=\"more\"></a>\n<p>在核心模块中，可以获得：</p>\n<ul>\n<li>虚拟的行和列，视图中可见的行和列才会显示</li>\n<li>绑定单元格一系列属性和方法</li>\n<li>列的排序有三种状态：Asc, Desc, None</li>\n<li>列的过滤</li>\n<li>使用自定义模板更改页眉和单元格内容</li>\n<li>i18nService 允许标记翻译</li>\n</ul>\n<p>在这个例子中，我们创建了最基本的表格。<br>方法如下：</p>\n<ul>\n<li>引入uiGrid的js和css</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;styleSheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;release/ui-grid.min.css&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://ajax.googleapis.com/ajax/libs/angularjs/1.3.16/angular.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/release/ui-grid.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>依赖注入</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var app = angular.module(&#x27;app&#x27;, [&#x27;ui.grid&#x27;]);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>或者使用</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var app = angular.module(&#x27;app&#x27;, [require(&#x27;angular-ui-grid&#x27;)]);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>添加css样式</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.myGrid &#123;</span><br><span class=\"line\">    width: 500px;</span><br><span class=\"line\">    height: 250px;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>$scope中添加数组对象</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$scope.myData = [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;firstName&quot;: &quot;Cox&quot;,</span><br><span class=\"line\">            &quot;lastName&quot;: &quot;Carney&quot;...</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用ui-grid指令并指定json数据到引用的data属性上</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">ng-controller</span>=<span class=\"string\">&quot;MainCtrl&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">ui-grid</span>=<span class=\"string\">&quot;&#123; data: myData &#125;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;myGrid&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>index.html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">ng-app</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://ajax.googleapis.com/ajax/libs/angularjs/1.5.0/angular.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://ajax.googleapis.com/ajax/libs/angularjs/1.5.0/angular-touch.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://ajax.googleapis.com/ajax/libs/angularjs/1.5.0/angular-animate.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://ui-grid.info/docs/grunt-scripts/csv.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://ui-grid.info/docs/grunt-scripts/pdfmake.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://ui-grid.info/docs/grunt-scripts/vfs_fonts.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/release/ui-grid.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/release/ui-grid.css&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;app.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">ng-controller</span>=<span class=\"string\">&quot;MainCtrl&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;grid1&quot;</span> <span class=\"attr\">ui-grid</span>=<span class=\"string\">&quot;&#123; data: myData &#125;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>main.css</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.grid &#123;</span><br><span class=\"line\">  width: 500px;</span><br><span class=\"line\">  height: 250px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>app.js</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var app = angular.module(&#x27;app&#x27;, [&#x27;ngTouch&#x27;, &#x27;ui.grid&#x27;]);</span><br><span class=\"line\"></span><br><span class=\"line\">app.controller(&#x27;MainCtrl&#x27;, [&#x27;$scope&#x27;, function ($scope) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  $scope.myData = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;firstName&quot;: &quot;Cox&quot;,</span><br><span class=\"line\">        &quot;lastName&quot;: &quot;Carney&quot;,</span><br><span class=\"line\">        &quot;company&quot;: &quot;Enormo&quot;,</span><br><span class=\"line\">        &quot;employed&quot;: true</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;firstName&quot;: &quot;Lorraine&quot;,</span><br><span class=\"line\">        &quot;lastName&quot;: &quot;Wise&quot;,</span><br><span class=\"line\">        &quot;company&quot;: &quot;Comveyer&quot;,</span><br><span class=\"line\">        &quot;employed&quot;: false</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;firstName&quot;: &quot;Nancy&quot;,</span><br><span class=\"line\">        &quot;lastName&quot;: &quot;Waters&quot;,</span><br><span class=\"line\">        &quot;company&quot;: &quot;Fuelton&quot;,</span><br><span class=\"line\">        &quot;employed&quot;: false</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">];</span><br><span class=\"line\">&#125;]);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyFpcR.png\" alt=\"样式\"></p>\n<p>原文：<a href=\"http://ui-grid.info/docs/#/tutorial/101_intro\">101 intro to UI-Grid</a></p>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p>UI-Grid 3.0 (原 ng-grid)是一个不依赖于其他AngularJS，完全独立的 angular 表格系统。它围绕表格的核心设计模块和功能，功能的分层就像是angular的模型和指令。这些让它的核心代码小而精，并且能让你使用它来实现复杂的功能。</p>","more":"<p>在核心模块中，可以获得：</p>\n<ul>\n<li>虚拟的行和列，视图中可见的行和列才会显示</li>\n<li>绑定单元格一系列属性和方法</li>\n<li>列的排序有三种状态：Asc, Desc, None</li>\n<li>列的过滤</li>\n<li>使用自定义模板更改页眉和单元格内容</li>\n<li>i18nService 允许标记翻译</li>\n</ul>\n<p>在这个例子中，我们创建了最基本的表格。<br>方法如下：</p>\n<ul>\n<li>引入uiGrid的js和css</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;styleSheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;release/ui-grid.min.css&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://ajax.googleapis.com/ajax/libs/angularjs/1.3.16/angular.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/release/ui-grid.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>依赖注入</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var app = angular.module(&#x27;app&#x27;, [&#x27;ui.grid&#x27;]);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>或者使用</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var app = angular.module(&#x27;app&#x27;, [require(&#x27;angular-ui-grid&#x27;)]);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>添加css样式</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.myGrid &#123;</span><br><span class=\"line\">    width: 500px;</span><br><span class=\"line\">    height: 250px;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>$scope中添加数组对象</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$scope.myData = [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;firstName&quot;: &quot;Cox&quot;,</span><br><span class=\"line\">            &quot;lastName&quot;: &quot;Carney&quot;...</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用ui-grid指令并指定json数据到引用的data属性上</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">ng-controller</span>=<span class=\"string\">&quot;MainCtrl&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">ui-grid</span>=<span class=\"string\">&quot;&#123; data: myData &#125;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;myGrid&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>index.html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">ng-app</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://ajax.googleapis.com/ajax/libs/angularjs/1.5.0/angular.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://ajax.googleapis.com/ajax/libs/angularjs/1.5.0/angular-touch.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://ajax.googleapis.com/ajax/libs/angularjs/1.5.0/angular-animate.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://ui-grid.info/docs/grunt-scripts/csv.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://ui-grid.info/docs/grunt-scripts/pdfmake.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://ui-grid.info/docs/grunt-scripts/vfs_fonts.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/release/ui-grid.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/release/ui-grid.css&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;app.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">ng-controller</span>=<span class=\"string\">&quot;MainCtrl&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;grid1&quot;</span> <span class=\"attr\">ui-grid</span>=<span class=\"string\">&quot;&#123; data: myData &#125;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>main.css</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.grid &#123;</span><br><span class=\"line\">  width: 500px;</span><br><span class=\"line\">  height: 250px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>app.js</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var app = angular.module(&#x27;app&#x27;, [&#x27;ngTouch&#x27;, &#x27;ui.grid&#x27;]);</span><br><span class=\"line\"></span><br><span class=\"line\">app.controller(&#x27;MainCtrl&#x27;, [&#x27;$scope&#x27;, function ($scope) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  $scope.myData = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;firstName&quot;: &quot;Cox&quot;,</span><br><span class=\"line\">        &quot;lastName&quot;: &quot;Carney&quot;,</span><br><span class=\"line\">        &quot;company&quot;: &quot;Enormo&quot;,</span><br><span class=\"line\">        &quot;employed&quot;: true</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;firstName&quot;: &quot;Lorraine&quot;,</span><br><span class=\"line\">        &quot;lastName&quot;: &quot;Wise&quot;,</span><br><span class=\"line\">        &quot;company&quot;: &quot;Comveyer&quot;,</span><br><span class=\"line\">        &quot;employed&quot;: false</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;firstName&quot;: &quot;Nancy&quot;,</span><br><span class=\"line\">        &quot;lastName&quot;: &quot;Waters&quot;,</span><br><span class=\"line\">        &quot;company&quot;: &quot;Fuelton&quot;,</span><br><span class=\"line\">        &quot;employed&quot;: false</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">];</span><br><span class=\"line\">&#125;]);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyFpcR.png\" alt=\"样式\"></p>\n<p>原文：<a href=\"http://ui-grid.info/docs/#/tutorial/101_intro\">101 intro to UI-Grid</a></p>"},{"title":"Yilia主题如何添加左侧SubNav图标","toc":true,"abbrlink":"e928c2fc","date":"2021-02-05T09:51:50.000Z","_content":"\n![首屏图](https://s3.ax1x.com/2021/02/08/yU8KoT.jpg)\n\n<!-- more -->\n\n## 介绍\n\n博客左下角的SubNav发现和我的诉求不太一致，希望扩展一下更多的图标库。\n\n![原有SubNav](https://s3.ax1x.com/2021/02/08/yU8y6A.png)\n\n比如这些：\n\n![现有SubNav](https://s3.ax1x.com/2021/02/08/yU8T6s.png)\n\n那么我是如何将图标库添加的呢？\n\n## 修改主题\n\n首先，我们看到`./themes/yilia/source/fonts`中有四个格式不同但是命名相同的字体文件。\n\n![iconfont编辑后文件](https://s3.ax1x.com/2021/02/08/yUGPn1.png)\n\n我们的目的就是把我们需要的图标加进去，之后重新生成这四个文件。\n但是，不能直接更改这四个文件，因为这四个文件是编译Yilia时自动生成的，每次重新编译Yilia之后都会被替换掉。\n我们修改一个程序肯定不会直接对着程序本体修改，而是取得他的源代码然后更改源代码。那么，在Yilia源代码中：\n\n真正需要修改的是`./themes/yilia/source-src/css/fonts`文件夹里面的四个字体文件。\n\n![iconfont源文件](https://s3.ax1x.com/2021/02/08/yUGIUK.png)\n\n生成字体文件的方法有好几种,分别是：\n\n1. 使用在线icon-font生成器+自制CSS\n1. 矢量图形编辑软件（Adobe Illustrator）+Glyphs/Glyphs Mini/FontLab + FontSquirrel WebFont Generator+ 自制CSS文件\n1. 上一条中出现的软件的开源版，InkScape + FontForge + FontSquirrel WebFont Generator\n1. 矢量图形编辑软件（Adobe Illustrator）+FontCustom命令行\n\n生成字体文件的详细内容可以参考这篇[文章](https://www.jianshu.com/p/095eb298ed18)\n\n今天我选择直接使用百度的[字体编辑器](https://www.gaotianyang.top/fonteditor/)，\n后面我会很简单的讲一下如何使用如果我没讲明白，你可以看一下[百度字体编辑器教程](https://ecomfe.github.io/blog/use-fonteditor-to-build-webfont/)。\n\n## 修改字体\n\n![百度字体编辑器教程步骤](https://s3.ax1x.com/2021/02/08/yUYneI.jpg)\n\n### 下载新图标\n\n#### 下载Font Awesome最新图标\n\n去[Font Awesome](https://fontawesome.com/how-to-use/on-the-web/setup/hosting-font-awesome-yourself)下载最新版的图标。\n\n![下载免费版](https://s3.ax1x.com/2021/02/08/yUYNmn.png)\n\n#### 下载iconfont图标\n\n打开[iconfont](https://www.iconfont.cn/home/index)\n\n将喜欢的图标添加至自己的项目，然后导出项目。\n\n![下载iconfont图标](https://s3.ax1x.com/2021/02/08/yUtS1g.png)\n\n### 导入项目\n\n导入两个项目，一个项目是主题的旧字体，一个是从网上下载的待添加字体。\n\n1. 打开.woff文件\n1. 保存项目\n\n按照图中的步骤一，步骤二操作，每次切换项目都要点击“保存项目”。\n\n### 在项目间迁移图标\n\n通过“复制”、“粘贴”功能将喜欢的图标添加到旧字体，添加完所有的图标后，\n最好截一张图，这样后面修改的时候会方便很多，最后下载zip格式并解压。\n\n下面这张图是我添加的图标\n\n![复制图标](https://s3.ax1x.com/2021/02/08/yUYrpF.png)\n\n### 导出项目\n\n将迁移好的新项目下载至本地。\n\n![下载新图标项目](https://s3.ax1x.com/2021/02/08/yUaxVs.png)\n\n### 图标重命名\n\n有些时候，不同的图标在复制粘贴过程中，会出现名称或unicode码重复的情况，此时需要修改字形信息。\n\n选中问题字形，点击字形信息，修改并保存。\n\n![重命名图标](https://s3.ax1x.com/2021/02/08/yUts4f.png)\n\n## 修改CSS\n\n### 安装依赖\n\n如果你之前没有修改过Yilia，请先使用以下命令安装依赖。\n\n进入主题根目录`./themes/yilia`，安装依赖。\n\n```shell\ncd themes/yilia\nyarn\n```\n\n### 开发\n\n修改`./themes/yilia/source-src/css`中的`fonts.scss`和`social.scss`，可以修改自己喜欢的图标和颜色。content中的内容要和上面截图中的unicode码一致。\n\n![修改scss文件](https://s3.ax1x.com/2021/02/08/yUa7PP.png)\n![unicode码对照](https://s3.ax1x.com/2021/02/08/yUa6C6.png)\n\n然后，将新生成的字体文件拷贝到`./themes/yilia/source-src/css/fonts`。\n切换目录至`./themes/yilia`，运行`npm run dev`。\n此时会用webpack打包，把文件编译到source文件里，但文件不会经过压缩。\n\n### 发布\n\n最终定稿后运行\n\n```shell\nyarn run dist\n```\n\n获得最终确定版本，此时的编译会经过压缩。\n\n## 重新生成网站\n\n配置主题的`./themes/yilia/_config.yml`文件。\n\n![修改config](https://s3.ax1x.com/2021/02/08/yUdeaR.png)\n\n执行编译命令\n\n```shell\nhexo cl\nhexo g\nhexo d\n```\n\n## 常见问题\n\nFontEditor无法正常上传woff文件，显示`e.inflate is not a function`错误\n\n可以打开[kekee000部署版本正常上传](https://kekee000.github.io/fonteditor/index.html)\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#SubNav图标拓展)\n\n## 参考资料\n\n* [修改Yilia左下角SubNav的社交图标](https://blog.zscself.com/posts/70677220/)\n* [fontawesome下载页](https://fontawesome.com/how-to-use/on-the-web/setup/hosting-font-awesome-yourself)\n* [使用FontEditor创建web字体图标](https://ecomfe.github.io/blog/use-fonteditor-to-build-webfont/)\n* [FontEditor线上版本出问题了](https://github.com/ecomfe/fonteditor/issues/33)\n","source":"_posts/Yilia主题如何添加左侧SubNav图标.md","raw":"---\ntitle: Yilia主题如何添加左侧SubNav图标\ntags:\n  - 技术积累\n  - hexo\n  - yilia\ncategories:\n  - 技术积累\n  - hexo\n  - yilia\ntoc: true\nabbrlink: e928c2fc\ndate: 2021-02-05 17:51:50\n---\n\n![首屏图](https://s3.ax1x.com/2021/02/08/yU8KoT.jpg)\n\n<!-- more -->\n\n## 介绍\n\n博客左下角的SubNav发现和我的诉求不太一致，希望扩展一下更多的图标库。\n\n![原有SubNav](https://s3.ax1x.com/2021/02/08/yU8y6A.png)\n\n比如这些：\n\n![现有SubNav](https://s3.ax1x.com/2021/02/08/yU8T6s.png)\n\n那么我是如何将图标库添加的呢？\n\n## 修改主题\n\n首先，我们看到`./themes/yilia/source/fonts`中有四个格式不同但是命名相同的字体文件。\n\n![iconfont编辑后文件](https://s3.ax1x.com/2021/02/08/yUGPn1.png)\n\n我们的目的就是把我们需要的图标加进去，之后重新生成这四个文件。\n但是，不能直接更改这四个文件，因为这四个文件是编译Yilia时自动生成的，每次重新编译Yilia之后都会被替换掉。\n我们修改一个程序肯定不会直接对着程序本体修改，而是取得他的源代码然后更改源代码。那么，在Yilia源代码中：\n\n真正需要修改的是`./themes/yilia/source-src/css/fonts`文件夹里面的四个字体文件。\n\n![iconfont源文件](https://s3.ax1x.com/2021/02/08/yUGIUK.png)\n\n生成字体文件的方法有好几种,分别是：\n\n1. 使用在线icon-font生成器+自制CSS\n1. 矢量图形编辑软件（Adobe Illustrator）+Glyphs/Glyphs Mini/FontLab + FontSquirrel WebFont Generator+ 自制CSS文件\n1. 上一条中出现的软件的开源版，InkScape + FontForge + FontSquirrel WebFont Generator\n1. 矢量图形编辑软件（Adobe Illustrator）+FontCustom命令行\n\n生成字体文件的详细内容可以参考这篇[文章](https://www.jianshu.com/p/095eb298ed18)\n\n今天我选择直接使用百度的[字体编辑器](https://www.gaotianyang.top/fonteditor/)，\n后面我会很简单的讲一下如何使用如果我没讲明白，你可以看一下[百度字体编辑器教程](https://ecomfe.github.io/blog/use-fonteditor-to-build-webfont/)。\n\n## 修改字体\n\n![百度字体编辑器教程步骤](https://s3.ax1x.com/2021/02/08/yUYneI.jpg)\n\n### 下载新图标\n\n#### 下载Font Awesome最新图标\n\n去[Font Awesome](https://fontawesome.com/how-to-use/on-the-web/setup/hosting-font-awesome-yourself)下载最新版的图标。\n\n![下载免费版](https://s3.ax1x.com/2021/02/08/yUYNmn.png)\n\n#### 下载iconfont图标\n\n打开[iconfont](https://www.iconfont.cn/home/index)\n\n将喜欢的图标添加至自己的项目，然后导出项目。\n\n![下载iconfont图标](https://s3.ax1x.com/2021/02/08/yUtS1g.png)\n\n### 导入项目\n\n导入两个项目，一个项目是主题的旧字体，一个是从网上下载的待添加字体。\n\n1. 打开.woff文件\n1. 保存项目\n\n按照图中的步骤一，步骤二操作，每次切换项目都要点击“保存项目”。\n\n### 在项目间迁移图标\n\n通过“复制”、“粘贴”功能将喜欢的图标添加到旧字体，添加完所有的图标后，\n最好截一张图，这样后面修改的时候会方便很多，最后下载zip格式并解压。\n\n下面这张图是我添加的图标\n\n![复制图标](https://s3.ax1x.com/2021/02/08/yUYrpF.png)\n\n### 导出项目\n\n将迁移好的新项目下载至本地。\n\n![下载新图标项目](https://s3.ax1x.com/2021/02/08/yUaxVs.png)\n\n### 图标重命名\n\n有些时候，不同的图标在复制粘贴过程中，会出现名称或unicode码重复的情况，此时需要修改字形信息。\n\n选中问题字形，点击字形信息，修改并保存。\n\n![重命名图标](https://s3.ax1x.com/2021/02/08/yUts4f.png)\n\n## 修改CSS\n\n### 安装依赖\n\n如果你之前没有修改过Yilia，请先使用以下命令安装依赖。\n\n进入主题根目录`./themes/yilia`，安装依赖。\n\n```shell\ncd themes/yilia\nyarn\n```\n\n### 开发\n\n修改`./themes/yilia/source-src/css`中的`fonts.scss`和`social.scss`，可以修改自己喜欢的图标和颜色。content中的内容要和上面截图中的unicode码一致。\n\n![修改scss文件](https://s3.ax1x.com/2021/02/08/yUa7PP.png)\n![unicode码对照](https://s3.ax1x.com/2021/02/08/yUa6C6.png)\n\n然后，将新生成的字体文件拷贝到`./themes/yilia/source-src/css/fonts`。\n切换目录至`./themes/yilia`，运行`npm run dev`。\n此时会用webpack打包，把文件编译到source文件里，但文件不会经过压缩。\n\n### 发布\n\n最终定稿后运行\n\n```shell\nyarn run dist\n```\n\n获得最终确定版本，此时的编译会经过压缩。\n\n## 重新生成网站\n\n配置主题的`./themes/yilia/_config.yml`文件。\n\n![修改config](https://s3.ax1x.com/2021/02/08/yUdeaR.png)\n\n执行编译命令\n\n```shell\nhexo cl\nhexo g\nhexo d\n```\n\n## 常见问题\n\nFontEditor无法正常上传woff文件，显示`e.inflate is not a function`错误\n\n可以打开[kekee000部署版本正常上传](https://kekee000.github.io/fonteditor/index.html)\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#SubNav图标拓展)\n\n## 参考资料\n\n* [修改Yilia左下角SubNav的社交图标](https://blog.zscself.com/posts/70677220/)\n* [fontawesome下载页](https://fontawesome.com/how-to-use/on-the-web/setup/hosting-font-awesome-yourself)\n* [使用FontEditor创建web字体图标](https://ecomfe.github.io/blog/use-fonteditor-to-build-webfont/)\n* [FontEditor线上版本出问题了](https://github.com/ecomfe/fonteditor/issues/33)\n","slug":"Yilia主题如何添加左侧SubNav图标","published":1,"updated":"2021-03-02T13:16:32.308Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjya00082an916c75ssj","content":"<p><img src=\"https://s3.ax1x.com/2021/02/08/yU8KoT.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>博客左下角的SubNav发现和我的诉求不太一致，希望扩展一下更多的图标库。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yU8y6A.png\" alt=\"原有SubNav\"></p>\n<p>比如这些：</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yU8T6s.png\" alt=\"现有SubNav\"></p>\n<p>那么我是如何将图标库添加的呢？</p>\n<h2 id=\"修改主题\"><a href=\"#修改主题\" class=\"headerlink\" title=\"修改主题\"></a>修改主题</h2><p>首先，我们看到<code>./themes/yilia/source/fonts</code>中有四个格式不同但是命名相同的字体文件。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUGPn1.png\" alt=\"iconfont编辑后文件\"></p>\n<p>我们的目的就是把我们需要的图标加进去，之后重新生成这四个文件。<br>但是，不能直接更改这四个文件，因为这四个文件是编译Yilia时自动生成的，每次重新编译Yilia之后都会被替换掉。<br>我们修改一个程序肯定不会直接对着程序本体修改，而是取得他的源代码然后更改源代码。那么，在Yilia源代码中：</p>\n<p>真正需要修改的是<code>./themes/yilia/source-src/css/fonts</code>文件夹里面的四个字体文件。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUGIUK.png\" alt=\"iconfont源文件\"></p>\n<p>生成字体文件的方法有好几种,分别是：</p>\n<ol>\n<li>使用在线icon-font生成器+自制CSS</li>\n<li>矢量图形编辑软件（Adobe Illustrator）+Glyphs/Glyphs Mini/FontLab + FontSquirrel WebFont Generator+ 自制CSS文件</li>\n<li>上一条中出现的软件的开源版，InkScape + FontForge + FontSquirrel WebFont Generator</li>\n<li>矢量图形编辑软件（Adobe Illustrator）+FontCustom命令行</li>\n</ol>\n<p>生成字体文件的详细内容可以参考这篇<a href=\"https://www.jianshu.com/p/095eb298ed18\">文章</a></p>\n<p>今天我选择直接使用百度的<a href=\"https://www.gaotianyang.top/fonteditor/\">字体编辑器</a>，<br>后面我会很简单的讲一下如何使用如果我没讲明白，你可以看一下<a href=\"https://ecomfe.github.io/blog/use-fonteditor-to-build-webfont/\">百度字体编辑器教程</a>。</p>\n<h2 id=\"修改字体\"><a href=\"#修改字体\" class=\"headerlink\" title=\"修改字体\"></a>修改字体</h2><p><img src=\"https://s3.ax1x.com/2021/02/08/yUYneI.jpg\" alt=\"百度字体编辑器教程步骤\"></p>\n<h3 id=\"下载新图标\"><a href=\"#下载新图标\" class=\"headerlink\" title=\"下载新图标\"></a>下载新图标</h3><h4 id=\"下载Font-Awesome最新图标\"><a href=\"#下载Font-Awesome最新图标\" class=\"headerlink\" title=\"下载Font Awesome最新图标\"></a>下载Font Awesome最新图标</h4><p>去<a href=\"https://fontawesome.com/how-to-use/on-the-web/setup/hosting-font-awesome-yourself\">Font Awesome</a>下载最新版的图标。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUYNmn.png\" alt=\"下载免费版\"></p>\n<h4 id=\"下载iconfont图标\"><a href=\"#下载iconfont图标\" class=\"headerlink\" title=\"下载iconfont图标\"></a>下载iconfont图标</h4><p>打开<a href=\"https://www.iconfont.cn/home/index\">iconfont</a></p>\n<p>将喜欢的图标添加至自己的项目，然后导出项目。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUtS1g.png\" alt=\"下载iconfont图标\"></p>\n<h3 id=\"导入项目\"><a href=\"#导入项目\" class=\"headerlink\" title=\"导入项目\"></a>导入项目</h3><p>导入两个项目，一个项目是主题的旧字体，一个是从网上下载的待添加字体。</p>\n<ol>\n<li>打开.woff文件</li>\n<li>保存项目</li>\n</ol>\n<p>按照图中的步骤一，步骤二操作，每次切换项目都要点击“保存项目”。</p>\n<h3 id=\"在项目间迁移图标\"><a href=\"#在项目间迁移图标\" class=\"headerlink\" title=\"在项目间迁移图标\"></a>在项目间迁移图标</h3><p>通过“复制”、“粘贴”功能将喜欢的图标添加到旧字体，添加完所有的图标后，<br>最好截一张图，这样后面修改的时候会方便很多，最后下载zip格式并解压。</p>\n<p>下面这张图是我添加的图标</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUYrpF.png\" alt=\"复制图标\"></p>\n<h3 id=\"导出项目\"><a href=\"#导出项目\" class=\"headerlink\" title=\"导出项目\"></a>导出项目</h3><p>将迁移好的新项目下载至本地。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUaxVs.png\" alt=\"下载新图标项目\"></p>\n<h3 id=\"图标重命名\"><a href=\"#图标重命名\" class=\"headerlink\" title=\"图标重命名\"></a>图标重命名</h3><p>有些时候，不同的图标在复制粘贴过程中，会出现名称或unicode码重复的情况，此时需要修改字形信息。</p>\n<p>选中问题字形，点击字形信息，修改并保存。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUts4f.png\" alt=\"重命名图标\"></p>\n<h2 id=\"修改CSS\"><a href=\"#修改CSS\" class=\"headerlink\" title=\"修改CSS\"></a>修改CSS</h2><h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><p>如果你之前没有修改过Yilia，请先使用以下命令安装依赖。</p>\n<p>进入主题根目录<code>./themes/yilia</code>，安装依赖。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/yilia</span><br><span class=\"line\">yarn</span><br></pre></td></tr></table></figure>\n<h3 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h3><p>修改<code>./themes/yilia/source-src/css</code>中的<code>fonts.scss</code>和<code>social.scss</code>，可以修改自己喜欢的图标和颜色。content中的内容要和上面截图中的unicode码一致。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUa7PP.png\" alt=\"修改scss文件\"><br><img src=\"https://s3.ax1x.com/2021/02/08/yUa6C6.png\" alt=\"unicode码对照\"></p>\n<p>然后，将新生成的字体文件拷贝到<code>./themes/yilia/source-src/css/fonts</code>。<br>切换目录至<code>./themes/yilia</code>，运行<code>npm run dev</code>。<br>此时会用webpack打包，把文件编译到source文件里，但文件不会经过压缩。</p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><p>最终定稿后运行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn run dist</span><br></pre></td></tr></table></figure>\n<p>获得最终确定版本，此时的编译会经过压缩。</p>\n<h2 id=\"重新生成网站\"><a href=\"#重新生成网站\" class=\"headerlink\" title=\"重新生成网站\"></a>重新生成网站</h2><p>配置主题的<code>./themes/yilia/_config.yml</code>文件。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUdeaR.png\" alt=\"修改config\"></p>\n<p>执行编译命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo cl</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><p>FontEditor无法正常上传woff文件，显示<code>e.inflate is not a function</code>错误</p>\n<p>可以打开<a href=\"https://kekee000.github.io/fonteditor/index.html\">kekee000部署版本正常上传</a></p>\n<p><a href=\"/archives/20200717e10c0cde/#SubNav图标拓展\">返回yilia主题进阶设置</a></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://blog.zscself.com/posts/70677220/\">修改Yilia左下角SubNav的社交图标</a></li>\n<li><a href=\"https://fontawesome.com/how-to-use/on-the-web/setup/hosting-font-awesome-yourself\">fontawesome下载页</a></li>\n<li><a href=\"https://ecomfe.github.io/blog/use-fonteditor-to-build-webfont/\">使用FontEditor创建web字体图标</a></li>\n<li><a href=\"https://github.com/ecomfe/fonteditor/issues/33\">FontEditor线上版本出问题了</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s3.ax1x.com/2021/02/08/yU8KoT.jpg\" alt=\"首屏图\"></p>","more":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>博客左下角的SubNav发现和我的诉求不太一致，希望扩展一下更多的图标库。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yU8y6A.png\" alt=\"原有SubNav\"></p>\n<p>比如这些：</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yU8T6s.png\" alt=\"现有SubNav\"></p>\n<p>那么我是如何将图标库添加的呢？</p>\n<h2 id=\"修改主题\"><a href=\"#修改主题\" class=\"headerlink\" title=\"修改主题\"></a>修改主题</h2><p>首先，我们看到<code>./themes/yilia/source/fonts</code>中有四个格式不同但是命名相同的字体文件。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUGPn1.png\" alt=\"iconfont编辑后文件\"></p>\n<p>我们的目的就是把我们需要的图标加进去，之后重新生成这四个文件。<br>但是，不能直接更改这四个文件，因为这四个文件是编译Yilia时自动生成的，每次重新编译Yilia之后都会被替换掉。<br>我们修改一个程序肯定不会直接对着程序本体修改，而是取得他的源代码然后更改源代码。那么，在Yilia源代码中：</p>\n<p>真正需要修改的是<code>./themes/yilia/source-src/css/fonts</code>文件夹里面的四个字体文件。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUGIUK.png\" alt=\"iconfont源文件\"></p>\n<p>生成字体文件的方法有好几种,分别是：</p>\n<ol>\n<li>使用在线icon-font生成器+自制CSS</li>\n<li>矢量图形编辑软件（Adobe Illustrator）+Glyphs/Glyphs Mini/FontLab + FontSquirrel WebFont Generator+ 自制CSS文件</li>\n<li>上一条中出现的软件的开源版，InkScape + FontForge + FontSquirrel WebFont Generator</li>\n<li>矢量图形编辑软件（Adobe Illustrator）+FontCustom命令行</li>\n</ol>\n<p>生成字体文件的详细内容可以参考这篇<a href=\"https://www.jianshu.com/p/095eb298ed18\">文章</a></p>\n<p>今天我选择直接使用百度的<a href=\"https://www.gaotianyang.top/fonteditor/\">字体编辑器</a>，<br>后面我会很简单的讲一下如何使用如果我没讲明白，你可以看一下<a href=\"https://ecomfe.github.io/blog/use-fonteditor-to-build-webfont/\">百度字体编辑器教程</a>。</p>\n<h2 id=\"修改字体\"><a href=\"#修改字体\" class=\"headerlink\" title=\"修改字体\"></a>修改字体</h2><p><img src=\"https://s3.ax1x.com/2021/02/08/yUYneI.jpg\" alt=\"百度字体编辑器教程步骤\"></p>\n<h3 id=\"下载新图标\"><a href=\"#下载新图标\" class=\"headerlink\" title=\"下载新图标\"></a>下载新图标</h3><h4 id=\"下载Font-Awesome最新图标\"><a href=\"#下载Font-Awesome最新图标\" class=\"headerlink\" title=\"下载Font Awesome最新图标\"></a>下载Font Awesome最新图标</h4><p>去<a href=\"https://fontawesome.com/how-to-use/on-the-web/setup/hosting-font-awesome-yourself\">Font Awesome</a>下载最新版的图标。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUYNmn.png\" alt=\"下载免费版\"></p>\n<h4 id=\"下载iconfont图标\"><a href=\"#下载iconfont图标\" class=\"headerlink\" title=\"下载iconfont图标\"></a>下载iconfont图标</h4><p>打开<a href=\"https://www.iconfont.cn/home/index\">iconfont</a></p>\n<p>将喜欢的图标添加至自己的项目，然后导出项目。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUtS1g.png\" alt=\"下载iconfont图标\"></p>\n<h3 id=\"导入项目\"><a href=\"#导入项目\" class=\"headerlink\" title=\"导入项目\"></a>导入项目</h3><p>导入两个项目，一个项目是主题的旧字体，一个是从网上下载的待添加字体。</p>\n<ol>\n<li>打开.woff文件</li>\n<li>保存项目</li>\n</ol>\n<p>按照图中的步骤一，步骤二操作，每次切换项目都要点击“保存项目”。</p>\n<h3 id=\"在项目间迁移图标\"><a href=\"#在项目间迁移图标\" class=\"headerlink\" title=\"在项目间迁移图标\"></a>在项目间迁移图标</h3><p>通过“复制”、“粘贴”功能将喜欢的图标添加到旧字体，添加完所有的图标后，<br>最好截一张图，这样后面修改的时候会方便很多，最后下载zip格式并解压。</p>\n<p>下面这张图是我添加的图标</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUYrpF.png\" alt=\"复制图标\"></p>\n<h3 id=\"导出项目\"><a href=\"#导出项目\" class=\"headerlink\" title=\"导出项目\"></a>导出项目</h3><p>将迁移好的新项目下载至本地。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUaxVs.png\" alt=\"下载新图标项目\"></p>\n<h3 id=\"图标重命名\"><a href=\"#图标重命名\" class=\"headerlink\" title=\"图标重命名\"></a>图标重命名</h3><p>有些时候，不同的图标在复制粘贴过程中，会出现名称或unicode码重复的情况，此时需要修改字形信息。</p>\n<p>选中问题字形，点击字形信息，修改并保存。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUts4f.png\" alt=\"重命名图标\"></p>\n<h2 id=\"修改CSS\"><a href=\"#修改CSS\" class=\"headerlink\" title=\"修改CSS\"></a>修改CSS</h2><h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><p>如果你之前没有修改过Yilia，请先使用以下命令安装依赖。</p>\n<p>进入主题根目录<code>./themes/yilia</code>，安装依赖。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/yilia</span><br><span class=\"line\">yarn</span><br></pre></td></tr></table></figure>\n<h3 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h3><p>修改<code>./themes/yilia/source-src/css</code>中的<code>fonts.scss</code>和<code>social.scss</code>，可以修改自己喜欢的图标和颜色。content中的内容要和上面截图中的unicode码一致。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUa7PP.png\" alt=\"修改scss文件\"><br><img src=\"https://s3.ax1x.com/2021/02/08/yUa6C6.png\" alt=\"unicode码对照\"></p>\n<p>然后，将新生成的字体文件拷贝到<code>./themes/yilia/source-src/css/fonts</code>。<br>切换目录至<code>./themes/yilia</code>，运行<code>npm run dev</code>。<br>此时会用webpack打包，把文件编译到source文件里，但文件不会经过压缩。</p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><p>最终定稿后运行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn run dist</span><br></pre></td></tr></table></figure>\n<p>获得最终确定版本，此时的编译会经过压缩。</p>\n<h2 id=\"重新生成网站\"><a href=\"#重新生成网站\" class=\"headerlink\" title=\"重新生成网站\"></a>重新生成网站</h2><p>配置主题的<code>./themes/yilia/_config.yml</code>文件。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/08/yUdeaR.png\" alt=\"修改config\"></p>\n<p>执行编译命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo cl</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><p>FontEditor无法正常上传woff文件，显示<code>e.inflate is not a function</code>错误</p>\n<p>可以打开<a href=\"https://kekee000.github.io/fonteditor/index.html\">kekee000部署版本正常上传</a></p>\n<p><a href=\"/archives/20200717e10c0cde/#SubNav图标拓展\">返回yilia主题进阶设置</a></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://blog.zscself.com/posts/70677220/\">修改Yilia左下角SubNav的社交图标</a></li>\n<li><a href=\"https://fontawesome.com/how-to-use/on-the-web/setup/hosting-font-awesome-yourself\">fontawesome下载页</a></li>\n<li><a href=\"https://ecomfe.github.io/blog/use-fonteditor-to-build-webfont/\">使用FontEditor创建web字体图标</a></li>\n<li><a href=\"https://github.com/ecomfe/fonteditor/issues/33\">FontEditor线上版本出问题了</a></li>\n</ul>"},{"title":"Yilia主题如何添加相册功能","toc":true,"abbrlink":"f57a1917","date":"2020-07-18T01:29:07.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/07/19/UWeCUH.jpg)\n\n<!-- more -->\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#添加相册功能)\n\n## 添加相册功能的思路\n\n仿照Yilia主题的作者 Litten的 [github 仓库](https://github.com/litten/hexo-theme-yilia)的相册，\n实现[相册](http://litten.me/photos/)功能，再进行订制化处理。\n\n* 实现思路\n\n1. 在主页上必须有一个可供点击的相册连接\n2. 要用 hexo 生成一个 photos.html 文件\n3. photos.html 中的图片数据来源?因为这是一个静态页面所有要有一个 json 文件\n4. json 文件中有含有信息，图片的文件名\n5. 图片要有一个完整的路径，把图片放到哪呢？图床，github 的空间，自己的服务器都可以\n6. 怎么上传呢?大量图片当然写脚本传了.不会写咋办?很多人都写好了,改改就是了,脚本也有很多个版本.多数用 nodeJS写的,hexo 就用的 nodeJS.Python也是很不错的选择.\n7. 加载图片太慢怎么办？准备两套图，一套缩略图，一套高清大图。缩略图怎么来？写脚本裁剪图片。\n\n闲言少叙，顺着思路逐一解决问题吧\n\n## 生成相册目录\n\n* 进入到你的博客目录下执行 `hexo new page \"photos\"`,就会出现一个这样的新目录\n\n![photos新目录](https://s1.ax1x.com/2020/07/19/URbHbD.png)\n\n* 在主题配置文件`yourBlog/themes/yilia/_config.yml`中这样设置\n\n``` text\nmenu:\n  主页: /\n  技术: /tags/技术积累/\n  归档: /archives/\n  相册: /photos/\n```\n\n## 生成 photos.html 文件来\n\n### 参考主题作者的生成方式\n\n[下载作者的备份博客](https://github.com/litten/BlogBackup)\n\n### 模仿他的文件目录结构\n\n![photos参考目录](https://s1.ax1x.com/2020/07/19/URLMlt.png)\n\n复制作者的文件到你博客相应的目录下。\nejs 文件是以后要hexo 文件渲染的文件。\nassets 目录是放默认图片的也要有。\n\n### 定制化调整文件模板\n\n修改 ejs 模板文件,ins.js 文件设置自己的东西\n\n#### index.ejs文件\n\n可以不用修改\n\n#### 修改 ins.js 文件\n\n修改其中的render()函数。这个函数是用来渲染数据的修改图片的路径地址。\nminSrc是小图的路径。src是大图的路径。修改为自己的图片路径(路过图床，七牛的, github的路径)。\n\n![ins.js](https://s1.ax1x.com/2020/07/19/URj80K.png)\n\n因为图片的尺寸是不固定的，这里做了一下定制化处理。\n修改`data-size=\"640x640\"`改为`data-size=\"' + size + '\"`。\n\n![data-size](https://s1.ax1x.com/2020/07/20/UfqLef.png)\n\n## 编辑json文件\n\n这一步是关键的一步，也是最后一步。\n\n因为路过图床是自动生成大小图链接的，因此这里省略了使用脚本把图片处理成一套大图和一套小图的操作。\n将图片的链接整理并编辑图片的`yourBlog/source/photos/ins.json`文件。\n\n添加size字段，将图片的尺寸录入。例如：`1080x1440`\n\n## 总结\n\n走到这里所有的所有的准备工作都做好了.\n进入到你博客目录, 处理ins.json\n\n``` shell\nhexo clean (清理之前的 HTML 等)\nhexo g (生成 HTML 文件)\nhexo s (看看效果如何)\n```\n\n最后部署到你的博客上.\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#添加相册功能)\n\n## 参考资料\n\n* [Yilia主题的作者 Litten的 github 仓库](https://github.com/litten/hexo-theme-yilia)\n* [Yilia主题作者的备份博客仓库](https://github.com/litten/BlogBackup)\n* [hexo Yilia 主题如何添加相册功能](https://www.jianshu.com/p/a9f309aaa0e0)\n* [PhotoSwipe 畫廊函式庫，網頁展示照片](https://blog.gtwang.org/web-development/photoswipe-javascript-image-gallery-tutorial/)\n","source":"_posts/Yilia主题如何添加相册功能.md","raw":"---\ntitle: Yilia主题如何添加相册功能\ntags:\n  - 技术积累\n  - hexo\n  - yilia\ncategories:\n  - 技术积累\n  - hexo\n  - yilia\ntoc: true\nabbrlink: f57a1917\ndate: 2020-07-18 09:29:07\n---\n\n![首屏图](https://s1.ax1x.com/2020/07/19/UWeCUH.jpg)\n\n<!-- more -->\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#添加相册功能)\n\n## 添加相册功能的思路\n\n仿照Yilia主题的作者 Litten的 [github 仓库](https://github.com/litten/hexo-theme-yilia)的相册，\n实现[相册](http://litten.me/photos/)功能，再进行订制化处理。\n\n* 实现思路\n\n1. 在主页上必须有一个可供点击的相册连接\n2. 要用 hexo 生成一个 photos.html 文件\n3. photos.html 中的图片数据来源?因为这是一个静态页面所有要有一个 json 文件\n4. json 文件中有含有信息，图片的文件名\n5. 图片要有一个完整的路径，把图片放到哪呢？图床，github 的空间，自己的服务器都可以\n6. 怎么上传呢?大量图片当然写脚本传了.不会写咋办?很多人都写好了,改改就是了,脚本也有很多个版本.多数用 nodeJS写的,hexo 就用的 nodeJS.Python也是很不错的选择.\n7. 加载图片太慢怎么办？准备两套图，一套缩略图，一套高清大图。缩略图怎么来？写脚本裁剪图片。\n\n闲言少叙，顺着思路逐一解决问题吧\n\n## 生成相册目录\n\n* 进入到你的博客目录下执行 `hexo new page \"photos\"`,就会出现一个这样的新目录\n\n![photos新目录](https://s1.ax1x.com/2020/07/19/URbHbD.png)\n\n* 在主题配置文件`yourBlog/themes/yilia/_config.yml`中这样设置\n\n``` text\nmenu:\n  主页: /\n  技术: /tags/技术积累/\n  归档: /archives/\n  相册: /photos/\n```\n\n## 生成 photos.html 文件来\n\n### 参考主题作者的生成方式\n\n[下载作者的备份博客](https://github.com/litten/BlogBackup)\n\n### 模仿他的文件目录结构\n\n![photos参考目录](https://s1.ax1x.com/2020/07/19/URLMlt.png)\n\n复制作者的文件到你博客相应的目录下。\nejs 文件是以后要hexo 文件渲染的文件。\nassets 目录是放默认图片的也要有。\n\n### 定制化调整文件模板\n\n修改 ejs 模板文件,ins.js 文件设置自己的东西\n\n#### index.ejs文件\n\n可以不用修改\n\n#### 修改 ins.js 文件\n\n修改其中的render()函数。这个函数是用来渲染数据的修改图片的路径地址。\nminSrc是小图的路径。src是大图的路径。修改为自己的图片路径(路过图床，七牛的, github的路径)。\n\n![ins.js](https://s1.ax1x.com/2020/07/19/URj80K.png)\n\n因为图片的尺寸是不固定的，这里做了一下定制化处理。\n修改`data-size=\"640x640\"`改为`data-size=\"' + size + '\"`。\n\n![data-size](https://s1.ax1x.com/2020/07/20/UfqLef.png)\n\n## 编辑json文件\n\n这一步是关键的一步，也是最后一步。\n\n因为路过图床是自动生成大小图链接的，因此这里省略了使用脚本把图片处理成一套大图和一套小图的操作。\n将图片的链接整理并编辑图片的`yourBlog/source/photos/ins.json`文件。\n\n添加size字段，将图片的尺寸录入。例如：`1080x1440`\n\n## 总结\n\n走到这里所有的所有的准备工作都做好了.\n进入到你博客目录, 处理ins.json\n\n``` shell\nhexo clean (清理之前的 HTML 等)\nhexo g (生成 HTML 文件)\nhexo s (看看效果如何)\n```\n\n最后部署到你的博客上.\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#添加相册功能)\n\n## 参考资料\n\n* [Yilia主题的作者 Litten的 github 仓库](https://github.com/litten/hexo-theme-yilia)\n* [Yilia主题作者的备份博客仓库](https://github.com/litten/BlogBackup)\n* [hexo Yilia 主题如何添加相册功能](https://www.jianshu.com/p/a9f309aaa0e0)\n* [PhotoSwipe 畫廊函式庫，網頁展示照片](https://blog.gtwang.org/web-development/photoswipe-javascript-image-gallery-tutorial/)\n","slug":"Yilia主题如何添加相册功能","published":1,"updated":"2020-08-12T01:57:58.409Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjya00092an930r29uhv","content":"<p><img src=\"https://s1.ax1x.com/2020/07/19/UWeCUH.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<p><a href=\"/archives/20200717e10c0cde/#添加相册功能\">返回yilia主题进阶设置</a></p>\n<h2 id=\"添加相册功能的思路\"><a href=\"#添加相册功能的思路\" class=\"headerlink\" title=\"添加相册功能的思路\"></a>添加相册功能的思路</h2><p>仿照Yilia主题的作者 Litten的 <a href=\"https://github.com/litten/hexo-theme-yilia\">github 仓库</a>的相册，<br>实现<a href=\"http://litten.me/photos/\">相册</a>功能，再进行订制化处理。</p>\n<ul>\n<li>实现思路</li>\n</ul>\n<ol>\n<li>在主页上必须有一个可供点击的相册连接</li>\n<li>要用 hexo 生成一个 photos.html 文件</li>\n<li>photos.html 中的图片数据来源?因为这是一个静态页面所有要有一个 json 文件</li>\n<li>json 文件中有含有信息，图片的文件名</li>\n<li>图片要有一个完整的路径，把图片放到哪呢？图床，github 的空间，自己的服务器都可以</li>\n<li>怎么上传呢?大量图片当然写脚本传了.不会写咋办?很多人都写好了,改改就是了,脚本也有很多个版本.多数用 nodeJS写的,hexo 就用的 nodeJS.Python也是很不错的选择.</li>\n<li>加载图片太慢怎么办？准备两套图，一套缩略图，一套高清大图。缩略图怎么来？写脚本裁剪图片。</li>\n</ol>\n<p>闲言少叙，顺着思路逐一解决问题吧</p>\n<h2 id=\"生成相册目录\"><a href=\"#生成相册目录\" class=\"headerlink\" title=\"生成相册目录\"></a>生成相册目录</h2><ul>\n<li>进入到你的博客目录下执行 <code>hexo new page &quot;photos&quot;</code>,就会出现一个这样的新目录</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/19/URbHbD.png\" alt=\"photos新目录\"></p>\n<ul>\n<li>在主题配置文件<code>yourBlog/themes/yilia/_config.yml</code>中这样设置</li>\n</ul>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  主页: /</span><br><span class=\"line\">  技术: /tags/技术积累/</span><br><span class=\"line\">  归档: /archives/</span><br><span class=\"line\">  相册: /photos/</span><br></pre></td></tr></table></figure>\n<h2 id=\"生成-photos-html-文件来\"><a href=\"#生成-photos-html-文件来\" class=\"headerlink\" title=\"生成 photos.html 文件来\"></a>生成 photos.html 文件来</h2><h3 id=\"参考主题作者的生成方式\"><a href=\"#参考主题作者的生成方式\" class=\"headerlink\" title=\"参考主题作者的生成方式\"></a>参考主题作者的生成方式</h3><p><a href=\"https://github.com/litten/BlogBackup\">下载作者的备份博客</a></p>\n<h3 id=\"模仿他的文件目录结构\"><a href=\"#模仿他的文件目录结构\" class=\"headerlink\" title=\"模仿他的文件目录结构\"></a>模仿他的文件目录结构</h3><p><img src=\"https://s1.ax1x.com/2020/07/19/URLMlt.png\" alt=\"photos参考目录\"></p>\n<p>复制作者的文件到你博客相应的目录下。<br>ejs 文件是以后要hexo 文件渲染的文件。<br>assets 目录是放默认图片的也要有。</p>\n<h3 id=\"定制化调整文件模板\"><a href=\"#定制化调整文件模板\" class=\"headerlink\" title=\"定制化调整文件模板\"></a>定制化调整文件模板</h3><p>修改 ejs 模板文件,ins.js 文件设置自己的东西</p>\n<h4 id=\"index-ejs文件\"><a href=\"#index-ejs文件\" class=\"headerlink\" title=\"index.ejs文件\"></a>index.ejs文件</h4><p>可以不用修改</p>\n<h4 id=\"修改-ins-js-文件\"><a href=\"#修改-ins-js-文件\" class=\"headerlink\" title=\"修改 ins.js 文件\"></a>修改 ins.js 文件</h4><p>修改其中的render()函数。这个函数是用来渲染数据的修改图片的路径地址。<br>minSrc是小图的路径。src是大图的路径。修改为自己的图片路径(路过图床，七牛的, github的路径)。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/19/URj80K.png\" alt=\"ins.js\"></p>\n<p>因为图片的尺寸是不固定的，这里做了一下定制化处理。<br>修改<code>data-size=&quot;640x640&quot;</code>改为<code>data-size=&quot;&#39; + size + &#39;&quot;</code>。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/20/UfqLef.png\" alt=\"data-size\"></p>\n<h2 id=\"编辑json文件\"><a href=\"#编辑json文件\" class=\"headerlink\" title=\"编辑json文件\"></a>编辑json文件</h2><p>这一步是关键的一步，也是最后一步。</p>\n<p>因为路过图床是自动生成大小图链接的，因此这里省略了使用脚本把图片处理成一套大图和一套小图的操作。<br>将图片的链接整理并编辑图片的<code>yourBlog/source/photos/ins.json</code>文件。</p>\n<p>添加size字段，将图片的尺寸录入。例如：<code>1080x1440</code></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>走到这里所有的所有的准备工作都做好了.<br>进入到你博客目录, 处理ins.json</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean (清理之前的 HTML 等)</span><br><span class=\"line\">hexo g (生成 HTML 文件)</span><br><span class=\"line\">hexo s (看看效果如何)</span><br></pre></td></tr></table></figure>\n<p>最后部署到你的博客上.</p>\n<p><a href=\"/archives/20200717e10c0cde/#添加相册功能\">返回yilia主题进阶设置</a></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://github.com/litten/hexo-theme-yilia\">Yilia主题的作者 Litten的 github 仓库</a></li>\n<li><a href=\"https://github.com/litten/BlogBackup\">Yilia主题作者的备份博客仓库</a></li>\n<li><a href=\"https://www.jianshu.com/p/a9f309aaa0e0\">hexo Yilia 主题如何添加相册功能</a></li>\n<li><a href=\"https://blog.gtwang.org/web-development/photoswipe-javascript-image-gallery-tutorial/\">PhotoSwipe 畫廊函式庫，網頁展示照片</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/07/19/UWeCUH.jpg\" alt=\"首屏图\"></p>","more":"<p><a href=\"/archives/20200717e10c0cde/#添加相册功能\">返回yilia主题进阶设置</a></p>\n<h2 id=\"添加相册功能的思路\"><a href=\"#添加相册功能的思路\" class=\"headerlink\" title=\"添加相册功能的思路\"></a>添加相册功能的思路</h2><p>仿照Yilia主题的作者 Litten的 <a href=\"https://github.com/litten/hexo-theme-yilia\">github 仓库</a>的相册，<br>实现<a href=\"http://litten.me/photos/\">相册</a>功能，再进行订制化处理。</p>\n<ul>\n<li>实现思路</li>\n</ul>\n<ol>\n<li>在主页上必须有一个可供点击的相册连接</li>\n<li>要用 hexo 生成一个 photos.html 文件</li>\n<li>photos.html 中的图片数据来源?因为这是一个静态页面所有要有一个 json 文件</li>\n<li>json 文件中有含有信息，图片的文件名</li>\n<li>图片要有一个完整的路径，把图片放到哪呢？图床，github 的空间，自己的服务器都可以</li>\n<li>怎么上传呢?大量图片当然写脚本传了.不会写咋办?很多人都写好了,改改就是了,脚本也有很多个版本.多数用 nodeJS写的,hexo 就用的 nodeJS.Python也是很不错的选择.</li>\n<li>加载图片太慢怎么办？准备两套图，一套缩略图，一套高清大图。缩略图怎么来？写脚本裁剪图片。</li>\n</ol>\n<p>闲言少叙，顺着思路逐一解决问题吧</p>\n<h2 id=\"生成相册目录\"><a href=\"#生成相册目录\" class=\"headerlink\" title=\"生成相册目录\"></a>生成相册目录</h2><ul>\n<li>进入到你的博客目录下执行 <code>hexo new page &quot;photos&quot;</code>,就会出现一个这样的新目录</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/19/URbHbD.png\" alt=\"photos新目录\"></p>\n<ul>\n<li>在主题配置文件<code>yourBlog/themes/yilia/_config.yml</code>中这样设置</li>\n</ul>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  主页: /</span><br><span class=\"line\">  技术: /tags/技术积累/</span><br><span class=\"line\">  归档: /archives/</span><br><span class=\"line\">  相册: /photos/</span><br></pre></td></tr></table></figure>\n<h2 id=\"生成-photos-html-文件来\"><a href=\"#生成-photos-html-文件来\" class=\"headerlink\" title=\"生成 photos.html 文件来\"></a>生成 photos.html 文件来</h2><h3 id=\"参考主题作者的生成方式\"><a href=\"#参考主题作者的生成方式\" class=\"headerlink\" title=\"参考主题作者的生成方式\"></a>参考主题作者的生成方式</h3><p><a href=\"https://github.com/litten/BlogBackup\">下载作者的备份博客</a></p>\n<h3 id=\"模仿他的文件目录结构\"><a href=\"#模仿他的文件目录结构\" class=\"headerlink\" title=\"模仿他的文件目录结构\"></a>模仿他的文件目录结构</h3><p><img src=\"https://s1.ax1x.com/2020/07/19/URLMlt.png\" alt=\"photos参考目录\"></p>\n<p>复制作者的文件到你博客相应的目录下。<br>ejs 文件是以后要hexo 文件渲染的文件。<br>assets 目录是放默认图片的也要有。</p>\n<h3 id=\"定制化调整文件模板\"><a href=\"#定制化调整文件模板\" class=\"headerlink\" title=\"定制化调整文件模板\"></a>定制化调整文件模板</h3><p>修改 ejs 模板文件,ins.js 文件设置自己的东西</p>\n<h4 id=\"index-ejs文件\"><a href=\"#index-ejs文件\" class=\"headerlink\" title=\"index.ejs文件\"></a>index.ejs文件</h4><p>可以不用修改</p>\n<h4 id=\"修改-ins-js-文件\"><a href=\"#修改-ins-js-文件\" class=\"headerlink\" title=\"修改 ins.js 文件\"></a>修改 ins.js 文件</h4><p>修改其中的render()函数。这个函数是用来渲染数据的修改图片的路径地址。<br>minSrc是小图的路径。src是大图的路径。修改为自己的图片路径(路过图床，七牛的, github的路径)。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/19/URj80K.png\" alt=\"ins.js\"></p>\n<p>因为图片的尺寸是不固定的，这里做了一下定制化处理。<br>修改<code>data-size=&quot;640x640&quot;</code>改为<code>data-size=&quot;&#39; + size + &#39;&quot;</code>。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/20/UfqLef.png\" alt=\"data-size\"></p>\n<h2 id=\"编辑json文件\"><a href=\"#编辑json文件\" class=\"headerlink\" title=\"编辑json文件\"></a>编辑json文件</h2><p>这一步是关键的一步，也是最后一步。</p>\n<p>因为路过图床是自动生成大小图链接的，因此这里省略了使用脚本把图片处理成一套大图和一套小图的操作。<br>将图片的链接整理并编辑图片的<code>yourBlog/source/photos/ins.json</code>文件。</p>\n<p>添加size字段，将图片的尺寸录入。例如：<code>1080x1440</code></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>走到这里所有的所有的准备工作都做好了.<br>进入到你博客目录, 处理ins.json</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean (清理之前的 HTML 等)</span><br><span class=\"line\">hexo g (生成 HTML 文件)</span><br><span class=\"line\">hexo s (看看效果如何)</span><br></pre></td></tr></table></figure>\n<p>最后部署到你的博客上.</p>\n<p><a href=\"/archives/20200717e10c0cde/#添加相册功能\">返回yilia主题进阶设置</a></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://github.com/litten/hexo-theme-yilia\">Yilia主题的作者 Litten的 github 仓库</a></li>\n<li><a href=\"https://github.com/litten/BlogBackup\">Yilia主题作者的备份博客仓库</a></li>\n<li><a href=\"https://www.jianshu.com/p/a9f309aaa0e0\">hexo Yilia 主题如何添加相册功能</a></li>\n<li><a href=\"https://blog.gtwang.org/web-development/photoswipe-javascript-image-gallery-tutorial/\">PhotoSwipe 畫廊函式庫，網頁展示照片</a></li>\n</ul>"},{"title":"Yilia主题生成永久短连接","abbrlink":"e0185335","date":"2020-08-03T10:05:26.000Z","toc":true,"_content":"\n![首屏图](https://s1.ax1x.com/2020/08/03/aUOvyF.jpg)\n\n<!-- more -->\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#Url持久化)\n\n## 简述\n\n使用Hexo搭建博客已经有一段时间了，文章的链接也一直是使用的默认格式，\n文章的链接格式可以在博客根目录下的 `_config.yml` 文件中修改，\n默认的配置如下所示，默认生成的文章地址路径是 `【网站名称／年／月／日／文章名称】`,\n最终生成的链接大概是这样的：`https://www.gaotianyang.top/2020/08/03/title` 。\n\n```text\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: https://www.gaotianyang.top/ #你的站点Url\nroot: / #站点的根目录\n# permalink: :year/:month/:day/:title/ #文章的 永久链接 格式\n# permalink_defaults: #永久链接中各部分的默认值\n```\n\n更多关于永久链接的配置可以参考Hexo的官方文档：[永久链接（Permalinks）](https://hexo.io/zh-cn/docs/permalinks)\n\n如果说文章的标题是英文，那么生成的链接还是比较简洁的，\n但如果是是中文的标题，比如2020年8月3日的标题为“Yilia主题生成永久短连接”的文章生成的文章链接将是这样的：\n\n`https://www.gaotianyang.top/2020/08/03/Yilia%E4%B8%BB%E9%A2%98%E7%94%9F%E6%88%90%E6%B0%B8%E4%B9%85%E7%9F%AD%E8%BF%9E%E6%8E%A5`\n\n这种链接对搜索爬虫是很不友好的，它的 url 结构超过了三层，太深了。\n\n可以看到，默认配置下中文标题的文章链接是很复杂的类似于乱码的状态，\n并且这种链接对搜索爬虫是很不友好的，它的 url 结构超过了三层，太深了。\n本文要达到的效果将是这样的：`https://www.gaotianyang.top/202008035e0185335/`\n\n## 使用 hexo-abbrlink 生成短链接\n\n下面我推荐安装 `hexo-abbrlink` 插件：\n\n```shell\nnpm install hexo-abbrlink --save\n```\n\n然后配置_config.yml\n\n```text\n# permalink: :title/\n# permalink: archives/:year:month:day:abbrlink.html\n# permalink: :year:month:day:abbrlink/\npermalink: archives/:year:month:day:abbrlink/\nabbrlink:\n  alg: crc32  # 算法：crc16(default) and crc32\n  rep: hex    # 进制：dec(default) and hex\n  # 下面几项可以省略\n  drafts: false #(true)Process draft,(false)Do not process draft\n  # Generate categories from directory-tree\n  # depth: the max_depth of directory-tree you want to generate, should > 0\n  auto_category:\n     enable: false\n     depth:\n```\n\n> 注意：版本为2.1.5之前的必须完整添加上述所有配置，否则会生成失败！（可能是bug，2.2.1已修复）\n\n不同参数的效果如下所示：\n\n```text\ncrc16 & hex\nhttps://post.zz173.com/posts/66c8.html\n\ncrc16 & dec\nhttps://post.zz173.com/posts/65535.html\n\ncrc32 & hex\nhttps://post.zz173.com/posts/8ddf18fb.html\n\ncrc32 & dec\nhttps://post.zz173.com/posts/1690090958.html\n```\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#Url持久化)\n\n## 参考资料\n\n* [Hexo-Yilia 进阶笔记](https://tding.top/archives/9a232bbe.html)\n* [Hexo博客使用插件hexo-abbrlink生成永久短链接](https://mxy493.xyz/2020070417822/)\n","source":"_posts/Yilia主题生成永久短连接.md","raw":"---\ntitle: Yilia主题生成永久短连接\nabbrlink: e0185335\ndate: 2020-08-03 18:05:26\ntags:\n  - 技术积累\n  - hexo\n  - yilia\ncategories:\n  - 技术积累\n  - hexo\n  - yilia\ntoc: true\n---\n\n![首屏图](https://s1.ax1x.com/2020/08/03/aUOvyF.jpg)\n\n<!-- more -->\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#Url持久化)\n\n## 简述\n\n使用Hexo搭建博客已经有一段时间了，文章的链接也一直是使用的默认格式，\n文章的链接格式可以在博客根目录下的 `_config.yml` 文件中修改，\n默认的配置如下所示，默认生成的文章地址路径是 `【网站名称／年／月／日／文章名称】`,\n最终生成的链接大概是这样的：`https://www.gaotianyang.top/2020/08/03/title` 。\n\n```text\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: https://www.gaotianyang.top/ #你的站点Url\nroot: / #站点的根目录\n# permalink: :year/:month/:day/:title/ #文章的 永久链接 格式\n# permalink_defaults: #永久链接中各部分的默认值\n```\n\n更多关于永久链接的配置可以参考Hexo的官方文档：[永久链接（Permalinks）](https://hexo.io/zh-cn/docs/permalinks)\n\n如果说文章的标题是英文，那么生成的链接还是比较简洁的，\n但如果是是中文的标题，比如2020年8月3日的标题为“Yilia主题生成永久短连接”的文章生成的文章链接将是这样的：\n\n`https://www.gaotianyang.top/2020/08/03/Yilia%E4%B8%BB%E9%A2%98%E7%94%9F%E6%88%90%E6%B0%B8%E4%B9%85%E7%9F%AD%E8%BF%9E%E6%8E%A5`\n\n这种链接对搜索爬虫是很不友好的，它的 url 结构超过了三层，太深了。\n\n可以看到，默认配置下中文标题的文章链接是很复杂的类似于乱码的状态，\n并且这种链接对搜索爬虫是很不友好的，它的 url 结构超过了三层，太深了。\n本文要达到的效果将是这样的：`https://www.gaotianyang.top/202008035e0185335/`\n\n## 使用 hexo-abbrlink 生成短链接\n\n下面我推荐安装 `hexo-abbrlink` 插件：\n\n```shell\nnpm install hexo-abbrlink --save\n```\n\n然后配置_config.yml\n\n```text\n# permalink: :title/\n# permalink: archives/:year:month:day:abbrlink.html\n# permalink: :year:month:day:abbrlink/\npermalink: archives/:year:month:day:abbrlink/\nabbrlink:\n  alg: crc32  # 算法：crc16(default) and crc32\n  rep: hex    # 进制：dec(default) and hex\n  # 下面几项可以省略\n  drafts: false #(true)Process draft,(false)Do not process draft\n  # Generate categories from directory-tree\n  # depth: the max_depth of directory-tree you want to generate, should > 0\n  auto_category:\n     enable: false\n     depth:\n```\n\n> 注意：版本为2.1.5之前的必须完整添加上述所有配置，否则会生成失败！（可能是bug，2.2.1已修复）\n\n不同参数的效果如下所示：\n\n```text\ncrc16 & hex\nhttps://post.zz173.com/posts/66c8.html\n\ncrc16 & dec\nhttps://post.zz173.com/posts/65535.html\n\ncrc32 & hex\nhttps://post.zz173.com/posts/8ddf18fb.html\n\ncrc32 & dec\nhttps://post.zz173.com/posts/1690090958.html\n```\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#Url持久化)\n\n## 参考资料\n\n* [Hexo-Yilia 进阶笔记](https://tding.top/archives/9a232bbe.html)\n* [Hexo博客使用插件hexo-abbrlink生成永久短链接](https://mxy493.xyz/2020070417822/)\n","slug":"Yilia主题生成永久短连接","published":1,"updated":"2020-08-12T01:57:58.410Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyb000a2an98gfp6iit","content":"<p><img src=\"https://s1.ax1x.com/2020/08/03/aUOvyF.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<p><a href=\"/archives/20200717e10c0cde/#Url持久化\">返回yilia主题进阶设置</a></p>\n<h2 id=\"简述\"><a href=\"#简述\" class=\"headerlink\" title=\"简述\"></a>简述</h2><p>使用Hexo搭建博客已经有一段时间了，文章的链接也一直是使用的默认格式，<br>文章的链接格式可以在博客根目录下的 <code>_config.yml</code> 文件中修改，<br>默认的配置如下所示，默认生成的文章地址路径是 <code>【网站名称／年／月／日／文章名称】</code>,<br>最终生成的链接大概是这样的：<code>https://www.gaotianyang.top/2020/08/03/title</code> 。</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># URL</span><br><span class=\"line\">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span><br><span class=\"line\">url: https://www.gaotianyang.top/ #你的站点Url</span><br><span class=\"line\">root: / #站点的根目录</span><br><span class=\"line\"># permalink: :year/:month/:day/:title/ #文章的 永久链接 格式</span><br><span class=\"line\"># permalink_defaults: #永久链接中各部分的默认值</span><br></pre></td></tr></table></figure>\n<p>更多关于永久链接的配置可以参考Hexo的官方文档：<a href=\"https://hexo.io/zh-cn/docs/permalinks\">永久链接（Permalinks）</a></p>\n<p>如果说文章的标题是英文，那么生成的链接还是比较简洁的，<br>但如果是是中文的标题，比如2020年8月3日的标题为“Yilia主题生成永久短连接”的文章生成的文章链接将是这样的：</p>\n<p><code>https://www.gaotianyang.top/2020/08/03/Yilia%E4%B8%BB%E9%A2%98%E7%94%9F%E6%88%90%E6%B0%B8%E4%B9%85%E7%9F%AD%E8%BF%9E%E6%8E%A5</code></p>\n<p>这种链接对搜索爬虫是很不友好的，它的 url 结构超过了三层，太深了。</p>\n<p>可以看到，默认配置下中文标题的文章链接是很复杂的类似于乱码的状态，<br>并且这种链接对搜索爬虫是很不友好的，它的 url 结构超过了三层，太深了。<br>本文要达到的效果将是这样的：<code>https://www.gaotianyang.top/202008035e0185335/</code></p>\n<h2 id=\"使用-hexo-abbrlink-生成短链接\"><a href=\"#使用-hexo-abbrlink-生成短链接\" class=\"headerlink\" title=\"使用 hexo-abbrlink 生成短链接\"></a>使用 hexo-abbrlink 生成短链接</h2><p>下面我推荐安装 <code>hexo-abbrlink</code> 插件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>\n<p>然后配置_config.yml</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># permalink: :title/</span><br><span class=\"line\"># permalink: archives/:year:month:day:abbrlink.html</span><br><span class=\"line\"># permalink: :year:month:day:abbrlink/</span><br><span class=\"line\">permalink: archives/:year:month:day:abbrlink/</span><br><span class=\"line\">abbrlink:</span><br><span class=\"line\">  alg: crc32  # 算法：crc16(default) and crc32</span><br><span class=\"line\">  rep: hex    # 进制：dec(default) and hex</span><br><span class=\"line\">  # 下面几项可以省略</span><br><span class=\"line\">  drafts: false #(true)Process draft,(false)Do not process draft</span><br><span class=\"line\">  # Generate categories from directory-tree</span><br><span class=\"line\">  # depth: the max_depth of directory-tree you want to generate, should &gt; 0</span><br><span class=\"line\">  auto_category:</span><br><span class=\"line\">     enable: false</span><br><span class=\"line\">     depth:</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：版本为2.1.5之前的必须完整添加上述所有配置，否则会生成失败！（可能是bug，2.2.1已修复）</p>\n</blockquote>\n<p>不同参数的效果如下所示：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crc16 &amp; hex</span><br><span class=\"line\">https://post.zz173.com/posts/66c8.html</span><br><span class=\"line\"></span><br><span class=\"line\">crc16 &amp; dec</span><br><span class=\"line\">https://post.zz173.com/posts/65535.html</span><br><span class=\"line\"></span><br><span class=\"line\">crc32 &amp; hex</span><br><span class=\"line\">https://post.zz173.com/posts/8ddf18fb.html</span><br><span class=\"line\"></span><br><span class=\"line\">crc32 &amp; dec</span><br><span class=\"line\">https://post.zz173.com/posts/1690090958.html</span><br></pre></td></tr></table></figure>\n<p><a href=\"/archives/20200717e10c0cde/#Url持久化\">返回yilia主题进阶设置</a></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://tding.top/archives/9a232bbe.html\">Hexo-Yilia 进阶笔记</a></li>\n<li><a href=\"https://mxy493.xyz/2020070417822/\">Hexo博客使用插件hexo-abbrlink生成永久短链接</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/08/03/aUOvyF.jpg\" alt=\"首屏图\"></p>","more":"<p><a href=\"/archives/20200717e10c0cde/#Url持久化\">返回yilia主题进阶设置</a></p>\n<h2 id=\"简述\"><a href=\"#简述\" class=\"headerlink\" title=\"简述\"></a>简述</h2><p>使用Hexo搭建博客已经有一段时间了，文章的链接也一直是使用的默认格式，<br>文章的链接格式可以在博客根目录下的 <code>_config.yml</code> 文件中修改，<br>默认的配置如下所示，默认生成的文章地址路径是 <code>【网站名称／年／月／日／文章名称】</code>,<br>最终生成的链接大概是这样的：<code>https://www.gaotianyang.top/2020/08/03/title</code> 。</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># URL</span><br><span class=\"line\">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span><br><span class=\"line\">url: https://www.gaotianyang.top/ #你的站点Url</span><br><span class=\"line\">root: / #站点的根目录</span><br><span class=\"line\"># permalink: :year/:month/:day/:title/ #文章的 永久链接 格式</span><br><span class=\"line\"># permalink_defaults: #永久链接中各部分的默认值</span><br></pre></td></tr></table></figure>\n<p>更多关于永久链接的配置可以参考Hexo的官方文档：<a href=\"https://hexo.io/zh-cn/docs/permalinks\">永久链接（Permalinks）</a></p>\n<p>如果说文章的标题是英文，那么生成的链接还是比较简洁的，<br>但如果是是中文的标题，比如2020年8月3日的标题为“Yilia主题生成永久短连接”的文章生成的文章链接将是这样的：</p>\n<p><code>https://www.gaotianyang.top/2020/08/03/Yilia%E4%B8%BB%E9%A2%98%E7%94%9F%E6%88%90%E6%B0%B8%E4%B9%85%E7%9F%AD%E8%BF%9E%E6%8E%A5</code></p>\n<p>这种链接对搜索爬虫是很不友好的，它的 url 结构超过了三层，太深了。</p>\n<p>可以看到，默认配置下中文标题的文章链接是很复杂的类似于乱码的状态，<br>并且这种链接对搜索爬虫是很不友好的，它的 url 结构超过了三层，太深了。<br>本文要达到的效果将是这样的：<code>https://www.gaotianyang.top/202008035e0185335/</code></p>\n<h2 id=\"使用-hexo-abbrlink-生成短链接\"><a href=\"#使用-hexo-abbrlink-生成短链接\" class=\"headerlink\" title=\"使用 hexo-abbrlink 生成短链接\"></a>使用 hexo-abbrlink 生成短链接</h2><p>下面我推荐安装 <code>hexo-abbrlink</code> 插件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>\n<p>然后配置_config.yml</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># permalink: :title/</span><br><span class=\"line\"># permalink: archives/:year:month:day:abbrlink.html</span><br><span class=\"line\"># permalink: :year:month:day:abbrlink/</span><br><span class=\"line\">permalink: archives/:year:month:day:abbrlink/</span><br><span class=\"line\">abbrlink:</span><br><span class=\"line\">  alg: crc32  # 算法：crc16(default) and crc32</span><br><span class=\"line\">  rep: hex    # 进制：dec(default) and hex</span><br><span class=\"line\">  # 下面几项可以省略</span><br><span class=\"line\">  drafts: false #(true)Process draft,(false)Do not process draft</span><br><span class=\"line\">  # Generate categories from directory-tree</span><br><span class=\"line\">  # depth: the max_depth of directory-tree you want to generate, should &gt; 0</span><br><span class=\"line\">  auto_category:</span><br><span class=\"line\">     enable: false</span><br><span class=\"line\">     depth:</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：版本为2.1.5之前的必须完整添加上述所有配置，否则会生成失败！（可能是bug，2.2.1已修复）</p>\n</blockquote>\n<p>不同参数的效果如下所示：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crc16 &amp; hex</span><br><span class=\"line\">https://post.zz173.com/posts/66c8.html</span><br><span class=\"line\"></span><br><span class=\"line\">crc16 &amp; dec</span><br><span class=\"line\">https://post.zz173.com/posts/65535.html</span><br><span class=\"line\"></span><br><span class=\"line\">crc32 &amp; hex</span><br><span class=\"line\">https://post.zz173.com/posts/8ddf18fb.html</span><br><span class=\"line\"></span><br><span class=\"line\">crc32 &amp; dec</span><br><span class=\"line\">https://post.zz173.com/posts/1690090958.html</span><br></pre></td></tr></table></figure>\n<p><a href=\"/archives/20200717e10c0cde/#Url持久化\">返回yilia主题进阶设置</a></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://tding.top/archives/9a232bbe.html\">Hexo-Yilia 进阶笔记</a></li>\n<li><a href=\"https://mxy493.xyz/2020070417822/\">Hexo博客使用插件hexo-abbrlink生成永久短链接</a></li>\n</ul>"},{"title":"Hello World","abbrlink":"4a17b156","date":"2017-10-26T13:14:40.000Z","_content":"\n欢迎来到 [Hexo](https://hexo.io/)！这是你的第一篇Blog。相关的详细信息请查看官方[文档](https://hexo.io/docs/)。\n如果您在使用 Hexo 时遇到任何问题，您可以在[故障排除](https://hexo.io/docs/troubleshooting.html)中找到答案，也可以在 [GitHub](https://github.com/hexojs/hexo/issues) 上询问我。\n\n<!-- more -->\n\n## 快速开始\n\n### 创建新的blog\n\n```bash\nhexo new \"我的博客文章\"\n```\n\n更多信息：[Writing](https://hexo.io/zh-cn/docs/commands.html#new)\n\n### 本地预览\n\n```bash\nhexo server\n```\n\n更多信息：[Server](https://hexo.io/zh-cn/docs/commands.html#server)\n\n### 清除静态文件\n\n```bash\nhexo clean\n```\n\n更多信息：[Cleaning](https://hexo.io/zh-cn/docs/commands.html#clean)\n\n### 生成静态文件\n\n```bash\nhexo generate\n```\n\n更多信息：[Generating](https://hexo.io/zh-cn/docs/commands.html#generate)\n\n### 部署\n\n```bash\nhexo deploy\n```\n\n更多信息：[Deployment](https://hexo.io/zh-cn/docs/commands.html#deploy)\n\n## 日常部署的三个命令\n\n```bash\nhexo cl(clean的缩写)\nhexo g(generate的缩写)\nhexo d(deploy的缩写)\n```\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ntags: 随笔\ncategories:\n  - 随笔\nabbrlink: 4a17b156\ndate: 2017-10-26 21:14:40\n---\n\n欢迎来到 [Hexo](https://hexo.io/)！这是你的第一篇Blog。相关的详细信息请查看官方[文档](https://hexo.io/docs/)。\n如果您在使用 Hexo 时遇到任何问题，您可以在[故障排除](https://hexo.io/docs/troubleshooting.html)中找到答案，也可以在 [GitHub](https://github.com/hexojs/hexo/issues) 上询问我。\n\n<!-- more -->\n\n## 快速开始\n\n### 创建新的blog\n\n```bash\nhexo new \"我的博客文章\"\n```\n\n更多信息：[Writing](https://hexo.io/zh-cn/docs/commands.html#new)\n\n### 本地预览\n\n```bash\nhexo server\n```\n\n更多信息：[Server](https://hexo.io/zh-cn/docs/commands.html#server)\n\n### 清除静态文件\n\n```bash\nhexo clean\n```\n\n更多信息：[Cleaning](https://hexo.io/zh-cn/docs/commands.html#clean)\n\n### 生成静态文件\n\n```bash\nhexo generate\n```\n\n更多信息：[Generating](https://hexo.io/zh-cn/docs/commands.html#generate)\n\n### 部署\n\n```bash\nhexo deploy\n```\n\n更多信息：[Deployment](https://hexo.io/zh-cn/docs/commands.html#deploy)\n\n## 日常部署的三个命令\n\n```bash\nhexo cl(clean的缩写)\nhexo g(generate的缩写)\nhexo d(deploy的缩写)\n```\n","slug":"hello-world","published":1,"updated":"2020-08-12T01:57:58.410Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyc000b2an9em79dm70","content":"<p>欢迎来到 <a href=\"https://hexo.io/\">Hexo</a>！这是你的第一篇Blog。相关的详细信息请查看官方<a href=\"https://hexo.io/docs/\">文档</a>。<br>如果您在使用 Hexo 时遇到任何问题，您可以在<a href=\"https://hexo.io/docs/troubleshooting.html\">故障排除</a>中找到答案，也可以在 <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a> 上询问我。</p>\n<a id=\"more\"></a>\n<h2 id=\"快速开始\"><a href=\"#快速开始\" class=\"headerlink\" title=\"快速开始\"></a>快速开始</h2><h3 id=\"创建新的blog\"><a href=\"#创建新的blog\" class=\"headerlink\" title=\"创建新的blog\"></a>创建新的blog</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&quot;我的博客文章&quot;</span></span><br></pre></td></tr></table></figure>\n<p>更多信息：<a href=\"https://hexo.io/zh-cn/docs/commands.html#new\">Writing</a></p>\n<h3 id=\"本地预览\"><a href=\"#本地预览\" class=\"headerlink\" title=\"本地预览\"></a>本地预览</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<p>更多信息：<a href=\"https://hexo.io/zh-cn/docs/commands.html#server\">Server</a></p>\n<h3 id=\"清除静态文件\"><a href=\"#清除静态文件\" class=\"headerlink\" title=\"清除静态文件\"></a>清除静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure>\n<p>更多信息：<a href=\"https://hexo.io/zh-cn/docs/commands.html#clean\">Cleaning</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br></pre></td></tr></table></figure>\n<p>更多信息：<a href=\"https://hexo.io/zh-cn/docs/commands.html#generate\">Generating</a></p>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<p>更多信息：<a href=\"https://hexo.io/zh-cn/docs/commands.html#deploy\">Deployment</a></p>\n<h2 id=\"日常部署的三个命令\"><a href=\"#日常部署的三个命令\" class=\"headerlink\" title=\"日常部署的三个命令\"></a>日常部署的三个命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo cl(clean的缩写)</span><br><span class=\"line\">hexo g(generate的缩写)</span><br><span class=\"line\">hexo d(deploy的缩写)</span><br></pre></td></tr></table></figure>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p>欢迎来到 <a href=\"https://hexo.io/\">Hexo</a>！这是你的第一篇Blog。相关的详细信息请查看官方<a href=\"https://hexo.io/docs/\">文档</a>。<br>如果您在使用 Hexo 时遇到任何问题，您可以在<a href=\"https://hexo.io/docs/troubleshooting.html\">故障排除</a>中找到答案，也可以在 <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a> 上询问我。</p>","more":"<h2 id=\"快速开始\"><a href=\"#快速开始\" class=\"headerlink\" title=\"快速开始\"></a>快速开始</h2><h3 id=\"创建新的blog\"><a href=\"#创建新的blog\" class=\"headerlink\" title=\"创建新的blog\"></a>创建新的blog</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&quot;我的博客文章&quot;</span></span><br></pre></td></tr></table></figure>\n<p>更多信息：<a href=\"https://hexo.io/zh-cn/docs/commands.html#new\">Writing</a></p>\n<h3 id=\"本地预览\"><a href=\"#本地预览\" class=\"headerlink\" title=\"本地预览\"></a>本地预览</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<p>更多信息：<a href=\"https://hexo.io/zh-cn/docs/commands.html#server\">Server</a></p>\n<h3 id=\"清除静态文件\"><a href=\"#清除静态文件\" class=\"headerlink\" title=\"清除静态文件\"></a>清除静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure>\n<p>更多信息：<a href=\"https://hexo.io/zh-cn/docs/commands.html#clean\">Cleaning</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br></pre></td></tr></table></figure>\n<p>更多信息：<a href=\"https://hexo.io/zh-cn/docs/commands.html#generate\">Generating</a></p>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<p>更多信息：<a href=\"https://hexo.io/zh-cn/docs/commands.html#deploy\">Deployment</a></p>\n<h2 id=\"日常部署的三个命令\"><a href=\"#日常部署的三个命令\" class=\"headerlink\" title=\"日常部署的三个命令\"></a>日常部署的三个命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo cl(clean的缩写)</span><br><span class=\"line\">hexo g(generate的缩写)</span><br><span class=\"line\">hexo d(deploy的缩写)</span><br></pre></td></tr></table></figure>"},{"title":"hexo主题推荐","toc":true,"abbrlink":"c2350bb4","date":"2020-07-15T04:01:19.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/07/17/Uyk7wV.jpg)\n\n<!-- more -->\n\n## Indigo\n\n* [预览地址](https://www.imys.net/)\n* [GitHub 项目地址](https://github.com/yscoder/hexo-theme-indigo)\n* [安装教程](https://github.com/yscoder/hexo-theme-indigo/wiki)\n* 效果图：\n\n![Indigo](https://s1.ax1x.com/2020/07/17/UsR991.png)\n\n## Butterfly\n\n* [预览地址](https://jerryc.me/)\n* [GitHub 项目地址](https://github.com/jerryc127/hexo-theme-butterfly)\n* [安装教程](https://jerryc.me/posts/21cfbf15/)\n* 效果图：\n\n![Butterfly](https://s1.ax1x.com/2020/07/17/UsRMgP.png)\n\n## Pure\n\n* [预览地址](https://blog.cofess.com/)\n* [GitHub 项目地址](https://github.com/cofess/hexo-theme-pure)\n* [安装教程](https://blog.cofess.com/2017/11/01/hexo-blog-theme-pure-usage-description.html)\n* 效果图：\n\n![Pure](https://s1.ax1x.com/2020/07/17/UsR8Hg.png)\n\n## Melody\n\n* [预览地址](https://molunerfinn.com/)\n* [GitHub 项目地址](https://github.com/Molunerfinn/hexo-theme-melody)\n* [安装教程](https://github.com/Molunerfinn/hexo-theme-melody)\n* 效果图：\n\n![Melody](https://s1.ax1x.com/2020/07/17/UsRUCn.png)\n\n## Nexmoe\n\n* [预览地址](https://nexmoe.com/)\n* [GitHub 项目地址](https://github.com/nexmoe/hexo-theme-nexmoe)\n* [安装教程](https://nexmoe.com/hexo-theme-nexmoe.html)\n* 效果图：\n\n![Nexmoe](https://s1.ax1x.com/2020/07/17/UsRwvV.png)\n\n## Clover\n\n* [预览地址](https://esappear.github.io/clover/)\n* [GitHub 项目地址](https://github.com/esappear/hexo-theme-clover)\n* [安装教程](https://github.com/esappear/hexo-theme-clover)\n* 效果图：\n\n![Clover](https://s1.ax1x.com/2020/07/17/UsRDDU.png)\n\n## Diaspora\n\n* [预览地址](https://fech.in/)\n* [GitHub 项目地址](https://github.com/Fechin/hexo-theme-diaspora)\n* [安装教程](https://github.com/Fechin/hexo-theme-diaspora)\n* 效果图：\n\n![Diaspora1](hexo主题推荐/Diaspora1.jpg)\n![Diaspora2](https://s1.ax1x.com/2020/07/17/UsRc59.png)\n\n## Hacker\n\n* [预览地址](https://blog.daraw.cn/)\n* [GitHub 项目地址](https://github.com/CodeDaraW/Hacker)\n* [安装教程](https://github.com/CodeDaraW/Hacker)\n* 效果图：\n\n![Hacker](https://s1.ax1x.com/2020/07/17/UsWnZF.jpg)\n\n## Hiker\n\n* [预览地址](https://itimetraveler.github.io/hexo-theme-hiker/)\n* [GitHub 项目地址](https://github.com/iTimeTraveler/hexo-theme-hiker)\n* [安装教程](https://github.com/iTimeTraveler/hexo-theme-hiker/blob/master/README.cn.md)\n* 效果图：\n\n![Hiker](https://s1.ax1x.com/2020/07/17/UsR4KK.png)\n\n## black-blue\n\n* ~~预览地址~~\n* [GitHub 项目地址](https://github.com/maochunguang/black-blue)\n* [安装教程](https://github.com/maochunguang/black-blue)\n* 效果图：\n\n![black-blue](https://s1.ax1x.com/2020/07/17/UsW1R1.png)\n\n## Cube\n\n* ~~预览地址~~\n* [GitHub 项目地址](https://github.com/ZEROKISEKI/hexo-theme-cube)\n* ~~安装教程~~\n* 效果图：\n\n![Cube](https://s1.ax1x.com/2020/07/17/UsW3xx.png)\n\n## Varaint\n\n* ~~预览地址~~\n* [GitHub 项目地址](https://github.com/justpsvm/hexo-theme-varaint)\n* [安装教程](https://github.com/justpsvm/hexo-theme-varaint)\n* 效果图：\n\n![Varaint](https://s1.ax1x.com/2020/07/17/UsWNZD.png)\n\n## yilia\n\n* [预览地址](http://litten.me/)\n* [GitHub 项目地址](https://github.com/litten/hexo-theme-yilia)\n* [安装教程](https://github.com/litten/hexo-theme-yilia)\n* 效果图：\n\n![yilia](https://s1.ax1x.com/2020/07/17/UsW0JA.png)\n\n## 参考资料\n\n* [Hexo 好看的主题推荐](https://blog.csdn.net/zgd826237710/article/details/99671027)\n* [hexo yilia 主题](https://davidham3.github.io/blog/2018/07/13/hexo-yilia-%E4%B8%BB%E9%A2%98/)\n","source":"_posts/hexo主题推荐.md","raw":"---\ntitle: hexo主题推荐\ntags:\n  - 技术积累\n  - hexo\ncategories:\n  - 技术积累\n  - hexo\ntoc: true\nabbrlink: c2350bb4\ndate: 2020-07-15 12:01:19\n---\n\n![首屏图](https://s1.ax1x.com/2020/07/17/Uyk7wV.jpg)\n\n<!-- more -->\n\n## Indigo\n\n* [预览地址](https://www.imys.net/)\n* [GitHub 项目地址](https://github.com/yscoder/hexo-theme-indigo)\n* [安装教程](https://github.com/yscoder/hexo-theme-indigo/wiki)\n* 效果图：\n\n![Indigo](https://s1.ax1x.com/2020/07/17/UsR991.png)\n\n## Butterfly\n\n* [预览地址](https://jerryc.me/)\n* [GitHub 项目地址](https://github.com/jerryc127/hexo-theme-butterfly)\n* [安装教程](https://jerryc.me/posts/21cfbf15/)\n* 效果图：\n\n![Butterfly](https://s1.ax1x.com/2020/07/17/UsRMgP.png)\n\n## Pure\n\n* [预览地址](https://blog.cofess.com/)\n* [GitHub 项目地址](https://github.com/cofess/hexo-theme-pure)\n* [安装教程](https://blog.cofess.com/2017/11/01/hexo-blog-theme-pure-usage-description.html)\n* 效果图：\n\n![Pure](https://s1.ax1x.com/2020/07/17/UsR8Hg.png)\n\n## Melody\n\n* [预览地址](https://molunerfinn.com/)\n* [GitHub 项目地址](https://github.com/Molunerfinn/hexo-theme-melody)\n* [安装教程](https://github.com/Molunerfinn/hexo-theme-melody)\n* 效果图：\n\n![Melody](https://s1.ax1x.com/2020/07/17/UsRUCn.png)\n\n## Nexmoe\n\n* [预览地址](https://nexmoe.com/)\n* [GitHub 项目地址](https://github.com/nexmoe/hexo-theme-nexmoe)\n* [安装教程](https://nexmoe.com/hexo-theme-nexmoe.html)\n* 效果图：\n\n![Nexmoe](https://s1.ax1x.com/2020/07/17/UsRwvV.png)\n\n## Clover\n\n* [预览地址](https://esappear.github.io/clover/)\n* [GitHub 项目地址](https://github.com/esappear/hexo-theme-clover)\n* [安装教程](https://github.com/esappear/hexo-theme-clover)\n* 效果图：\n\n![Clover](https://s1.ax1x.com/2020/07/17/UsRDDU.png)\n\n## Diaspora\n\n* [预览地址](https://fech.in/)\n* [GitHub 项目地址](https://github.com/Fechin/hexo-theme-diaspora)\n* [安装教程](https://github.com/Fechin/hexo-theme-diaspora)\n* 效果图：\n\n![Diaspora1](hexo主题推荐/Diaspora1.jpg)\n![Diaspora2](https://s1.ax1x.com/2020/07/17/UsRc59.png)\n\n## Hacker\n\n* [预览地址](https://blog.daraw.cn/)\n* [GitHub 项目地址](https://github.com/CodeDaraW/Hacker)\n* [安装教程](https://github.com/CodeDaraW/Hacker)\n* 效果图：\n\n![Hacker](https://s1.ax1x.com/2020/07/17/UsWnZF.jpg)\n\n## Hiker\n\n* [预览地址](https://itimetraveler.github.io/hexo-theme-hiker/)\n* [GitHub 项目地址](https://github.com/iTimeTraveler/hexo-theme-hiker)\n* [安装教程](https://github.com/iTimeTraveler/hexo-theme-hiker/blob/master/README.cn.md)\n* 效果图：\n\n![Hiker](https://s1.ax1x.com/2020/07/17/UsR4KK.png)\n\n## black-blue\n\n* ~~预览地址~~\n* [GitHub 项目地址](https://github.com/maochunguang/black-blue)\n* [安装教程](https://github.com/maochunguang/black-blue)\n* 效果图：\n\n![black-blue](https://s1.ax1x.com/2020/07/17/UsW1R1.png)\n\n## Cube\n\n* ~~预览地址~~\n* [GitHub 项目地址](https://github.com/ZEROKISEKI/hexo-theme-cube)\n* ~~安装教程~~\n* 效果图：\n\n![Cube](https://s1.ax1x.com/2020/07/17/UsW3xx.png)\n\n## Varaint\n\n* ~~预览地址~~\n* [GitHub 项目地址](https://github.com/justpsvm/hexo-theme-varaint)\n* [安装教程](https://github.com/justpsvm/hexo-theme-varaint)\n* 效果图：\n\n![Varaint](https://s1.ax1x.com/2020/07/17/UsWNZD.png)\n\n## yilia\n\n* [预览地址](http://litten.me/)\n* [GitHub 项目地址](https://github.com/litten/hexo-theme-yilia)\n* [安装教程](https://github.com/litten/hexo-theme-yilia)\n* 效果图：\n\n![yilia](https://s1.ax1x.com/2020/07/17/UsW0JA.png)\n\n## 参考资料\n\n* [Hexo 好看的主题推荐](https://blog.csdn.net/zgd826237710/article/details/99671027)\n* [hexo yilia 主题](https://davidham3.github.io/blog/2018/07/13/hexo-yilia-%E4%B8%BB%E9%A2%98/)\n","slug":"hexo主题推荐","published":1,"updated":"2020-08-12T01:57:58.410Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyc000c2an9emg49hde","content":"<p><img src=\"https://s1.ax1x.com/2020/07/17/Uyk7wV.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<h2 id=\"Indigo\"><a href=\"#Indigo\" class=\"headerlink\" title=\"Indigo\"></a>Indigo</h2><ul>\n<li><a href=\"https://www.imys.net/\">预览地址</a></li>\n<li><a href=\"https://github.com/yscoder/hexo-theme-indigo\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/yscoder/hexo-theme-indigo/wiki\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsR991.png\" alt=\"Indigo\"></p>\n<h2 id=\"Butterfly\"><a href=\"#Butterfly\" class=\"headerlink\" title=\"Butterfly\"></a>Butterfly</h2><ul>\n<li><a href=\"https://jerryc.me/\">预览地址</a></li>\n<li><a href=\"https://github.com/jerryc127/hexo-theme-butterfly\">GitHub 项目地址</a></li>\n<li><a href=\"https://jerryc.me/posts/21cfbf15/\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsRMgP.png\" alt=\"Butterfly\"></p>\n<h2 id=\"Pure\"><a href=\"#Pure\" class=\"headerlink\" title=\"Pure\"></a>Pure</h2><ul>\n<li><a href=\"https://blog.cofess.com/\">预览地址</a></li>\n<li><a href=\"https://github.com/cofess/hexo-theme-pure\">GitHub 项目地址</a></li>\n<li><a href=\"https://blog.cofess.com/2017/11/01/hexo-blog-theme-pure-usage-description.html\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsR8Hg.png\" alt=\"Pure\"></p>\n<h2 id=\"Melody\"><a href=\"#Melody\" class=\"headerlink\" title=\"Melody\"></a>Melody</h2><ul>\n<li><a href=\"https://molunerfinn.com/\">预览地址</a></li>\n<li><a href=\"https://github.com/Molunerfinn/hexo-theme-melody\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/Molunerfinn/hexo-theme-melody\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsRUCn.png\" alt=\"Melody\"></p>\n<h2 id=\"Nexmoe\"><a href=\"#Nexmoe\" class=\"headerlink\" title=\"Nexmoe\"></a>Nexmoe</h2><ul>\n<li><a href=\"https://nexmoe.com/\">预览地址</a></li>\n<li><a href=\"https://github.com/nexmoe/hexo-theme-nexmoe\">GitHub 项目地址</a></li>\n<li><a href=\"https://nexmoe.com/hexo-theme-nexmoe.html\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsRwvV.png\" alt=\"Nexmoe\"></p>\n<h2 id=\"Clover\"><a href=\"#Clover\" class=\"headerlink\" title=\"Clover\"></a>Clover</h2><ul>\n<li><a href=\"https://esappear.github.io/clover/\">预览地址</a></li>\n<li><a href=\"https://github.com/esappear/hexo-theme-clover\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/esappear/hexo-theme-clover\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsRDDU.png\" alt=\"Clover\"></p>\n<h2 id=\"Diaspora\"><a href=\"#Diaspora\" class=\"headerlink\" title=\"Diaspora\"></a>Diaspora</h2><ul>\n<li><a href=\"https://fech.in/\">预览地址</a></li>\n<li><a href=\"https://github.com/Fechin/hexo-theme-diaspora\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/Fechin/hexo-theme-diaspora\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"hexo主题推荐/Diaspora1.jpg\" alt=\"Diaspora1\"><br><img src=\"https://s1.ax1x.com/2020/07/17/UsRc59.png\" alt=\"Diaspora2\"></p>\n<h2 id=\"Hacker\"><a href=\"#Hacker\" class=\"headerlink\" title=\"Hacker\"></a>Hacker</h2><ul>\n<li><a href=\"https://blog.daraw.cn/\">预览地址</a></li>\n<li><a href=\"https://github.com/CodeDaraW/Hacker\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/CodeDaraW/Hacker\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsWnZF.jpg\" alt=\"Hacker\"></p>\n<h2 id=\"Hiker\"><a href=\"#Hiker\" class=\"headerlink\" title=\"Hiker\"></a>Hiker</h2><ul>\n<li><a href=\"https://itimetraveler.github.io/hexo-theme-hiker/\">预览地址</a></li>\n<li><a href=\"https://github.com/iTimeTraveler/hexo-theme-hiker\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/iTimeTraveler/hexo-theme-hiker/blob/master/README.cn.md\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsR4KK.png\" alt=\"Hiker\"></p>\n<h2 id=\"black-blue\"><a href=\"#black-blue\" class=\"headerlink\" title=\"black-blue\"></a>black-blue</h2><ul>\n<li><del>预览地址</del></li>\n<li><a href=\"https://github.com/maochunguang/black-blue\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/maochunguang/black-blue\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsW1R1.png\" alt=\"black-blue\"></p>\n<h2 id=\"Cube\"><a href=\"#Cube\" class=\"headerlink\" title=\"Cube\"></a>Cube</h2><ul>\n<li><del>预览地址</del></li>\n<li><a href=\"https://github.com/ZEROKISEKI/hexo-theme-cube\">GitHub 项目地址</a></li>\n<li><del>安装教程</del></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsW3xx.png\" alt=\"Cube\"></p>\n<h2 id=\"Varaint\"><a href=\"#Varaint\" class=\"headerlink\" title=\"Varaint\"></a>Varaint</h2><ul>\n<li><del>预览地址</del></li>\n<li><a href=\"https://github.com/justpsvm/hexo-theme-varaint\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/justpsvm/hexo-theme-varaint\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsWNZD.png\" alt=\"Varaint\"></p>\n<h2 id=\"yilia\"><a href=\"#yilia\" class=\"headerlink\" title=\"yilia\"></a>yilia</h2><ul>\n<li><a href=\"http://litten.me/\">预览地址</a></li>\n<li><a href=\"https://github.com/litten/hexo-theme-yilia\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/litten/hexo-theme-yilia\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsW0JA.png\" alt=\"yilia\"></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://blog.csdn.net/zgd826237710/article/details/99671027\">Hexo 好看的主题推荐</a></li>\n<li><a href=\"https://davidham3.github.io/blog/2018/07/13/hexo-yilia-%E4%B8%BB%E9%A2%98/\">hexo yilia 主题</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/07/17/Uyk7wV.jpg\" alt=\"首屏图\"></p>","more":"<h2 id=\"Indigo\"><a href=\"#Indigo\" class=\"headerlink\" title=\"Indigo\"></a>Indigo</h2><ul>\n<li><a href=\"https://www.imys.net/\">预览地址</a></li>\n<li><a href=\"https://github.com/yscoder/hexo-theme-indigo\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/yscoder/hexo-theme-indigo/wiki\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsR991.png\" alt=\"Indigo\"></p>\n<h2 id=\"Butterfly\"><a href=\"#Butterfly\" class=\"headerlink\" title=\"Butterfly\"></a>Butterfly</h2><ul>\n<li><a href=\"https://jerryc.me/\">预览地址</a></li>\n<li><a href=\"https://github.com/jerryc127/hexo-theme-butterfly\">GitHub 项目地址</a></li>\n<li><a href=\"https://jerryc.me/posts/21cfbf15/\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsRMgP.png\" alt=\"Butterfly\"></p>\n<h2 id=\"Pure\"><a href=\"#Pure\" class=\"headerlink\" title=\"Pure\"></a>Pure</h2><ul>\n<li><a href=\"https://blog.cofess.com/\">预览地址</a></li>\n<li><a href=\"https://github.com/cofess/hexo-theme-pure\">GitHub 项目地址</a></li>\n<li><a href=\"https://blog.cofess.com/2017/11/01/hexo-blog-theme-pure-usage-description.html\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsR8Hg.png\" alt=\"Pure\"></p>\n<h2 id=\"Melody\"><a href=\"#Melody\" class=\"headerlink\" title=\"Melody\"></a>Melody</h2><ul>\n<li><a href=\"https://molunerfinn.com/\">预览地址</a></li>\n<li><a href=\"https://github.com/Molunerfinn/hexo-theme-melody\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/Molunerfinn/hexo-theme-melody\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsRUCn.png\" alt=\"Melody\"></p>\n<h2 id=\"Nexmoe\"><a href=\"#Nexmoe\" class=\"headerlink\" title=\"Nexmoe\"></a>Nexmoe</h2><ul>\n<li><a href=\"https://nexmoe.com/\">预览地址</a></li>\n<li><a href=\"https://github.com/nexmoe/hexo-theme-nexmoe\">GitHub 项目地址</a></li>\n<li><a href=\"https://nexmoe.com/hexo-theme-nexmoe.html\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsRwvV.png\" alt=\"Nexmoe\"></p>\n<h2 id=\"Clover\"><a href=\"#Clover\" class=\"headerlink\" title=\"Clover\"></a>Clover</h2><ul>\n<li><a href=\"https://esappear.github.io/clover/\">预览地址</a></li>\n<li><a href=\"https://github.com/esappear/hexo-theme-clover\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/esappear/hexo-theme-clover\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsRDDU.png\" alt=\"Clover\"></p>\n<h2 id=\"Diaspora\"><a href=\"#Diaspora\" class=\"headerlink\" title=\"Diaspora\"></a>Diaspora</h2><ul>\n<li><a href=\"https://fech.in/\">预览地址</a></li>\n<li><a href=\"https://github.com/Fechin/hexo-theme-diaspora\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/Fechin/hexo-theme-diaspora\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"hexo主题推荐/Diaspora1.jpg\" alt=\"Diaspora1\"><br><img src=\"https://s1.ax1x.com/2020/07/17/UsRc59.png\" alt=\"Diaspora2\"></p>\n<h2 id=\"Hacker\"><a href=\"#Hacker\" class=\"headerlink\" title=\"Hacker\"></a>Hacker</h2><ul>\n<li><a href=\"https://blog.daraw.cn/\">预览地址</a></li>\n<li><a href=\"https://github.com/CodeDaraW/Hacker\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/CodeDaraW/Hacker\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsWnZF.jpg\" alt=\"Hacker\"></p>\n<h2 id=\"Hiker\"><a href=\"#Hiker\" class=\"headerlink\" title=\"Hiker\"></a>Hiker</h2><ul>\n<li><a href=\"https://itimetraveler.github.io/hexo-theme-hiker/\">预览地址</a></li>\n<li><a href=\"https://github.com/iTimeTraveler/hexo-theme-hiker\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/iTimeTraveler/hexo-theme-hiker/blob/master/README.cn.md\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsR4KK.png\" alt=\"Hiker\"></p>\n<h2 id=\"black-blue\"><a href=\"#black-blue\" class=\"headerlink\" title=\"black-blue\"></a>black-blue</h2><ul>\n<li><del>预览地址</del></li>\n<li><a href=\"https://github.com/maochunguang/black-blue\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/maochunguang/black-blue\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsW1R1.png\" alt=\"black-blue\"></p>\n<h2 id=\"Cube\"><a href=\"#Cube\" class=\"headerlink\" title=\"Cube\"></a>Cube</h2><ul>\n<li><del>预览地址</del></li>\n<li><a href=\"https://github.com/ZEROKISEKI/hexo-theme-cube\">GitHub 项目地址</a></li>\n<li><del>安装教程</del></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsW3xx.png\" alt=\"Cube\"></p>\n<h2 id=\"Varaint\"><a href=\"#Varaint\" class=\"headerlink\" title=\"Varaint\"></a>Varaint</h2><ul>\n<li><del>预览地址</del></li>\n<li><a href=\"https://github.com/justpsvm/hexo-theme-varaint\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/justpsvm/hexo-theme-varaint\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsWNZD.png\" alt=\"Varaint\"></p>\n<h2 id=\"yilia\"><a href=\"#yilia\" class=\"headerlink\" title=\"yilia\"></a>yilia</h2><ul>\n<li><a href=\"http://litten.me/\">预览地址</a></li>\n<li><a href=\"https://github.com/litten/hexo-theme-yilia\">GitHub 项目地址</a></li>\n<li><a href=\"https://github.com/litten/hexo-theme-yilia\">安装教程</a></li>\n<li>效果图：</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UsW0JA.png\" alt=\"yilia\"></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://blog.csdn.net/zgd826237710/article/details/99671027\">Hexo 好看的主题推荐</a></li>\n<li><a href=\"https://davidham3.github.io/blog/2018/07/13/hexo-yilia-%E4%B8%BB%E9%A2%98/\">hexo yilia 主题</a></li>\n</ul>"},{"title":"hexo添加sitemap功能","toc":true,"abbrlink":"f023bd8e","date":"2020-08-14T07:27:14.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/08/14/dPmdMj.jpg)\n\n<!-- more -->\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#sitemap-功能添加)\n\n> 如果你的`博客`是使用`GitHub + Hexo`搭建的，那么你的`博客`内容是无法被`百度、谷歌`等搜索引擎搜索到的，\n虽然我们将自己的`博客`托管在`GitHub`，但是`GitHub`是不会讲站点信息提交给搜索引擎的，\n所以我们可以手动将自己的`博客`站点提交给`百度、谷歌`的搜索引擎。\n\n## 验证站点\n\n搜索引擎验证的方法有好几种，下面我选择`HTML标签验证`验证方法，\n其他的方法有兴趣可以自己去试一下，这里就不介绍了。\n\n* 首先打开[百度搜索引擎](https://ziyuan.baidu.com/site/siteadd)，在`输入您想要添加的网站`的输入框中输入自己的`博客`地址。\n* 选择自己网站的站点属性。\n![站点属性](https://s1.ax1x.com/2020/08/14/dP9v1P.png)\n* 选择`HTML标签验证`，然后将下方的`meta`代码复制下来，网页先不要关。\n![标签验证](https://s1.ax1x.com/2020/08/14/dPC90g.jpg)\n* 重新开一个页面，打开[谷歌搜索引擎验证](https://www.google.com/webmasters/tools/home?hl=zh-CN)，点击`网址前缀`，一样输入自己的`博客`地址。(`谷歌`需要翻墙，如果不想翻墙的话，可以跳过`谷歌`验证的步骤，只看`百度`的验证)\n![网址前缀](https://s1.ax1x.com/2020/08/14/dPP0qU.png)\n* 输完后选择`其他验证方法`下的`HTML`标记 ，然后将下方的`meta`代码复制下来，网页也不要关。\n![HTML验证](https://s1.ax1x.com/2020/08/14/dPPWM6.png)\n* 打开本地博客主题下的 `layout/_partial/head.ejs`文件，将刚才复制的两句`meta`代码粘贴进去。\n* 保存文件后，输入以下命令将`博客`重新部署到`GitHub`服务器。\n\n```shell\nhexo cl && hexo g && hexo d\n```\n\n* 然后分别点击刚才`百度、谷歌`验证页面的`验证`按钮进行站点验证。\n\n## 生成站点地图\n\n* 打开终端`cd`到本地博客目录下，输入以下命令安装`sitmap`插件。\n\n```shell\nnpm install hexo-generator-sitemap --save\nnpm install hexo-generator-baidu-sitemap --save\nhexo clean\nhexo g\n```\n\n* 打开本地博客目录下的`_config.yml`文件，修改`url`参数为你博客的`首页地址`，这样是为了保证能正确生成`sitemap.xml`文件中的地址。\n\n```text\nurl: http://www.gaotianyang.top # 修改成你博客的首页地址\nroot: /\npermalink: :year/:month/:day/:title/\npermalink_defaults:\n```\n\n* ~~添加以下配置(注意冒号后有空格)~~\n\n```text\n# 自动生成sitemap\nsitemap:\n  path: sitemap.xml\nbaidusitemap:\n  path: baidusitemap.xml\n```\n\n* 输入以下命令重新部署博客。\n\n```shell\nhexo cl && hexo g && hexo d\n```\n\n查看`public`文件夹，可以看到`sitemap.xml`、`baidusitemap.xml`文件。\n\n> 注：`sitemap`的初衷是给搜索引擎看的，为了提高搜索引擎对自己站点的收录效果，我们最好手动到`Google和百度`等搜索引擎提交`sitemap.xml`。\n\n## 将站点地图提交百度、谷歌\n\n### 百度\n\n打开[百度站点普通收录控制台](https://ziyuan.baidu.com/linksubmit/index)，选择`资源提交-sitemap`，填写`https://gaotianyang.top/baidusitemap.xml`。\n\n![百度普通收录](https://s1.ax1x.com/2020/08/14/dPZ9FU.png)\n\n> 提交完成后，就可以等待搜索引擎`自动抓取`或者配置`自动推送`或者`主动推送`站点链接了。\n如果你的`博客`是使用`GitHub + Hexo`搭建的，由于`Github`貌似禁止百度爬虫访问`博客`，\n导致`博客`可能无法被百度收录，所以可以主动推送站点链接。\n\n### 谷歌\n\n打开[谷歌站点控制台](https://search.google.com/search-console/sitemaps)进入站点地图，录入博客的站点地图文件，点击`提交`站点地图。\n\n![谷歌站点地图收录](https://s1.ax1x.com/2020/08/14/dPeFN8.png)\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#sitemap-功能添加)\n\n## 参考资料\n\n* [Hexo-Yilia 进阶笔记](https://tding.top/archives/9a232bbe.html)\n* [给Hexo搭建的博客增加百度和谷歌的搜索引擎验证](https://www.jianshu.com/p/1ae43e700c45)\n","source":"_posts/hexo添加sitemap功能.md","raw":"---\ntitle: hexo添加sitemap功能\ntags:\n  - 技术积累\n  - hexo\n  - yilia\ncategories:\n  - 技术积累\n  - hexo\n  - yilia\ntoc: true\nabbrlink: f023bd8e\ndate: 2020-08-14 15:27:14\n---\n\n![首屏图](https://s1.ax1x.com/2020/08/14/dPmdMj.jpg)\n\n<!-- more -->\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#sitemap-功能添加)\n\n> 如果你的`博客`是使用`GitHub + Hexo`搭建的，那么你的`博客`内容是无法被`百度、谷歌`等搜索引擎搜索到的，\n虽然我们将自己的`博客`托管在`GitHub`，但是`GitHub`是不会讲站点信息提交给搜索引擎的，\n所以我们可以手动将自己的`博客`站点提交给`百度、谷歌`的搜索引擎。\n\n## 验证站点\n\n搜索引擎验证的方法有好几种，下面我选择`HTML标签验证`验证方法，\n其他的方法有兴趣可以自己去试一下，这里就不介绍了。\n\n* 首先打开[百度搜索引擎](https://ziyuan.baidu.com/site/siteadd)，在`输入您想要添加的网站`的输入框中输入自己的`博客`地址。\n* 选择自己网站的站点属性。\n![站点属性](https://s1.ax1x.com/2020/08/14/dP9v1P.png)\n* 选择`HTML标签验证`，然后将下方的`meta`代码复制下来，网页先不要关。\n![标签验证](https://s1.ax1x.com/2020/08/14/dPC90g.jpg)\n* 重新开一个页面，打开[谷歌搜索引擎验证](https://www.google.com/webmasters/tools/home?hl=zh-CN)，点击`网址前缀`，一样输入自己的`博客`地址。(`谷歌`需要翻墙，如果不想翻墙的话，可以跳过`谷歌`验证的步骤，只看`百度`的验证)\n![网址前缀](https://s1.ax1x.com/2020/08/14/dPP0qU.png)\n* 输完后选择`其他验证方法`下的`HTML`标记 ，然后将下方的`meta`代码复制下来，网页也不要关。\n![HTML验证](https://s1.ax1x.com/2020/08/14/dPPWM6.png)\n* 打开本地博客主题下的 `layout/_partial/head.ejs`文件，将刚才复制的两句`meta`代码粘贴进去。\n* 保存文件后，输入以下命令将`博客`重新部署到`GitHub`服务器。\n\n```shell\nhexo cl && hexo g && hexo d\n```\n\n* 然后分别点击刚才`百度、谷歌`验证页面的`验证`按钮进行站点验证。\n\n## 生成站点地图\n\n* 打开终端`cd`到本地博客目录下，输入以下命令安装`sitmap`插件。\n\n```shell\nnpm install hexo-generator-sitemap --save\nnpm install hexo-generator-baidu-sitemap --save\nhexo clean\nhexo g\n```\n\n* 打开本地博客目录下的`_config.yml`文件，修改`url`参数为你博客的`首页地址`，这样是为了保证能正确生成`sitemap.xml`文件中的地址。\n\n```text\nurl: http://www.gaotianyang.top # 修改成你博客的首页地址\nroot: /\npermalink: :year/:month/:day/:title/\npermalink_defaults:\n```\n\n* ~~添加以下配置(注意冒号后有空格)~~\n\n```text\n# 自动生成sitemap\nsitemap:\n  path: sitemap.xml\nbaidusitemap:\n  path: baidusitemap.xml\n```\n\n* 输入以下命令重新部署博客。\n\n```shell\nhexo cl && hexo g && hexo d\n```\n\n查看`public`文件夹，可以看到`sitemap.xml`、`baidusitemap.xml`文件。\n\n> 注：`sitemap`的初衷是给搜索引擎看的，为了提高搜索引擎对自己站点的收录效果，我们最好手动到`Google和百度`等搜索引擎提交`sitemap.xml`。\n\n## 将站点地图提交百度、谷歌\n\n### 百度\n\n打开[百度站点普通收录控制台](https://ziyuan.baidu.com/linksubmit/index)，选择`资源提交-sitemap`，填写`https://gaotianyang.top/baidusitemap.xml`。\n\n![百度普通收录](https://s1.ax1x.com/2020/08/14/dPZ9FU.png)\n\n> 提交完成后，就可以等待搜索引擎`自动抓取`或者配置`自动推送`或者`主动推送`站点链接了。\n如果你的`博客`是使用`GitHub + Hexo`搭建的，由于`Github`貌似禁止百度爬虫访问`博客`，\n导致`博客`可能无法被百度收录，所以可以主动推送站点链接。\n\n### 谷歌\n\n打开[谷歌站点控制台](https://search.google.com/search-console/sitemaps)进入站点地图，录入博客的站点地图文件，点击`提交`站点地图。\n\n![谷歌站点地图收录](https://s1.ax1x.com/2020/08/14/dPeFN8.png)\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#sitemap-功能添加)\n\n## 参考资料\n\n* [Hexo-Yilia 进阶笔记](https://tding.top/archives/9a232bbe.html)\n* [给Hexo搭建的博客增加百度和谷歌的搜索引擎验证](https://www.jianshu.com/p/1ae43e700c45)\n","slug":"hexo添加sitemap功能","published":1,"updated":"2020-12-30T01:08:23.104Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyd000d2an9fy8wfkya","content":"<p><img src=\"https://s1.ax1x.com/2020/08/14/dPmdMj.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<p><a href=\"/archives/20200717e10c0cde/#sitemap-功能添加\">返回yilia主题进阶设置</a></p>\n<blockquote>\n<p>如果你的<code>博客</code>是使用<code>GitHub + Hexo</code>搭建的，那么你的<code>博客</code>内容是无法被<code>百度、谷歌</code>等搜索引擎搜索到的，<br>虽然我们将自己的<code>博客</code>托管在<code>GitHub</code>，但是<code>GitHub</code>是不会讲站点信息提交给搜索引擎的，<br>所以我们可以手动将自己的<code>博客</code>站点提交给<code>百度、谷歌</code>的搜索引擎。</p>\n</blockquote>\n<h2 id=\"验证站点\"><a href=\"#验证站点\" class=\"headerlink\" title=\"验证站点\"></a>验证站点</h2><p>搜索引擎验证的方法有好几种，下面我选择<code>HTML标签验证</code>验证方法，<br>其他的方法有兴趣可以自己去试一下，这里就不介绍了。</p>\n<ul>\n<li>首先打开<a href=\"https://ziyuan.baidu.com/site/siteadd\">百度搜索引擎</a>，在<code>输入您想要添加的网站</code>的输入框中输入自己的<code>博客</code>地址。</li>\n<li>选择自己网站的站点属性。<br><img src=\"https://s1.ax1x.com/2020/08/14/dP9v1P.png\" alt=\"站点属性\"></li>\n<li>选择<code>HTML标签验证</code>，然后将下方的<code>meta</code>代码复制下来，网页先不要关。<br><img src=\"https://s1.ax1x.com/2020/08/14/dPC90g.jpg\" alt=\"标签验证\"></li>\n<li>重新开一个页面，打开<a href=\"https://www.google.com/webmasters/tools/home?hl=zh-CN\">谷歌搜索引擎验证</a>，点击<code>网址前缀</code>，一样输入自己的<code>博客</code>地址。(<code>谷歌</code>需要翻墙，如果不想翻墙的话，可以跳过<code>谷歌</code>验证的步骤，只看<code>百度</code>的验证)<br><img src=\"https://s1.ax1x.com/2020/08/14/dPP0qU.png\" alt=\"网址前缀\"></li>\n<li>输完后选择<code>其他验证方法</code>下的<code>HTML</code>标记 ，然后将下方的<code>meta</code>代码复制下来，网页也不要关。<br><img src=\"https://s1.ax1x.com/2020/08/14/dPPWM6.png\" alt=\"HTML验证\"></li>\n<li>打开本地博客主题下的 <code>layout/_partial/head.ejs</code>文件，将刚才复制的两句<code>meta</code>代码粘贴进去。</li>\n<li>保存文件后，输入以下命令将<code>博客</code>重新部署到<code>GitHub</code>服务器。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<ul>\n<li>然后分别点击刚才<code>百度、谷歌</code>验证页面的<code>验证</code>按钮进行站点验证。</li>\n</ul>\n<h2 id=\"生成站点地图\"><a href=\"#生成站点地图\" class=\"headerlink\" title=\"生成站点地图\"></a>生成站点地图</h2><ul>\n<li>打开终端<code>cd</code>到本地博客目录下，输入以下命令安装<code>sitmap</code>插件。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n<ul>\n<li>打开本地博客目录下的<code>_config.yml</code>文件，修改<code>url</code>参数为你博客的<code>首页地址</code>，这样是为了保证能正确生成<code>sitemap.xml</code>文件中的地址。</li>\n</ul>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: http://www.gaotianyang.top # 修改成你博客的首页地址</span><br><span class=\"line\">root: /</span><br><span class=\"line\">permalink: :year/:month/:day/:title/</span><br><span class=\"line\">permalink_defaults:</span><br></pre></td></tr></table></figure>\n<ul>\n<li><del>添加以下配置(注意冒号后有空格)</del></li>\n</ul>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 自动生成sitemap</span><br><span class=\"line\">sitemap:</span><br><span class=\"line\">  path: sitemap.xml</span><br><span class=\"line\">baidusitemap:</span><br><span class=\"line\">  path: baidusitemap.xml</span><br></pre></td></tr></table></figure>\n<ul>\n<li>输入以下命令重新部署博客。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>查看<code>public</code>文件夹，可以看到<code>sitemap.xml</code>、<code>baidusitemap.xml</code>文件。</p>\n<blockquote>\n<p>注：<code>sitemap</code>的初衷是给搜索引擎看的，为了提高搜索引擎对自己站点的收录效果，我们最好手动到<code>Google和百度</code>等搜索引擎提交<code>sitemap.xml</code>。</p>\n</blockquote>\n<h2 id=\"将站点地图提交百度、谷歌\"><a href=\"#将站点地图提交百度、谷歌\" class=\"headerlink\" title=\"将站点地图提交百度、谷歌\"></a>将站点地图提交百度、谷歌</h2><h3 id=\"百度\"><a href=\"#百度\" class=\"headerlink\" title=\"百度\"></a>百度</h3><p>打开<a href=\"https://ziyuan.baidu.com/linksubmit/index\">百度站点普通收录控制台</a>，选择<code>资源提交-sitemap</code>，填写<code>https://gaotianyang.top/baidusitemap.xml</code>。</p>\n<p><img src=\"https://s1.ax1x.com/2020/08/14/dPZ9FU.png\" alt=\"百度普通收录\"></p>\n<blockquote>\n<p>提交完成后，就可以等待搜索引擎<code>自动抓取</code>或者配置<code>自动推送</code>或者<code>主动推送</code>站点链接了。<br>如果你的<code>博客</code>是使用<code>GitHub + Hexo</code>搭建的，由于<code>Github</code>貌似禁止百度爬虫访问<code>博客</code>，<br>导致<code>博客</code>可能无法被百度收录，所以可以主动推送站点链接。</p>\n</blockquote>\n<h3 id=\"谷歌\"><a href=\"#谷歌\" class=\"headerlink\" title=\"谷歌\"></a>谷歌</h3><p>打开<a href=\"https://search.google.com/search-console/sitemaps\">谷歌站点控制台</a>进入站点地图，录入博客的站点地图文件，点击<code>提交</code>站点地图。</p>\n<p><img src=\"https://s1.ax1x.com/2020/08/14/dPeFN8.png\" alt=\"谷歌站点地图收录\"></p>\n<p><a href=\"/archives/20200717e10c0cde/#sitemap-功能添加\">返回yilia主题进阶设置</a></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://tding.top/archives/9a232bbe.html\">Hexo-Yilia 进阶笔记</a></li>\n<li><a href=\"https://www.jianshu.com/p/1ae43e700c45\">给Hexo搭建的博客增加百度和谷歌的搜索引擎验证</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/08/14/dPmdMj.jpg\" alt=\"首屏图\"></p>","more":"<p><a href=\"/archives/20200717e10c0cde/#sitemap-功能添加\">返回yilia主题进阶设置</a></p>\n<blockquote>\n<p>如果你的<code>博客</code>是使用<code>GitHub + Hexo</code>搭建的，那么你的<code>博客</code>内容是无法被<code>百度、谷歌</code>等搜索引擎搜索到的，<br>虽然我们将自己的<code>博客</code>托管在<code>GitHub</code>，但是<code>GitHub</code>是不会讲站点信息提交给搜索引擎的，<br>所以我们可以手动将自己的<code>博客</code>站点提交给<code>百度、谷歌</code>的搜索引擎。</p>\n</blockquote>\n<h2 id=\"验证站点\"><a href=\"#验证站点\" class=\"headerlink\" title=\"验证站点\"></a>验证站点</h2><p>搜索引擎验证的方法有好几种，下面我选择<code>HTML标签验证</code>验证方法，<br>其他的方法有兴趣可以自己去试一下，这里就不介绍了。</p>\n<ul>\n<li>首先打开<a href=\"https://ziyuan.baidu.com/site/siteadd\">百度搜索引擎</a>，在<code>输入您想要添加的网站</code>的输入框中输入自己的<code>博客</code>地址。</li>\n<li>选择自己网站的站点属性。<br><img src=\"https://s1.ax1x.com/2020/08/14/dP9v1P.png\" alt=\"站点属性\"></li>\n<li>选择<code>HTML标签验证</code>，然后将下方的<code>meta</code>代码复制下来，网页先不要关。<br><img src=\"https://s1.ax1x.com/2020/08/14/dPC90g.jpg\" alt=\"标签验证\"></li>\n<li>重新开一个页面，打开<a href=\"https://www.google.com/webmasters/tools/home?hl=zh-CN\">谷歌搜索引擎验证</a>，点击<code>网址前缀</code>，一样输入自己的<code>博客</code>地址。(<code>谷歌</code>需要翻墙，如果不想翻墙的话，可以跳过<code>谷歌</code>验证的步骤，只看<code>百度</code>的验证)<br><img src=\"https://s1.ax1x.com/2020/08/14/dPP0qU.png\" alt=\"网址前缀\"></li>\n<li>输完后选择<code>其他验证方法</code>下的<code>HTML</code>标记 ，然后将下方的<code>meta</code>代码复制下来，网页也不要关。<br><img src=\"https://s1.ax1x.com/2020/08/14/dPPWM6.png\" alt=\"HTML验证\"></li>\n<li>打开本地博客主题下的 <code>layout/_partial/head.ejs</code>文件，将刚才复制的两句<code>meta</code>代码粘贴进去。</li>\n<li>保存文件后，输入以下命令将<code>博客</code>重新部署到<code>GitHub</code>服务器。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<ul>\n<li>然后分别点击刚才<code>百度、谷歌</code>验证页面的<code>验证</code>按钮进行站点验证。</li>\n</ul>\n<h2 id=\"生成站点地图\"><a href=\"#生成站点地图\" class=\"headerlink\" title=\"生成站点地图\"></a>生成站点地图</h2><ul>\n<li>打开终端<code>cd</code>到本地博客目录下，输入以下命令安装<code>sitmap</code>插件。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n<ul>\n<li>打开本地博客目录下的<code>_config.yml</code>文件，修改<code>url</code>参数为你博客的<code>首页地址</code>，这样是为了保证能正确生成<code>sitemap.xml</code>文件中的地址。</li>\n</ul>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: http://www.gaotianyang.top # 修改成你博客的首页地址</span><br><span class=\"line\">root: /</span><br><span class=\"line\">permalink: :year/:month/:day/:title/</span><br><span class=\"line\">permalink_defaults:</span><br></pre></td></tr></table></figure>\n<ul>\n<li><del>添加以下配置(注意冒号后有空格)</del></li>\n</ul>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 自动生成sitemap</span><br><span class=\"line\">sitemap:</span><br><span class=\"line\">  path: sitemap.xml</span><br><span class=\"line\">baidusitemap:</span><br><span class=\"line\">  path: baidusitemap.xml</span><br></pre></td></tr></table></figure>\n<ul>\n<li>输入以下命令重新部署博客。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>查看<code>public</code>文件夹，可以看到<code>sitemap.xml</code>、<code>baidusitemap.xml</code>文件。</p>\n<blockquote>\n<p>注：<code>sitemap</code>的初衷是给搜索引擎看的，为了提高搜索引擎对自己站点的收录效果，我们最好手动到<code>Google和百度</code>等搜索引擎提交<code>sitemap.xml</code>。</p>\n</blockquote>\n<h2 id=\"将站点地图提交百度、谷歌\"><a href=\"#将站点地图提交百度、谷歌\" class=\"headerlink\" title=\"将站点地图提交百度、谷歌\"></a>将站点地图提交百度、谷歌</h2><h3 id=\"百度\"><a href=\"#百度\" class=\"headerlink\" title=\"百度\"></a>百度</h3><p>打开<a href=\"https://ziyuan.baidu.com/linksubmit/index\">百度站点普通收录控制台</a>，选择<code>资源提交-sitemap</code>，填写<code>https://gaotianyang.top/baidusitemap.xml</code>。</p>\n<p><img src=\"https://s1.ax1x.com/2020/08/14/dPZ9FU.png\" alt=\"百度普通收录\"></p>\n<blockquote>\n<p>提交完成后，就可以等待搜索引擎<code>自动抓取</code>或者配置<code>自动推送</code>或者<code>主动推送</code>站点链接了。<br>如果你的<code>博客</code>是使用<code>GitHub + Hexo</code>搭建的，由于<code>Github</code>貌似禁止百度爬虫访问<code>博客</code>，<br>导致<code>博客</code>可能无法被百度收录，所以可以主动推送站点链接。</p>\n</blockquote>\n<h3 id=\"谷歌\"><a href=\"#谷歌\" class=\"headerlink\" title=\"谷歌\"></a>谷歌</h3><p>打开<a href=\"https://search.google.com/search-console/sitemaps\">谷歌站点控制台</a>进入站点地图，录入博客的站点地图文件，点击<code>提交</code>站点地图。</p>\n<p><img src=\"https://s1.ax1x.com/2020/08/14/dPeFN8.png\" alt=\"谷歌站点地图收录\"></p>\n<p><a href=\"/archives/20200717e10c0cde/#sitemap-功能添加\">返回yilia主题进阶设置</a></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://tding.top/archives/9a232bbe.html\">Hexo-Yilia 进阶笔记</a></li>\n<li><a href=\"https://www.jianshu.com/p/1ae43e700c45\">给Hexo搭建的博客增加百度和谷歌的搜索引擎验证</a></li>\n</ul>"},{"title":"icestark的使用","abbrlink":"b721b7cb","date":"2021-01-05T03:16:53.000Z","toc":true,"_content":"\n![首屏图](https://s3.ax1x.com/2021/01/12/sG4nFf.jpg)\n\n<!-- more -->\n\n## 关于icestark\n\n### 介绍\n\n[icestark](https://github.com/ice-lab/icestark) 是一个面向大型系统的微前端解决方案，适用于以下业务场景：\n\n* 后台比较分散，体验差别大，因为要频繁跳转导致操作效率低，希望能统一收口的一个系统内\n* 单页面应用非常庞大，多人协作成本高，开发/构建时间长，依赖升级回归成本高\n* 系统有二方/三方接入的需求\n\nicestark 在保证一个系统的操作体验基础上，实现各个子应用的独立开发和发版，主应用通过 icestark 管理微应用的注册和渲染，将整个系统彻底解耦。\n\n### 特性\n\n* 主应用和微应用皆支持 React/Vue/Angular... 等不同框架\n* 主应用只需依赖 npm 包 `@ice/stark`，不耦合任何工程体系\n* 微应用独立开发、不耦合任何框架以及工程体系，已有应用迁移成本极低\n* 整个系统用户体验好，跟 SPA 应用基本一致\n* 微应用只需发布前端资源 bundle 即可，主应用通过 bundle 渲染微应用\n\n### 架构设计\n\n![icestark架构设计](https://s3.ax1x.com/2021/01/06/sEIxV1.png)\n\n* 按照 UI 结构进行主应用、微应用的拆分\n* 主应用：负责微应用的注册与渲染，公共内容展示（Common Header、Common Sidebar、Common Footer等）\n* 微应用：负责自身业务相关的内容展示\n\n### 使用案例\n\n#### 阿里创作者平台\n\n![阿里创作者平台](https://s3.ax1x.com/2021/01/06/sE7ngS.png)\n\n#### 阿里健康-熙牛医疗云医院信息系统\n\n![阿里健康](https://s3.ax1x.com/2021/01/06/sE7H8f.png)\n\n#### 淘系小二工作台\n\n![淘系小二工作台](https://s3.ax1x.com/2021/01/06/sEH9P0.png)\n\n## 快速上手\n\n[快速上手](https://ice.work/docs/icestark/start)\n\n[icestark最佳实践](/archives/202101115b56e29a/)\n\n## 版本升级\n\n### 1.x -> 2.x\n\n> icestark@2.0.0 于 2020 年 12 月发布，Changelog\n\n* 支持以 API 的方式初始化主应用，主应用不再限制 React/Vue/Angular 等不同框架\n* 支持加载 UMD 格式的子应用产物\n\n注意：`@ice/stark` 2.0.0 完全兼容 1.0.0 版本的 API，因此主应用可以非常低成本的升级 2.0.0 版本。\n\n#### 主应用升级\n\n存量 1.x 的应用将 `@ice/stark` 升级到 2.x 最新版本即可，AppRouter 注册方式同 1.x 完全兼容。\n\n#### 不同版本混用\n\n微应用本身不依赖 `@ice/stark` 的版本变化，原先通过 `registerAppEnter` 和 `registerAppLeave` 方式注册生命周期的方式，均可以在 1.x 和 2.x 版本下运行。\n\n增量的微应用推荐通过 UMD 的规范导出，如需渲染 UMD 格式的微应用，需要将主应用中 `@ice/stark` 升级到 2.0.0 (或者 1.6.0)，同时在应用列表中显示声明 umd：\n\n`AppRoute` API 渲染 UMD 规范的子应用：\n\n```js\n<AppRoute\n+  umd={true}\n  path=\"/seller\"\n  title=\"标题\"\n  url={[]}\n/>\n```\n\n`regsiterMicroApps` API 渲染 UMD 规范的子应用：\n\n```js\nregsiterMicroApps([\n  {\n    name: 'app1',\n    activePath: ['/seller'],\n+    umd: true\n    title: '通用页面',\n    url: [],\n  }\n]);\n```\n\n### 0.x -> 1.x\n\n> icestark@1.0.0 于 2019 年 10 月发布，Changelog\n\n* 将微应用相关 API 拆成独立的包 `@ice/stark-app`，保证兼容不同框架的微应用\n* 支持 `onAppEnter/onAppLeave` 相关 API\n\n#### 迁移步骤\n\n##### 主应用\n\n将 `@ice/stark` 从 0.x 升级到 1.x 即可，API 跟 0.x 兼容。\n\n##### 微应用\n\n* 移除 `@ice/stark` 依赖：`npm rm @ice/stark --save`\n* 安装 `@ice/stark-app` 依赖：`npm i @ice/stark-app --save`\n* 批量替换代码中 `@ice/stark` 为 `@ice/stark-app`\n\n## 核心概念与原理\n\n### 原理\n\nicestark 内部维护了所有微应用的配置信息，包括路由规则、bundle 地址等，同时劫持了 `window.history` 相关的几个跳转事件，\n当捕获到页面跳转事件时，icestark 会根据跳转的路由获取对应的微应用信息，然后跟之前的微应用信息进行对比，如果是同一个微应用，\n则什么都不做，如果是不同的微应用，则将前一个微应用的 bundle 卸载，同时加载新的微应用 bundle 资源，加载完成后微应用 bundle 会执行自身的渲染逻辑。\n\n### 主应用含义\n\n又称框架应用或基座应用，一个系统只有一个主应用，主应用负责系统整体的 Layout 以及微应用的管理与注册。\n\n### 微应用含义\n\n又称子应用，微应用通常是一个单页面应用（SPA），可能包含一个或多个路由页面，一般情况下不存在多个微应用同时运行的场景。\n\n### 微模块含义\n\n微应用的更小粒度，通常是一个模块或页面，跟页面路由无关，可以随处挂载，也会出现多个微模块同时渲染运行。\n\n## 使用原则\n\n[使用原则](https://ice.work/docs/icestark/guide/principle)\n\n## 主应用开发与接入（React）\n\n对于 React 主应用，推荐使用 AppRouter/AppRoute 这种 React Component 的方式使用。\n\n### 注册微应用\n\n```js\n// src/App.jsx\nimport React from 'react';\nimport { AppRouter, AppRoute } from '@ice/stark';\nimport NotFound from '@/components/NotFound';\nimport PageLoading from '@/components/PageLoading';\nimport BasicLayout from '@/layouts/BasicLayout';\n\nexport default class App extends React.Component {\n  state = {\n    pathname: '',\n  }\n\n  handleRouteChange = (pathname) => {\n    console.log('route change', pathname);\n    // 如有需求，可根据 pathname 切换 layout 的形态\n    this.setState({\n      pathname,\n    });\n  }\n\n  render() {\n    const { pathname } = this.state;\n\n    return (\n      <BasicLayout pathname={pathname}>\n        <AppRouter\n          NotFoundComponent={NotFound}\n          LoadingComponent={PageLoading}\n          onRouteChange={this.handleRouteChange}\n        >\n          <AppRoute\n            \n            title=\"商家平台\"\n            url={[\n              '//unpkg.com/icestark-child-seller/build/js/index.js',\n              '//unpkg.com/icestark-child-seller/build/css/index.css',\n            ]}\n          />\n          <AppRoute\n            path=\"/user\"\n            //...\n          />\n          <AppRoute\n            path=\"*\"\n            render={() => {\n              return <></>;\n            }}\n          />\n        </AppRouter>\n      </BasicLayout>\n    );\n  }\n}\n```\n\n### 微应用配置\n\n#### 基准路由 path\n\n类型为 `string|string[]`，大部分情况下都是 string，通过 path 约束每个微应用的路由定义，建立路由和微应用的映射关系。\n\n#### 微应用入口 url/entry/entryContent\n\n通过 AppRoute 注册微应用，微应用入口支持 url/entry/entryContent 方式，此部分与 API 注册使用一致，\n可参考文档[微应用入口](https://ice.work/docs/icestark/guide/framework-api#%E5%BE%AE%E5%BA%94%E7%94%A8%E5%85%A5%E5%8F%A3)使用。\n\n在此基础上，AppRoute 还支持了更为灵活的 component 和 render 方式配置微应用入口：\n\n```JS\n<AppRoute\n  path=\"/foo\"\n  render={() => {\n    return <iframe src=\"\" />;\n  }}\n  // 或者直接传入 component\n  // component={CustomComponent}\n/>\n```\n\n通过这种方式，可以通过 AppRoute 渲染一个 iframe 或者任意的 React 组件。\n\n### 微应用注册通过数据驱动\n\n在很多场景下，我们的微应用可能通过一些配置平台注册，这时候可以将所有微应用的信息通过全局变量输出到 html 中，然后前端通过该数据注册微应用：\n\n```js\n// src/App.jsx\nimport React from 'react';\nimport { AppRouter, AppRoute } from '@ice/stark';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <AppRouter>\n        {\n          (window.appConfig || []).map((item) => {\n            return (\n              <AppRoute\n                key={idx}\n                path={item.path}\n                title={item.title}\n                url={item.url}\n              />\n            );\n          })\n        }\n      </AppRouter>\n    );\n  }\n}\n```\n\n### 应用级别权限校验\n\nicestark 支持对 `AppRoute` 再进行二次封装，统一处理容器定制/权限校验等场景：\n\n```js\n// src/components/AuthAppRoute.js\nimport React, { useState, useEffect } from 'react';\nimport { AppRoute } from '@ice/stark';\n\nexport default function AuthAppRoute(props) {\n  const [loading, setLoading] = useState(true);\n  const [hasAuth, setHasAuth] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setHasAuth(true);\n      setLoading(false);\n    }, 1000);\n  }, []);\n\n  if (loading) {\n    return <div>wait for a moment</div>;\n  }\n\n  if (!hasAuth) {\n    return <div>No access!</div>;\n  }\n\n  return (\n    <div>\n      //  注意要将 ...others 透传给 AppRoute\n      <AppRoute {...props} />\n    </div>\n  );\n}\n```\n\n封装完成后即可在 AppRouter 下使用：\n\n```js\n// src/App.jsx\nimport React from 'react';\nimport { AppRouter, AppRoute } from '@ice/stark';\nimport NotFound from '@/components/NotFound';\nimport PageLoading from '@/components/PageLoading';\nimport BasicLayout from '@/layouts/BasicLayout';\nimport AuthAppRoute from '@/components/AuthAppRoute';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <BasicLayout>\n        <AppRouter\n          NotFoundComponent={NotFound}\n          LoadingComponent={PageLoading}\n        >\n          {/* 注意：path/url/entry 等配置信息配置在组件外层，AppRouter 的直接子元素上 */}\n          <AuthAppRoute\n            path={['/', '/message', '/about']}\n            exact\n            title=\"主页\"\n            url={[\n              '//unpkg.com/icestark-child-common/build/js/index.js',\n              '//unpkg.com/icestark-child-common/build/css/index.css',\n            ]}\n          />\n        </AppRouter>\n      </BasicLayout>\n    );\n  }\n}\n```\n\n### 不同页面 Layout 不同\n\n如上示例，通过 `onRouteChange` 可以捕获到所有的路由变化，此时可以根据不同路由对 Layout 做一些状态的变化，实现不同页面不同布局的能力。\n\n## 主应用开发与接入（非 React）\n\n[主应用开发与接入（非 React）](https://ice.work/docs/icestark/guide/framework-api)\n\n## 微应用开发与接入\n\n[微应用开发与接入](https://ice.work/docs/icestark/guide/child-app)\n\n## 应用间通信\n\n[应用间通信](https://ice.work/docs/icestark/guide/interaction)\n\n## 样式和脚本隔离\n\n[样式和脚本隔离](https://ice.work/docs/icestark/guide/sandbox)\n\n## 常见问题\n\n[常见问题](https://ice.work/docs/icestark/guide/faq)\n\n## API\n\n### @ice/stark\n\nVue版API[详见](https://ice.work/docs/icestark/reference/api)\n\n### @ice/stark-app\n\n#### isInIcestark\n\n判断当前运行环境，是否运行在 icestark 环境中，返回值类型：boolean\n\n* 类型：`function`\n* 示例代码详见 `registerAppLeave`\n\n#### getBasename\n\n配置微应用 `React Router` 中的 `basename` 参数的方法，根据 `AppRoute` 中的 `basename` 或者 `path` 配置生成最终结果\n\n* 类型：`function`\n* 默认值：`() => basename || (Array.isArray(path) ? path[0] : path)) || \"/\"`\n\n#### getMountNode\n\n根据微应用运行环境，返回微应用渲染节点\n\n* 类型：`function`\n* 默认值：`<div id=\"ice-container\"></div>`\n* 使用规则：方法支持传参，传参代表默认渲染的 DOM 节点，默认节点只在微应用单独启动时生效。支持 `string | HTMLElement | function`， `string` 表示默认 DOM 节点的 `id`，`function` 支持函数返回值作为默认 DOM 节点\n\n#### renderNotFound\n\n微应用触发渲染全局 404 的方法\n\n* 类型：`function`\n\n#### appHistory\n\n提供手动切换不同应用的方法。\n\n##### appHistory.push\n\n* 类型：`function`\n* 代码示例：\n\n```js\nimport React from 'react';\nimport { appHistory } from '@ice/stark-app';\n\nexport default class SelfLink extends React.Component {\n  render() {\n    return (\n      <span\n        onClick={() => {\n          appHistory.push('/home');\n        }}\n      >\n        selfLink\n      </span>\n    );\n  }\n}\n```\n\n##### appHistory.replace\n\n* 类型：`function`\n* 代码示例参考 `appHistory.push`\n\n#### registerAppEnter\n\n提供快速注册当前应用加载前的回调事件\n\n* 类型：`function`\n* 示例代码详见 `registerAppLeave`\n\n#### registerAppLeave\n\n提供快速注册当前应用卸载前的回调事件\n\n* 类型：`function`\n* 代码示例：\n\n```js\n// src/index.js\nimport ReactDOM from 'react-dom';\nimport { isInIcestark, getMountNode, registerAppEnter, registerAppLeave } from '@ice/stark-app';\nimport router from './router';\n\nif (isInIcestark()) {\n  const mountNode = getMountNode();\n  registerAppEnter(() => {\n    ReactDOM.render(router(), getMountNode());\n  });\n  // make sure the unmount event is triggered\n  registerAppLeave(() => {\n    ReactDOM.unmountComponentAtNode(getMountNode());\n  });\n} else {\n  ReactDOM.render(router(), document.getElementById('ice-container'));\n}\n```\n\n## 参考资料\n\n* [关于 icestark](https://ice.work/docs/icestark/about)\n","source":"_posts/icestark的使用.md","raw":"---\ntitle: icestark的使用\nabbrlink: b721b7cb\ndate: 2021-01-05 11:16:53\ntags:\n  - 技术积累\n  - 前端\n  - 微服务\ncategories:\n  - 技术积累\n  - 前端\n  - 微服务\ntoc: true\n---\n\n![首屏图](https://s3.ax1x.com/2021/01/12/sG4nFf.jpg)\n\n<!-- more -->\n\n## 关于icestark\n\n### 介绍\n\n[icestark](https://github.com/ice-lab/icestark) 是一个面向大型系统的微前端解决方案，适用于以下业务场景：\n\n* 后台比较分散，体验差别大，因为要频繁跳转导致操作效率低，希望能统一收口的一个系统内\n* 单页面应用非常庞大，多人协作成本高，开发/构建时间长，依赖升级回归成本高\n* 系统有二方/三方接入的需求\n\nicestark 在保证一个系统的操作体验基础上，实现各个子应用的独立开发和发版，主应用通过 icestark 管理微应用的注册和渲染，将整个系统彻底解耦。\n\n### 特性\n\n* 主应用和微应用皆支持 React/Vue/Angular... 等不同框架\n* 主应用只需依赖 npm 包 `@ice/stark`，不耦合任何工程体系\n* 微应用独立开发、不耦合任何框架以及工程体系，已有应用迁移成本极低\n* 整个系统用户体验好，跟 SPA 应用基本一致\n* 微应用只需发布前端资源 bundle 即可，主应用通过 bundle 渲染微应用\n\n### 架构设计\n\n![icestark架构设计](https://s3.ax1x.com/2021/01/06/sEIxV1.png)\n\n* 按照 UI 结构进行主应用、微应用的拆分\n* 主应用：负责微应用的注册与渲染，公共内容展示（Common Header、Common Sidebar、Common Footer等）\n* 微应用：负责自身业务相关的内容展示\n\n### 使用案例\n\n#### 阿里创作者平台\n\n![阿里创作者平台](https://s3.ax1x.com/2021/01/06/sE7ngS.png)\n\n#### 阿里健康-熙牛医疗云医院信息系统\n\n![阿里健康](https://s3.ax1x.com/2021/01/06/sE7H8f.png)\n\n#### 淘系小二工作台\n\n![淘系小二工作台](https://s3.ax1x.com/2021/01/06/sEH9P0.png)\n\n## 快速上手\n\n[快速上手](https://ice.work/docs/icestark/start)\n\n[icestark最佳实践](/archives/202101115b56e29a/)\n\n## 版本升级\n\n### 1.x -> 2.x\n\n> icestark@2.0.0 于 2020 年 12 月发布，Changelog\n\n* 支持以 API 的方式初始化主应用，主应用不再限制 React/Vue/Angular 等不同框架\n* 支持加载 UMD 格式的子应用产物\n\n注意：`@ice/stark` 2.0.0 完全兼容 1.0.0 版本的 API，因此主应用可以非常低成本的升级 2.0.0 版本。\n\n#### 主应用升级\n\n存量 1.x 的应用将 `@ice/stark` 升级到 2.x 最新版本即可，AppRouter 注册方式同 1.x 完全兼容。\n\n#### 不同版本混用\n\n微应用本身不依赖 `@ice/stark` 的版本变化，原先通过 `registerAppEnter` 和 `registerAppLeave` 方式注册生命周期的方式，均可以在 1.x 和 2.x 版本下运行。\n\n增量的微应用推荐通过 UMD 的规范导出，如需渲染 UMD 格式的微应用，需要将主应用中 `@ice/stark` 升级到 2.0.0 (或者 1.6.0)，同时在应用列表中显示声明 umd：\n\n`AppRoute` API 渲染 UMD 规范的子应用：\n\n```js\n<AppRoute\n+  umd={true}\n  path=\"/seller\"\n  title=\"标题\"\n  url={[]}\n/>\n```\n\n`regsiterMicroApps` API 渲染 UMD 规范的子应用：\n\n```js\nregsiterMicroApps([\n  {\n    name: 'app1',\n    activePath: ['/seller'],\n+    umd: true\n    title: '通用页面',\n    url: [],\n  }\n]);\n```\n\n### 0.x -> 1.x\n\n> icestark@1.0.0 于 2019 年 10 月发布，Changelog\n\n* 将微应用相关 API 拆成独立的包 `@ice/stark-app`，保证兼容不同框架的微应用\n* 支持 `onAppEnter/onAppLeave` 相关 API\n\n#### 迁移步骤\n\n##### 主应用\n\n将 `@ice/stark` 从 0.x 升级到 1.x 即可，API 跟 0.x 兼容。\n\n##### 微应用\n\n* 移除 `@ice/stark` 依赖：`npm rm @ice/stark --save`\n* 安装 `@ice/stark-app` 依赖：`npm i @ice/stark-app --save`\n* 批量替换代码中 `@ice/stark` 为 `@ice/stark-app`\n\n## 核心概念与原理\n\n### 原理\n\nicestark 内部维护了所有微应用的配置信息，包括路由规则、bundle 地址等，同时劫持了 `window.history` 相关的几个跳转事件，\n当捕获到页面跳转事件时，icestark 会根据跳转的路由获取对应的微应用信息，然后跟之前的微应用信息进行对比，如果是同一个微应用，\n则什么都不做，如果是不同的微应用，则将前一个微应用的 bundle 卸载，同时加载新的微应用 bundle 资源，加载完成后微应用 bundle 会执行自身的渲染逻辑。\n\n### 主应用含义\n\n又称框架应用或基座应用，一个系统只有一个主应用，主应用负责系统整体的 Layout 以及微应用的管理与注册。\n\n### 微应用含义\n\n又称子应用，微应用通常是一个单页面应用（SPA），可能包含一个或多个路由页面，一般情况下不存在多个微应用同时运行的场景。\n\n### 微模块含义\n\n微应用的更小粒度，通常是一个模块或页面，跟页面路由无关，可以随处挂载，也会出现多个微模块同时渲染运行。\n\n## 使用原则\n\n[使用原则](https://ice.work/docs/icestark/guide/principle)\n\n## 主应用开发与接入（React）\n\n对于 React 主应用，推荐使用 AppRouter/AppRoute 这种 React Component 的方式使用。\n\n### 注册微应用\n\n```js\n// src/App.jsx\nimport React from 'react';\nimport { AppRouter, AppRoute } from '@ice/stark';\nimport NotFound from '@/components/NotFound';\nimport PageLoading from '@/components/PageLoading';\nimport BasicLayout from '@/layouts/BasicLayout';\n\nexport default class App extends React.Component {\n  state = {\n    pathname: '',\n  }\n\n  handleRouteChange = (pathname) => {\n    console.log('route change', pathname);\n    // 如有需求，可根据 pathname 切换 layout 的形态\n    this.setState({\n      pathname,\n    });\n  }\n\n  render() {\n    const { pathname } = this.state;\n\n    return (\n      <BasicLayout pathname={pathname}>\n        <AppRouter\n          NotFoundComponent={NotFound}\n          LoadingComponent={PageLoading}\n          onRouteChange={this.handleRouteChange}\n        >\n          <AppRoute\n            \n            title=\"商家平台\"\n            url={[\n              '//unpkg.com/icestark-child-seller/build/js/index.js',\n              '//unpkg.com/icestark-child-seller/build/css/index.css',\n            ]}\n          />\n          <AppRoute\n            path=\"/user\"\n            //...\n          />\n          <AppRoute\n            path=\"*\"\n            render={() => {\n              return <></>;\n            }}\n          />\n        </AppRouter>\n      </BasicLayout>\n    );\n  }\n}\n```\n\n### 微应用配置\n\n#### 基准路由 path\n\n类型为 `string|string[]`，大部分情况下都是 string，通过 path 约束每个微应用的路由定义，建立路由和微应用的映射关系。\n\n#### 微应用入口 url/entry/entryContent\n\n通过 AppRoute 注册微应用，微应用入口支持 url/entry/entryContent 方式，此部分与 API 注册使用一致，\n可参考文档[微应用入口](https://ice.work/docs/icestark/guide/framework-api#%E5%BE%AE%E5%BA%94%E7%94%A8%E5%85%A5%E5%8F%A3)使用。\n\n在此基础上，AppRoute 还支持了更为灵活的 component 和 render 方式配置微应用入口：\n\n```JS\n<AppRoute\n  path=\"/foo\"\n  render={() => {\n    return <iframe src=\"\" />;\n  }}\n  // 或者直接传入 component\n  // component={CustomComponent}\n/>\n```\n\n通过这种方式，可以通过 AppRoute 渲染一个 iframe 或者任意的 React 组件。\n\n### 微应用注册通过数据驱动\n\n在很多场景下，我们的微应用可能通过一些配置平台注册，这时候可以将所有微应用的信息通过全局变量输出到 html 中，然后前端通过该数据注册微应用：\n\n```js\n// src/App.jsx\nimport React from 'react';\nimport { AppRouter, AppRoute } from '@ice/stark';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <AppRouter>\n        {\n          (window.appConfig || []).map((item) => {\n            return (\n              <AppRoute\n                key={idx}\n                path={item.path}\n                title={item.title}\n                url={item.url}\n              />\n            );\n          })\n        }\n      </AppRouter>\n    );\n  }\n}\n```\n\n### 应用级别权限校验\n\nicestark 支持对 `AppRoute` 再进行二次封装，统一处理容器定制/权限校验等场景：\n\n```js\n// src/components/AuthAppRoute.js\nimport React, { useState, useEffect } from 'react';\nimport { AppRoute } from '@ice/stark';\n\nexport default function AuthAppRoute(props) {\n  const [loading, setLoading] = useState(true);\n  const [hasAuth, setHasAuth] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setHasAuth(true);\n      setLoading(false);\n    }, 1000);\n  }, []);\n\n  if (loading) {\n    return <div>wait for a moment</div>;\n  }\n\n  if (!hasAuth) {\n    return <div>No access!</div>;\n  }\n\n  return (\n    <div>\n      //  注意要将 ...others 透传给 AppRoute\n      <AppRoute {...props} />\n    </div>\n  );\n}\n```\n\n封装完成后即可在 AppRouter 下使用：\n\n```js\n// src/App.jsx\nimport React from 'react';\nimport { AppRouter, AppRoute } from '@ice/stark';\nimport NotFound from '@/components/NotFound';\nimport PageLoading from '@/components/PageLoading';\nimport BasicLayout from '@/layouts/BasicLayout';\nimport AuthAppRoute from '@/components/AuthAppRoute';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <BasicLayout>\n        <AppRouter\n          NotFoundComponent={NotFound}\n          LoadingComponent={PageLoading}\n        >\n          {/* 注意：path/url/entry 等配置信息配置在组件外层，AppRouter 的直接子元素上 */}\n          <AuthAppRoute\n            path={['/', '/message', '/about']}\n            exact\n            title=\"主页\"\n            url={[\n              '//unpkg.com/icestark-child-common/build/js/index.js',\n              '//unpkg.com/icestark-child-common/build/css/index.css',\n            ]}\n          />\n        </AppRouter>\n      </BasicLayout>\n    );\n  }\n}\n```\n\n### 不同页面 Layout 不同\n\n如上示例，通过 `onRouteChange` 可以捕获到所有的路由变化，此时可以根据不同路由对 Layout 做一些状态的变化，实现不同页面不同布局的能力。\n\n## 主应用开发与接入（非 React）\n\n[主应用开发与接入（非 React）](https://ice.work/docs/icestark/guide/framework-api)\n\n## 微应用开发与接入\n\n[微应用开发与接入](https://ice.work/docs/icestark/guide/child-app)\n\n## 应用间通信\n\n[应用间通信](https://ice.work/docs/icestark/guide/interaction)\n\n## 样式和脚本隔离\n\n[样式和脚本隔离](https://ice.work/docs/icestark/guide/sandbox)\n\n## 常见问题\n\n[常见问题](https://ice.work/docs/icestark/guide/faq)\n\n## API\n\n### @ice/stark\n\nVue版API[详见](https://ice.work/docs/icestark/reference/api)\n\n### @ice/stark-app\n\n#### isInIcestark\n\n判断当前运行环境，是否运行在 icestark 环境中，返回值类型：boolean\n\n* 类型：`function`\n* 示例代码详见 `registerAppLeave`\n\n#### getBasename\n\n配置微应用 `React Router` 中的 `basename` 参数的方法，根据 `AppRoute` 中的 `basename` 或者 `path` 配置生成最终结果\n\n* 类型：`function`\n* 默认值：`() => basename || (Array.isArray(path) ? path[0] : path)) || \"/\"`\n\n#### getMountNode\n\n根据微应用运行环境，返回微应用渲染节点\n\n* 类型：`function`\n* 默认值：`<div id=\"ice-container\"></div>`\n* 使用规则：方法支持传参，传参代表默认渲染的 DOM 节点，默认节点只在微应用单独启动时生效。支持 `string | HTMLElement | function`， `string` 表示默认 DOM 节点的 `id`，`function` 支持函数返回值作为默认 DOM 节点\n\n#### renderNotFound\n\n微应用触发渲染全局 404 的方法\n\n* 类型：`function`\n\n#### appHistory\n\n提供手动切换不同应用的方法。\n\n##### appHistory.push\n\n* 类型：`function`\n* 代码示例：\n\n```js\nimport React from 'react';\nimport { appHistory } from '@ice/stark-app';\n\nexport default class SelfLink extends React.Component {\n  render() {\n    return (\n      <span\n        onClick={() => {\n          appHistory.push('/home');\n        }}\n      >\n        selfLink\n      </span>\n    );\n  }\n}\n```\n\n##### appHistory.replace\n\n* 类型：`function`\n* 代码示例参考 `appHistory.push`\n\n#### registerAppEnter\n\n提供快速注册当前应用加载前的回调事件\n\n* 类型：`function`\n* 示例代码详见 `registerAppLeave`\n\n#### registerAppLeave\n\n提供快速注册当前应用卸载前的回调事件\n\n* 类型：`function`\n* 代码示例：\n\n```js\n// src/index.js\nimport ReactDOM from 'react-dom';\nimport { isInIcestark, getMountNode, registerAppEnter, registerAppLeave } from '@ice/stark-app';\nimport router from './router';\n\nif (isInIcestark()) {\n  const mountNode = getMountNode();\n  registerAppEnter(() => {\n    ReactDOM.render(router(), getMountNode());\n  });\n  // make sure the unmount event is triggered\n  registerAppLeave(() => {\n    ReactDOM.unmountComponentAtNode(getMountNode());\n  });\n} else {\n  ReactDOM.render(router(), document.getElementById('ice-container'));\n}\n```\n\n## 参考资料\n\n* [关于 icestark](https://ice.work/docs/icestark/about)\n","slug":"icestark的使用","published":1,"updated":"2021-03-02T13:16:32.309Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyd000e2an9adaka8j5","content":"<p><img src=\"https://s3.ax1x.com/2021/01/12/sG4nFf.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<h2 id=\"关于icestark\"><a href=\"#关于icestark\" class=\"headerlink\" title=\"关于icestark\"></a>关于icestark</h2><h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p><a href=\"https://github.com/ice-lab/icestark\">icestark</a> 是一个面向大型系统的微前端解决方案，适用于以下业务场景：</p>\n<ul>\n<li>后台比较分散，体验差别大，因为要频繁跳转导致操作效率低，希望能统一收口的一个系统内</li>\n<li>单页面应用非常庞大，多人协作成本高，开发/构建时间长，依赖升级回归成本高</li>\n<li>系统有二方/三方接入的需求</li>\n</ul>\n<p>icestark 在保证一个系统的操作体验基础上，实现各个子应用的独立开发和发版，主应用通过 icestark 管理微应用的注册和渲染，将整个系统彻底解耦。</p>\n<h3 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h3><ul>\n<li>主应用和微应用皆支持 React/Vue/Angular… 等不同框架</li>\n<li>主应用只需依赖 npm 包 <code>@ice/stark</code>，不耦合任何工程体系</li>\n<li>微应用独立开发、不耦合任何框架以及工程体系，已有应用迁移成本极低</li>\n<li>整个系统用户体验好，跟 SPA 应用基本一致</li>\n<li>微应用只需发布前端资源 bundle 即可，主应用通过 bundle 渲染微应用</li>\n</ul>\n<h3 id=\"架构设计\"><a href=\"#架构设计\" class=\"headerlink\" title=\"架构设计\"></a>架构设计</h3><p><img src=\"https://s3.ax1x.com/2021/01/06/sEIxV1.png\" alt=\"icestark架构设计\"></p>\n<ul>\n<li>按照 UI 结构进行主应用、微应用的拆分</li>\n<li>主应用：负责微应用的注册与渲染，公共内容展示（Common Header、Common Sidebar、Common Footer等）</li>\n<li>微应用：负责自身业务相关的内容展示</li>\n</ul>\n<h3 id=\"使用案例\"><a href=\"#使用案例\" class=\"headerlink\" title=\"使用案例\"></a>使用案例</h3><h4 id=\"阿里创作者平台\"><a href=\"#阿里创作者平台\" class=\"headerlink\" title=\"阿里创作者平台\"></a>阿里创作者平台</h4><p><img src=\"https://s3.ax1x.com/2021/01/06/sE7ngS.png\" alt=\"阿里创作者平台\"></p>\n<h4 id=\"阿里健康-熙牛医疗云医院信息系统\"><a href=\"#阿里健康-熙牛医疗云医院信息系统\" class=\"headerlink\" title=\"阿里健康-熙牛医疗云医院信息系统\"></a>阿里健康-熙牛医疗云医院信息系统</h4><p><img src=\"https://s3.ax1x.com/2021/01/06/sE7H8f.png\" alt=\"阿里健康\"></p>\n<h4 id=\"淘系小二工作台\"><a href=\"#淘系小二工作台\" class=\"headerlink\" title=\"淘系小二工作台\"></a>淘系小二工作台</h4><p><img src=\"https://s3.ax1x.com/2021/01/06/sEH9P0.png\" alt=\"淘系小二工作台\"></p>\n<h2 id=\"快速上手\"><a href=\"#快速上手\" class=\"headerlink\" title=\"快速上手\"></a>快速上手</h2><p><a href=\"https://ice.work/docs/icestark/start\">快速上手</a></p>\n<p><a href=\"/archives/202101115b56e29a/\">icestark最佳实践</a></p>\n<h2 id=\"版本升级\"><a href=\"#版本升级\" class=\"headerlink\" title=\"版本升级\"></a>版本升级</h2><h3 id=\"1-x-gt-2-x\"><a href=\"#1-x-gt-2-x\" class=\"headerlink\" title=\"1.x -&gt; 2.x\"></a>1.x -&gt; 2.x</h3><blockquote>\n<p><a href=\"mailto:icestark@2.0.0\">icestark@2.0.0</a> 于 2020 年 12 月发布，Changelog</p>\n</blockquote>\n<ul>\n<li>支持以 API 的方式初始化主应用，主应用不再限制 React/Vue/Angular 等不同框架</li>\n<li>支持加载 UMD 格式的子应用产物</li>\n</ul>\n<p>注意：<code>@ice/stark</code> 2.0.0 完全兼容 1.0.0 版本的 API，因此主应用可以非常低成本的升级 2.0.0 版本。</p>\n<h4 id=\"主应用升级\"><a href=\"#主应用升级\" class=\"headerlink\" title=\"主应用升级\"></a>主应用升级</h4><p>存量 1.x 的应用将 <code>@ice/stark</code> 升级到 2.x 最新版本即可，AppRouter 注册方式同 1.x 完全兼容。</p>\n<h4 id=\"不同版本混用\"><a href=\"#不同版本混用\" class=\"headerlink\" title=\"不同版本混用\"></a>不同版本混用</h4><p>微应用本身不依赖 <code>@ice/stark</code> 的版本变化，原先通过 <code>registerAppEnter</code> 和 <code>registerAppLeave</code> 方式注册生命周期的方式，均可以在 1.x 和 2.x 版本下运行。</p>\n<p>增量的微应用推荐通过 UMD 的规范导出，如需渲染 UMD 格式的微应用，需要将主应用中 <code>@ice/stark</code> 升级到 2.0.0 (或者 1.6.0)，同时在应用列表中显示声明 umd：</p>\n<p><code>AppRoute</code> API 渲染 UMD 规范的子应用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;AppRoute</span><br><span class=\"line\">+  umd=&#123;<span class=\"literal\">true</span>&#125;</span><br><span class=\"line\">  path=<span class=\"string\">&quot;/seller&quot;</span></span><br><span class=\"line\">  title=<span class=\"string\">&quot;标题&quot;</span></span><br><span class=\"line\">  url=&#123;[]&#125;</span><br><span class=\"line\">/&gt;</span><br></pre></td></tr></table></figure>\n<p><code>regsiterMicroApps</code> API 渲染 UMD 规范的子应用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">regsiterMicroApps([</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;app1&#x27;</span>,</span><br><span class=\"line\">    activePath: [<span class=\"string\">&#x27;/seller&#x27;</span>],</span><br><span class=\"line\">+    umd: <span class=\"literal\">true</span></span><br><span class=\"line\">    title: <span class=\"string\">&#x27;通用页面&#x27;</span>,</span><br><span class=\"line\">    url: [],</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>\n<h3 id=\"0-x-gt-1-x\"><a href=\"#0-x-gt-1-x\" class=\"headerlink\" title=\"0.x -&gt; 1.x\"></a>0.x -&gt; 1.x</h3><blockquote>\n<p><a href=\"mailto:icestark@1.0.0\">icestark@1.0.0</a> 于 2019 年 10 月发布，Changelog</p>\n</blockquote>\n<ul>\n<li>将微应用相关 API 拆成独立的包 <code>@ice/stark-app</code>，保证兼容不同框架的微应用</li>\n<li>支持 <code>onAppEnter/onAppLeave</code> 相关 API</li>\n</ul>\n<h4 id=\"迁移步骤\"><a href=\"#迁移步骤\" class=\"headerlink\" title=\"迁移步骤\"></a>迁移步骤</h4><h5 id=\"主应用\"><a href=\"#主应用\" class=\"headerlink\" title=\"主应用\"></a>主应用</h5><p>将 <code>@ice/stark</code> 从 0.x 升级到 1.x 即可，API 跟 0.x 兼容。</p>\n<h5 id=\"微应用\"><a href=\"#微应用\" class=\"headerlink\" title=\"微应用\"></a>微应用</h5><ul>\n<li>移除 <code>@ice/stark</code> 依赖：<code>npm rm @ice/stark --save</code></li>\n<li>安装 <code>@ice/stark-app</code> 依赖：<code>npm i @ice/stark-app --save</code></li>\n<li>批量替换代码中 <code>@ice/stark</code> 为 <code>@ice/stark-app</code></li>\n</ul>\n<h2 id=\"核心概念与原理\"><a href=\"#核心概念与原理\" class=\"headerlink\" title=\"核心概念与原理\"></a>核心概念与原理</h2><h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>icestark 内部维护了所有微应用的配置信息，包括路由规则、bundle 地址等，同时劫持了 <code>window.history</code> 相关的几个跳转事件，<br>当捕获到页面跳转事件时，icestark 会根据跳转的路由获取对应的微应用信息，然后跟之前的微应用信息进行对比，如果是同一个微应用，<br>则什么都不做，如果是不同的微应用，则将前一个微应用的 bundle 卸载，同时加载新的微应用 bundle 资源，加载完成后微应用 bundle 会执行自身的渲染逻辑。</p>\n<h3 id=\"主应用含义\"><a href=\"#主应用含义\" class=\"headerlink\" title=\"主应用含义\"></a>主应用含义</h3><p>又称框架应用或基座应用，一个系统只有一个主应用，主应用负责系统整体的 Layout 以及微应用的管理与注册。</p>\n<h3 id=\"微应用含义\"><a href=\"#微应用含义\" class=\"headerlink\" title=\"微应用含义\"></a>微应用含义</h3><p>又称子应用，微应用通常是一个单页面应用（SPA），可能包含一个或多个路由页面，一般情况下不存在多个微应用同时运行的场景。</p>\n<h3 id=\"微模块含义\"><a href=\"#微模块含义\" class=\"headerlink\" title=\"微模块含义\"></a>微模块含义</h3><p>微应用的更小粒度，通常是一个模块或页面，跟页面路由无关，可以随处挂载，也会出现多个微模块同时渲染运行。</p>\n<h2 id=\"使用原则\"><a href=\"#使用原则\" class=\"headerlink\" title=\"使用原则\"></a>使用原则</h2><p><a href=\"https://ice.work/docs/icestark/guide/principle\">使用原则</a></p>\n<h2 id=\"主应用开发与接入（React）\"><a href=\"#主应用开发与接入（React）\" class=\"headerlink\" title=\"主应用开发与接入（React）\"></a>主应用开发与接入（React）</h2><p>对于 React 主应用，推荐使用 AppRouter/AppRoute 这种 React Component 的方式使用。</p>\n<h3 id=\"注册微应用\"><a href=\"#注册微应用\" class=\"headerlink\" title=\"注册微应用\"></a>注册微应用</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/App.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; AppRouter, AppRoute &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> NotFound <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/NotFound&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> PageLoading <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/PageLoading&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> BasicLayout <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/layouts/BasicLayout&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    pathname: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleRouteChange = <span class=\"function\">(<span class=\"params\">pathname</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;route change&#x27;</span>, pathname);</span><br><span class=\"line\">    <span class=\"comment\">// 如有需求，可根据 pathname 切换 layout 的形态</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setState(&#123;</span><br><span class=\"line\">      pathname,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; pathname &#125; = <span class=\"built_in\">this</span>.state;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;BasicLayout pathname=&#123;pathname&#125;&gt;</span><br><span class=\"line\">        &lt;AppRouter</span><br><span class=\"line\">          NotFoundComponent=&#123;NotFound&#125;</span><br><span class=\"line\">          LoadingComponent=&#123;PageLoading&#125;</span><br><span class=\"line\">          onRouteChange=&#123;<span class=\"built_in\">this</span>.handleRouteChange&#125;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">          &lt;AppRoute</span><br><span class=\"line\">            </span><br><span class=\"line\">            title=<span class=\"string\">&quot;商家平台&quot;</span></span><br><span class=\"line\">            url=&#123;[</span><br><span class=\"line\">              <span class=\"string\">&#x27;//unpkg.com/icestark-child-seller/build/js/index.js&#x27;</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;//unpkg.com/icestark-child-seller/build/css/index.css&#x27;</span>,</span><br><span class=\"line\">            ]&#125;</span><br><span class=\"line\">          /&gt;</span><br><span class=\"line\">          &lt;AppRoute</span><br><span class=\"line\">            path=<span class=\"string\">&quot;/user&quot;</span></span><br><span class=\"line\">            <span class=\"comment\">//...</span></span><br><span class=\"line\">          /&gt;</span><br><span class=\"line\">          &lt;AppRoute</span><br><span class=\"line\">            path=<span class=\"string\">&quot;*&quot;</span></span><br><span class=\"line\">            render=&#123;<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;&gt;</span><span class=\"tag\">&lt;/&gt;</span></span>;</span><br><span class=\"line\">            &#125;&#125;</span><br><span class=\"line\">          /&gt;</span><br><span class=\"line\">        &lt;/AppRouter&gt;</span><br><span class=\"line\">      &lt;/BasicLayout&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"微应用配置\"><a href=\"#微应用配置\" class=\"headerlink\" title=\"微应用配置\"></a>微应用配置</h3><h4 id=\"基准路由-path\"><a href=\"#基准路由-path\" class=\"headerlink\" title=\"基准路由 path\"></a>基准路由 path</h4><p>类型为 <code>string|string[]</code>，大部分情况下都是 string，通过 path 约束每个微应用的路由定义，建立路由和微应用的映射关系。</p>\n<h4 id=\"微应用入口-url-entry-entryContent\"><a href=\"#微应用入口-url-entry-entryContent\" class=\"headerlink\" title=\"微应用入口 url/entry/entryContent\"></a>微应用入口 url/entry/entryContent</h4><p>通过 AppRoute 注册微应用，微应用入口支持 url/entry/entryContent 方式，此部分与 API 注册使用一致，<br>可参考文档<a href=\"https://ice.work/docs/icestark/guide/framework-api#%E5%BE%AE%E5%BA%94%E7%94%A8%E5%85%A5%E5%8F%A3\">微应用入口</a>使用。</p>\n<p>在此基础上，AppRoute 还支持了更为灵活的 component 和 render 方式配置微应用入口：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;AppRoute</span><br><span class=\"line\">  path=<span class=\"string\">&quot;/foo&quot;</span></span><br><span class=\"line\">  render=&#123;<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&quot;</span> /&gt;</span></span>;</span><br><span class=\"line\">  &#125;&#125;</span><br><span class=\"line\">  <span class=\"comment\">// 或者直接传入 component</span></span><br><span class=\"line\">  <span class=\"comment\">// component=&#123;CustomComponent&#125;</span></span><br><span class=\"line\">/&gt;</span><br></pre></td></tr></table></figure>\n<p>通过这种方式，可以通过 AppRoute 渲染一个 iframe 或者任意的 React 组件。</p>\n<h3 id=\"微应用注册通过数据驱动\"><a href=\"#微应用注册通过数据驱动\" class=\"headerlink\" title=\"微应用注册通过数据驱动\"></a>微应用注册通过数据驱动</h3><p>在很多场景下，我们的微应用可能通过一些配置平台注册，这时候可以将所有微应用的信息通过全局变量输出到 html 中，然后前端通过该数据注册微应用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/App.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; AppRouter, AppRoute &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;AppRouter&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          (<span class=\"built_in\">window</span>.appConfig || []).map(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (</span><br><span class=\"line\">              &lt;AppRoute</span><br><span class=\"line\">                key=&#123;idx&#125;</span><br><span class=\"line\">                path=&#123;item.path&#125;</span><br><span class=\"line\">                title=&#123;item.title&#125;</span><br><span class=\"line\">                url=&#123;item.url&#125;</span><br><span class=\"line\">              /&gt;</span><br><span class=\"line\">            );</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &lt;/AppRouter&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"应用级别权限校验\"><a href=\"#应用级别权限校验\" class=\"headerlink\" title=\"应用级别权限校验\"></a>应用级别权限校验</h3><p>icestark 支持对 <code>AppRoute</code> 再进行二次封装，统一处理容器定制/权限校验等场景：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/components/AuthAppRoute.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; useState, useEffect &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; AppRoute &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">AuthAppRoute</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [loading, setLoading] = useState(<span class=\"literal\">true</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [hasAuth, setHasAuth] = useState(<span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  useEffect(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      setHasAuth(<span class=\"literal\">true</span>);</span><br><span class=\"line\">      setLoading(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;, []);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (loading) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>wait for a moment<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!hasAuth) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>No access!<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">      <span class=\"comment\">//  注意要将 ...others 透传给 AppRoute</span></span><br><span class=\"line\">      &lt;AppRoute &#123;...props&#125; /&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>封装完成后即可在 AppRouter 下使用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/App.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; AppRouter, AppRoute &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> NotFound <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/NotFound&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> PageLoading <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/PageLoading&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> BasicLayout <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/layouts/BasicLayout&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> AuthAppRoute <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/AuthAppRoute&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;BasicLayout&gt;</span><br><span class=\"line\">        &lt;AppRouter</span><br><span class=\"line\">          NotFoundComponent=&#123;NotFound&#125;</span><br><span class=\"line\">          LoadingComponent=&#123;PageLoading&#125;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">          &#123;<span class=\"comment\">/* 注意：path/url/entry 等配置信息配置在组件外层，AppRouter 的直接子元素上 */</span>&#125;</span><br><span class=\"line\">          &lt;AuthAppRoute</span><br><span class=\"line\">            path=&#123;[<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"string\">&#x27;/message&#x27;</span>, <span class=\"string\">&#x27;/about&#x27;</span>]&#125;</span><br><span class=\"line\">            exact</span><br><span class=\"line\">            title=<span class=\"string\">&quot;主页&quot;</span></span><br><span class=\"line\">            url=&#123;[</span><br><span class=\"line\">              <span class=\"string\">&#x27;//unpkg.com/icestark-child-common/build/js/index.js&#x27;</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;//unpkg.com/icestark-child-common/build/css/index.css&#x27;</span>,</span><br><span class=\"line\">            ]&#125;</span><br><span class=\"line\">          /&gt;</span><br><span class=\"line\">        &lt;/AppRouter&gt;</span><br><span class=\"line\">      &lt;/BasicLayout&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"不同页面-Layout-不同\"><a href=\"#不同页面-Layout-不同\" class=\"headerlink\" title=\"不同页面 Layout 不同\"></a>不同页面 Layout 不同</h3><p>如上示例，通过 <code>onRouteChange</code> 可以捕获到所有的路由变化，此时可以根据不同路由对 Layout 做一些状态的变化，实现不同页面不同布局的能力。</p>\n<h2 id=\"主应用开发与接入（非-React）\"><a href=\"#主应用开发与接入（非-React）\" class=\"headerlink\" title=\"主应用开发与接入（非 React）\"></a>主应用开发与接入（非 React）</h2><p><a href=\"https://ice.work/docs/icestark/guide/framework-api\">主应用开发与接入（非 React）</a></p>\n<h2 id=\"微应用开发与接入\"><a href=\"#微应用开发与接入\" class=\"headerlink\" title=\"微应用开发与接入\"></a>微应用开发与接入</h2><p><a href=\"https://ice.work/docs/icestark/guide/child-app\">微应用开发与接入</a></p>\n<h2 id=\"应用间通信\"><a href=\"#应用间通信\" class=\"headerlink\" title=\"应用间通信\"></a>应用间通信</h2><p><a href=\"https://ice.work/docs/icestark/guide/interaction\">应用间通信</a></p>\n<h2 id=\"样式和脚本隔离\"><a href=\"#样式和脚本隔离\" class=\"headerlink\" title=\"样式和脚本隔离\"></a>样式和脚本隔离</h2><p><a href=\"https://ice.work/docs/icestark/guide/sandbox\">样式和脚本隔离</a></p>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><p><a href=\"https://ice.work/docs/icestark/guide/faq\">常见问题</a></p>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><h3 id=\"ice-stark\"><a href=\"#ice-stark\" class=\"headerlink\" title=\"@ice/stark\"></a>@ice/stark</h3><p>Vue版API<a href=\"https://ice.work/docs/icestark/reference/api\">详见</a></p>\n<h3 id=\"ice-stark-app\"><a href=\"#ice-stark-app\" class=\"headerlink\" title=\"@ice/stark-app\"></a>@ice/stark-app</h3><h4 id=\"isInIcestark\"><a href=\"#isInIcestark\" class=\"headerlink\" title=\"isInIcestark\"></a>isInIcestark</h4><p>判断当前运行环境，是否运行在 icestark 环境中，返回值类型：boolean</p>\n<ul>\n<li>类型：<code>function</code></li>\n<li>示例代码详见 <code>registerAppLeave</code></li>\n</ul>\n<h4 id=\"getBasename\"><a href=\"#getBasename\" class=\"headerlink\" title=\"getBasename\"></a>getBasename</h4><p>配置微应用 <code>React Router</code> 中的 <code>basename</code> 参数的方法，根据 <code>AppRoute</code> 中的 <code>basename</code> 或者 <code>path</code> 配置生成最终结果</p>\n<ul>\n<li>类型：<code>function</code></li>\n<li>默认值：<code>() =&gt; basename || (Array.isArray(path) ? path[0] : path)) || &quot;/&quot;</code></li>\n</ul>\n<h4 id=\"getMountNode\"><a href=\"#getMountNode\" class=\"headerlink\" title=\"getMountNode\"></a>getMountNode</h4><p>根据微应用运行环境，返回微应用渲染节点</p>\n<ul>\n<li>类型：<code>function</code></li>\n<li>默认值：<code>&lt;div id=&quot;ice-container&quot;&gt;&lt;/div&gt;</code></li>\n<li>使用规则：方法支持传参，传参代表默认渲染的 DOM 节点，默认节点只在微应用单独启动时生效。支持 <code>string | HTMLElement | function</code>， <code>string</code> 表示默认 DOM 节点的 <code>id</code>，<code>function</code> 支持函数返回值作为默认 DOM 节点</li>\n</ul>\n<h4 id=\"renderNotFound\"><a href=\"#renderNotFound\" class=\"headerlink\" title=\"renderNotFound\"></a>renderNotFound</h4><p>微应用触发渲染全局 404 的方法</p>\n<ul>\n<li>类型：<code>function</code></li>\n</ul>\n<h4 id=\"appHistory\"><a href=\"#appHistory\" class=\"headerlink\" title=\"appHistory\"></a>appHistory</h4><p>提供手动切换不同应用的方法。</p>\n<h5 id=\"appHistory-push\"><a href=\"#appHistory-push\" class=\"headerlink\" title=\"appHistory.push\"></a>appHistory.push</h5><ul>\n<li>类型：<code>function</code></li>\n<li>代码示例：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; appHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark-app&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SelfLink</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;span</span><br><span class=\"line\">        onClick=&#123;<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">          appHistory.push(<span class=\"string\">&#x27;/home&#x27;</span>);</span><br><span class=\"line\">        &#125;&#125;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">        selfLink</span><br><span class=\"line\">      &lt;/span&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"appHistory-replace\"><a href=\"#appHistory-replace\" class=\"headerlink\" title=\"appHistory.replace\"></a>appHistory.replace</h5><ul>\n<li>类型：<code>function</code></li>\n<li>代码示例参考 <code>appHistory.push</code></li>\n</ul>\n<h4 id=\"registerAppEnter\"><a href=\"#registerAppEnter\" class=\"headerlink\" title=\"registerAppEnter\"></a>registerAppEnter</h4><p>提供快速注册当前应用加载前的回调事件</p>\n<ul>\n<li>类型：<code>function</code></li>\n<li>示例代码详见 <code>registerAppLeave</code></li>\n</ul>\n<h4 id=\"registerAppLeave\"><a href=\"#registerAppLeave\" class=\"headerlink\" title=\"registerAppLeave\"></a>registerAppLeave</h4><p>提供快速注册当前应用卸载前的回调事件</p>\n<ul>\n<li>类型：<code>function</code></li>\n<li>代码示例：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/index.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDOM <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dom&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; isInIcestark, getMountNode, registerAppEnter, registerAppLeave &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark-app&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./router&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (isInIcestark()) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> mountNode = getMountNode();</span><br><span class=\"line\">  registerAppEnter(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    ReactDOM.render(router(), getMountNode());</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"comment\">// make sure the unmount event is triggered</span></span><br><span class=\"line\">  registerAppLeave(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    ReactDOM.unmountComponentAtNode(getMountNode());</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  ReactDOM.render(router(), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;ice-container&#x27;</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://ice.work/docs/icestark/about\">关于 icestark</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s3.ax1x.com/2021/01/12/sG4nFf.jpg\" alt=\"首屏图\"></p>","more":"<h2 id=\"关于icestark\"><a href=\"#关于icestark\" class=\"headerlink\" title=\"关于icestark\"></a>关于icestark</h2><h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p><a href=\"https://github.com/ice-lab/icestark\">icestark</a> 是一个面向大型系统的微前端解决方案，适用于以下业务场景：</p>\n<ul>\n<li>后台比较分散，体验差别大，因为要频繁跳转导致操作效率低，希望能统一收口的一个系统内</li>\n<li>单页面应用非常庞大，多人协作成本高，开发/构建时间长，依赖升级回归成本高</li>\n<li>系统有二方/三方接入的需求</li>\n</ul>\n<p>icestark 在保证一个系统的操作体验基础上，实现各个子应用的独立开发和发版，主应用通过 icestark 管理微应用的注册和渲染，将整个系统彻底解耦。</p>\n<h3 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h3><ul>\n<li>主应用和微应用皆支持 React/Vue/Angular… 等不同框架</li>\n<li>主应用只需依赖 npm 包 <code>@ice/stark</code>，不耦合任何工程体系</li>\n<li>微应用独立开发、不耦合任何框架以及工程体系，已有应用迁移成本极低</li>\n<li>整个系统用户体验好，跟 SPA 应用基本一致</li>\n<li>微应用只需发布前端资源 bundle 即可，主应用通过 bundle 渲染微应用</li>\n</ul>\n<h3 id=\"架构设计\"><a href=\"#架构设计\" class=\"headerlink\" title=\"架构设计\"></a>架构设计</h3><p><img src=\"https://s3.ax1x.com/2021/01/06/sEIxV1.png\" alt=\"icestark架构设计\"></p>\n<ul>\n<li>按照 UI 结构进行主应用、微应用的拆分</li>\n<li>主应用：负责微应用的注册与渲染，公共内容展示（Common Header、Common Sidebar、Common Footer等）</li>\n<li>微应用：负责自身业务相关的内容展示</li>\n</ul>\n<h3 id=\"使用案例\"><a href=\"#使用案例\" class=\"headerlink\" title=\"使用案例\"></a>使用案例</h3><h4 id=\"阿里创作者平台\"><a href=\"#阿里创作者平台\" class=\"headerlink\" title=\"阿里创作者平台\"></a>阿里创作者平台</h4><p><img src=\"https://s3.ax1x.com/2021/01/06/sE7ngS.png\" alt=\"阿里创作者平台\"></p>\n<h4 id=\"阿里健康-熙牛医疗云医院信息系统\"><a href=\"#阿里健康-熙牛医疗云医院信息系统\" class=\"headerlink\" title=\"阿里健康-熙牛医疗云医院信息系统\"></a>阿里健康-熙牛医疗云医院信息系统</h4><p><img src=\"https://s3.ax1x.com/2021/01/06/sE7H8f.png\" alt=\"阿里健康\"></p>\n<h4 id=\"淘系小二工作台\"><a href=\"#淘系小二工作台\" class=\"headerlink\" title=\"淘系小二工作台\"></a>淘系小二工作台</h4><p><img src=\"https://s3.ax1x.com/2021/01/06/sEH9P0.png\" alt=\"淘系小二工作台\"></p>\n<h2 id=\"快速上手\"><a href=\"#快速上手\" class=\"headerlink\" title=\"快速上手\"></a>快速上手</h2><p><a href=\"https://ice.work/docs/icestark/start\">快速上手</a></p>\n<p><a href=\"/archives/202101115b56e29a/\">icestark最佳实践</a></p>\n<h2 id=\"版本升级\"><a href=\"#版本升级\" class=\"headerlink\" title=\"版本升级\"></a>版本升级</h2><h3 id=\"1-x-gt-2-x\"><a href=\"#1-x-gt-2-x\" class=\"headerlink\" title=\"1.x -&gt; 2.x\"></a>1.x -&gt; 2.x</h3><blockquote>\n<p><a href=\"mailto:icestark@2.0.0\">icestark@2.0.0</a> 于 2020 年 12 月发布，Changelog</p>\n</blockquote>\n<ul>\n<li>支持以 API 的方式初始化主应用，主应用不再限制 React/Vue/Angular 等不同框架</li>\n<li>支持加载 UMD 格式的子应用产物</li>\n</ul>\n<p>注意：<code>@ice/stark</code> 2.0.0 完全兼容 1.0.0 版本的 API，因此主应用可以非常低成本的升级 2.0.0 版本。</p>\n<h4 id=\"主应用升级\"><a href=\"#主应用升级\" class=\"headerlink\" title=\"主应用升级\"></a>主应用升级</h4><p>存量 1.x 的应用将 <code>@ice/stark</code> 升级到 2.x 最新版本即可，AppRouter 注册方式同 1.x 完全兼容。</p>\n<h4 id=\"不同版本混用\"><a href=\"#不同版本混用\" class=\"headerlink\" title=\"不同版本混用\"></a>不同版本混用</h4><p>微应用本身不依赖 <code>@ice/stark</code> 的版本变化，原先通过 <code>registerAppEnter</code> 和 <code>registerAppLeave</code> 方式注册生命周期的方式，均可以在 1.x 和 2.x 版本下运行。</p>\n<p>增量的微应用推荐通过 UMD 的规范导出，如需渲染 UMD 格式的微应用，需要将主应用中 <code>@ice/stark</code> 升级到 2.0.0 (或者 1.6.0)，同时在应用列表中显示声明 umd：</p>\n<p><code>AppRoute</code> API 渲染 UMD 规范的子应用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;AppRoute</span><br><span class=\"line\">+  umd=&#123;<span class=\"literal\">true</span>&#125;</span><br><span class=\"line\">  path=<span class=\"string\">&quot;/seller&quot;</span></span><br><span class=\"line\">  title=<span class=\"string\">&quot;标题&quot;</span></span><br><span class=\"line\">  url=&#123;[]&#125;</span><br><span class=\"line\">/&gt;</span><br></pre></td></tr></table></figure>\n<p><code>regsiterMicroApps</code> API 渲染 UMD 规范的子应用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">regsiterMicroApps([</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;app1&#x27;</span>,</span><br><span class=\"line\">    activePath: [<span class=\"string\">&#x27;/seller&#x27;</span>],</span><br><span class=\"line\">+    umd: <span class=\"literal\">true</span></span><br><span class=\"line\">    title: <span class=\"string\">&#x27;通用页面&#x27;</span>,</span><br><span class=\"line\">    url: [],</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>\n<h3 id=\"0-x-gt-1-x\"><a href=\"#0-x-gt-1-x\" class=\"headerlink\" title=\"0.x -&gt; 1.x\"></a>0.x -&gt; 1.x</h3><blockquote>\n<p><a href=\"mailto:icestark@1.0.0\">icestark@1.0.0</a> 于 2019 年 10 月发布，Changelog</p>\n</blockquote>\n<ul>\n<li>将微应用相关 API 拆成独立的包 <code>@ice/stark-app</code>，保证兼容不同框架的微应用</li>\n<li>支持 <code>onAppEnter/onAppLeave</code> 相关 API</li>\n</ul>\n<h4 id=\"迁移步骤\"><a href=\"#迁移步骤\" class=\"headerlink\" title=\"迁移步骤\"></a>迁移步骤</h4><h5 id=\"主应用\"><a href=\"#主应用\" class=\"headerlink\" title=\"主应用\"></a>主应用</h5><p>将 <code>@ice/stark</code> 从 0.x 升级到 1.x 即可，API 跟 0.x 兼容。</p>\n<h5 id=\"微应用\"><a href=\"#微应用\" class=\"headerlink\" title=\"微应用\"></a>微应用</h5><ul>\n<li>移除 <code>@ice/stark</code> 依赖：<code>npm rm @ice/stark --save</code></li>\n<li>安装 <code>@ice/stark-app</code> 依赖：<code>npm i @ice/stark-app --save</code></li>\n<li>批量替换代码中 <code>@ice/stark</code> 为 <code>@ice/stark-app</code></li>\n</ul>\n<h2 id=\"核心概念与原理\"><a href=\"#核心概念与原理\" class=\"headerlink\" title=\"核心概念与原理\"></a>核心概念与原理</h2><h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>icestark 内部维护了所有微应用的配置信息，包括路由规则、bundle 地址等，同时劫持了 <code>window.history</code> 相关的几个跳转事件，<br>当捕获到页面跳转事件时，icestark 会根据跳转的路由获取对应的微应用信息，然后跟之前的微应用信息进行对比，如果是同一个微应用，<br>则什么都不做，如果是不同的微应用，则将前一个微应用的 bundle 卸载，同时加载新的微应用 bundle 资源，加载完成后微应用 bundle 会执行自身的渲染逻辑。</p>\n<h3 id=\"主应用含义\"><a href=\"#主应用含义\" class=\"headerlink\" title=\"主应用含义\"></a>主应用含义</h3><p>又称框架应用或基座应用，一个系统只有一个主应用，主应用负责系统整体的 Layout 以及微应用的管理与注册。</p>\n<h3 id=\"微应用含义\"><a href=\"#微应用含义\" class=\"headerlink\" title=\"微应用含义\"></a>微应用含义</h3><p>又称子应用，微应用通常是一个单页面应用（SPA），可能包含一个或多个路由页面，一般情况下不存在多个微应用同时运行的场景。</p>\n<h3 id=\"微模块含义\"><a href=\"#微模块含义\" class=\"headerlink\" title=\"微模块含义\"></a>微模块含义</h3><p>微应用的更小粒度，通常是一个模块或页面，跟页面路由无关，可以随处挂载，也会出现多个微模块同时渲染运行。</p>\n<h2 id=\"使用原则\"><a href=\"#使用原则\" class=\"headerlink\" title=\"使用原则\"></a>使用原则</h2><p><a href=\"https://ice.work/docs/icestark/guide/principle\">使用原则</a></p>\n<h2 id=\"主应用开发与接入（React）\"><a href=\"#主应用开发与接入（React）\" class=\"headerlink\" title=\"主应用开发与接入（React）\"></a>主应用开发与接入（React）</h2><p>对于 React 主应用，推荐使用 AppRouter/AppRoute 这种 React Component 的方式使用。</p>\n<h3 id=\"注册微应用\"><a href=\"#注册微应用\" class=\"headerlink\" title=\"注册微应用\"></a>注册微应用</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/App.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; AppRouter, AppRoute &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> NotFound <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/NotFound&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> PageLoading <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/PageLoading&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> BasicLayout <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/layouts/BasicLayout&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    pathname: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleRouteChange = <span class=\"function\">(<span class=\"params\">pathname</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;route change&#x27;</span>, pathname);</span><br><span class=\"line\">    <span class=\"comment\">// 如有需求，可根据 pathname 切换 layout 的形态</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setState(&#123;</span><br><span class=\"line\">      pathname,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; pathname &#125; = <span class=\"built_in\">this</span>.state;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;BasicLayout pathname=&#123;pathname&#125;&gt;</span><br><span class=\"line\">        &lt;AppRouter</span><br><span class=\"line\">          NotFoundComponent=&#123;NotFound&#125;</span><br><span class=\"line\">          LoadingComponent=&#123;PageLoading&#125;</span><br><span class=\"line\">          onRouteChange=&#123;<span class=\"built_in\">this</span>.handleRouteChange&#125;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">          &lt;AppRoute</span><br><span class=\"line\">            </span><br><span class=\"line\">            title=<span class=\"string\">&quot;商家平台&quot;</span></span><br><span class=\"line\">            url=&#123;[</span><br><span class=\"line\">              <span class=\"string\">&#x27;//unpkg.com/icestark-child-seller/build/js/index.js&#x27;</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;//unpkg.com/icestark-child-seller/build/css/index.css&#x27;</span>,</span><br><span class=\"line\">            ]&#125;</span><br><span class=\"line\">          /&gt;</span><br><span class=\"line\">          &lt;AppRoute</span><br><span class=\"line\">            path=<span class=\"string\">&quot;/user&quot;</span></span><br><span class=\"line\">            <span class=\"comment\">//...</span></span><br><span class=\"line\">          /&gt;</span><br><span class=\"line\">          &lt;AppRoute</span><br><span class=\"line\">            path=<span class=\"string\">&quot;*&quot;</span></span><br><span class=\"line\">            render=&#123;<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;&gt;</span><span class=\"tag\">&lt;/&gt;</span></span>;</span><br><span class=\"line\">            &#125;&#125;</span><br><span class=\"line\">          /&gt;</span><br><span class=\"line\">        &lt;/AppRouter&gt;</span><br><span class=\"line\">      &lt;/BasicLayout&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"微应用配置\"><a href=\"#微应用配置\" class=\"headerlink\" title=\"微应用配置\"></a>微应用配置</h3><h4 id=\"基准路由-path\"><a href=\"#基准路由-path\" class=\"headerlink\" title=\"基准路由 path\"></a>基准路由 path</h4><p>类型为 <code>string|string[]</code>，大部分情况下都是 string，通过 path 约束每个微应用的路由定义，建立路由和微应用的映射关系。</p>\n<h4 id=\"微应用入口-url-entry-entryContent\"><a href=\"#微应用入口-url-entry-entryContent\" class=\"headerlink\" title=\"微应用入口 url/entry/entryContent\"></a>微应用入口 url/entry/entryContent</h4><p>通过 AppRoute 注册微应用，微应用入口支持 url/entry/entryContent 方式，此部分与 API 注册使用一致，<br>可参考文档<a href=\"https://ice.work/docs/icestark/guide/framework-api#%E5%BE%AE%E5%BA%94%E7%94%A8%E5%85%A5%E5%8F%A3\">微应用入口</a>使用。</p>\n<p>在此基础上，AppRoute 还支持了更为灵活的 component 和 render 方式配置微应用入口：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;AppRoute</span><br><span class=\"line\">  path=<span class=\"string\">&quot;/foo&quot;</span></span><br><span class=\"line\">  render=&#123;<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&quot;</span> /&gt;</span></span>;</span><br><span class=\"line\">  &#125;&#125;</span><br><span class=\"line\">  <span class=\"comment\">// 或者直接传入 component</span></span><br><span class=\"line\">  <span class=\"comment\">// component=&#123;CustomComponent&#125;</span></span><br><span class=\"line\">/&gt;</span><br></pre></td></tr></table></figure>\n<p>通过这种方式，可以通过 AppRoute 渲染一个 iframe 或者任意的 React 组件。</p>\n<h3 id=\"微应用注册通过数据驱动\"><a href=\"#微应用注册通过数据驱动\" class=\"headerlink\" title=\"微应用注册通过数据驱动\"></a>微应用注册通过数据驱动</h3><p>在很多场景下，我们的微应用可能通过一些配置平台注册，这时候可以将所有微应用的信息通过全局变量输出到 html 中，然后前端通过该数据注册微应用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/App.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; AppRouter, AppRoute &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;AppRouter&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          (<span class=\"built_in\">window</span>.appConfig || []).map(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (</span><br><span class=\"line\">              &lt;AppRoute</span><br><span class=\"line\">                key=&#123;idx&#125;</span><br><span class=\"line\">                path=&#123;item.path&#125;</span><br><span class=\"line\">                title=&#123;item.title&#125;</span><br><span class=\"line\">                url=&#123;item.url&#125;</span><br><span class=\"line\">              /&gt;</span><br><span class=\"line\">            );</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &lt;/AppRouter&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"应用级别权限校验\"><a href=\"#应用级别权限校验\" class=\"headerlink\" title=\"应用级别权限校验\"></a>应用级别权限校验</h3><p>icestark 支持对 <code>AppRoute</code> 再进行二次封装，统一处理容器定制/权限校验等场景：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/components/AuthAppRoute.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; useState, useEffect &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; AppRoute &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">AuthAppRoute</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [loading, setLoading] = useState(<span class=\"literal\">true</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [hasAuth, setHasAuth] = useState(<span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  useEffect(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      setHasAuth(<span class=\"literal\">true</span>);</span><br><span class=\"line\">      setLoading(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;, []);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (loading) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>wait for a moment<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!hasAuth) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>No access!<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">      <span class=\"comment\">//  注意要将 ...others 透传给 AppRoute</span></span><br><span class=\"line\">      &lt;AppRoute &#123;...props&#125; /&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>封装完成后即可在 AppRouter 下使用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/App.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; AppRouter, AppRoute &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> NotFound <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/NotFound&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> PageLoading <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/PageLoading&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> BasicLayout <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/layouts/BasicLayout&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> AuthAppRoute <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/AuthAppRoute&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;BasicLayout&gt;</span><br><span class=\"line\">        &lt;AppRouter</span><br><span class=\"line\">          NotFoundComponent=&#123;NotFound&#125;</span><br><span class=\"line\">          LoadingComponent=&#123;PageLoading&#125;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">          &#123;<span class=\"comment\">/* 注意：path/url/entry 等配置信息配置在组件外层，AppRouter 的直接子元素上 */</span>&#125;</span><br><span class=\"line\">          &lt;AuthAppRoute</span><br><span class=\"line\">            path=&#123;[<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"string\">&#x27;/message&#x27;</span>, <span class=\"string\">&#x27;/about&#x27;</span>]&#125;</span><br><span class=\"line\">            exact</span><br><span class=\"line\">            title=<span class=\"string\">&quot;主页&quot;</span></span><br><span class=\"line\">            url=&#123;[</span><br><span class=\"line\">              <span class=\"string\">&#x27;//unpkg.com/icestark-child-common/build/js/index.js&#x27;</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;//unpkg.com/icestark-child-common/build/css/index.css&#x27;</span>,</span><br><span class=\"line\">            ]&#125;</span><br><span class=\"line\">          /&gt;</span><br><span class=\"line\">        &lt;/AppRouter&gt;</span><br><span class=\"line\">      &lt;/BasicLayout&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"不同页面-Layout-不同\"><a href=\"#不同页面-Layout-不同\" class=\"headerlink\" title=\"不同页面 Layout 不同\"></a>不同页面 Layout 不同</h3><p>如上示例，通过 <code>onRouteChange</code> 可以捕获到所有的路由变化，此时可以根据不同路由对 Layout 做一些状态的变化，实现不同页面不同布局的能力。</p>\n<h2 id=\"主应用开发与接入（非-React）\"><a href=\"#主应用开发与接入（非-React）\" class=\"headerlink\" title=\"主应用开发与接入（非 React）\"></a>主应用开发与接入（非 React）</h2><p><a href=\"https://ice.work/docs/icestark/guide/framework-api\">主应用开发与接入（非 React）</a></p>\n<h2 id=\"微应用开发与接入\"><a href=\"#微应用开发与接入\" class=\"headerlink\" title=\"微应用开发与接入\"></a>微应用开发与接入</h2><p><a href=\"https://ice.work/docs/icestark/guide/child-app\">微应用开发与接入</a></p>\n<h2 id=\"应用间通信\"><a href=\"#应用间通信\" class=\"headerlink\" title=\"应用间通信\"></a>应用间通信</h2><p><a href=\"https://ice.work/docs/icestark/guide/interaction\">应用间通信</a></p>\n<h2 id=\"样式和脚本隔离\"><a href=\"#样式和脚本隔离\" class=\"headerlink\" title=\"样式和脚本隔离\"></a>样式和脚本隔离</h2><p><a href=\"https://ice.work/docs/icestark/guide/sandbox\">样式和脚本隔离</a></p>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><p><a href=\"https://ice.work/docs/icestark/guide/faq\">常见问题</a></p>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><h3 id=\"ice-stark\"><a href=\"#ice-stark\" class=\"headerlink\" title=\"@ice/stark\"></a>@ice/stark</h3><p>Vue版API<a href=\"https://ice.work/docs/icestark/reference/api\">详见</a></p>\n<h3 id=\"ice-stark-app\"><a href=\"#ice-stark-app\" class=\"headerlink\" title=\"@ice/stark-app\"></a>@ice/stark-app</h3><h4 id=\"isInIcestark\"><a href=\"#isInIcestark\" class=\"headerlink\" title=\"isInIcestark\"></a>isInIcestark</h4><p>判断当前运行环境，是否运行在 icestark 环境中，返回值类型：boolean</p>\n<ul>\n<li>类型：<code>function</code></li>\n<li>示例代码详见 <code>registerAppLeave</code></li>\n</ul>\n<h4 id=\"getBasename\"><a href=\"#getBasename\" class=\"headerlink\" title=\"getBasename\"></a>getBasename</h4><p>配置微应用 <code>React Router</code> 中的 <code>basename</code> 参数的方法，根据 <code>AppRoute</code> 中的 <code>basename</code> 或者 <code>path</code> 配置生成最终结果</p>\n<ul>\n<li>类型：<code>function</code></li>\n<li>默认值：<code>() =&gt; basename || (Array.isArray(path) ? path[0] : path)) || &quot;/&quot;</code></li>\n</ul>\n<h4 id=\"getMountNode\"><a href=\"#getMountNode\" class=\"headerlink\" title=\"getMountNode\"></a>getMountNode</h4><p>根据微应用运行环境，返回微应用渲染节点</p>\n<ul>\n<li>类型：<code>function</code></li>\n<li>默认值：<code>&lt;div id=&quot;ice-container&quot;&gt;&lt;/div&gt;</code></li>\n<li>使用规则：方法支持传参，传参代表默认渲染的 DOM 节点，默认节点只在微应用单独启动时生效。支持 <code>string | HTMLElement | function</code>， <code>string</code> 表示默认 DOM 节点的 <code>id</code>，<code>function</code> 支持函数返回值作为默认 DOM 节点</li>\n</ul>\n<h4 id=\"renderNotFound\"><a href=\"#renderNotFound\" class=\"headerlink\" title=\"renderNotFound\"></a>renderNotFound</h4><p>微应用触发渲染全局 404 的方法</p>\n<ul>\n<li>类型：<code>function</code></li>\n</ul>\n<h4 id=\"appHistory\"><a href=\"#appHistory\" class=\"headerlink\" title=\"appHistory\"></a>appHistory</h4><p>提供手动切换不同应用的方法。</p>\n<h5 id=\"appHistory-push\"><a href=\"#appHistory-push\" class=\"headerlink\" title=\"appHistory.push\"></a>appHistory.push</h5><ul>\n<li>类型：<code>function</code></li>\n<li>代码示例：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; appHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark-app&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SelfLink</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;span</span><br><span class=\"line\">        onClick=&#123;<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">          appHistory.push(<span class=\"string\">&#x27;/home&#x27;</span>);</span><br><span class=\"line\">        &#125;&#125;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">        selfLink</span><br><span class=\"line\">      &lt;/span&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"appHistory-replace\"><a href=\"#appHistory-replace\" class=\"headerlink\" title=\"appHistory.replace\"></a>appHistory.replace</h5><ul>\n<li>类型：<code>function</code></li>\n<li>代码示例参考 <code>appHistory.push</code></li>\n</ul>\n<h4 id=\"registerAppEnter\"><a href=\"#registerAppEnter\" class=\"headerlink\" title=\"registerAppEnter\"></a>registerAppEnter</h4><p>提供快速注册当前应用加载前的回调事件</p>\n<ul>\n<li>类型：<code>function</code></li>\n<li>示例代码详见 <code>registerAppLeave</code></li>\n</ul>\n<h4 id=\"registerAppLeave\"><a href=\"#registerAppLeave\" class=\"headerlink\" title=\"registerAppLeave\"></a>registerAppLeave</h4><p>提供快速注册当前应用卸载前的回调事件</p>\n<ul>\n<li>类型：<code>function</code></li>\n<li>代码示例：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/index.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDOM <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dom&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; isInIcestark, getMountNode, registerAppEnter, registerAppLeave &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark-app&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./router&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (isInIcestark()) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> mountNode = getMountNode();</span><br><span class=\"line\">  registerAppEnter(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    ReactDOM.render(router(), getMountNode());</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"comment\">// make sure the unmount event is triggered</span></span><br><span class=\"line\">  registerAppLeave(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    ReactDOM.unmountComponentAtNode(getMountNode());</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  ReactDOM.render(router(), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;ice-container&#x27;</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://ice.work/docs/icestark/about\">关于 icestark</a></li>\n</ul>"},{"title":"react-spring的使用","abbrlink":"4fbd9ce8","date":"2021-01-04T08:49:41.000Z","toc":true,"_content":"\n![首屏图](https://s3.ax1x.com/2021/01/12/sG4KfS.jpg)\n\n<!-- more -->\n\n```js\n  // 完整写法如下\n  // const fadeInProps = useSpring({ to: { opacity: 1 }, from: { opacity: 0 } })\n  const fadeInProps = useSpring({ opacity: 1, from: { opacity: 0 } })\n  // 省略中间代码\n  <animated.div style={fadeInProps}>\n    {preparElem}\n  </animated.div>\n```\n\n> !useSpring不可加入数组 typeScript报错\n\n## 参考资料\n\n* [用react-spring以react hook组件的形式编写动画](https://juejin.cn/post/6844903988383449096)\n","source":"_posts/react-spring的使用.md","raw":"---\ntitle: react-spring的使用\nabbrlink: 4fbd9ce8\ndate: 2021-01-04 16:49:41\ntags:\n  - 技术积累\n  - 前端\n  - js\ncategories:\n  - 技术积累\n  - 前端\n  - js\ntoc: true\n---\n\n![首屏图](https://s3.ax1x.com/2021/01/12/sG4KfS.jpg)\n\n<!-- more -->\n\n```js\n  // 完整写法如下\n  // const fadeInProps = useSpring({ to: { opacity: 1 }, from: { opacity: 0 } })\n  const fadeInProps = useSpring({ opacity: 1, from: { opacity: 0 } })\n  // 省略中间代码\n  <animated.div style={fadeInProps}>\n    {preparElem}\n  </animated.div>\n```\n\n> !useSpring不可加入数组 typeScript报错\n\n## 参考资料\n\n* [用react-spring以react hook组件的形式编写动画](https://juejin.cn/post/6844903988383449096)\n","slug":"react-spring的使用","published":1,"updated":"2021-01-30T04:16:46.666Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjye000f2an9aqn62nj4","content":"<p><img src=\"https://s3.ax1x.com/2021/01/12/sG4KfS.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 完整写法如下</span></span><br><span class=\"line\"><span class=\"comment\">// const fadeInProps = useSpring(&#123; to: &#123; opacity: 1 &#125;, from: &#123; opacity: 0 &#125; &#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fadeInProps = useSpring(&#123; <span class=\"attr\">opacity</span>: <span class=\"number\">1</span>, <span class=\"attr\">from</span>: &#123; <span class=\"attr\">opacity</span>: <span class=\"number\">0</span> &#125; &#125;)</span><br><span class=\"line\"><span class=\"comment\">// 省略中间代码</span></span><br><span class=\"line\">&lt;animated.div style=&#123;fadeInProps&#125;&gt;</span><br><span class=\"line\">  &#123;preparElem&#125;</span><br><span class=\"line\">&lt;/animated.div&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>!useSpring不可加入数组 typeScript报错</p>\n</blockquote>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://juejin.cn/post/6844903988383449096\">用react-spring以react hook组件的形式编写动画</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s3.ax1x.com/2021/01/12/sG4KfS.jpg\" alt=\"首屏图\"></p>","more":"<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 完整写法如下</span></span><br><span class=\"line\"><span class=\"comment\">// const fadeInProps = useSpring(&#123; to: &#123; opacity: 1 &#125;, from: &#123; opacity: 0 &#125; &#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fadeInProps = useSpring(&#123; <span class=\"attr\">opacity</span>: <span class=\"number\">1</span>, <span class=\"attr\">from</span>: &#123; <span class=\"attr\">opacity</span>: <span class=\"number\">0</span> &#125; &#125;)</span><br><span class=\"line\"><span class=\"comment\">// 省略中间代码</span></span><br><span class=\"line\">&lt;animated.div style=&#123;fadeInProps&#125;&gt;</span><br><span class=\"line\">  &#123;preparElem&#125;</span><br><span class=\"line\">&lt;/animated.div&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>!useSpring不可加入数组 typeScript报错</p>\n</blockquote>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://juejin.cn/post/6844903988383449096\">用react-spring以react hook组件的形式编写动画</a></li>\n</ul>"},{"title":"yilia主题进阶设置","toc":true,"abbrlink":"e10c0cde","date":"2020-07-17T03:30:27.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/07/17/UssPcF.jpg)\n\n<!-- more -->\n\n在用 Hexo 搭建完毕后，接着就寻找主题了，对比了几个主题 ，发现这个yilia 主题比较干净，\n简洁，于是就选了这个主题，但是有些细节不太习惯，于是就研究调整了一下，就是现在这个博客的样子。\n\n### 查看所有文件提示缺失模块\n\n`yilia` 在首次使用时，点击**所有文章**时，会出现模块找不到的错误，可按照提示操作即可\n注意一下，`_config.yml` 路径是指根目录下的，而非 `yilia` 主题下的 config文件\n\n![yilia_loss_module](https://s1.ax1x.com/2020/07/17/UyEc8g.png)\n\n### 配置图片资源\n\n* **添加图片资源文件夹**。 路径为 `themes/yilia/source/`下，可添加一个 `assets` 文件夹，里面存放图片资源即可\n* **配置文件中直接引用即可**。路径为 `themes/yilia/_config.yml`，找到如下即可\n\n``` text\n# 微信二维码图片\nweixin:  /assets/img/wechat.png\n# 头像图片\navatar:  /assets/img/head.jpg\n# 网页图标\nfavicon:  /assets/img/head.jpg\n```\n\n### 文章如何显示摘要\n\n* 问题: 点击主页时，发现所有文章都是全文显示，不利于查找，可控制显示的字数\n* 解决办法: 在你 MD 格式文章正文插入 `<!-- more -->`即可，只会显示它之前的，此后的就不显示，点击文章标题，全文阅读才可看到，同时注释掉以下 `themes/yilia/_config.yml`，避免展示重复\n\n* 重复时显示如下:\n\n![摘要配置重复](https://s1.ax1x.com/2020/07/17/UyeQDs.png)\n\n``` text\n# excerpt_link: more\n```\n\n* 效果:\n\n![yilia_摘要](https://s1.ax1x.com/2020/07/17/Uye6PK.png)\n\n### 文章显示目录\n\n增加文章目录 TOC(table of content )，方便阅读文章, 在 themes/yilia/_config.ym中进行配置 toc: 1即可，它会将你 Markdown 语法的标题，生成目录，目录查看在右下角。\n\n* `toc: 0` 默认不生成目录\n* `toc: 1` 文章配置时添加`toc: true`生成目录\n* `toc: 2` 默认生成目录\n\n![目录效果](https://s1.ax1x.com/2020/07/17/UyMNng.png)\n\n### 增加归档菜单\n\n修改 themes/yilia/_config.yml\n\n```text\nmenu:\n    主页:  /\n    归档:  /archives/index.html\n```\n\n### 增加分类菜单\n\n#### 添加分类链接\n\n修改`themes/yilia/_config.yml`\n\n```text\nmenu:\n    主页:  /\n    分类:  /categories/index.html\n    归档:  /archives/index.html\n```\n\n#### 分类页面的构建\n\n* 新建 categories 页面\n\n```shell\nhexo new page categories\n```\n\n该命令在 source 目录下生成一个 categories 目录，categories 目录下有一个 index.md 文件。\n\n* 修改 categories/index.md 为：\n\n```html\n---\ntitle: 文章分类\ndate: 2018-06-11 10:13:21\ntype: \"categories\"\ncomments: false\n---\n```\n\n* 生成 html\n\n```shell\nhexo g\nhexo s\n```\n\n访问`http://localhost:4000/categories/` ，即可看到 categories 页面，只不过现在的页面只有标题。\n\n#### 修改主题\n\n修改 `yilia/source-src/css/main.scss`，将下面的内容添加进去\n\n```css\n@import \"./category\";\n```\n\n在 `yilia/source-src/css/`目录下添加`category.scss`，并将下面的内容添加进去\n\n```css\n.category-all-page {\n    margin: 30px 40px 30px 40px;\n    position: relative;\n    min-height: 70vh;\n}\n.category-all-page h2 {\n    margin: 20px 0;\n}\n.category-all-page .category-all-title {\n    text-align: center;\n}\n.category-all-page .category-all {\n    margin-top: 20px;\n}\n.category-all-page .category-list {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n.category-all-page .category-list-item-list-item {\n    margin: 10px 15px;\n}\n.category-all-page .category-list-item-list-count {\n    color: #999;\n}\n.category-all-page .category-list-item-list-count:before {\n    display: inline;\n    content: \" (\";\n}\n.category-all-page .category-list-item-list-count:after {\n    display: inline;\n    content: \") \";\n}\n.category-all-page .category-list-item {\n    margin: 10px 10px;\n}\n.category-all-page .category-list-count {\n    color: #999;\n}\n.category-all-page .category-list-count:before {\n    display: inline;\n    content: \" (\";\n}\n.category-all-page .category-list-count:after {\n    display: inline;\n    content: \") \";\n}\n.category-all-page .category-list-child {\n    padding-left: 10px;\n}\n```\n\n生成编译文件\n\n```shell\n# cd 到 yilia 目录下\nnpm install\nnpm run dev\nnpm run dist\n```\n\n新建 `yilia/layout/categories.ejs`，输入：\n\n```html\n<article class=\"article article-type-post show\">\n    <header class=\"article-header\" style=\"border-bottom: 1px solid #ccc\">\n        <h1 class=\"article-title\" itemprop=\"name\">\n            <%= page.title %>\n        </h1>\n    </header>\n\n    <% if (site.categories.length){ %>\n    <div class=\"category-all-page article-type-post show\">\n        <h2>共计&nbsp;<%= site.categories.length %>&nbsp;个分类</h2>\n        <ul class=\"category-list\">\n            <% site.categories.sort('name').each(function(item){ %>\n            <% if(item.posts.length){ %>\n            <li class=\"category-list-item\">\n                <a href=\"<%- config.root %><%- item.path %>\"\n                    title=\"<%= item.name %>\"><%= item.name %>[<%= item.posts.length %>]</a>\n            </li>\n            <% } %>\n            <% }); %>\n        </ul>\n    </div>\n    <% } %>\n</article>\n```\n\n#### 使用分类\n\n修改文章头部\n\n```html\n---\ntitle: yilia主题进阶设置\ndate: 2020-07-17 11:30:27\ntags: [hexo,技术积累]\ncategories: [hexo,技术积累]\ntoc: true\n---\n```\n\n效果如下\n\n![分类](https://s1.ax1x.com/2020/07/23/ULEmyF.png)\n\n#### 多层分类\n\n以上，已经完成了categories分类页面，但是只有一层分类。假设，现在有一篇文章的分类为多层分类\n\n例如：\n\n```text\ntitle: yilia主题进阶设置\ndate: 2020-07-17 11:30:27\ntags: [hexo,技术积累]\ncategories: [hexo,技术积累]\ntoc: true\n```\n\n显示的效果为所有类别平级显示，不是我们想要的效果，如下图：\n\n![分类](https://s1.ax1x.com/2020/07/23/ULEmyF.png)\n\n本节就实现多层分类的显示效果，具体操作如下：\n\n修改 `yilia/layout/categories.ejs`，输入：\n\n```html\n<article class=\"article article-type-post show\">\n  <header class=\"article-header\" style=\"border-bottom: 1px solid #ccc\">\n  <h1 class=\"article-title\" itemprop=\"name\">\n    <%= page.title %>\n  </h1>\n  </header>\n\n  <% if (site.categories.length){ %>\n  <div class=\"category-all-page\">\n    <h2>共计&nbsp;<%= site.categories.length %>&nbsp;个分类</h2>\n    <%- list_categories(site.categories, {\n      show_count: true,\n      class: 'category-list-item',\n      style: 'list',\n      depth: 3, # 显示的层级\n      separator: ''\n    }) %>\n  </div>\n  <% } %>\n</article>\n```\n\n再次访问categories，达到了预期效果，如下图：\n\n![多级分类](https://s1.ax1x.com/2020/07/23/ULeeQf.png)\n\n### 增加tags菜单\n\n修改 themes/yilia/_config.yml\n\n```text\nmenu:\n    主页:  /\n    归档:  /tags/tag名称/\n```\n\n### 修改代码块样式\n\n默认的代码样式太刺眼了，调成稍微柔和一些的，这里是调成 Atom 风格，以下为两种方式都可以，推荐第一种直接修改编译好的文件，不然还需要重新build。\n\n* **直接修改编译好的文件**。路径为：`theme\\yilia\\source\\main.0cf68a.css`\n  * 修改代码背景色，搜索 `.article-entry .highlight`, 修改background后面的颜色\n  ![背景色修改](https://s1.ax1x.com/2020/07/17/UyGiAe.png)\n  * 修改代码字体颜色 `.article-entry .highlight .line`\n  ![代码字体色修改](https://s1.ax1x.com/2020/07/17/UyGRHO.png)\n* **修改源文件重新build**。上述资源对应源文件为 yilia\\source-src\\css\\highlight.scss，按照如下方式build\n\n```shell\ncd 到 yilia 目录下\nnpm install\nnpm run dev\nnpm run dist\n```\n\n### 添加相册功能\n\n> 实现相册功能内容较多 以单独一篇文章来记录\n\n[Yilia主题如何添加相册功能](/archives/20200718f57a1917/)\n\n### 增加不蒜子统计\n\n利用这个统计，可以知道你博客的访问量\n\n#### 安装不蒜子脚本\n\n在 `themes\\yilia\\layout\\_partial\\after-footer.ejs`最后添加，注意以下新的域名才有效，老的已经失效了\n\n```html\n<script async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"></script>\n```\n\n#### 添加统计网站访问量\n\n修改 `themes\\yilia\\layout\\_partial\\footer.ejs`，包括访客数和站点访问总量\n\n```html\n# PV方式，单个用户连续点击 n 篇，记录 n 次记录值\n<span id=\"busuanzi_container_site_pv\">  本站总访问量<span id=\"busuanzi_value_site_pv\"></span>次</span>\n\n# UV方式，单个用户连续点击 n 篇，记录 1 次记录值\n<span id=\"busuanzi_container_site_uv\">  本站访客数<span id=\"busuanzi_value_site_uv\"></span>人次</span>\n```\n\n我的footer.ejs配置\n\n```html\n<footer id=\"footer\">\n  <div class=\"outer\">\n    <div id=\"footer-info\">\n      <div class=\"footer-left\">\n        &copy; <%= date(new Date(), 'YYYY') %> <%= config.author || config.title %>\n      </div>\n      <div class=\"footer-right\">\n        <a href=\"http://hexo.io/\" target=\"_blank\">Hexo</a> Theme <a href=\"https://github.com/litten/hexo-theme-yilia\" target=\"_blank\">Yilia</a> by Litten\n      </div>\n    </div>\n    <div calss=\"count-span\">\n      <span id=\"busuanzi_container_site_pv\">\n        总访问量: <span id=\"busuanzi_value_site_pv\"></span>\n      </span>\n\n      <span id=\"busuanzi_container_site_uv\">\n        总访客: <span id=\"busuanzi_value_site_uv\"></span>\n      </span>\n    </div>\n  </div>\n</footer>\n```\n\n#### 单篇文章点击量\n\n`themes\\yilia\\layout\\_partial\\article.ejs`中 在 `<%- partial('post/tag') %>` 插入如下代码\n\n```html\n<!--显示阅读次数-->\n<% if (!index && post.comments){ %>\n  <a class=\"cloud-tie-join-count\" href=\"<%- url_for(post.path) %>\" style=\"color:gray;font-size:14px;\">\n    <span class=\"icon-smile\"></span>\n    <span id=\"busuanzi_container_page_pv\">\n      阅读量(<span id=\"busuanzi_value_page_pv\"></span>)\n    </span>\n  </a>\n<% } %>\n```\n\n### 添加评论系统\n\n> 实现评论功能内容较多 以单独一篇文章来记录\n\n[Yilia主题如何添加评论功能](/archives/202007217dfdd292/)\n\n### 插入网易云音乐\n\n#### 网易云音乐外链播放器生成\n\n登录网页版网易云音乐，打开一首歌，点击 “生成外链播放器”(找首没版权限制的歌曲好难)。\n\n#### 侧栏添加背景音乐\n\n打开 `/hexo/themes/yilia/layout/_partial/left-col.ejs` 文件，\n把音乐 HTML 代码粘贴进去，可以添加样式，改变大小，这是我的代码：\n\n```html\n<nav class=\"header-nav\">\n    <div class=\"social\">\n        <% for (var i in theme.subnav){ %>\n            <a class=\"<%= i %>\" target=\"_blank\" href=\"<%- url_for(theme.subnav[i]) %>\" title=\"<%= i %>\"><i class=\"icon-<%= i %>\"></i></a>\n        <%}%>\n    </div>\n\n    <% if(theme.music.enable){ %>\n    <!--音乐播放插件-->\n      <div style=\"margin-top:30px;\">\n        <iframe\n          frameborder=\"no\"\n          border=\"<%=theme.music.border%>\"\n          marginwidth=\"<%=theme.music.marginwidth%>\"\n          marginheight=\"<%=theme.music.marginheight%>\"\n          width=\"<%=theme.music.width%>\"\n          height=\"<%=theme.music.height%>\"\n          src=\"<%=theme.music.src%>\"\n        >\n        </iframe>\n      </div>\n    <%}%>\n</nav>\n```\n\n打开 `/hexo/themes/yilia/_config.yml` 文件，\n把音乐播放器的配置添加上。注意“music:”后面必须要有一个空格，如图：\n\n```text\n# 配置网易云音乐\nmusic: \n  enable: true #是否展示\n  src: '//music.163.com/outchain/player?type=2&id=470795480&auto=1&height=32' #网易云音乐外链地址\n  border: 0\n  marginwidth: 0\n  marginheight: 0\n  width: 240\n  height: 52\n```\n\n添加后效果如图\n\n![添加效果](https://s1.ax1x.com/2020/07/30/auaQD1.png)\n\n### 添加版权信息\n\n### 百度/Google统计/SEO\n\n### 路过图床\n\n#### 上传图片到路过图床\n\n#### blog中使用图床图片\n\n#### 可能遇到的问题\n\n> 您被禁止使用路过图床 imgchr.com\n> 本图床服务免费套餐仅限非商业行为的个人使用, 若用于商业行为请购买付费套餐. imgchr.com\n\n可能原因:\n\n1. 该IP段用户(不一定是您)曾经上传过非法图片.\n2. 正在使用代理/扶墙, 请关闭扶墙代理工具后再刷新本页面.\n\n[参考文档](https://www.hostloc.com/thread-591879-1-1.html)\n\n### 七牛云图床\n\n#### 上传图片到七牛云\n\n#### 使用 PicGo 自动生成外链\n\n### 文章字数/阅读时长\n\n#### 安装 hexo-wordcount\n\n在博客目录下打开 Git Bash，输入命令\n\n```shell\nnpm i –save hexo-wordcount\n```\n\n#### 文件配置\n\n在 `theme\\yilia\\layout\\_partial\\post` 下创建 word.ejs 文件：\n\n```html\n<div style=\"margin-top:10px;\">\n    <span class=\"post-time\">\n      <span class=\"post-meta-item-icon\">\n        <i class=\"fa fa-keyboard-o\"></i>\n        <span class=\"post-meta-item-text\">  字数统计: </span>\n        <span class=\"post-count\"><%= wordcount(post.content) %>字</span>\n      </span>\n    </span>\n\n    <span class=\"post-time\">\n      &nbsp; | &nbsp;\n      <span class=\"post-meta-item-icon\">\n        <i class=\"fa fa-hourglass-half\"></i>\n        <span class=\"post-meta-item-text\">  阅读时长: </span>\n        <span class=\"post-count\"><%= min2read(post.content) %>分</span>\n      </span>\n    </span>\n</div>\n```\n\n然后在 `themes/yilia/layout/_partial/article.ejs` 中添加\n\n```html\n<div class=\"article-inner\">\n    <% if (post.link || post.title){ %>\n      <header class=\"article-header\">\n        <%- partial('post/title', {class_name: 'article-title'}) %>\n        <% if (!post.noDate){ %>\n        <%- partial('post/date', {class_name: 'archive-article-date', date_format: null}) %>\n        <!-- 需要添加的位置 -->\n        <!-- 开始添加字数统计-->\n        <% if(theme.word_count && !post.no_word_count){%>\n          <%- partial('post/word') %>\n          <% } %>\n        <!-- 添加完成 -->\n\n        <% } %>\n      </header>\n      <!-- 省略剩余代码 -->\n    <% } %>\n</div>\n```\n\n#### 开启功能\n\n在站点的（不是主题的）_config.yml 中添加下面代码\n\n```text\n# 是否开启字数统计\n#不需要使用，直接设置值为false，或注释掉\nword_count: True\n```\n\n### Url持久化\n\n> 实现Url持久化 以单独一篇文章来记录\n\n[Yilia主题生成永久短连接](/archives/20200803e0185335/)\n\n### 网站运行时间\n\n### 鼠标点击小红心设置\n\n### 代码块行号错乱问题解决\n\n### sitemap 功能添加\n\n> 实现sitemap功能 以单独一篇文章来记录\n\n[hexo添加sitemap功能](/archives/20200814f023bd8e/)\n\n### SubNav图标拓展\n\n> 实现SubNav图标拓展 以单独一篇文章来记录\n\n[Yilia主题如何添加左侧SubNav图标](/archives/20210205e928c2fc/)\n\n### RSS 功能添加\n\n#### 安装 RSS 插件\n\n注意一定要安装到 blog 的根目录\n\n```shell\nnpm install --save hexo-generator-feed\n```\n\n#### 更改配置文件\n\n在你的项目的`_config.yml` 配置文件下找到 `Extensions` 添加如下内容：\n\n```text\n# Extensions  #插件和主题\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\n#RSS订阅\nplugins: hexo-generater-feed\n```\n\n在主题配置文件里，在 rss 位置，添加 `/atom.xml`\n\n```text\nsubnav:\n  #github: \"#\"\n  #weibo: \"#\"\n  rss: \"/atom.xml\"\n```\n\n### 谷歌统计添加\n\n### 部署命令\n\n修改配置后，输入以下三条命令即可部署\n\n``` shell\nhexo clean\nhexo g\nhexo d\n```\n\n点击这里 查看博客正文的效果\n\n以上希望对你所有帮助。\n\n## 参考资料\n\n* [Hexo-Yilia 进阶笔记](https://tding.top/archives/9a232bbe.html)\n* [Hexo yilia 主题一揽子使用方案](https://blog.csdn.net/liuyunjay66/article/details/79845944)\n* [hexo yilia 文章浏览量统计](https://codegitz.github.io/2018/04/13/hexo-yilia-%E6%96%87%E7%AB%A0%E6%B5%8F%E8%A7%88%E9%87%8F%E7%BB%9F%E8%AE%A1/)\n* [Hexo 添加分类及标签](https://juejin.im/post/5cc11c41f265da038f7745b5)\n* [Hexo添加categories页面](https://www.voidking.com/dev-hexo-categories/)\n","source":"_posts/yilia主题进阶设置.md","raw":"---\ntitle: yilia主题进阶设置\ntags:\n  - 技术积累\n  - hexo\n  - yilia\ncategories:\n  - 技术积累\n  - hexo\n  - yilia\ntoc: true\nabbrlink: e10c0cde\ndate: 2020-07-17 11:30:27\n---\n\n![首屏图](https://s1.ax1x.com/2020/07/17/UssPcF.jpg)\n\n<!-- more -->\n\n在用 Hexo 搭建完毕后，接着就寻找主题了，对比了几个主题 ，发现这个yilia 主题比较干净，\n简洁，于是就选了这个主题，但是有些细节不太习惯，于是就研究调整了一下，就是现在这个博客的样子。\n\n### 查看所有文件提示缺失模块\n\n`yilia` 在首次使用时，点击**所有文章**时，会出现模块找不到的错误，可按照提示操作即可\n注意一下，`_config.yml` 路径是指根目录下的，而非 `yilia` 主题下的 config文件\n\n![yilia_loss_module](https://s1.ax1x.com/2020/07/17/UyEc8g.png)\n\n### 配置图片资源\n\n* **添加图片资源文件夹**。 路径为 `themes/yilia/source/`下，可添加一个 `assets` 文件夹，里面存放图片资源即可\n* **配置文件中直接引用即可**。路径为 `themes/yilia/_config.yml`，找到如下即可\n\n``` text\n# 微信二维码图片\nweixin:  /assets/img/wechat.png\n# 头像图片\navatar:  /assets/img/head.jpg\n# 网页图标\nfavicon:  /assets/img/head.jpg\n```\n\n### 文章如何显示摘要\n\n* 问题: 点击主页时，发现所有文章都是全文显示，不利于查找，可控制显示的字数\n* 解决办法: 在你 MD 格式文章正文插入 `<!-- more -->`即可，只会显示它之前的，此后的就不显示，点击文章标题，全文阅读才可看到，同时注释掉以下 `themes/yilia/_config.yml`，避免展示重复\n\n* 重复时显示如下:\n\n![摘要配置重复](https://s1.ax1x.com/2020/07/17/UyeQDs.png)\n\n``` text\n# excerpt_link: more\n```\n\n* 效果:\n\n![yilia_摘要](https://s1.ax1x.com/2020/07/17/Uye6PK.png)\n\n### 文章显示目录\n\n增加文章目录 TOC(table of content )，方便阅读文章, 在 themes/yilia/_config.ym中进行配置 toc: 1即可，它会将你 Markdown 语法的标题，生成目录，目录查看在右下角。\n\n* `toc: 0` 默认不生成目录\n* `toc: 1` 文章配置时添加`toc: true`生成目录\n* `toc: 2` 默认生成目录\n\n![目录效果](https://s1.ax1x.com/2020/07/17/UyMNng.png)\n\n### 增加归档菜单\n\n修改 themes/yilia/_config.yml\n\n```text\nmenu:\n    主页:  /\n    归档:  /archives/index.html\n```\n\n### 增加分类菜单\n\n#### 添加分类链接\n\n修改`themes/yilia/_config.yml`\n\n```text\nmenu:\n    主页:  /\n    分类:  /categories/index.html\n    归档:  /archives/index.html\n```\n\n#### 分类页面的构建\n\n* 新建 categories 页面\n\n```shell\nhexo new page categories\n```\n\n该命令在 source 目录下生成一个 categories 目录，categories 目录下有一个 index.md 文件。\n\n* 修改 categories/index.md 为：\n\n```html\n---\ntitle: 文章分类\ndate: 2018-06-11 10:13:21\ntype: \"categories\"\ncomments: false\n---\n```\n\n* 生成 html\n\n```shell\nhexo g\nhexo s\n```\n\n访问`http://localhost:4000/categories/` ，即可看到 categories 页面，只不过现在的页面只有标题。\n\n#### 修改主题\n\n修改 `yilia/source-src/css/main.scss`，将下面的内容添加进去\n\n```css\n@import \"./category\";\n```\n\n在 `yilia/source-src/css/`目录下添加`category.scss`，并将下面的内容添加进去\n\n```css\n.category-all-page {\n    margin: 30px 40px 30px 40px;\n    position: relative;\n    min-height: 70vh;\n}\n.category-all-page h2 {\n    margin: 20px 0;\n}\n.category-all-page .category-all-title {\n    text-align: center;\n}\n.category-all-page .category-all {\n    margin-top: 20px;\n}\n.category-all-page .category-list {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n.category-all-page .category-list-item-list-item {\n    margin: 10px 15px;\n}\n.category-all-page .category-list-item-list-count {\n    color: #999;\n}\n.category-all-page .category-list-item-list-count:before {\n    display: inline;\n    content: \" (\";\n}\n.category-all-page .category-list-item-list-count:after {\n    display: inline;\n    content: \") \";\n}\n.category-all-page .category-list-item {\n    margin: 10px 10px;\n}\n.category-all-page .category-list-count {\n    color: #999;\n}\n.category-all-page .category-list-count:before {\n    display: inline;\n    content: \" (\";\n}\n.category-all-page .category-list-count:after {\n    display: inline;\n    content: \") \";\n}\n.category-all-page .category-list-child {\n    padding-left: 10px;\n}\n```\n\n生成编译文件\n\n```shell\n# cd 到 yilia 目录下\nnpm install\nnpm run dev\nnpm run dist\n```\n\n新建 `yilia/layout/categories.ejs`，输入：\n\n```html\n<article class=\"article article-type-post show\">\n    <header class=\"article-header\" style=\"border-bottom: 1px solid #ccc\">\n        <h1 class=\"article-title\" itemprop=\"name\">\n            <%= page.title %>\n        </h1>\n    </header>\n\n    <% if (site.categories.length){ %>\n    <div class=\"category-all-page article-type-post show\">\n        <h2>共计&nbsp;<%= site.categories.length %>&nbsp;个分类</h2>\n        <ul class=\"category-list\">\n            <% site.categories.sort('name').each(function(item){ %>\n            <% if(item.posts.length){ %>\n            <li class=\"category-list-item\">\n                <a href=\"<%- config.root %><%- item.path %>\"\n                    title=\"<%= item.name %>\"><%= item.name %>[<%= item.posts.length %>]</a>\n            </li>\n            <% } %>\n            <% }); %>\n        </ul>\n    </div>\n    <% } %>\n</article>\n```\n\n#### 使用分类\n\n修改文章头部\n\n```html\n---\ntitle: yilia主题进阶设置\ndate: 2020-07-17 11:30:27\ntags: [hexo,技术积累]\ncategories: [hexo,技术积累]\ntoc: true\n---\n```\n\n效果如下\n\n![分类](https://s1.ax1x.com/2020/07/23/ULEmyF.png)\n\n#### 多层分类\n\n以上，已经完成了categories分类页面，但是只有一层分类。假设，现在有一篇文章的分类为多层分类\n\n例如：\n\n```text\ntitle: yilia主题进阶设置\ndate: 2020-07-17 11:30:27\ntags: [hexo,技术积累]\ncategories: [hexo,技术积累]\ntoc: true\n```\n\n显示的效果为所有类别平级显示，不是我们想要的效果，如下图：\n\n![分类](https://s1.ax1x.com/2020/07/23/ULEmyF.png)\n\n本节就实现多层分类的显示效果，具体操作如下：\n\n修改 `yilia/layout/categories.ejs`，输入：\n\n```html\n<article class=\"article article-type-post show\">\n  <header class=\"article-header\" style=\"border-bottom: 1px solid #ccc\">\n  <h1 class=\"article-title\" itemprop=\"name\">\n    <%= page.title %>\n  </h1>\n  </header>\n\n  <% if (site.categories.length){ %>\n  <div class=\"category-all-page\">\n    <h2>共计&nbsp;<%= site.categories.length %>&nbsp;个分类</h2>\n    <%- list_categories(site.categories, {\n      show_count: true,\n      class: 'category-list-item',\n      style: 'list',\n      depth: 3, # 显示的层级\n      separator: ''\n    }) %>\n  </div>\n  <% } %>\n</article>\n```\n\n再次访问categories，达到了预期效果，如下图：\n\n![多级分类](https://s1.ax1x.com/2020/07/23/ULeeQf.png)\n\n### 增加tags菜单\n\n修改 themes/yilia/_config.yml\n\n```text\nmenu:\n    主页:  /\n    归档:  /tags/tag名称/\n```\n\n### 修改代码块样式\n\n默认的代码样式太刺眼了，调成稍微柔和一些的，这里是调成 Atom 风格，以下为两种方式都可以，推荐第一种直接修改编译好的文件，不然还需要重新build。\n\n* **直接修改编译好的文件**。路径为：`theme\\yilia\\source\\main.0cf68a.css`\n  * 修改代码背景色，搜索 `.article-entry .highlight`, 修改background后面的颜色\n  ![背景色修改](https://s1.ax1x.com/2020/07/17/UyGiAe.png)\n  * 修改代码字体颜色 `.article-entry .highlight .line`\n  ![代码字体色修改](https://s1.ax1x.com/2020/07/17/UyGRHO.png)\n* **修改源文件重新build**。上述资源对应源文件为 yilia\\source-src\\css\\highlight.scss，按照如下方式build\n\n```shell\ncd 到 yilia 目录下\nnpm install\nnpm run dev\nnpm run dist\n```\n\n### 添加相册功能\n\n> 实现相册功能内容较多 以单独一篇文章来记录\n\n[Yilia主题如何添加相册功能](/archives/20200718f57a1917/)\n\n### 增加不蒜子统计\n\n利用这个统计，可以知道你博客的访问量\n\n#### 安装不蒜子脚本\n\n在 `themes\\yilia\\layout\\_partial\\after-footer.ejs`最后添加，注意以下新的域名才有效，老的已经失效了\n\n```html\n<script async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"></script>\n```\n\n#### 添加统计网站访问量\n\n修改 `themes\\yilia\\layout\\_partial\\footer.ejs`，包括访客数和站点访问总量\n\n```html\n# PV方式，单个用户连续点击 n 篇，记录 n 次记录值\n<span id=\"busuanzi_container_site_pv\">  本站总访问量<span id=\"busuanzi_value_site_pv\"></span>次</span>\n\n# UV方式，单个用户连续点击 n 篇，记录 1 次记录值\n<span id=\"busuanzi_container_site_uv\">  本站访客数<span id=\"busuanzi_value_site_uv\"></span>人次</span>\n```\n\n我的footer.ejs配置\n\n```html\n<footer id=\"footer\">\n  <div class=\"outer\">\n    <div id=\"footer-info\">\n      <div class=\"footer-left\">\n        &copy; <%= date(new Date(), 'YYYY') %> <%= config.author || config.title %>\n      </div>\n      <div class=\"footer-right\">\n        <a href=\"http://hexo.io/\" target=\"_blank\">Hexo</a> Theme <a href=\"https://github.com/litten/hexo-theme-yilia\" target=\"_blank\">Yilia</a> by Litten\n      </div>\n    </div>\n    <div calss=\"count-span\">\n      <span id=\"busuanzi_container_site_pv\">\n        总访问量: <span id=\"busuanzi_value_site_pv\"></span>\n      </span>\n\n      <span id=\"busuanzi_container_site_uv\">\n        总访客: <span id=\"busuanzi_value_site_uv\"></span>\n      </span>\n    </div>\n  </div>\n</footer>\n```\n\n#### 单篇文章点击量\n\n`themes\\yilia\\layout\\_partial\\article.ejs`中 在 `<%- partial('post/tag') %>` 插入如下代码\n\n```html\n<!--显示阅读次数-->\n<% if (!index && post.comments){ %>\n  <a class=\"cloud-tie-join-count\" href=\"<%- url_for(post.path) %>\" style=\"color:gray;font-size:14px;\">\n    <span class=\"icon-smile\"></span>\n    <span id=\"busuanzi_container_page_pv\">\n      阅读量(<span id=\"busuanzi_value_page_pv\"></span>)\n    </span>\n  </a>\n<% } %>\n```\n\n### 添加评论系统\n\n> 实现评论功能内容较多 以单独一篇文章来记录\n\n[Yilia主题如何添加评论功能](/archives/202007217dfdd292/)\n\n### 插入网易云音乐\n\n#### 网易云音乐外链播放器生成\n\n登录网页版网易云音乐，打开一首歌，点击 “生成外链播放器”(找首没版权限制的歌曲好难)。\n\n#### 侧栏添加背景音乐\n\n打开 `/hexo/themes/yilia/layout/_partial/left-col.ejs` 文件，\n把音乐 HTML 代码粘贴进去，可以添加样式，改变大小，这是我的代码：\n\n```html\n<nav class=\"header-nav\">\n    <div class=\"social\">\n        <% for (var i in theme.subnav){ %>\n            <a class=\"<%= i %>\" target=\"_blank\" href=\"<%- url_for(theme.subnav[i]) %>\" title=\"<%= i %>\"><i class=\"icon-<%= i %>\"></i></a>\n        <%}%>\n    </div>\n\n    <% if(theme.music.enable){ %>\n    <!--音乐播放插件-->\n      <div style=\"margin-top:30px;\">\n        <iframe\n          frameborder=\"no\"\n          border=\"<%=theme.music.border%>\"\n          marginwidth=\"<%=theme.music.marginwidth%>\"\n          marginheight=\"<%=theme.music.marginheight%>\"\n          width=\"<%=theme.music.width%>\"\n          height=\"<%=theme.music.height%>\"\n          src=\"<%=theme.music.src%>\"\n        >\n        </iframe>\n      </div>\n    <%}%>\n</nav>\n```\n\n打开 `/hexo/themes/yilia/_config.yml` 文件，\n把音乐播放器的配置添加上。注意“music:”后面必须要有一个空格，如图：\n\n```text\n# 配置网易云音乐\nmusic: \n  enable: true #是否展示\n  src: '//music.163.com/outchain/player?type=2&id=470795480&auto=1&height=32' #网易云音乐外链地址\n  border: 0\n  marginwidth: 0\n  marginheight: 0\n  width: 240\n  height: 52\n```\n\n添加后效果如图\n\n![添加效果](https://s1.ax1x.com/2020/07/30/auaQD1.png)\n\n### 添加版权信息\n\n### 百度/Google统计/SEO\n\n### 路过图床\n\n#### 上传图片到路过图床\n\n#### blog中使用图床图片\n\n#### 可能遇到的问题\n\n> 您被禁止使用路过图床 imgchr.com\n> 本图床服务免费套餐仅限非商业行为的个人使用, 若用于商业行为请购买付费套餐. imgchr.com\n\n可能原因:\n\n1. 该IP段用户(不一定是您)曾经上传过非法图片.\n2. 正在使用代理/扶墙, 请关闭扶墙代理工具后再刷新本页面.\n\n[参考文档](https://www.hostloc.com/thread-591879-1-1.html)\n\n### 七牛云图床\n\n#### 上传图片到七牛云\n\n#### 使用 PicGo 自动生成外链\n\n### 文章字数/阅读时长\n\n#### 安装 hexo-wordcount\n\n在博客目录下打开 Git Bash，输入命令\n\n```shell\nnpm i –save hexo-wordcount\n```\n\n#### 文件配置\n\n在 `theme\\yilia\\layout\\_partial\\post` 下创建 word.ejs 文件：\n\n```html\n<div style=\"margin-top:10px;\">\n    <span class=\"post-time\">\n      <span class=\"post-meta-item-icon\">\n        <i class=\"fa fa-keyboard-o\"></i>\n        <span class=\"post-meta-item-text\">  字数统计: </span>\n        <span class=\"post-count\"><%= wordcount(post.content) %>字</span>\n      </span>\n    </span>\n\n    <span class=\"post-time\">\n      &nbsp; | &nbsp;\n      <span class=\"post-meta-item-icon\">\n        <i class=\"fa fa-hourglass-half\"></i>\n        <span class=\"post-meta-item-text\">  阅读时长: </span>\n        <span class=\"post-count\"><%= min2read(post.content) %>分</span>\n      </span>\n    </span>\n</div>\n```\n\n然后在 `themes/yilia/layout/_partial/article.ejs` 中添加\n\n```html\n<div class=\"article-inner\">\n    <% if (post.link || post.title){ %>\n      <header class=\"article-header\">\n        <%- partial('post/title', {class_name: 'article-title'}) %>\n        <% if (!post.noDate){ %>\n        <%- partial('post/date', {class_name: 'archive-article-date', date_format: null}) %>\n        <!-- 需要添加的位置 -->\n        <!-- 开始添加字数统计-->\n        <% if(theme.word_count && !post.no_word_count){%>\n          <%- partial('post/word') %>\n          <% } %>\n        <!-- 添加完成 -->\n\n        <% } %>\n      </header>\n      <!-- 省略剩余代码 -->\n    <% } %>\n</div>\n```\n\n#### 开启功能\n\n在站点的（不是主题的）_config.yml 中添加下面代码\n\n```text\n# 是否开启字数统计\n#不需要使用，直接设置值为false，或注释掉\nword_count: True\n```\n\n### Url持久化\n\n> 实现Url持久化 以单独一篇文章来记录\n\n[Yilia主题生成永久短连接](/archives/20200803e0185335/)\n\n### 网站运行时间\n\n### 鼠标点击小红心设置\n\n### 代码块行号错乱问题解决\n\n### sitemap 功能添加\n\n> 实现sitemap功能 以单独一篇文章来记录\n\n[hexo添加sitemap功能](/archives/20200814f023bd8e/)\n\n### SubNav图标拓展\n\n> 实现SubNav图标拓展 以单独一篇文章来记录\n\n[Yilia主题如何添加左侧SubNav图标](/archives/20210205e928c2fc/)\n\n### RSS 功能添加\n\n#### 安装 RSS 插件\n\n注意一定要安装到 blog 的根目录\n\n```shell\nnpm install --save hexo-generator-feed\n```\n\n#### 更改配置文件\n\n在你的项目的`_config.yml` 配置文件下找到 `Extensions` 添加如下内容：\n\n```text\n# Extensions  #插件和主题\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\n#RSS订阅\nplugins: hexo-generater-feed\n```\n\n在主题配置文件里，在 rss 位置，添加 `/atom.xml`\n\n```text\nsubnav:\n  #github: \"#\"\n  #weibo: \"#\"\n  rss: \"/atom.xml\"\n```\n\n### 谷歌统计添加\n\n### 部署命令\n\n修改配置后，输入以下三条命令即可部署\n\n``` shell\nhexo clean\nhexo g\nhexo d\n```\n\n点击这里 查看博客正文的效果\n\n以上希望对你所有帮助。\n\n## 参考资料\n\n* [Hexo-Yilia 进阶笔记](https://tding.top/archives/9a232bbe.html)\n* [Hexo yilia 主题一揽子使用方案](https://blog.csdn.net/liuyunjay66/article/details/79845944)\n* [hexo yilia 文章浏览量统计](https://codegitz.github.io/2018/04/13/hexo-yilia-%E6%96%87%E7%AB%A0%E6%B5%8F%E8%A7%88%E9%87%8F%E7%BB%9F%E8%AE%A1/)\n* [Hexo 添加分类及标签](https://juejin.im/post/5cc11c41f265da038f7745b5)\n* [Hexo添加categories页面](https://www.voidking.com/dev-hexo-categories/)\n","slug":"yilia主题进阶设置","published":1,"updated":"2021-03-02T13:16:32.312Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyf000g2an9esu79qwc","content":"<p><img src=\"https://s1.ax1x.com/2020/07/17/UssPcF.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<p>在用 Hexo 搭建完毕后，接着就寻找主题了，对比了几个主题 ，发现这个yilia 主题比较干净，<br>简洁，于是就选了这个主题，但是有些细节不太习惯，于是就研究调整了一下，就是现在这个博客的样子。</p>\n<h3 id=\"查看所有文件提示缺失模块\"><a href=\"#查看所有文件提示缺失模块\" class=\"headerlink\" title=\"查看所有文件提示缺失模块\"></a>查看所有文件提示缺失模块</h3><p><code>yilia</code> 在首次使用时，点击<strong>所有文章</strong>时，会出现模块找不到的错误，可按照提示操作即可<br>注意一下，<code>_config.yml</code> 路径是指根目录下的，而非 <code>yilia</code> 主题下的 config文件</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyEc8g.png\" alt=\"yilia_loss_module\"></p>\n<h3 id=\"配置图片资源\"><a href=\"#配置图片资源\" class=\"headerlink\" title=\"配置图片资源\"></a>配置图片资源</h3><ul>\n<li><strong>添加图片资源文件夹</strong>。 路径为 <code>themes/yilia/source/</code>下，可添加一个 <code>assets</code> 文件夹，里面存放图片资源即可</li>\n<li><strong>配置文件中直接引用即可</strong>。路径为 <code>themes/yilia/_config.yml</code>，找到如下即可</li>\n</ul>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 微信二维码图片</span><br><span class=\"line\">weixin:  /assets/img/wechat.png</span><br><span class=\"line\"># 头像图片</span><br><span class=\"line\">avatar:  /assets/img/head.jpg</span><br><span class=\"line\"># 网页图标</span><br><span class=\"line\">favicon:  /assets/img/head.jpg</span><br></pre></td></tr></table></figure>\n<h3 id=\"文章如何显示摘要\"><a href=\"#文章如何显示摘要\" class=\"headerlink\" title=\"文章如何显示摘要\"></a>文章如何显示摘要</h3><ul>\n<li>问题: 点击主页时，发现所有文章都是全文显示，不利于查找，可控制显示的字数</li>\n<li><p>解决办法: 在你 MD 格式文章正文插入 <code>&lt;!-- more --&gt;</code>即可，只会显示它之前的，此后的就不显示，点击文章标题，全文阅读才可看到，同时注释掉以下 <code>themes/yilia/_config.yml</code>，避免展示重复</p>\n</li>\n<li><p>重复时显示如下:</p>\n</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyeQDs.png\" alt=\"摘要配置重复\"></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># excerpt_link: more</span><br></pre></td></tr></table></figure>\n<ul>\n<li>效果:</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/Uye6PK.png\" alt=\"yilia_摘要\"></p>\n<h3 id=\"文章显示目录\"><a href=\"#文章显示目录\" class=\"headerlink\" title=\"文章显示目录\"></a>文章显示目录</h3><p>增加文章目录 TOC(table of content )，方便阅读文章, 在 themes/yilia/_config.ym中进行配置 toc: 1即可，它会将你 Markdown 语法的标题，生成目录，目录查看在右下角。</p>\n<ul>\n<li><code>toc: 0</code> 默认不生成目录</li>\n<li><code>toc: 1</code> 文章配置时添加<code>toc: true</code>生成目录</li>\n<li><code>toc: 2</code> 默认生成目录</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyMNng.png\" alt=\"目录效果\"></p>\n<h3 id=\"增加归档菜单\"><a href=\"#增加归档菜单\" class=\"headerlink\" title=\"增加归档菜单\"></a>增加归档菜单</h3><p>修改 themes/yilia/_config.yml</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">    主页:  /</span><br><span class=\"line\">    归档:  /archives/index.html</span><br></pre></td></tr></table></figure>\n<h3 id=\"增加分类菜单\"><a href=\"#增加分类菜单\" class=\"headerlink\" title=\"增加分类菜单\"></a>增加分类菜单</h3><h4 id=\"添加分类链接\"><a href=\"#添加分类链接\" class=\"headerlink\" title=\"添加分类链接\"></a>添加分类链接</h4><p>修改<code>themes/yilia/_config.yml</code></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">    主页:  /</span><br><span class=\"line\">    分类:  /categories/index.html</span><br><span class=\"line\">    归档:  /archives/index.html</span><br></pre></td></tr></table></figure>\n<h4 id=\"分类页面的构建\"><a href=\"#分类页面的构建\" class=\"headerlink\" title=\"分类页面的构建\"></a>分类页面的构建</h4><ul>\n<li>新建 categories 页面</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n<p>该命令在 source 目录下生成一个 categories 目录，categories 目录下有一个 index.md 文件。</p>\n<ul>\n<li>修改 categories/index.md 为：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 文章分类</span><br><span class=\"line\">date: 2018-06-11 10:13:21</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<ul>\n<li>生成 html</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>访问<code>http://localhost:4000/categories/</code> ，即可看到 categories 页面，只不过现在的页面只有标题。</p>\n<h4 id=\"修改主题\"><a href=\"#修改主题\" class=\"headerlink\" title=\"修改主题\"></a>修改主题</h4><p>修改 <code>yilia/source-src/css/main.scss</code>，将下面的内容添加进去</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">&quot;./category&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p>在 <code>yilia/source-src/css/</code>目录下添加<code>category.scss</code>，并将下面的内容添加进去</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">30px</span> <span class=\"number\">40px</span> <span class=\"number\">30px</span> <span class=\"number\">40px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">min-height</span>: <span class=\"number\">70vh</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-tag\">h2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">20px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-all-title</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-all</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-item-list-item</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-item-list-count</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#999</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-item-list-count</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&quot; (&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-item-list-count</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&quot;) &quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-item</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-count</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#999</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-count</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&quot; (&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-count</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&quot;) &quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-child</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding-left</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>生成编译文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"built_in\">cd</span> 到 yilia 目录下</span></span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run dev</span><br><span class=\"line\">npm run dist</span><br></pre></td></tr></table></figure>\n<p>新建 <code>yilia/layout/categories.ejs</code>，输入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article article-type-post show&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">header</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article-header&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-bottom: 1px solid #ccc&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article-title&quot;</span> <span class=\"attr\">itemprop</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">page.title</span> %&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">site.categories.length</span>)&#123; %&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;category-all-page article-type-post show&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>共计<span class=\"symbol\">&amp;nbsp;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">site.categories.length</span> %&gt;</span><span class=\"symbol\">&amp;nbsp;</span>个分类<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;category-list&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">site.categories.sort</span>(&#x27;<span class=\"attr\">name</span>&#x27;)<span class=\"attr\">.each</span>(<span class=\"attr\">function</span>(<span class=\"attr\">item</span>)&#123; %&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span>(<span class=\"attr\">item.posts.length</span>)&#123; %&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;category-list-item&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&lt;%- config.root %&gt;&lt;%- item.path %&gt;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">title</span>=<span class=\"string\">&quot;&lt;%= item.name %&gt;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">item.name</span> %&gt;</span>[<span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">item.posts.length</span> %&gt;</span>]<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125;); %&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"使用分类\"><a href=\"#使用分类\" class=\"headerlink\" title=\"使用分类\"></a>使用分类</h4><p>修改文章头部</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: yilia主题进阶设置</span><br><span class=\"line\">date: 2020-07-17 11:30:27</span><br><span class=\"line\">tags: [hexo,技术积累]</span><br><span class=\"line\">categories: [hexo,技术积累]</span><br><span class=\"line\">toc: true</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>效果如下</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULEmyF.png\" alt=\"分类\"></p>\n<h4 id=\"多层分类\"><a href=\"#多层分类\" class=\"headerlink\" title=\"多层分类\"></a>多层分类</h4><p>以上，已经完成了categories分类页面，但是只有一层分类。假设，现在有一篇文章的分类为多层分类</p>\n<p>例如：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: yilia主题进阶设置</span><br><span class=\"line\">date: 2020-07-17 11:30:27</span><br><span class=\"line\">tags: [hexo,技术积累]</span><br><span class=\"line\">categories: [hexo,技术积累]</span><br><span class=\"line\">toc: true</span><br></pre></td></tr></table></figure>\n<p>显示的效果为所有类别平级显示，不是我们想要的效果，如下图：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULEmyF.png\" alt=\"分类\"></p>\n<p>本节就实现多层分类的显示效果，具体操作如下：</p>\n<p>修改 <code>yilia/layout/categories.ejs</code>，输入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article article-type-post show&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">header</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article-header&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-bottom: 1px solid #ccc&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article-title&quot;</span> <span class=\"attr\">itemprop</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">page.title</span> %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">site.categories.length</span>)&#123; %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;category-all-page&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>共计<span class=\"symbol\">&amp;nbsp;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">site.categories.length</span> %&gt;</span><span class=\"symbol\">&amp;nbsp;</span>个分类<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">list_categories</span>(<span class=\"attr\">site.categories</span>, &#123;</span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">show_count:</span> <span class=\"attr\">true</span>,</span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class:</span> &#x27;<span class=\"attr\">category-list-item</span>&#x27;,</span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">style:</span> &#x27;<span class=\"attr\">list</span>&#x27;,</span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">depth:</span> <span class=\"attr\">3</span>, # 显示的层级</span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">separator:</span> &#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"tag\">    &#125;) %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>再次访问categories，达到了预期效果，如下图：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULeeQf.png\" alt=\"多级分类\"></p>\n<h3 id=\"增加tags菜单\"><a href=\"#增加tags菜单\" class=\"headerlink\" title=\"增加tags菜单\"></a>增加tags菜单</h3><p>修改 themes/yilia/_config.yml</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">    主页:  /</span><br><span class=\"line\">    归档:  /tags/tag名称/</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改代码块样式\"><a href=\"#修改代码块样式\" class=\"headerlink\" title=\"修改代码块样式\"></a>修改代码块样式</h3><p>默认的代码样式太刺眼了，调成稍微柔和一些的，这里是调成 Atom 风格，以下为两种方式都可以，推荐第一种直接修改编译好的文件，不然还需要重新build。</p>\n<ul>\n<li><strong>直接修改编译好的文件</strong>。路径为：<code>theme\\yilia\\source\\main.0cf68a.css</code><ul>\n<li>修改代码背景色，搜索 <code>.article-entry .highlight</code>, 修改background后面的颜色<br><img src=\"https://s1.ax1x.com/2020/07/17/UyGiAe.png\" alt=\"背景色修改\"></li>\n<li>修改代码字体颜色 <code>.article-entry .highlight .line</code><br><img src=\"https://s1.ax1x.com/2020/07/17/UyGRHO.png\" alt=\"代码字体色修改\"></li>\n</ul>\n</li>\n<li><strong>修改源文件重新build</strong>。上述资源对应源文件为 yilia\\source-src\\css\\highlight.scss，按照如下方式build</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd 到 yilia 目录下</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run dev</span><br><span class=\"line\">npm run dist</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加相册功能\"><a href=\"#添加相册功能\" class=\"headerlink\" title=\"添加相册功能\"></a>添加相册功能</h3><blockquote>\n<p>实现相册功能内容较多 以单独一篇文章来记录</p>\n</blockquote>\n<p><a href=\"/archives/20200718f57a1917/\">Yilia主题如何添加相册功能</a></p>\n<h3 id=\"增加不蒜子统计\"><a href=\"#增加不蒜子统计\" class=\"headerlink\" title=\"增加不蒜子统计\"></a>增加不蒜子统计</h3><p>利用这个统计，可以知道你博客的访问量</p>\n<h4 id=\"安装不蒜子脚本\"><a href=\"#安装不蒜子脚本\" class=\"headerlink\" title=\"安装不蒜子脚本\"></a>安装不蒜子脚本</h4><p>在 <code>themes\\yilia\\layout\\_partial\\after-footer.ejs</code>最后添加，注意以下新的域名才有效，老的已经失效了</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">async</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"添加统计网站访问量\"><a href=\"#添加统计网站访问量\" class=\"headerlink\" title=\"添加统计网站访问量\"></a>添加统计网站访问量</h4><p>修改 <code>themes\\yilia\\layout\\_partial\\footer.ejs</code>，包括访客数和站点访问总量</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># PV方式，单个用户连续点击 n 篇，记录 n 次记录值</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span>  本站总访问量<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>次<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># UV方式，单个用户连续点击 n 篇，记录 1 次记录值</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_uv&quot;</span>&gt;</span>  本站访客数<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>人次<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>我的footer.ejs配置</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">footer</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;outer&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;footer-info&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;footer-left&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"symbol\">&amp;copy;</span> <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">date</span>(<span class=\"attr\">new</span> <span class=\"attr\">Date</span>(), &#x27;<span class=\"attr\">YYYY</span>&#x27;) %&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">config.author</span> || <span class=\"attr\">config.title</span> %&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;footer-right&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://hexo.io/&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>Hexo<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> Theme <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://github.com/litten/hexo-theme-yilia&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>Yilia<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> by Litten</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">calss</span>=<span class=\"string\">&quot;count-span&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span></span><br><span class=\"line\">        总访问量: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_uv&quot;</span>&gt;</span></span><br><span class=\"line\">        总访客: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">footer</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"单篇文章点击量\"><a href=\"#单篇文章点击量\" class=\"headerlink\" title=\"单篇文章点击量\"></a>单篇文章点击量</h4><p><code>themes\\yilia\\layout\\_partial\\article.ejs</code>中 在 <code>&lt;%- partial(&#39;post/tag&#39;) %&gt;</code> 插入如下代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--显示阅读次数--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (!<span class=\"attr\">index</span> &amp;&amp; <span class=\"attr\">post.comments</span>)&#123; %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cloud-tie-join-count&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&lt;%- url_for(post.path) %&gt;&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:gray;font-size:14px;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;icon-smile&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_container_page_pv&quot;</span>&gt;</span></span><br><span class=\"line\">      阅读量(<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_value_page_pv&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"添加评论系统\"><a href=\"#添加评论系统\" class=\"headerlink\" title=\"添加评论系统\"></a>添加评论系统</h3><blockquote>\n<p>实现评论功能内容较多 以单独一篇文章来记录</p>\n</blockquote>\n<p><a href=\"/archives/202007217dfdd292/\">Yilia主题如何添加评论功能</a></p>\n<h3 id=\"插入网易云音乐\"><a href=\"#插入网易云音乐\" class=\"headerlink\" title=\"插入网易云音乐\"></a>插入网易云音乐</h3><h4 id=\"网易云音乐外链播放器生成\"><a href=\"#网易云音乐外链播放器生成\" class=\"headerlink\" title=\"网易云音乐外链播放器生成\"></a>网易云音乐外链播放器生成</h4><p>登录网页版网易云音乐，打开一首歌，点击 “生成外链播放器”(找首没版权限制的歌曲好难)。</p>\n<h4 id=\"侧栏添加背景音乐\"><a href=\"#侧栏添加背景音乐\" class=\"headerlink\" title=\"侧栏添加背景音乐\"></a>侧栏添加背景音乐</h4><p>打开 <code>/hexo/themes/yilia/layout/_partial/left-col.ejs</code> 文件，<br>把音乐 HTML 代码粘贴进去，可以添加样式，改变大小，这是我的代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;header-nav&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;social&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">for</span> (<span class=\"attr\">var</span> <span class=\"attr\">i</span> <span class=\"attr\">in</span> <span class=\"attr\">theme.subnav</span>)&#123; %&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&lt;%= i %&gt;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&lt;%- url_for(theme.subnav[i]) %&gt;&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;&lt;%= i %&gt;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;icon-&lt;%= i %&gt;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%&#125;%</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span>(<span class=\"attr\">theme.music.enable</span>)&#123; %&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--音乐播放插件--&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top:30px;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">iframe</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;no&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">border</span>=<span class=\"string\">&quot;&lt;%=theme.music.border%&gt;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">marginwidth</span>=<span class=\"string\">&quot;&lt;%=theme.music.marginwidth%&gt;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">marginheight</span>=<span class=\"string\">&quot;&lt;%=theme.music.marginheight%&gt;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">width</span>=<span class=\"string\">&quot;&lt;%=theme.music.width%&gt;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">height</span>=<span class=\"string\">&quot;&lt;%=theme.music.height%&gt;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">src</span>=<span class=\"string\">&quot;&lt;%=theme.music.src%&gt;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%&#125;%</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>打开 <code>/hexo/themes/yilia/_config.yml</code> 文件，<br>把音乐播放器的配置添加上。注意“music:”后面必须要有一个空格，如图：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 配置网易云音乐</span><br><span class=\"line\">music: </span><br><span class=\"line\">  enable: true #是否展示</span><br><span class=\"line\">  src: &#x27;//music.163.com/outchain/player?type=2&amp;id=470795480&amp;auto=1&amp;height=32&#x27; #网易云音乐外链地址</span><br><span class=\"line\">  border: 0</span><br><span class=\"line\">  marginwidth: 0</span><br><span class=\"line\">  marginheight: 0</span><br><span class=\"line\">  width: 240</span><br><span class=\"line\">  height: 52</span><br></pre></td></tr></table></figure>\n<p>添加后效果如图</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/30/auaQD1.png\" alt=\"添加效果\"></p>\n<h3 id=\"添加版权信息\"><a href=\"#添加版权信息\" class=\"headerlink\" title=\"添加版权信息\"></a>添加版权信息</h3><h3 id=\"百度-Google统计-SEO\"><a href=\"#百度-Google统计-SEO\" class=\"headerlink\" title=\"百度/Google统计/SEO\"></a>百度/Google统计/SEO</h3><h3 id=\"路过图床\"><a href=\"#路过图床\" class=\"headerlink\" title=\"路过图床\"></a>路过图床</h3><h4 id=\"上传图片到路过图床\"><a href=\"#上传图片到路过图床\" class=\"headerlink\" title=\"上传图片到路过图床\"></a>上传图片到路过图床</h4><h4 id=\"blog中使用图床图片\"><a href=\"#blog中使用图床图片\" class=\"headerlink\" title=\"blog中使用图床图片\"></a>blog中使用图床图片</h4><h4 id=\"可能遇到的问题\"><a href=\"#可能遇到的问题\" class=\"headerlink\" title=\"可能遇到的问题\"></a>可能遇到的问题</h4><blockquote>\n<p>您被禁止使用路过图床 imgchr.com<br>本图床服务免费套餐仅限非商业行为的个人使用, 若用于商业行为请购买付费套餐. imgchr.com</p>\n</blockquote>\n<p>可能原因:</p>\n<ol>\n<li>该IP段用户(不一定是您)曾经上传过非法图片.</li>\n<li>正在使用代理/扶墙, 请关闭扶墙代理工具后再刷新本页面.</li>\n</ol>\n<p><a href=\"https://www.hostloc.com/thread-591879-1-1.html\">参考文档</a></p>\n<h3 id=\"七牛云图床\"><a href=\"#七牛云图床\" class=\"headerlink\" title=\"七牛云图床\"></a>七牛云图床</h3><h4 id=\"上传图片到七牛云\"><a href=\"#上传图片到七牛云\" class=\"headerlink\" title=\"上传图片到七牛云\"></a>上传图片到七牛云</h4><h4 id=\"使用-PicGo-自动生成外链\"><a href=\"#使用-PicGo-自动生成外链\" class=\"headerlink\" title=\"使用 PicGo 自动生成外链\"></a>使用 PicGo 自动生成外链</h4><h3 id=\"文章字数-阅读时长\"><a href=\"#文章字数-阅读时长\" class=\"headerlink\" title=\"文章字数/阅读时长\"></a>文章字数/阅读时长</h3><h4 id=\"安装-hexo-wordcount\"><a href=\"#安装-hexo-wordcount\" class=\"headerlink\" title=\"安装 hexo-wordcount\"></a>安装 hexo-wordcount</h4><p>在博客目录下打开 Git Bash，输入命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i –save hexo-wordcount</span><br></pre></td></tr></table></figure>\n<h4 id=\"文件配置\"><a href=\"#文件配置\" class=\"headerlink\" title=\"文件配置\"></a>文件配置</h4><p>在 <code>theme\\yilia\\layout\\_partial\\post</code> 下创建 word.ejs 文件：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top:10px;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-time&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-meta-item-icon&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fa fa-keyboard-o&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-meta-item-text&quot;</span>&gt;</span>  字数统计: <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-count&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">wordcount</span>(<span class=\"attr\">post.content</span>) %&gt;</span>字<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-time&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"symbol\">&amp;nbsp;</span> | <span class=\"symbol\">&amp;nbsp;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-meta-item-icon&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fa fa-hourglass-half&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-meta-item-text&quot;</span>&gt;</span>  阅读时长: <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-count&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">min2read</span>(<span class=\"attr\">post.content</span>) %&gt;</span>分<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后在 <code>themes/yilia/layout/_partial/article.ejs</code> 中添加</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article-inner&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">post.link</span> || <span class=\"attr\">post.title</span>)&#123; %&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">header</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article-header&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>(&#x27;<span class=\"attr\">post</span>/<span class=\"attr\">title</span>&#x27;, &#123;<span class=\"attr\">class_name:</span> &#x27;<span class=\"attr\">article-title</span>&#x27;&#125;) %&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (!<span class=\"attr\">post.noDate</span>)&#123; %&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>(&#x27;<span class=\"attr\">post</span>/<span class=\"attr\">date</span>&#x27;, &#123;<span class=\"attr\">class_name:</span> &#x27;<span class=\"attr\">archive-article-date</span>&#x27;, <span class=\"attr\">date_format:</span> <span class=\"attr\">null</span>&#125;) %&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 需要添加的位置 --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 开始添加字数统计--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span>(<span class=\"attr\">theme.word_count</span> &amp;&amp; !<span class=\"attr\">post.no_word_count</span>)&#123;%&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>(&#x27;<span class=\"attr\">post</span>/<span class=\"attr\">word</span>&#x27;) %&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 添加完成 --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- 省略剩余代码 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"开启功能\"><a href=\"#开启功能\" class=\"headerlink\" title=\"开启功能\"></a>开启功能</h4><p>在站点的（不是主题的）_config.yml 中添加下面代码</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 是否开启字数统计</span><br><span class=\"line\">#不需要使用，直接设置值为false，或注释掉</span><br><span class=\"line\">word_count: True</span><br></pre></td></tr></table></figure>\n<h3 id=\"Url持久化\"><a href=\"#Url持久化\" class=\"headerlink\" title=\"Url持久化\"></a>Url持久化</h3><blockquote>\n<p>实现Url持久化 以单独一篇文章来记录</p>\n</blockquote>\n<p><a href=\"/archives/20200803e0185335/\">Yilia主题生成永久短连接</a></p>\n<h3 id=\"网站运行时间\"><a href=\"#网站运行时间\" class=\"headerlink\" title=\"网站运行时间\"></a>网站运行时间</h3><h3 id=\"鼠标点击小红心设置\"><a href=\"#鼠标点击小红心设置\" class=\"headerlink\" title=\"鼠标点击小红心设置\"></a>鼠标点击小红心设置</h3><h3 id=\"代码块行号错乱问题解决\"><a href=\"#代码块行号错乱问题解决\" class=\"headerlink\" title=\"代码块行号错乱问题解决\"></a>代码块行号错乱问题解决</h3><h3 id=\"sitemap-功能添加\"><a href=\"#sitemap-功能添加\" class=\"headerlink\" title=\"sitemap 功能添加\"></a>sitemap 功能添加</h3><blockquote>\n<p>实现sitemap功能 以单独一篇文章来记录</p>\n</blockquote>\n<p><a href=\"/archives/20200814f023bd8e/\">hexo添加sitemap功能</a></p>\n<h3 id=\"SubNav图标拓展\"><a href=\"#SubNav图标拓展\" class=\"headerlink\" title=\"SubNav图标拓展\"></a>SubNav图标拓展</h3><blockquote>\n<p>实现SubNav图标拓展 以单独一篇文章来记录</p>\n</blockquote>\n<p><a href=\"/archives/20210205e928c2fc/\">Yilia主题如何添加左侧SubNav图标</a></p>\n<h3 id=\"RSS-功能添加\"><a href=\"#RSS-功能添加\" class=\"headerlink\" title=\"RSS 功能添加\"></a>RSS 功能添加</h3><h4 id=\"安装-RSS-插件\"><a href=\"#安装-RSS-插件\" class=\"headerlink\" title=\"安装 RSS 插件\"></a>安装 RSS 插件</h4><p>注意一定要安装到 blog 的根目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure>\n<h4 id=\"更改配置文件\"><a href=\"#更改配置文件\" class=\"headerlink\" title=\"更改配置文件\"></a>更改配置文件</h4><p>在你的项目的<code>_config.yml</code> 配置文件下找到 <code>Extensions</code> 添加如下内容：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extensions  #插件和主题</span><br><span class=\"line\">## Plugins: https://hexo.io/plugins/</span><br><span class=\"line\">## Themes: https://hexo.io/themes/</span><br><span class=\"line\">#RSS订阅</span><br><span class=\"line\">plugins: hexo-generater-feed</span><br></pre></td></tr></table></figure>\n<p>在主题配置文件里，在 rss 位置，添加 <code>/atom.xml</code></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">subnav:</span><br><span class=\"line\">  #github: &quot;#&quot;</span><br><span class=\"line\">  #weibo: &quot;#&quot;</span><br><span class=\"line\">  rss: &quot;/atom.xml&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"谷歌统计添加\"><a href=\"#谷歌统计添加\" class=\"headerlink\" title=\"谷歌统计添加\"></a>谷歌统计添加</h3><h3 id=\"部署命令\"><a href=\"#部署命令\" class=\"headerlink\" title=\"部署命令\"></a>部署命令</h3><p>修改配置后，输入以下三条命令即可部署</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>点击这里 查看博客正文的效果</p>\n<p>以上希望对你所有帮助。</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://tding.top/archives/9a232bbe.html\">Hexo-Yilia 进阶笔记</a></li>\n<li><a href=\"https://blog.csdn.net/liuyunjay66/article/details/79845944\">Hexo yilia 主题一揽子使用方案</a></li>\n<li><a href=\"https://codegitz.github.io/2018/04/13/hexo-yilia-%E6%96%87%E7%AB%A0%E6%B5%8F%E8%A7%88%E9%87%8F%E7%BB%9F%E8%AE%A1/\">hexo yilia 文章浏览量统计</a></li>\n<li><a href=\"https://juejin.im/post/5cc11c41f265da038f7745b5\">Hexo 添加分类及标签</a></li>\n<li><a href=\"https://www.voidking.com/dev-hexo-categories/\">Hexo添加categories页面</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/07/17/UssPcF.jpg\" alt=\"首屏图\"></p>","more":"<p>在用 Hexo 搭建完毕后，接着就寻找主题了，对比了几个主题 ，发现这个yilia 主题比较干净，<br>简洁，于是就选了这个主题，但是有些细节不太习惯，于是就研究调整了一下，就是现在这个博客的样子。</p>\n<h3 id=\"查看所有文件提示缺失模块\"><a href=\"#查看所有文件提示缺失模块\" class=\"headerlink\" title=\"查看所有文件提示缺失模块\"></a>查看所有文件提示缺失模块</h3><p><code>yilia</code> 在首次使用时，点击<strong>所有文章</strong>时，会出现模块找不到的错误，可按照提示操作即可<br>注意一下，<code>_config.yml</code> 路径是指根目录下的，而非 <code>yilia</code> 主题下的 config文件</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyEc8g.png\" alt=\"yilia_loss_module\"></p>\n<h3 id=\"配置图片资源\"><a href=\"#配置图片资源\" class=\"headerlink\" title=\"配置图片资源\"></a>配置图片资源</h3><ul>\n<li><strong>添加图片资源文件夹</strong>。 路径为 <code>themes/yilia/source/</code>下，可添加一个 <code>assets</code> 文件夹，里面存放图片资源即可</li>\n<li><strong>配置文件中直接引用即可</strong>。路径为 <code>themes/yilia/_config.yml</code>，找到如下即可</li>\n</ul>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 微信二维码图片</span><br><span class=\"line\">weixin:  /assets/img/wechat.png</span><br><span class=\"line\"># 头像图片</span><br><span class=\"line\">avatar:  /assets/img/head.jpg</span><br><span class=\"line\"># 网页图标</span><br><span class=\"line\">favicon:  /assets/img/head.jpg</span><br></pre></td></tr></table></figure>\n<h3 id=\"文章如何显示摘要\"><a href=\"#文章如何显示摘要\" class=\"headerlink\" title=\"文章如何显示摘要\"></a>文章如何显示摘要</h3><ul>\n<li>问题: 点击主页时，发现所有文章都是全文显示，不利于查找，可控制显示的字数</li>\n<li><p>解决办法: 在你 MD 格式文章正文插入 <code>&lt;!-- more --&gt;</code>即可，只会显示它之前的，此后的就不显示，点击文章标题，全文阅读才可看到，同时注释掉以下 <code>themes/yilia/_config.yml</code>，避免展示重复</p>\n</li>\n<li><p>重复时显示如下:</p>\n</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyeQDs.png\" alt=\"摘要配置重复\"></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># excerpt_link: more</span><br></pre></td></tr></table></figure>\n<ul>\n<li>效果:</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/Uye6PK.png\" alt=\"yilia_摘要\"></p>\n<h3 id=\"文章显示目录\"><a href=\"#文章显示目录\" class=\"headerlink\" title=\"文章显示目录\"></a>文章显示目录</h3><p>增加文章目录 TOC(table of content )，方便阅读文章, 在 themes/yilia/_config.ym中进行配置 toc: 1即可，它会将你 Markdown 语法的标题，生成目录，目录查看在右下角。</p>\n<ul>\n<li><code>toc: 0</code> 默认不生成目录</li>\n<li><code>toc: 1</code> 文章配置时添加<code>toc: true</code>生成目录</li>\n<li><code>toc: 2</code> 默认生成目录</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyMNng.png\" alt=\"目录效果\"></p>\n<h3 id=\"增加归档菜单\"><a href=\"#增加归档菜单\" class=\"headerlink\" title=\"增加归档菜单\"></a>增加归档菜单</h3><p>修改 themes/yilia/_config.yml</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">    主页:  /</span><br><span class=\"line\">    归档:  /archives/index.html</span><br></pre></td></tr></table></figure>\n<h3 id=\"增加分类菜单\"><a href=\"#增加分类菜单\" class=\"headerlink\" title=\"增加分类菜单\"></a>增加分类菜单</h3><h4 id=\"添加分类链接\"><a href=\"#添加分类链接\" class=\"headerlink\" title=\"添加分类链接\"></a>添加分类链接</h4><p>修改<code>themes/yilia/_config.yml</code></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">    主页:  /</span><br><span class=\"line\">    分类:  /categories/index.html</span><br><span class=\"line\">    归档:  /archives/index.html</span><br></pre></td></tr></table></figure>\n<h4 id=\"分类页面的构建\"><a href=\"#分类页面的构建\" class=\"headerlink\" title=\"分类页面的构建\"></a>分类页面的构建</h4><ul>\n<li>新建 categories 页面</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n<p>该命令在 source 目录下生成一个 categories 目录，categories 目录下有一个 index.md 文件。</p>\n<ul>\n<li>修改 categories/index.md 为：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 文章分类</span><br><span class=\"line\">date: 2018-06-11 10:13:21</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<ul>\n<li>生成 html</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>访问<code>http://localhost:4000/categories/</code> ，即可看到 categories 页面，只不过现在的页面只有标题。</p>\n<h4 id=\"修改主题\"><a href=\"#修改主题\" class=\"headerlink\" title=\"修改主题\"></a>修改主题</h4><p>修改 <code>yilia/source-src/css/main.scss</code>，将下面的内容添加进去</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">&quot;./category&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p>在 <code>yilia/source-src/css/</code>目录下添加<code>category.scss</code>，并将下面的内容添加进去</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">30px</span> <span class=\"number\">40px</span> <span class=\"number\">30px</span> <span class=\"number\">40px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">min-height</span>: <span class=\"number\">70vh</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-tag\">h2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">20px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-all-title</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-all</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-item-list-item</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-item-list-count</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#999</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-item-list-count</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&quot; (&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-item-list-count</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&quot;) &quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-item</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-count</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#999</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-count</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&quot; (&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-count</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&quot;) &quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.category-all-page</span> <span class=\"selector-class\">.category-list-child</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding-left</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>生成编译文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"built_in\">cd</span> 到 yilia 目录下</span></span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run dev</span><br><span class=\"line\">npm run dist</span><br></pre></td></tr></table></figure>\n<p>新建 <code>yilia/layout/categories.ejs</code>，输入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article article-type-post show&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">header</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article-header&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-bottom: 1px solid #ccc&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article-title&quot;</span> <span class=\"attr\">itemprop</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">page.title</span> %&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">site.categories.length</span>)&#123; %&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;category-all-page article-type-post show&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>共计<span class=\"symbol\">&amp;nbsp;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">site.categories.length</span> %&gt;</span><span class=\"symbol\">&amp;nbsp;</span>个分类<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;category-list&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">site.categories.sort</span>(&#x27;<span class=\"attr\">name</span>&#x27;)<span class=\"attr\">.each</span>(<span class=\"attr\">function</span>(<span class=\"attr\">item</span>)&#123; %&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span>(<span class=\"attr\">item.posts.length</span>)&#123; %&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;category-list-item&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&lt;%- config.root %&gt;&lt;%- item.path %&gt;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">title</span>=<span class=\"string\">&quot;&lt;%= item.name %&gt;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">item.name</span> %&gt;</span>[<span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">item.posts.length</span> %&gt;</span>]<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125;); %&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"使用分类\"><a href=\"#使用分类\" class=\"headerlink\" title=\"使用分类\"></a>使用分类</h4><p>修改文章头部</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: yilia主题进阶设置</span><br><span class=\"line\">date: 2020-07-17 11:30:27</span><br><span class=\"line\">tags: [hexo,技术积累]</span><br><span class=\"line\">categories: [hexo,技术积累]</span><br><span class=\"line\">toc: true</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>效果如下</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULEmyF.png\" alt=\"分类\"></p>\n<h4 id=\"多层分类\"><a href=\"#多层分类\" class=\"headerlink\" title=\"多层分类\"></a>多层分类</h4><p>以上，已经完成了categories分类页面，但是只有一层分类。假设，现在有一篇文章的分类为多层分类</p>\n<p>例如：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: yilia主题进阶设置</span><br><span class=\"line\">date: 2020-07-17 11:30:27</span><br><span class=\"line\">tags: [hexo,技术积累]</span><br><span class=\"line\">categories: [hexo,技术积累]</span><br><span class=\"line\">toc: true</span><br></pre></td></tr></table></figure>\n<p>显示的效果为所有类别平级显示，不是我们想要的效果，如下图：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULEmyF.png\" alt=\"分类\"></p>\n<p>本节就实现多层分类的显示效果，具体操作如下：</p>\n<p>修改 <code>yilia/layout/categories.ejs</code>，输入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article article-type-post show&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">header</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article-header&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-bottom: 1px solid #ccc&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article-title&quot;</span> <span class=\"attr\">itemprop</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">page.title</span> %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">site.categories.length</span>)&#123; %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;category-all-page&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>共计<span class=\"symbol\">&amp;nbsp;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">site.categories.length</span> %&gt;</span><span class=\"symbol\">&amp;nbsp;</span>个分类<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">list_categories</span>(<span class=\"attr\">site.categories</span>, &#123;</span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">show_count:</span> <span class=\"attr\">true</span>,</span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class:</span> &#x27;<span class=\"attr\">category-list-item</span>&#x27;,</span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">style:</span> &#x27;<span class=\"attr\">list</span>&#x27;,</span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">depth:</span> <span class=\"attr\">3</span>, # 显示的层级</span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">separator:</span> &#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"tag\">    &#125;) %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>再次访问categories，达到了预期效果，如下图：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULeeQf.png\" alt=\"多级分类\"></p>\n<h3 id=\"增加tags菜单\"><a href=\"#增加tags菜单\" class=\"headerlink\" title=\"增加tags菜单\"></a>增加tags菜单</h3><p>修改 themes/yilia/_config.yml</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">    主页:  /</span><br><span class=\"line\">    归档:  /tags/tag名称/</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改代码块样式\"><a href=\"#修改代码块样式\" class=\"headerlink\" title=\"修改代码块样式\"></a>修改代码块样式</h3><p>默认的代码样式太刺眼了，调成稍微柔和一些的，这里是调成 Atom 风格，以下为两种方式都可以，推荐第一种直接修改编译好的文件，不然还需要重新build。</p>\n<ul>\n<li><strong>直接修改编译好的文件</strong>。路径为：<code>theme\\yilia\\source\\main.0cf68a.css</code><ul>\n<li>修改代码背景色，搜索 <code>.article-entry .highlight</code>, 修改background后面的颜色<br><img src=\"https://s1.ax1x.com/2020/07/17/UyGiAe.png\" alt=\"背景色修改\"></li>\n<li>修改代码字体颜色 <code>.article-entry .highlight .line</code><br><img src=\"https://s1.ax1x.com/2020/07/17/UyGRHO.png\" alt=\"代码字体色修改\"></li>\n</ul>\n</li>\n<li><strong>修改源文件重新build</strong>。上述资源对应源文件为 yilia\\source-src\\css\\highlight.scss，按照如下方式build</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd 到 yilia 目录下</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run dev</span><br><span class=\"line\">npm run dist</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加相册功能\"><a href=\"#添加相册功能\" class=\"headerlink\" title=\"添加相册功能\"></a>添加相册功能</h3><blockquote>\n<p>实现相册功能内容较多 以单独一篇文章来记录</p>\n</blockquote>\n<p><a href=\"/archives/20200718f57a1917/\">Yilia主题如何添加相册功能</a></p>\n<h3 id=\"增加不蒜子统计\"><a href=\"#增加不蒜子统计\" class=\"headerlink\" title=\"增加不蒜子统计\"></a>增加不蒜子统计</h3><p>利用这个统计，可以知道你博客的访问量</p>\n<h4 id=\"安装不蒜子脚本\"><a href=\"#安装不蒜子脚本\" class=\"headerlink\" title=\"安装不蒜子脚本\"></a>安装不蒜子脚本</h4><p>在 <code>themes\\yilia\\layout\\_partial\\after-footer.ejs</code>最后添加，注意以下新的域名才有效，老的已经失效了</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">async</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"添加统计网站访问量\"><a href=\"#添加统计网站访问量\" class=\"headerlink\" title=\"添加统计网站访问量\"></a>添加统计网站访问量</h4><p>修改 <code>themes\\yilia\\layout\\_partial\\footer.ejs</code>，包括访客数和站点访问总量</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># PV方式，单个用户连续点击 n 篇，记录 n 次记录值</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span>  本站总访问量<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>次<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># UV方式，单个用户连续点击 n 篇，记录 1 次记录值</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_uv&quot;</span>&gt;</span>  本站访客数<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>人次<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>我的footer.ejs配置</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">footer</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;outer&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;footer-info&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;footer-left&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"symbol\">&amp;copy;</span> <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">date</span>(<span class=\"attr\">new</span> <span class=\"attr\">Date</span>(), &#x27;<span class=\"attr\">YYYY</span>&#x27;) %&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">config.author</span> || <span class=\"attr\">config.title</span> %&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;footer-right&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://hexo.io/&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>Hexo<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> Theme <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://github.com/litten/hexo-theme-yilia&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>Yilia<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> by Litten</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">calss</span>=<span class=\"string\">&quot;count-span&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span></span><br><span class=\"line\">        总访问量: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_uv&quot;</span>&gt;</span></span><br><span class=\"line\">        总访客: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">footer</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"单篇文章点击量\"><a href=\"#单篇文章点击量\" class=\"headerlink\" title=\"单篇文章点击量\"></a>单篇文章点击量</h4><p><code>themes\\yilia\\layout\\_partial\\article.ejs</code>中 在 <code>&lt;%- partial(&#39;post/tag&#39;) %&gt;</code> 插入如下代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--显示阅读次数--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (!<span class=\"attr\">index</span> &amp;&amp; <span class=\"attr\">post.comments</span>)&#123; %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cloud-tie-join-count&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&lt;%- url_for(post.path) %&gt;&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:gray;font-size:14px;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;icon-smile&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_container_page_pv&quot;</span>&gt;</span></span><br><span class=\"line\">      阅读量(<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;busuanzi_value_page_pv&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"添加评论系统\"><a href=\"#添加评论系统\" class=\"headerlink\" title=\"添加评论系统\"></a>添加评论系统</h3><blockquote>\n<p>实现评论功能内容较多 以单独一篇文章来记录</p>\n</blockquote>\n<p><a href=\"/archives/202007217dfdd292/\">Yilia主题如何添加评论功能</a></p>\n<h3 id=\"插入网易云音乐\"><a href=\"#插入网易云音乐\" class=\"headerlink\" title=\"插入网易云音乐\"></a>插入网易云音乐</h3><h4 id=\"网易云音乐外链播放器生成\"><a href=\"#网易云音乐外链播放器生成\" class=\"headerlink\" title=\"网易云音乐外链播放器生成\"></a>网易云音乐外链播放器生成</h4><p>登录网页版网易云音乐，打开一首歌，点击 “生成外链播放器”(找首没版权限制的歌曲好难)。</p>\n<h4 id=\"侧栏添加背景音乐\"><a href=\"#侧栏添加背景音乐\" class=\"headerlink\" title=\"侧栏添加背景音乐\"></a>侧栏添加背景音乐</h4><p>打开 <code>/hexo/themes/yilia/layout/_partial/left-col.ejs</code> 文件，<br>把音乐 HTML 代码粘贴进去，可以添加样式，改变大小，这是我的代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;header-nav&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;social&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">for</span> (<span class=\"attr\">var</span> <span class=\"attr\">i</span> <span class=\"attr\">in</span> <span class=\"attr\">theme.subnav</span>)&#123; %&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&lt;%= i %&gt;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&lt;%- url_for(theme.subnav[i]) %&gt;&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;&lt;%= i %&gt;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;icon-&lt;%= i %&gt;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%&#125;%</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span>(<span class=\"attr\">theme.music.enable</span>)&#123; %&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--音乐播放插件--&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top:30px;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">iframe</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;no&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">border</span>=<span class=\"string\">&quot;&lt;%=theme.music.border%&gt;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">marginwidth</span>=<span class=\"string\">&quot;&lt;%=theme.music.marginwidth%&gt;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">marginheight</span>=<span class=\"string\">&quot;&lt;%=theme.music.marginheight%&gt;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">width</span>=<span class=\"string\">&quot;&lt;%=theme.music.width%&gt;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">height</span>=<span class=\"string\">&quot;&lt;%=theme.music.height%&gt;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">src</span>=<span class=\"string\">&quot;&lt;%=theme.music.src%&gt;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%&#125;%</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>打开 <code>/hexo/themes/yilia/_config.yml</code> 文件，<br>把音乐播放器的配置添加上。注意“music:”后面必须要有一个空格，如图：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 配置网易云音乐</span><br><span class=\"line\">music: </span><br><span class=\"line\">  enable: true #是否展示</span><br><span class=\"line\">  src: &#x27;//music.163.com/outchain/player?type=2&amp;id=470795480&amp;auto=1&amp;height=32&#x27; #网易云音乐外链地址</span><br><span class=\"line\">  border: 0</span><br><span class=\"line\">  marginwidth: 0</span><br><span class=\"line\">  marginheight: 0</span><br><span class=\"line\">  width: 240</span><br><span class=\"line\">  height: 52</span><br></pre></td></tr></table></figure>\n<p>添加后效果如图</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/30/auaQD1.png\" alt=\"添加效果\"></p>\n<h3 id=\"添加版权信息\"><a href=\"#添加版权信息\" class=\"headerlink\" title=\"添加版权信息\"></a>添加版权信息</h3><h3 id=\"百度-Google统计-SEO\"><a href=\"#百度-Google统计-SEO\" class=\"headerlink\" title=\"百度/Google统计/SEO\"></a>百度/Google统计/SEO</h3><h3 id=\"路过图床\"><a href=\"#路过图床\" class=\"headerlink\" title=\"路过图床\"></a>路过图床</h3><h4 id=\"上传图片到路过图床\"><a href=\"#上传图片到路过图床\" class=\"headerlink\" title=\"上传图片到路过图床\"></a>上传图片到路过图床</h4><h4 id=\"blog中使用图床图片\"><a href=\"#blog中使用图床图片\" class=\"headerlink\" title=\"blog中使用图床图片\"></a>blog中使用图床图片</h4><h4 id=\"可能遇到的问题\"><a href=\"#可能遇到的问题\" class=\"headerlink\" title=\"可能遇到的问题\"></a>可能遇到的问题</h4><blockquote>\n<p>您被禁止使用路过图床 imgchr.com<br>本图床服务免费套餐仅限非商业行为的个人使用, 若用于商业行为请购买付费套餐. imgchr.com</p>\n</blockquote>\n<p>可能原因:</p>\n<ol>\n<li>该IP段用户(不一定是您)曾经上传过非法图片.</li>\n<li>正在使用代理/扶墙, 请关闭扶墙代理工具后再刷新本页面.</li>\n</ol>\n<p><a href=\"https://www.hostloc.com/thread-591879-1-1.html\">参考文档</a></p>\n<h3 id=\"七牛云图床\"><a href=\"#七牛云图床\" class=\"headerlink\" title=\"七牛云图床\"></a>七牛云图床</h3><h4 id=\"上传图片到七牛云\"><a href=\"#上传图片到七牛云\" class=\"headerlink\" title=\"上传图片到七牛云\"></a>上传图片到七牛云</h4><h4 id=\"使用-PicGo-自动生成外链\"><a href=\"#使用-PicGo-自动生成外链\" class=\"headerlink\" title=\"使用 PicGo 自动生成外链\"></a>使用 PicGo 自动生成外链</h4><h3 id=\"文章字数-阅读时长\"><a href=\"#文章字数-阅读时长\" class=\"headerlink\" title=\"文章字数/阅读时长\"></a>文章字数/阅读时长</h3><h4 id=\"安装-hexo-wordcount\"><a href=\"#安装-hexo-wordcount\" class=\"headerlink\" title=\"安装 hexo-wordcount\"></a>安装 hexo-wordcount</h4><p>在博客目录下打开 Git Bash，输入命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i –save hexo-wordcount</span><br></pre></td></tr></table></figure>\n<h4 id=\"文件配置\"><a href=\"#文件配置\" class=\"headerlink\" title=\"文件配置\"></a>文件配置</h4><p>在 <code>theme\\yilia\\layout\\_partial\\post</code> 下创建 word.ejs 文件：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top:10px;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-time&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-meta-item-icon&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fa fa-keyboard-o&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-meta-item-text&quot;</span>&gt;</span>  字数统计: <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-count&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">wordcount</span>(<span class=\"attr\">post.content</span>) %&gt;</span>字<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-time&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"symbol\">&amp;nbsp;</span> | <span class=\"symbol\">&amp;nbsp;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-meta-item-icon&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fa fa-hourglass-half&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-meta-item-text&quot;</span>&gt;</span>  阅读时长: <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-count&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">min2read</span>(<span class=\"attr\">post.content</span>) %&gt;</span>分<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后在 <code>themes/yilia/layout/_partial/article.ejs</code> 中添加</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article-inner&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">post.link</span> || <span class=\"attr\">post.title</span>)&#123; %&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">header</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article-header&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>(&#x27;<span class=\"attr\">post</span>/<span class=\"attr\">title</span>&#x27;, &#123;<span class=\"attr\">class_name:</span> &#x27;<span class=\"attr\">article-title</span>&#x27;&#125;) %&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (!<span class=\"attr\">post.noDate</span>)&#123; %&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>(&#x27;<span class=\"attr\">post</span>/<span class=\"attr\">date</span>&#x27;, &#123;<span class=\"attr\">class_name:</span> &#x27;<span class=\"attr\">archive-article-date</span>&#x27;, <span class=\"attr\">date_format:</span> <span class=\"attr\">null</span>&#125;) %&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 需要添加的位置 --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 开始添加字数统计--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span>(<span class=\"attr\">theme.word_count</span> &amp;&amp; !<span class=\"attr\">post.no_word_count</span>)&#123;%&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>(&#x27;<span class=\"attr\">post</span>/<span class=\"attr\">word</span>&#x27;) %&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 添加完成 --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- 省略剩余代码 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"开启功能\"><a href=\"#开启功能\" class=\"headerlink\" title=\"开启功能\"></a>开启功能</h4><p>在站点的（不是主题的）_config.yml 中添加下面代码</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 是否开启字数统计</span><br><span class=\"line\">#不需要使用，直接设置值为false，或注释掉</span><br><span class=\"line\">word_count: True</span><br></pre></td></tr></table></figure>\n<h3 id=\"Url持久化\"><a href=\"#Url持久化\" class=\"headerlink\" title=\"Url持久化\"></a>Url持久化</h3><blockquote>\n<p>实现Url持久化 以单独一篇文章来记录</p>\n</blockquote>\n<p><a href=\"/archives/20200803e0185335/\">Yilia主题生成永久短连接</a></p>\n<h3 id=\"网站运行时间\"><a href=\"#网站运行时间\" class=\"headerlink\" title=\"网站运行时间\"></a>网站运行时间</h3><h3 id=\"鼠标点击小红心设置\"><a href=\"#鼠标点击小红心设置\" class=\"headerlink\" title=\"鼠标点击小红心设置\"></a>鼠标点击小红心设置</h3><h3 id=\"代码块行号错乱问题解决\"><a href=\"#代码块行号错乱问题解决\" class=\"headerlink\" title=\"代码块行号错乱问题解决\"></a>代码块行号错乱问题解决</h3><h3 id=\"sitemap-功能添加\"><a href=\"#sitemap-功能添加\" class=\"headerlink\" title=\"sitemap 功能添加\"></a>sitemap 功能添加</h3><blockquote>\n<p>实现sitemap功能 以单独一篇文章来记录</p>\n</blockquote>\n<p><a href=\"/archives/20200814f023bd8e/\">hexo添加sitemap功能</a></p>\n<h3 id=\"SubNav图标拓展\"><a href=\"#SubNav图标拓展\" class=\"headerlink\" title=\"SubNav图标拓展\"></a>SubNav图标拓展</h3><blockquote>\n<p>实现SubNav图标拓展 以单独一篇文章来记录</p>\n</blockquote>\n<p><a href=\"/archives/20210205e928c2fc/\">Yilia主题如何添加左侧SubNav图标</a></p>\n<h3 id=\"RSS-功能添加\"><a href=\"#RSS-功能添加\" class=\"headerlink\" title=\"RSS 功能添加\"></a>RSS 功能添加</h3><h4 id=\"安装-RSS-插件\"><a href=\"#安装-RSS-插件\" class=\"headerlink\" title=\"安装 RSS 插件\"></a>安装 RSS 插件</h4><p>注意一定要安装到 blog 的根目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure>\n<h4 id=\"更改配置文件\"><a href=\"#更改配置文件\" class=\"headerlink\" title=\"更改配置文件\"></a>更改配置文件</h4><p>在你的项目的<code>_config.yml</code> 配置文件下找到 <code>Extensions</code> 添加如下内容：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extensions  #插件和主题</span><br><span class=\"line\">## Plugins: https://hexo.io/plugins/</span><br><span class=\"line\">## Themes: https://hexo.io/themes/</span><br><span class=\"line\">#RSS订阅</span><br><span class=\"line\">plugins: hexo-generater-feed</span><br></pre></td></tr></table></figure>\n<p>在主题配置文件里，在 rss 位置，添加 <code>/atom.xml</code></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">subnav:</span><br><span class=\"line\">  #github: &quot;#&quot;</span><br><span class=\"line\">  #weibo: &quot;#&quot;</span><br><span class=\"line\">  rss: &quot;/atom.xml&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"谷歌统计添加\"><a href=\"#谷歌统计添加\" class=\"headerlink\" title=\"谷歌统计添加\"></a>谷歌统计添加</h3><h3 id=\"部署命令\"><a href=\"#部署命令\" class=\"headerlink\" title=\"部署命令\"></a>部署命令</h3><p>修改配置后，输入以下三条命令即可部署</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>点击这里 查看博客正文的效果</p>\n<p>以上希望对你所有帮助。</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://tding.top/archives/9a232bbe.html\">Hexo-Yilia 进阶笔记</a></li>\n<li><a href=\"https://blog.csdn.net/liuyunjay66/article/details/79845944\">Hexo yilia 主题一揽子使用方案</a></li>\n<li><a href=\"https://codegitz.github.io/2018/04/13/hexo-yilia-%E6%96%87%E7%AB%A0%E6%B5%8F%E8%A7%88%E9%87%8F%E7%BB%9F%E8%AE%A1/\">hexo yilia 文章浏览量统计</a></li>\n<li><a href=\"https://juejin.im/post/5cc11c41f265da038f7745b5\">Hexo 添加分类及标签</a></li>\n<li><a href=\"https://www.voidking.com/dev-hexo-categories/\">Hexo添加categories页面</a></li>\n</ul>"},{"title":"东郊湿地公园","abbrlink":"3bc8a357","date":"2020-08-01T12:58:36.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/08/02/aJd054.png)\n\n<!-- more -->\n\n> 路人穿街过河 好景只留片刻\n\n![图1](https://s1.ax1x.com/2020/08/02/aJtwpq.jpg)\n\n![图2](https://s1.ax1x.com/2020/08/02/aJ8OyD.jpg)\n\n> 林中人们在帐篷里 吊床上乘着凉 听着虫鸣鸟叫 很是悠闲惬意 令人向往\n\n![图3](https://s1.ax1x.com/2020/08/02/aJ8HW6.jpg)\n\n![图4](https://s1.ax1x.com/2020/08/02/aJGTBQ.jpg)\n\n> 一朵白莲跳入眼帘 赠人以惊喜\n\n![图5](https://s1.ax1x.com/2020/08/02/aJ8TF1.jpg)\n\n![图6](https://s1.ax1x.com/2020/08/02/aJGbAs.jpg)\n\n![图7](https://s1.ax1x.com/2020/08/02/aJ8XOe.jpg)\n\n> 一群野鸭在湖中游弋 时而潜入水中 好似是在嬉笑着、打闹着 诉说着夏的美好\n\n![图8](https://s1.ax1x.com/2020/08/02/aJ8veH.jpg)\n\n> 静谧的小中河 轻轻流淌 承载着岁月的美好\n\n![图9](https://s1.ax1x.com/2020/08/02/aJ8xwd.jpg)\n\n![图10](https://s1.ax1x.com/2020/08/02/aJ8zTA.jpg)\n\n![图11](https://s1.ax1x.com/2020/08/02/aJG9Yt.jpg)\n\n![图12](https://s1.ax1x.com/2020/08/02/aJGCfP.jpg)\n\n> 一簇簇向日葵 顶着太阳的炙烤 蓬勃的生长\n\n![图13](https://s1.ax1x.com/2020/08/02/aJGiSf.jpg)\n\n![图14](https://s1.ax1x.com/2020/08/02/aJGFl8.jpg)\n\n![图15](https://s1.ax1x.com/2020/08/02/aJGk6S.jpg)\n\n> 这紫色的小花真是过分妖娆 看久了一阵阵眩晕感随即而来\n\n![图16](https://s1.ax1x.com/2020/08/02/aJGVmQ.jpg)\n\n> 诺大的湿地公园 走了8km只能转了个一半 下次有缘再见吧 🤣🤣🤣\n","source":"_posts/东郊湿地公园.md","raw":"---\ntitle: 东郊湿地公园\ntags:\n  - 游记\n  - 东郊湿地公园\ncategories:\n  - 游记\nabbrlink: 3bc8a357\ndate: 2020-08-01 20:58:36\n---\n\n![首屏图](https://s1.ax1x.com/2020/08/02/aJd054.png)\n\n<!-- more -->\n\n> 路人穿街过河 好景只留片刻\n\n![图1](https://s1.ax1x.com/2020/08/02/aJtwpq.jpg)\n\n![图2](https://s1.ax1x.com/2020/08/02/aJ8OyD.jpg)\n\n> 林中人们在帐篷里 吊床上乘着凉 听着虫鸣鸟叫 很是悠闲惬意 令人向往\n\n![图3](https://s1.ax1x.com/2020/08/02/aJ8HW6.jpg)\n\n![图4](https://s1.ax1x.com/2020/08/02/aJGTBQ.jpg)\n\n> 一朵白莲跳入眼帘 赠人以惊喜\n\n![图5](https://s1.ax1x.com/2020/08/02/aJ8TF1.jpg)\n\n![图6](https://s1.ax1x.com/2020/08/02/aJGbAs.jpg)\n\n![图7](https://s1.ax1x.com/2020/08/02/aJ8XOe.jpg)\n\n> 一群野鸭在湖中游弋 时而潜入水中 好似是在嬉笑着、打闹着 诉说着夏的美好\n\n![图8](https://s1.ax1x.com/2020/08/02/aJ8veH.jpg)\n\n> 静谧的小中河 轻轻流淌 承载着岁月的美好\n\n![图9](https://s1.ax1x.com/2020/08/02/aJ8xwd.jpg)\n\n![图10](https://s1.ax1x.com/2020/08/02/aJ8zTA.jpg)\n\n![图11](https://s1.ax1x.com/2020/08/02/aJG9Yt.jpg)\n\n![图12](https://s1.ax1x.com/2020/08/02/aJGCfP.jpg)\n\n> 一簇簇向日葵 顶着太阳的炙烤 蓬勃的生长\n\n![图13](https://s1.ax1x.com/2020/08/02/aJGiSf.jpg)\n\n![图14](https://s1.ax1x.com/2020/08/02/aJGFl8.jpg)\n\n![图15](https://s1.ax1x.com/2020/08/02/aJGk6S.jpg)\n\n> 这紫色的小花真是过分妖娆 看久了一阵阵眩晕感随即而来\n\n![图16](https://s1.ax1x.com/2020/08/02/aJGVmQ.jpg)\n\n> 诺大的湿地公园 走了8km只能转了个一半 下次有缘再见吧 🤣🤣🤣\n","slug":"东郊湿地公园","published":1,"updated":"2020-08-12T01:57:58.411Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyf000h2an95ix56zf4","content":"<p><img src=\"https://s1.ax1x.com/2020/08/02/aJd054.png\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>路人穿街过河 好景只留片刻</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJtwpq.jpg\" alt=\"图1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJ8OyD.jpg\" alt=\"图2\"></p>\n<blockquote>\n<p>林中人们在帐篷里 吊床上乘着凉 听着虫鸣鸟叫 很是悠闲惬意 令人向往</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJ8HW6.jpg\" alt=\"图3\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJGTBQ.jpg\" alt=\"图4\"></p>\n<blockquote>\n<p>一朵白莲跳入眼帘 赠人以惊喜</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJ8TF1.jpg\" alt=\"图5\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJGbAs.jpg\" alt=\"图6\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJ8XOe.jpg\" alt=\"图7\"></p>\n<blockquote>\n<p>一群野鸭在湖中游弋 时而潜入水中 好似是在嬉笑着、打闹着 诉说着夏的美好</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJ8veH.jpg\" alt=\"图8\"></p>\n<blockquote>\n<p>静谧的小中河 轻轻流淌 承载着岁月的美好</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJ8xwd.jpg\" alt=\"图9\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJ8zTA.jpg\" alt=\"图10\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJG9Yt.jpg\" alt=\"图11\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJGCfP.jpg\" alt=\"图12\"></p>\n<blockquote>\n<p>一簇簇向日葵 顶着太阳的炙烤 蓬勃的生长</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJGiSf.jpg\" alt=\"图13\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJGFl8.jpg\" alt=\"图14\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJGk6S.jpg\" alt=\"图15\"></p>\n<blockquote>\n<p>这紫色的小花真是过分妖娆 看久了一阵阵眩晕感随即而来</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJGVmQ.jpg\" alt=\"图16\"></p>\n<blockquote>\n<p>诺大的湿地公园 走了8km只能转了个一半 下次有缘再见吧 🤣🤣🤣</p>\n</blockquote>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/08/02/aJd054.png\" alt=\"首屏图\"></p>","more":"<blockquote>\n<p>路人穿街过河 好景只留片刻</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJtwpq.jpg\" alt=\"图1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJ8OyD.jpg\" alt=\"图2\"></p>\n<blockquote>\n<p>林中人们在帐篷里 吊床上乘着凉 听着虫鸣鸟叫 很是悠闲惬意 令人向往</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJ8HW6.jpg\" alt=\"图3\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJGTBQ.jpg\" alt=\"图4\"></p>\n<blockquote>\n<p>一朵白莲跳入眼帘 赠人以惊喜</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJ8TF1.jpg\" alt=\"图5\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJGbAs.jpg\" alt=\"图6\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJ8XOe.jpg\" alt=\"图7\"></p>\n<blockquote>\n<p>一群野鸭在湖中游弋 时而潜入水中 好似是在嬉笑着、打闹着 诉说着夏的美好</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJ8veH.jpg\" alt=\"图8\"></p>\n<blockquote>\n<p>静谧的小中河 轻轻流淌 承载着岁月的美好</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJ8xwd.jpg\" alt=\"图9\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJ8zTA.jpg\" alt=\"图10\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJG9Yt.jpg\" alt=\"图11\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJGCfP.jpg\" alt=\"图12\"></p>\n<blockquote>\n<p>一簇簇向日葵 顶着太阳的炙烤 蓬勃的生长</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJGiSf.jpg\" alt=\"图13\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJGFl8.jpg\" alt=\"图14\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJGk6S.jpg\" alt=\"图15\"></p>\n<blockquote>\n<p>这紫色的小花真是过分妖娆 看久了一阵阵眩晕感随即而来</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/02/aJGVmQ.jpg\" alt=\"图16\"></p>\n<blockquote>\n<p>诺大的湿地公园 走了8km只能转了个一半 下次有缘再见吧 🤣🤣🤣</p>\n</blockquote>"},{"title":"两数之和","abbrlink":"d98ef1d2","date":"2020-07-28T06:59:28.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/07/28/aEZnFH.jpg)\n\n<!-- more -->\n\n## LeetCode 题目总结 - 两数之和\n\n### 题目\n\n给定一个整数数组 `nums` 和一个目标值 `target`，请你在该数组中找出和为目标值的那 **两个** 整数，并返回他们的数组下标。\n你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。\n\n### 示例\n\n> 给定 nums = [2, 7, 11, 15], target = 9\n> &nbsp;\n> 因为 nums[**0**] + nums[**1**] = 2 + 7 = 9\n> 所以返回 [**0**, **1**]\n\n### 解题\n\n#### 思路一\n\n> 暴力遍历\n\n```javascript\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    for(var i = 0; i<nums.length; i++){\n        for(var j=i+1;j<nums.length;j++){\n            if (nums[i]+nums[j]===target) {\n                return [i,j]\n            }\n        }\n    }\n};\n```\n\n#### 思路二\n\n> 利用数组减少查询时间\n\n* 在暴力法中，内层循环查找差值很浪费时间，那么如何减少查询时间呢？利用数组就可以减少查询时间。\n* 使用一层循环，每遍历到一个元素就计算该元素与 target 之间的差值 dif，然后以 dif 为下标到数组temp中寻找，如果 `temp[dif]` 有值(即不是 undefined)，则返回两个元素在数组 nums 的下标，如果没有找到，则将当前元素存入数组 temp 中(下标: nums[i], Value: i) 。\n* 时间复杂度：O(n)。\n\n```javascript\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    var temp = [];\n    for(var i=0;i<nums.length;i++){\n        // dif等同于目标数字-数组i值后的值\n        var dif = target - nums[i];\n        // 判断dif是否存在\n        if(temp[dif] != undefined){\n            // 返回dif的角标及遍历后的i值\n            return [temp[dif],i];\n        }\n        // 存储num[i]\n        temp[nums[i]] = i;\n    }\n};\n```\n\n> 给定 nums = [-1, 2, 7, 11, 15], target = 18\n> temp的变化为\n> [-1:0]=>[-1:0,2:1]=>[-1:0,2:1,7:2]\n> 判断temp[7] != undefined从而确定值为[2,3]\n\n#### 思路三\n\n> 使用while循环\n\n* 用while循环从后往前遍历。\n* 每次遍历先pop最后一个值，再通过indexOf来查找是否有对应的差，pop的好处是为了防止两个数相等。\n* 如果有对应的值，索引就是indexOf和数组的长度。\n\n```javascript\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    let i = nums.length;\n    while(i > 1) {\n        // 获取nums最后一个值，并将其删除\n        let last = nums.pop();\n        // 判断目标值减最后一个值的数是否存在于原数组中\n        if (nums.indexOf(target - last) > -1) {\n            return [nums.indexOf(target - last), nums.length]\n        }\n        i--\n    }\n};\n```\n\n## 参考资料\n\n* [两数之和](https://leetcode-cn.com/problems/two-sum/)\n* [两数之和(Java、JS 实现) 时间复杂度:O(n)](https://leetcode-cn.com/problems/two-sum/solution/liang-shu-zhi-he-java-jsshi-xian-shi-jian-fu-za-du/)\n* [两数之和-lin-536](https://leetcode-cn.com/problems/two-sum/solution/liang-shu-zhi-he-by-lin-536/)\n","source":"_posts/两数之和.md","raw":"---\ntitle: 两数之和\ntags:\n  - 技术积累\n  - LeetCode\n  - 两数之和\n  - 简单\n  - 每日一练\ncategories:\n  - 技术积累\n  - LeetCode\nabbrlink: d98ef1d2\ndate: 2020-07-28 14:59:28\n---\n\n![首屏图](https://s1.ax1x.com/2020/07/28/aEZnFH.jpg)\n\n<!-- more -->\n\n## LeetCode 题目总结 - 两数之和\n\n### 题目\n\n给定一个整数数组 `nums` 和一个目标值 `target`，请你在该数组中找出和为目标值的那 **两个** 整数，并返回他们的数组下标。\n你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。\n\n### 示例\n\n> 给定 nums = [2, 7, 11, 15], target = 9\n> &nbsp;\n> 因为 nums[**0**] + nums[**1**] = 2 + 7 = 9\n> 所以返回 [**0**, **1**]\n\n### 解题\n\n#### 思路一\n\n> 暴力遍历\n\n```javascript\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    for(var i = 0; i<nums.length; i++){\n        for(var j=i+1;j<nums.length;j++){\n            if (nums[i]+nums[j]===target) {\n                return [i,j]\n            }\n        }\n    }\n};\n```\n\n#### 思路二\n\n> 利用数组减少查询时间\n\n* 在暴力法中，内层循环查找差值很浪费时间，那么如何减少查询时间呢？利用数组就可以减少查询时间。\n* 使用一层循环，每遍历到一个元素就计算该元素与 target 之间的差值 dif，然后以 dif 为下标到数组temp中寻找，如果 `temp[dif]` 有值(即不是 undefined)，则返回两个元素在数组 nums 的下标，如果没有找到，则将当前元素存入数组 temp 中(下标: nums[i], Value: i) 。\n* 时间复杂度：O(n)。\n\n```javascript\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    var temp = [];\n    for(var i=0;i<nums.length;i++){\n        // dif等同于目标数字-数组i值后的值\n        var dif = target - nums[i];\n        // 判断dif是否存在\n        if(temp[dif] != undefined){\n            // 返回dif的角标及遍历后的i值\n            return [temp[dif],i];\n        }\n        // 存储num[i]\n        temp[nums[i]] = i;\n    }\n};\n```\n\n> 给定 nums = [-1, 2, 7, 11, 15], target = 18\n> temp的变化为\n> [-1:0]=>[-1:0,2:1]=>[-1:0,2:1,7:2]\n> 判断temp[7] != undefined从而确定值为[2,3]\n\n#### 思路三\n\n> 使用while循环\n\n* 用while循环从后往前遍历。\n* 每次遍历先pop最后一个值，再通过indexOf来查找是否有对应的差，pop的好处是为了防止两个数相等。\n* 如果有对应的值，索引就是indexOf和数组的长度。\n\n```javascript\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    let i = nums.length;\n    while(i > 1) {\n        // 获取nums最后一个值，并将其删除\n        let last = nums.pop();\n        // 判断目标值减最后一个值的数是否存在于原数组中\n        if (nums.indexOf(target - last) > -1) {\n            return [nums.indexOf(target - last), nums.length]\n        }\n        i--\n    }\n};\n```\n\n## 参考资料\n\n* [两数之和](https://leetcode-cn.com/problems/two-sum/)\n* [两数之和(Java、JS 实现) 时间复杂度:O(n)](https://leetcode-cn.com/problems/two-sum/solution/liang-shu-zhi-he-java-jsshi-xian-shi-jian-fu-za-du/)\n* [两数之和-lin-536](https://leetcode-cn.com/problems/two-sum/solution/liang-shu-zhi-he-by-lin-536/)\n","slug":"两数之和","published":1,"updated":"2020-08-12T01:57:58.412Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyg000i2an9c0zd4q9m","content":"<p><img src=\"https://s1.ax1x.com/2020/07/28/aEZnFH.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<h2 id=\"LeetCode-题目总结-两数之和\"><a href=\"#LeetCode-题目总结-两数之和\" class=\"headerlink\" title=\"LeetCode 题目总结 - 两数之和\"></a>LeetCode 题目总结 - 两数之和</h2><h3 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h3><p>给定一个整数数组 <code>nums</code> 和一个目标值 <code>target</code>，请你在该数组中找出和为目标值的那 <strong>两个</strong> 整数，并返回他们的数组下标。<br>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><blockquote>\n<p>给定 nums = [2, 7, 11, 15], target = 9<br>&nbsp;<br>因为 nums[<strong>0</strong>] + nums[<strong>1</strong>] = 2 + 7 = 9<br>所以返回 [<strong>0</strong>, <strong>1</strong>]</p>\n</blockquote>\n<h3 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h3><h4 id=\"思路一\"><a href=\"#思路一\" class=\"headerlink\" title=\"思路一\"></a>思路一</h4><blockquote>\n<p>暴力遍历</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number[]&#125;</span> <span class=\"variable\">nums</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">target</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number[]&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i&lt;nums.length; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=i+<span class=\"number\">1</span>;j&lt;nums.length;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[i]+nums[j]===target) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> [i,j]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"思路二\"><a href=\"#思路二\" class=\"headerlink\" title=\"思路二\"></a>思路二</h4><blockquote>\n<p>利用数组减少查询时间</p>\n</blockquote>\n<ul>\n<li>在暴力法中，内层循环查找差值很浪费时间，那么如何减少查询时间呢？利用数组就可以减少查询时间。</li>\n<li>使用一层循环，每遍历到一个元素就计算该元素与 target 之间的差值 dif，然后以 dif 为下标到数组temp中寻找，如果 <code>temp[dif]</code> 有值(即不是 undefined)，则返回两个元素在数组 nums 的下标，如果没有找到，则将当前元素存入数组 temp 中(下标: nums[i], Value: i) 。</li>\n<li>时间复杂度：O(n)。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number[]&#125;</span> <span class=\"variable\">nums</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">target</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number[]&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> temp = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// dif等同于目标数字-数组i值后的值</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> dif = target - nums[i];</span><br><span class=\"line\">        <span class=\"comment\">// 判断dif是否存在</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(temp[dif] != <span class=\"literal\">undefined</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 返回dif的角标及遍历后的i值</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> [temp[dif],i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 存储num[i]</span></span><br><span class=\"line\">        temp[nums[i]] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>给定 nums = [-1, 2, 7, 11, 15], target = 18<br>temp的变化为<br>[-1:0]=&gt;[-1:0,2:1]=&gt;[-1:0,2:1,7:2]<br>判断temp[7] != undefined从而确定值为[2,3]</p>\n</blockquote>\n<h4 id=\"思路三\"><a href=\"#思路三\" class=\"headerlink\" title=\"思路三\"></a>思路三</h4><blockquote>\n<p>使用while循环</p>\n</blockquote>\n<ul>\n<li>用while循环从后往前遍历。</li>\n<li>每次遍历先pop最后一个值，再通过indexOf来查找是否有对应的差，pop的好处是为了防止两个数相等。</li>\n<li>如果有对应的值，索引就是indexOf和数组的长度。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number[]&#125;</span> <span class=\"variable\">nums</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">target</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number[]&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> i = nums.length;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取nums最后一个值，并将其删除</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> last = nums.pop();</span><br><span class=\"line\">        <span class=\"comment\">// 判断目标值减最后一个值的数是否存在于原数组中</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums.indexOf(target - last) &gt; <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> [nums.indexOf(target - last), nums.length]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        i--</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://leetcode-cn.com/problems/two-sum/\">两数之和</a></li>\n<li><a href=\"https://leetcode-cn.com/problems/two-sum/solution/liang-shu-zhi-he-java-jsshi-xian-shi-jian-fu-za-du/\">两数之和(Java、JS 实现) 时间复杂度:O(n)</a></li>\n<li><a href=\"https://leetcode-cn.com/problems/two-sum/solution/liang-shu-zhi-he-by-lin-536/\">两数之和-lin-536</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/07/28/aEZnFH.jpg\" alt=\"首屏图\"></p>","more":"<h2 id=\"LeetCode-题目总结-两数之和\"><a href=\"#LeetCode-题目总结-两数之和\" class=\"headerlink\" title=\"LeetCode 题目总结 - 两数之和\"></a>LeetCode 题目总结 - 两数之和</h2><h3 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h3><p>给定一个整数数组 <code>nums</code> 和一个目标值 <code>target</code>，请你在该数组中找出和为目标值的那 <strong>两个</strong> 整数，并返回他们的数组下标。<br>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><blockquote>\n<p>给定 nums = [2, 7, 11, 15], target = 9<br>&nbsp;<br>因为 nums[<strong>0</strong>] + nums[<strong>1</strong>] = 2 + 7 = 9<br>所以返回 [<strong>0</strong>, <strong>1</strong>]</p>\n</blockquote>\n<h3 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h3><h4 id=\"思路一\"><a href=\"#思路一\" class=\"headerlink\" title=\"思路一\"></a>思路一</h4><blockquote>\n<p>暴力遍历</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number[]&#125;</span> <span class=\"variable\">nums</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">target</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number[]&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i&lt;nums.length; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=i+<span class=\"number\">1</span>;j&lt;nums.length;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[i]+nums[j]===target) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> [i,j]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"思路二\"><a href=\"#思路二\" class=\"headerlink\" title=\"思路二\"></a>思路二</h4><blockquote>\n<p>利用数组减少查询时间</p>\n</blockquote>\n<ul>\n<li>在暴力法中，内层循环查找差值很浪费时间，那么如何减少查询时间呢？利用数组就可以减少查询时间。</li>\n<li>使用一层循环，每遍历到一个元素就计算该元素与 target 之间的差值 dif，然后以 dif 为下标到数组temp中寻找，如果 <code>temp[dif]</code> 有值(即不是 undefined)，则返回两个元素在数组 nums 的下标，如果没有找到，则将当前元素存入数组 temp 中(下标: nums[i], Value: i) 。</li>\n<li>时间复杂度：O(n)。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number[]&#125;</span> <span class=\"variable\">nums</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">target</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number[]&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> temp = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// dif等同于目标数字-数组i值后的值</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> dif = target - nums[i];</span><br><span class=\"line\">        <span class=\"comment\">// 判断dif是否存在</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(temp[dif] != <span class=\"literal\">undefined</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 返回dif的角标及遍历后的i值</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> [temp[dif],i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 存储num[i]</span></span><br><span class=\"line\">        temp[nums[i]] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>给定 nums = [-1, 2, 7, 11, 15], target = 18<br>temp的变化为<br>[-1:0]=&gt;[-1:0,2:1]=&gt;[-1:0,2:1,7:2]<br>判断temp[7] != undefined从而确定值为[2,3]</p>\n</blockquote>\n<h4 id=\"思路三\"><a href=\"#思路三\" class=\"headerlink\" title=\"思路三\"></a>思路三</h4><blockquote>\n<p>使用while循环</p>\n</blockquote>\n<ul>\n<li>用while循环从后往前遍历。</li>\n<li>每次遍历先pop最后一个值，再通过indexOf来查找是否有对应的差，pop的好处是为了防止两个数相等。</li>\n<li>如果有对应的值，索引就是indexOf和数组的长度。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number[]&#125;</span> <span class=\"variable\">nums</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">target</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number[]&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> i = nums.length;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取nums最后一个值，并将其删除</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> last = nums.pop();</span><br><span class=\"line\">        <span class=\"comment\">// 判断目标值减最后一个值的数是否存在于原数组中</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums.indexOf(target - last) &gt; <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> [nums.indexOf(target - last), nums.length]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        i--</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://leetcode-cn.com/problems/two-sum/\">两数之和</a></li>\n<li><a href=\"https://leetcode-cn.com/problems/two-sum/solution/liang-shu-zhi-he-java-jsshi-xian-shi-jian-fu-za-du/\">两数之和(Java、JS 实现) 时间复杂度:O(n)</a></li>\n<li><a href=\"https://leetcode-cn.com/problems/two-sum/solution/liang-shu-zhi-he-by-lin-536/\">两数之和-lin-536</a></li>\n</ul>"},{"title":"两数相加","abbrlink":"b6465ced","date":"2020-07-31T06:51:44.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/07/31/aliitK.jpg)\n\n<!-- more -->\n\n## LeetCode 题目总结 - 两数相加\n\n### 题目\n\n给出两个**非空**的链表用来表示两个非负的整数。其中，它们各自的位数是按照**逆序**的方式存储的，并且它们的每个节点只能存储**一位**数字。\n\n如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。\n\n您可以假设除了数字 0 之外，这两个数都不会以 0 开头。\n\n### 示例\n\n> 输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)\n> 输出：7 -> 0 -> 8\n> 原因：342 + 465 = 807\n\n### 提示\n\n在js中，大概可以理解为，输入的l1，格式为\n\n```javascript\nListNode {\n    val: 2,\n    next:  ListNode {\n        val: 4,\n        next: ListNode {\n            val: 3,\n            next: null\n        }\n    }\n};\n```\n\nl2也是如此\n\n```javascript\nListNode {\n    val: 5,\n    next:  ListNode {\n        val: 6,\n        next: ListNode {\n            val: 4,\n            next: null\n        }\n    }\n};\n```\n\n过程发生了342+465 = 807的变化 最后输出：\n\n```javascript\nListNode {\n     val: 7,\n     next:  ListNode {\n         val: 0,\n         next: ListNode {\n             val: 8,\n             next: null\n         }\n     }\n };\n```\n\n需要注意以下几点：\n\n* l1、l2长度可能不同`[2, 7, 1, 5]`、`[3, 4, 6]`\n* 末尾之和大于10后需要进位`[2, 7, 6]`、`[3, 4, 6]`\n\n### 解题\n\n```javascript\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function(l1, l2) {\n    let node = new ListNode('head');\n    let temp = node;//哑结点\n    let add = 0;//是否进一\n    let sum = 0;//新链表当前未取余的值 = 链表1值 + 链表2值 + add;\n\n    //遍历，直到最长的都为空\n    while(l1 || l2){\n        sum = (l1 ? l1.val : 0) + (l2 ? l2.val : 0) + add;\n        temp.next = new ListNode(sum % 10);//取余则为新链表的值\n        temp = temp.next;\n        add = sum >= 10 ? 1 : 0;\n        l1 && (l1 = l1.next);\n        l2 && (l2 = l2.next);\n    }\n    // 解决最后一位进位的情况\n    add && (temp.next = new ListNode(add));\n    return node.next;\n};\n```\n\n### Q&A\n\n#### 为什么需要`temp=node`\n\n`temp`的关键在于它是一个变量，它所指向的永远都是当前两个链表数值相加和的或者取模所得链表的下一个next（即链表）。\n最终返回的是链表的头结点地址，`temp`负责移动，`node`负责返回头指针的地址。\n\n#### ListNode('head')的'head'是什么含义\n\n`let node = new ListNode('head');`代表着链表的表头，不过这里写啥都没有影响，因为最后返回的是`ndoe.next`\n\n## 参考资料\n\n* [两数相加](https://leetcode-cn.com/problems/add-two-numbers/)\n* [结题思路：蛋壳系列：用时95.46%，内存86.47%](https://leetcode-cn.com/problems/add-two-numbers/solution/zhi-xing-yong-shi-chao-guo-8246nei-cun-xiao-hao-ch/)\n","source":"_posts/两数相加.md","raw":"---\ntitle: 两数相加\ntags:\n  - 技术积累\n  - LeetCode\n  - 两数相加\n  - 中等\n  - 每日一练\ncategories:\n  - 技术积累\n  - LeetCode\nabbrlink: b6465ced\ndate: 2020-07-31 14:51:44\n---\n\n![首屏图](https://s1.ax1x.com/2020/07/31/aliitK.jpg)\n\n<!-- more -->\n\n## LeetCode 题目总结 - 两数相加\n\n### 题目\n\n给出两个**非空**的链表用来表示两个非负的整数。其中，它们各自的位数是按照**逆序**的方式存储的，并且它们的每个节点只能存储**一位**数字。\n\n如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。\n\n您可以假设除了数字 0 之外，这两个数都不会以 0 开头。\n\n### 示例\n\n> 输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)\n> 输出：7 -> 0 -> 8\n> 原因：342 + 465 = 807\n\n### 提示\n\n在js中，大概可以理解为，输入的l1，格式为\n\n```javascript\nListNode {\n    val: 2,\n    next:  ListNode {\n        val: 4,\n        next: ListNode {\n            val: 3,\n            next: null\n        }\n    }\n};\n```\n\nl2也是如此\n\n```javascript\nListNode {\n    val: 5,\n    next:  ListNode {\n        val: 6,\n        next: ListNode {\n            val: 4,\n            next: null\n        }\n    }\n};\n```\n\n过程发生了342+465 = 807的变化 最后输出：\n\n```javascript\nListNode {\n     val: 7,\n     next:  ListNode {\n         val: 0,\n         next: ListNode {\n             val: 8,\n             next: null\n         }\n     }\n };\n```\n\n需要注意以下几点：\n\n* l1、l2长度可能不同`[2, 7, 1, 5]`、`[3, 4, 6]`\n* 末尾之和大于10后需要进位`[2, 7, 6]`、`[3, 4, 6]`\n\n### 解题\n\n```javascript\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function(l1, l2) {\n    let node = new ListNode('head');\n    let temp = node;//哑结点\n    let add = 0;//是否进一\n    let sum = 0;//新链表当前未取余的值 = 链表1值 + 链表2值 + add;\n\n    //遍历，直到最长的都为空\n    while(l1 || l2){\n        sum = (l1 ? l1.val : 0) + (l2 ? l2.val : 0) + add;\n        temp.next = new ListNode(sum % 10);//取余则为新链表的值\n        temp = temp.next;\n        add = sum >= 10 ? 1 : 0;\n        l1 && (l1 = l1.next);\n        l2 && (l2 = l2.next);\n    }\n    // 解决最后一位进位的情况\n    add && (temp.next = new ListNode(add));\n    return node.next;\n};\n```\n\n### Q&A\n\n#### 为什么需要`temp=node`\n\n`temp`的关键在于它是一个变量，它所指向的永远都是当前两个链表数值相加和的或者取模所得链表的下一个next（即链表）。\n最终返回的是链表的头结点地址，`temp`负责移动，`node`负责返回头指针的地址。\n\n#### ListNode('head')的'head'是什么含义\n\n`let node = new ListNode('head');`代表着链表的表头，不过这里写啥都没有影响，因为最后返回的是`ndoe.next`\n\n## 参考资料\n\n* [两数相加](https://leetcode-cn.com/problems/add-two-numbers/)\n* [结题思路：蛋壳系列：用时95.46%，内存86.47%](https://leetcode-cn.com/problems/add-two-numbers/solution/zhi-xing-yong-shi-chao-guo-8246nei-cun-xiao-hao-ch/)\n","slug":"两数相加","published":1,"updated":"2020-08-12T01:57:58.412Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyg000j2an95zekaexp","content":"<p><img src=\"https://s1.ax1x.com/2020/07/31/aliitK.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<h2 id=\"LeetCode-题目总结-两数相加\"><a href=\"#LeetCode-题目总结-两数相加\" class=\"headerlink\" title=\"LeetCode 题目总结 - 两数相加\"></a>LeetCode 题目总结 - 两数相加</h2><h3 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h3><p>给出两个<strong>非空</strong>的链表用来表示两个非负的整数。其中，它们各自的位数是按照<strong>逆序</strong>的方式存储的，并且它们的每个节点只能存储<strong>一位</strong>数字。</p>\n<p>如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。</p>\n<p>您可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><blockquote>\n<p>输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)<br>输出：7 -&gt; 0 -&gt; 8<br>原因：342 + 465 = 807</p>\n</blockquote>\n<h3 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h3><p>在js中，大概可以理解为，输入的l1，格式为</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ListNode &#123;</span><br><span class=\"line\">    val: <span class=\"number\">2</span>,</span><br><span class=\"line\">    next:  ListNode &#123;</span><br><span class=\"line\">        val: <span class=\"number\">4</span>,</span><br><span class=\"line\">        next: ListNode &#123;</span><br><span class=\"line\">            val: <span class=\"number\">3</span>,</span><br><span class=\"line\">            next: <span class=\"literal\">null</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>l2也是如此</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ListNode &#123;</span><br><span class=\"line\">    val: <span class=\"number\">5</span>,</span><br><span class=\"line\">    next:  ListNode &#123;</span><br><span class=\"line\">        val: <span class=\"number\">6</span>,</span><br><span class=\"line\">        next: ListNode &#123;</span><br><span class=\"line\">            val: <span class=\"number\">4</span>,</span><br><span class=\"line\">            next: <span class=\"literal\">null</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>过程发生了342+465 = 807的变化 最后输出：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ListNode &#123;</span><br><span class=\"line\">     val: <span class=\"number\">7</span>,</span><br><span class=\"line\">     next:  ListNode &#123;</span><br><span class=\"line\">         val: <span class=\"number\">0</span>,</span><br><span class=\"line\">         next: ListNode &#123;</span><br><span class=\"line\">             val: <span class=\"number\">8</span>,</span><br><span class=\"line\">             next: <span class=\"literal\">null</span></span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;;</span><br></pre></td></tr></table></figure>\n<p>需要注意以下几点：</p>\n<ul>\n<li>l1、l2长度可能不同<code>[2, 7, 1, 5]</code>、<code>[3, 4, 6]</code></li>\n<li>末尾之和大于10后需要进位<code>[2, 7, 6]</code>、<code>[3, 4, 6]</code></li>\n</ul>\n<h3 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;ListNode&#125;</span> <span class=\"variable\">l1</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;ListNode&#125;</span> <span class=\"variable\">l2</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;ListNode&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> addTwoNumbers = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">l1, l2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> node = <span class=\"keyword\">new</span> ListNode(<span class=\"string\">&#x27;head&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp = node;<span class=\"comment\">//哑结点</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> add = <span class=\"number\">0</span>;<span class=\"comment\">//是否进一</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;<span class=\"comment\">//新链表当前未取余的值 = 链表1值 + 链表2值 + add;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//遍历，直到最长的都为空</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(l1 || l2)&#123;</span><br><span class=\"line\">        sum = (l1 ? l1.val : <span class=\"number\">0</span>) + (l2 ? l2.val : <span class=\"number\">0</span>) + add;</span><br><span class=\"line\">        temp.next = <span class=\"keyword\">new</span> ListNode(sum % <span class=\"number\">10</span>);<span class=\"comment\">//取余则为新链表的值</span></span><br><span class=\"line\">        temp = temp.next;</span><br><span class=\"line\">        add = sum &gt;= <span class=\"number\">10</span> ? <span class=\"number\">1</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">        l1 &amp;&amp; (l1 = l1.next);</span><br><span class=\"line\">        l2 &amp;&amp; (l2 = l2.next);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 解决最后一位进位的情况</span></span><br><span class=\"line\">    add &amp;&amp; (temp.next = <span class=\"keyword\">new</span> ListNode(add));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> node.next;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Q-amp-A\"><a href=\"#Q-amp-A\" class=\"headerlink\" title=\"Q&amp;A\"></a>Q&amp;A</h3><h4 id=\"为什么需要temp-node\"><a href=\"#为什么需要temp-node\" class=\"headerlink\" title=\"为什么需要temp=node\"></a>为什么需要<code>temp=node</code></h4><p><code>temp</code>的关键在于它是一个变量，它所指向的永远都是当前两个链表数值相加和的或者取模所得链表的下一个next（即链表）。<br>最终返回的是链表的头结点地址，<code>temp</code>负责移动，<code>node</code>负责返回头指针的地址。</p>\n<h4 id=\"ListNode-‘head’-的’head’是什么含义\"><a href=\"#ListNode-‘head’-的’head’是什么含义\" class=\"headerlink\" title=\"ListNode(‘head’)的’head’是什么含义\"></a>ListNode(‘head’)的’head’是什么含义</h4><p><code>let node = new ListNode(&#39;head&#39;);</code>代表着链表的表头，不过这里写啥都没有影响，因为最后返回的是<code>ndoe.next</code></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://leetcode-cn.com/problems/add-two-numbers/\">两数相加</a></li>\n<li><a href=\"https://leetcode-cn.com/problems/add-two-numbers/solution/zhi-xing-yong-shi-chao-guo-8246nei-cun-xiao-hao-ch/\">结题思路：蛋壳系列：用时95.46%，内存86.47%</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/07/31/aliitK.jpg\" alt=\"首屏图\"></p>","more":"<h2 id=\"LeetCode-题目总结-两数相加\"><a href=\"#LeetCode-题目总结-两数相加\" class=\"headerlink\" title=\"LeetCode 题目总结 - 两数相加\"></a>LeetCode 题目总结 - 两数相加</h2><h3 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h3><p>给出两个<strong>非空</strong>的链表用来表示两个非负的整数。其中，它们各自的位数是按照<strong>逆序</strong>的方式存储的，并且它们的每个节点只能存储<strong>一位</strong>数字。</p>\n<p>如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。</p>\n<p>您可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><blockquote>\n<p>输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)<br>输出：7 -&gt; 0 -&gt; 8<br>原因：342 + 465 = 807</p>\n</blockquote>\n<h3 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h3><p>在js中，大概可以理解为，输入的l1，格式为</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ListNode &#123;</span><br><span class=\"line\">    val: <span class=\"number\">2</span>,</span><br><span class=\"line\">    next:  ListNode &#123;</span><br><span class=\"line\">        val: <span class=\"number\">4</span>,</span><br><span class=\"line\">        next: ListNode &#123;</span><br><span class=\"line\">            val: <span class=\"number\">3</span>,</span><br><span class=\"line\">            next: <span class=\"literal\">null</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>l2也是如此</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ListNode &#123;</span><br><span class=\"line\">    val: <span class=\"number\">5</span>,</span><br><span class=\"line\">    next:  ListNode &#123;</span><br><span class=\"line\">        val: <span class=\"number\">6</span>,</span><br><span class=\"line\">        next: ListNode &#123;</span><br><span class=\"line\">            val: <span class=\"number\">4</span>,</span><br><span class=\"line\">            next: <span class=\"literal\">null</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>过程发生了342+465 = 807的变化 最后输出：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ListNode &#123;</span><br><span class=\"line\">     val: <span class=\"number\">7</span>,</span><br><span class=\"line\">     next:  ListNode &#123;</span><br><span class=\"line\">         val: <span class=\"number\">0</span>,</span><br><span class=\"line\">         next: ListNode &#123;</span><br><span class=\"line\">             val: <span class=\"number\">8</span>,</span><br><span class=\"line\">             next: <span class=\"literal\">null</span></span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;;</span><br></pre></td></tr></table></figure>\n<p>需要注意以下几点：</p>\n<ul>\n<li>l1、l2长度可能不同<code>[2, 7, 1, 5]</code>、<code>[3, 4, 6]</code></li>\n<li>末尾之和大于10后需要进位<code>[2, 7, 6]</code>、<code>[3, 4, 6]</code></li>\n</ul>\n<h3 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;ListNode&#125;</span> <span class=\"variable\">l1</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;ListNode&#125;</span> <span class=\"variable\">l2</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;ListNode&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> addTwoNumbers = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">l1, l2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> node = <span class=\"keyword\">new</span> ListNode(<span class=\"string\">&#x27;head&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp = node;<span class=\"comment\">//哑结点</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> add = <span class=\"number\">0</span>;<span class=\"comment\">//是否进一</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;<span class=\"comment\">//新链表当前未取余的值 = 链表1值 + 链表2值 + add;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//遍历，直到最长的都为空</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(l1 || l2)&#123;</span><br><span class=\"line\">        sum = (l1 ? l1.val : <span class=\"number\">0</span>) + (l2 ? l2.val : <span class=\"number\">0</span>) + add;</span><br><span class=\"line\">        temp.next = <span class=\"keyword\">new</span> ListNode(sum % <span class=\"number\">10</span>);<span class=\"comment\">//取余则为新链表的值</span></span><br><span class=\"line\">        temp = temp.next;</span><br><span class=\"line\">        add = sum &gt;= <span class=\"number\">10</span> ? <span class=\"number\">1</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">        l1 &amp;&amp; (l1 = l1.next);</span><br><span class=\"line\">        l2 &amp;&amp; (l2 = l2.next);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 解决最后一位进位的情况</span></span><br><span class=\"line\">    add &amp;&amp; (temp.next = <span class=\"keyword\">new</span> ListNode(add));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> node.next;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Q-amp-A\"><a href=\"#Q-amp-A\" class=\"headerlink\" title=\"Q&amp;A\"></a>Q&amp;A</h3><h4 id=\"为什么需要temp-node\"><a href=\"#为什么需要temp-node\" class=\"headerlink\" title=\"为什么需要temp=node\"></a>为什么需要<code>temp=node</code></h4><p><code>temp</code>的关键在于它是一个变量，它所指向的永远都是当前两个链表数值相加和的或者取模所得链表的下一个next（即链表）。<br>最终返回的是链表的头结点地址，<code>temp</code>负责移动，<code>node</code>负责返回头指针的地址。</p>\n<h4 id=\"ListNode-‘head’-的’head’是什么含义\"><a href=\"#ListNode-‘head’-的’head’是什么含义\" class=\"headerlink\" title=\"ListNode(‘head’)的’head’是什么含义\"></a>ListNode(‘head’)的’head’是什么含义</h4><p><code>let node = new ListNode(&#39;head&#39;);</code>代表着链表的表头，不过这里写啥都没有影响，因为最后返回的是<code>ndoe.next</code></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://leetcode-cn.com/problems/add-two-numbers/\">两数相加</a></li>\n<li><a href=\"https://leetcode-cn.com/problems/add-two-numbers/solution/zhi-xing-yong-shi-chao-guo-8246nei-cun-xiao-hao-ch/\">结题思路：蛋壳系列：用时95.46%，内存86.47%</a></li>\n</ul>"},{"title":"丹宸永固-紫禁城建成六百年","abbrlink":"e4a158b5","date":"2020-10-11T10:33:56.000Z","_content":"\n![首屏图](https://s3.ax1x.com/2021/01/13/sNPKDH.jpg)\n\n<!-- more -->\n\n> 紫禁城建成**六百年**\n> 故宫博物院成立九十五周年\n\n![大殿一角](https://s3.ax1x.com/2021/01/13/sNCzgU.jpg)\n\n> 1406年 **永乐营北京**\n> 永乐皇帝于永乐四年（1406）下诏，“以明年五月建北京宫殿”\n自此拉开了北京皇宫营建的序幕。\n\n![午门](https://s3.ax1x.com/2021/01/13/sNPkU1.jpg)\n\n> 1420年**紫禁城**建成\n> 永乐十八年（1420）十一月，朱棣发布诏书，宣告北京宫殿竣工。由此开启了紫禁城自明至清的使用历史。\n\n![正殿](https://s3.ax1x.com/2021/01/13/sNPegO.jpg)\n\n> 1535年 **钦安殿奉道**\n> 嘉靖十四年（1535），因为朱厚熜（音“聪”）这位笃信道教的皇帝，包括钦安殿在内的紫禁城建筑布局发生了有明一代的较大改变。\n\n![午门城楼](https://s3.ax1x.com/2021/01/13/sNP9u4.jpg)\n\n> 1655年 **改建坤宁宫**\n> 顺治十二年（1655），仿沈阳清宁宫重修坤宁宫。坤宁宫的改建是清初满汉文化碰撞、融合的典型体现。\n\n![门钉](https://s3.ax1x.com/2021/01/13/sNPPb9.jpg)\n\n> 1695年 **重建太和殿**\n> 康熙十八年（1679）十二月，太和殿遭雷击焚毁。经十余年备料，三十四年（1695）重修工程进入施工阶段，历时两年竣工，太和殿形成今日所见之形制。\n\n![太和殿](https://s3.ax1x.com/2021/01/13/sNPMbd.jpg)\n\n> 1723年 **入主养心殿**\n> 养心殿于雍正元年（1723）具备了“政寝合一”的特点，见证了此后波澜起伏的内政外交、权力易主，成为清朝中后期实际的政治心脏。\n\n![午门角楼](https://s3.ax1x.com/2021/01/13/sNPZ8K.jpg)\n\n> 1738年 **改乾西五所**\n> 乾隆皇帝对乾西五所的改建，将乾清宫东、西五所相对称的格局打破，乾西五所的建筑式样与功能也发生了根本性变化。\n\n![房檐](https://s3.ax1x.com/2021/01/13/sNPA4x.jpg)\n\n> 1776年 **建成宁寿宫**\n> 宁寿宫于乾隆四十一年（1776）落成，展现了乾隆帝对归政后闲适生活的企盼，同时也潜藏着他作为一个文人天子的精神寄托。\n\n![红墙](https://s3.ax1x.com/2021/01/13/sNPSvF.jpg)\n\n> 1859年 **连通长春宫**\n> 咸丰九年（1859），基于对理政空间的需要，长春宫一区开始被改造，从而改变了西六宫的建筑格局。\n\n![东六宫](https://s3.ax1x.com/2021/01/13/sNPCDJ.jpg)\n\n> 1902年 **重建武英殿**\n> 武英殿分别于同治八年（1869）、光绪二十八年（1902）经历两次火灾，在内忧外患的局势之下进行了两次艰难的重建，反映出当时清廷的拮据与无奈。\n\n![叶知秋](https://s3.ax1x.com/2021/01/13/sNudUS.jpg)\n\n> 1909年 **探秘灵沼轩**\n> 灵沼轩建于宣统元年（1909年），体现了“中西合璧”的建筑风格，因辛亥革命爆发而被迫停工，至今未完工。\n\n![灵沼轩](https://s3.ax1x.com/2021/01/13/sNuw4g.jpg)\n\n> 1914年 **初开紫禁城**\n> 1914年10月，古物陈列所正式开幕，紫禁城自此对公众开放。古物陈列所规模初具，成为民国初年北京观摩古物和精研画法的艺术殿堂。\n\n![夕阳余光](https://s3.ax1x.com/2021/01/13/sNPFER.jpg)\n\n> 1925年 **肇建博物院**\n> 1925年 10月10日，故宫博物院开院。\n\n![长街](https://s3.ax1x.com/2021/01/13/sNuaE8.jpg)\n\n> 1933年 **战时护古物**\n> 1933年，故宫文物南迁，历时八余载，行程数万里，创造了典守国宝的奇迹。\n\n![透风](https://s3.ax1x.com/2021/01/13/sNuNHf.jpg)\n\n> 1949年 **重整修缮队**\n> 1949年成立的故宫工程小组以“保护为主，抢救第一”为原则，逐步改善了建筑的保存状况。\n\n![长街](https://s3.ax1x.com/2021/01/13/sNP1UI.jpg)\n\n> 1961年 **首荐颁国保**\n> 1961年，故宫入选第一批全国重点文物保护单位。\n\n![长街](https://s3.ax1x.com/2021/01/13/sNPlVA.jpg)\n\n> 1987年 **瑰宝列世遗**\n> 1987年，故宫被联合国教科文组织列入世界遗产名录。\n\n![神兽](https://s3.ax1x.com/2021/01/13/sNuD3j.jpg)\n\n> 2002年 **大修百年计**\n> 2002年，以武英殿大修作为试点工程，故宫的“世纪大修”拉开了序幕。\n\n![长街](https://s3.ax1x.com/2021/01/13/sNPGPP.jpg)","source":"_posts/丹宸永固-紫禁城建成六百年.md","raw":"---\ntitle: 丹宸永固-紫禁城建成六百年\nabbrlink: e4a158b5\ndate: 2020-10-11 18:33:56\ntags:\n  - 游记\n  - 故宫\ncategories:\n  - 游记\n---\n\n![首屏图](https://s3.ax1x.com/2021/01/13/sNPKDH.jpg)\n\n<!-- more -->\n\n> 紫禁城建成**六百年**\n> 故宫博物院成立九十五周年\n\n![大殿一角](https://s3.ax1x.com/2021/01/13/sNCzgU.jpg)\n\n> 1406年 **永乐营北京**\n> 永乐皇帝于永乐四年（1406）下诏，“以明年五月建北京宫殿”\n自此拉开了北京皇宫营建的序幕。\n\n![午门](https://s3.ax1x.com/2021/01/13/sNPkU1.jpg)\n\n> 1420年**紫禁城**建成\n> 永乐十八年（1420）十一月，朱棣发布诏书，宣告北京宫殿竣工。由此开启了紫禁城自明至清的使用历史。\n\n![正殿](https://s3.ax1x.com/2021/01/13/sNPegO.jpg)\n\n> 1535年 **钦安殿奉道**\n> 嘉靖十四年（1535），因为朱厚熜（音“聪”）这位笃信道教的皇帝，包括钦安殿在内的紫禁城建筑布局发生了有明一代的较大改变。\n\n![午门城楼](https://s3.ax1x.com/2021/01/13/sNP9u4.jpg)\n\n> 1655年 **改建坤宁宫**\n> 顺治十二年（1655），仿沈阳清宁宫重修坤宁宫。坤宁宫的改建是清初满汉文化碰撞、融合的典型体现。\n\n![门钉](https://s3.ax1x.com/2021/01/13/sNPPb9.jpg)\n\n> 1695年 **重建太和殿**\n> 康熙十八年（1679）十二月，太和殿遭雷击焚毁。经十余年备料，三十四年（1695）重修工程进入施工阶段，历时两年竣工，太和殿形成今日所见之形制。\n\n![太和殿](https://s3.ax1x.com/2021/01/13/sNPMbd.jpg)\n\n> 1723年 **入主养心殿**\n> 养心殿于雍正元年（1723）具备了“政寝合一”的特点，见证了此后波澜起伏的内政外交、权力易主，成为清朝中后期实际的政治心脏。\n\n![午门角楼](https://s3.ax1x.com/2021/01/13/sNPZ8K.jpg)\n\n> 1738年 **改乾西五所**\n> 乾隆皇帝对乾西五所的改建，将乾清宫东、西五所相对称的格局打破，乾西五所的建筑式样与功能也发生了根本性变化。\n\n![房檐](https://s3.ax1x.com/2021/01/13/sNPA4x.jpg)\n\n> 1776年 **建成宁寿宫**\n> 宁寿宫于乾隆四十一年（1776）落成，展现了乾隆帝对归政后闲适生活的企盼，同时也潜藏着他作为一个文人天子的精神寄托。\n\n![红墙](https://s3.ax1x.com/2021/01/13/sNPSvF.jpg)\n\n> 1859年 **连通长春宫**\n> 咸丰九年（1859），基于对理政空间的需要，长春宫一区开始被改造，从而改变了西六宫的建筑格局。\n\n![东六宫](https://s3.ax1x.com/2021/01/13/sNPCDJ.jpg)\n\n> 1902年 **重建武英殿**\n> 武英殿分别于同治八年（1869）、光绪二十八年（1902）经历两次火灾，在内忧外患的局势之下进行了两次艰难的重建，反映出当时清廷的拮据与无奈。\n\n![叶知秋](https://s3.ax1x.com/2021/01/13/sNudUS.jpg)\n\n> 1909年 **探秘灵沼轩**\n> 灵沼轩建于宣统元年（1909年），体现了“中西合璧”的建筑风格，因辛亥革命爆发而被迫停工，至今未完工。\n\n![灵沼轩](https://s3.ax1x.com/2021/01/13/sNuw4g.jpg)\n\n> 1914年 **初开紫禁城**\n> 1914年10月，古物陈列所正式开幕，紫禁城自此对公众开放。古物陈列所规模初具，成为民国初年北京观摩古物和精研画法的艺术殿堂。\n\n![夕阳余光](https://s3.ax1x.com/2021/01/13/sNPFER.jpg)\n\n> 1925年 **肇建博物院**\n> 1925年 10月10日，故宫博物院开院。\n\n![长街](https://s3.ax1x.com/2021/01/13/sNuaE8.jpg)\n\n> 1933年 **战时护古物**\n> 1933年，故宫文物南迁，历时八余载，行程数万里，创造了典守国宝的奇迹。\n\n![透风](https://s3.ax1x.com/2021/01/13/sNuNHf.jpg)\n\n> 1949年 **重整修缮队**\n> 1949年成立的故宫工程小组以“保护为主，抢救第一”为原则，逐步改善了建筑的保存状况。\n\n![长街](https://s3.ax1x.com/2021/01/13/sNP1UI.jpg)\n\n> 1961年 **首荐颁国保**\n> 1961年，故宫入选第一批全国重点文物保护单位。\n\n![长街](https://s3.ax1x.com/2021/01/13/sNPlVA.jpg)\n\n> 1987年 **瑰宝列世遗**\n> 1987年，故宫被联合国教科文组织列入世界遗产名录。\n\n![神兽](https://s3.ax1x.com/2021/01/13/sNuD3j.jpg)\n\n> 2002年 **大修百年计**\n> 2002年，以武英殿大修作为试点工程，故宫的“世纪大修”拉开了序幕。\n\n![长街](https://s3.ax1x.com/2021/01/13/sNPGPP.jpg)","slug":"丹宸永固-紫禁城建成六百年","published":1,"updated":"2021-01-30T04:16:46.666Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyh000k2an947u40cog","content":"<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPKDH.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>紫禁城建成<strong>六百年</strong><br>故宫博物院成立九十五周年</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNCzgU.jpg\" alt=\"大殿一角\"></p>\n<blockquote>\n<p>1406年 <strong>永乐营北京</strong><br>永乐皇帝于永乐四年（1406）下诏，“以明年五月建北京宫殿”<br>自此拉开了北京皇宫营建的序幕。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPkU1.jpg\" alt=\"午门\"></p>\n<blockquote>\n<p>1420年<strong>紫禁城</strong>建成<br>永乐十八年（1420）十一月，朱棣发布诏书，宣告北京宫殿竣工。由此开启了紫禁城自明至清的使用历史。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPegO.jpg\" alt=\"正殿\"></p>\n<blockquote>\n<p>1535年 <strong>钦安殿奉道</strong><br>嘉靖十四年（1535），因为朱厚熜（音“聪”）这位笃信道教的皇帝，包括钦安殿在内的紫禁城建筑布局发生了有明一代的较大改变。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNP9u4.jpg\" alt=\"午门城楼\"></p>\n<blockquote>\n<p>1655年 <strong>改建坤宁宫</strong><br>顺治十二年（1655），仿沈阳清宁宫重修坤宁宫。坤宁宫的改建是清初满汉文化碰撞、融合的典型体现。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPPb9.jpg\" alt=\"门钉\"></p>\n<blockquote>\n<p>1695年 <strong>重建太和殿</strong><br>康熙十八年（1679）十二月，太和殿遭雷击焚毁。经十余年备料，三十四年（1695）重修工程进入施工阶段，历时两年竣工，太和殿形成今日所见之形制。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPMbd.jpg\" alt=\"太和殿\"></p>\n<blockquote>\n<p>1723年 <strong>入主养心殿</strong><br>养心殿于雍正元年（1723）具备了“政寝合一”的特点，见证了此后波澜起伏的内政外交、权力易主，成为清朝中后期实际的政治心脏。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPZ8K.jpg\" alt=\"午门角楼\"></p>\n<blockquote>\n<p>1738年 <strong>改乾西五所</strong><br>乾隆皇帝对乾西五所的改建，将乾清宫东、西五所相对称的格局打破，乾西五所的建筑式样与功能也发生了根本性变化。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPA4x.jpg\" alt=\"房檐\"></p>\n<blockquote>\n<p>1776年 <strong>建成宁寿宫</strong><br>宁寿宫于乾隆四十一年（1776）落成，展现了乾隆帝对归政后闲适生活的企盼，同时也潜藏着他作为一个文人天子的精神寄托。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPSvF.jpg\" alt=\"红墙\"></p>\n<blockquote>\n<p>1859年 <strong>连通长春宫</strong><br>咸丰九年（1859），基于对理政空间的需要，长春宫一区开始被改造，从而改变了西六宫的建筑格局。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPCDJ.jpg\" alt=\"东六宫\"></p>\n<blockquote>\n<p>1902年 <strong>重建武英殿</strong><br>武英殿分别于同治八年（1869）、光绪二十八年（1902）经历两次火灾，在内忧外患的局势之下进行了两次艰难的重建，反映出当时清廷的拮据与无奈。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNudUS.jpg\" alt=\"叶知秋\"></p>\n<blockquote>\n<p>1909年 <strong>探秘灵沼轩</strong><br>灵沼轩建于宣统元年（1909年），体现了“中西合璧”的建筑风格，因辛亥革命爆发而被迫停工，至今未完工。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNuw4g.jpg\" alt=\"灵沼轩\"></p>\n<blockquote>\n<p>1914年 <strong>初开紫禁城</strong><br>1914年10月，古物陈列所正式开幕，紫禁城自此对公众开放。古物陈列所规模初具，成为民国初年北京观摩古物和精研画法的艺术殿堂。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPFER.jpg\" alt=\"夕阳余光\"></p>\n<blockquote>\n<p>1925年 <strong>肇建博物院</strong><br>1925年 10月10日，故宫博物院开院。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNuaE8.jpg\" alt=\"长街\"></p>\n<blockquote>\n<p>1933年 <strong>战时护古物</strong><br>1933年，故宫文物南迁，历时八余载，行程数万里，创造了典守国宝的奇迹。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNuNHf.jpg\" alt=\"透风\"></p>\n<blockquote>\n<p>1949年 <strong>重整修缮队</strong><br>1949年成立的故宫工程小组以“保护为主，抢救第一”为原则，逐步改善了建筑的保存状况。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNP1UI.jpg\" alt=\"长街\"></p>\n<blockquote>\n<p>1961年 <strong>首荐颁国保</strong><br>1961年，故宫入选第一批全国重点文物保护单位。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPlVA.jpg\" alt=\"长街\"></p>\n<blockquote>\n<p>1987年 <strong>瑰宝列世遗</strong><br>1987年，故宫被联合国教科文组织列入世界遗产名录。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNuD3j.jpg\" alt=\"神兽\"></p>\n<blockquote>\n<p>2002年 <strong>大修百年计</strong><br>2002年，以武英殿大修作为试点工程，故宫的“世纪大修”拉开了序幕。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPGPP.jpg\" alt=\"长街\"></p>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPKDH.jpg\" alt=\"首屏图\"></p>","more":"<blockquote>\n<p>紫禁城建成<strong>六百年</strong><br>故宫博物院成立九十五周年</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNCzgU.jpg\" alt=\"大殿一角\"></p>\n<blockquote>\n<p>1406年 <strong>永乐营北京</strong><br>永乐皇帝于永乐四年（1406）下诏，“以明年五月建北京宫殿”<br>自此拉开了北京皇宫营建的序幕。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPkU1.jpg\" alt=\"午门\"></p>\n<blockquote>\n<p>1420年<strong>紫禁城</strong>建成<br>永乐十八年（1420）十一月，朱棣发布诏书，宣告北京宫殿竣工。由此开启了紫禁城自明至清的使用历史。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPegO.jpg\" alt=\"正殿\"></p>\n<blockquote>\n<p>1535年 <strong>钦安殿奉道</strong><br>嘉靖十四年（1535），因为朱厚熜（音“聪”）这位笃信道教的皇帝，包括钦安殿在内的紫禁城建筑布局发生了有明一代的较大改变。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNP9u4.jpg\" alt=\"午门城楼\"></p>\n<blockquote>\n<p>1655年 <strong>改建坤宁宫</strong><br>顺治十二年（1655），仿沈阳清宁宫重修坤宁宫。坤宁宫的改建是清初满汉文化碰撞、融合的典型体现。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPPb9.jpg\" alt=\"门钉\"></p>\n<blockquote>\n<p>1695年 <strong>重建太和殿</strong><br>康熙十八年（1679）十二月，太和殿遭雷击焚毁。经十余年备料，三十四年（1695）重修工程进入施工阶段，历时两年竣工，太和殿形成今日所见之形制。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPMbd.jpg\" alt=\"太和殿\"></p>\n<blockquote>\n<p>1723年 <strong>入主养心殿</strong><br>养心殿于雍正元年（1723）具备了“政寝合一”的特点，见证了此后波澜起伏的内政外交、权力易主，成为清朝中后期实际的政治心脏。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPZ8K.jpg\" alt=\"午门角楼\"></p>\n<blockquote>\n<p>1738年 <strong>改乾西五所</strong><br>乾隆皇帝对乾西五所的改建，将乾清宫东、西五所相对称的格局打破，乾西五所的建筑式样与功能也发生了根本性变化。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPA4x.jpg\" alt=\"房檐\"></p>\n<blockquote>\n<p>1776年 <strong>建成宁寿宫</strong><br>宁寿宫于乾隆四十一年（1776）落成，展现了乾隆帝对归政后闲适生活的企盼，同时也潜藏着他作为一个文人天子的精神寄托。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPSvF.jpg\" alt=\"红墙\"></p>\n<blockquote>\n<p>1859年 <strong>连通长春宫</strong><br>咸丰九年（1859），基于对理政空间的需要，长春宫一区开始被改造，从而改变了西六宫的建筑格局。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPCDJ.jpg\" alt=\"东六宫\"></p>\n<blockquote>\n<p>1902年 <strong>重建武英殿</strong><br>武英殿分别于同治八年（1869）、光绪二十八年（1902）经历两次火灾，在内忧外患的局势之下进行了两次艰难的重建，反映出当时清廷的拮据与无奈。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNudUS.jpg\" alt=\"叶知秋\"></p>\n<blockquote>\n<p>1909年 <strong>探秘灵沼轩</strong><br>灵沼轩建于宣统元年（1909年），体现了“中西合璧”的建筑风格，因辛亥革命爆发而被迫停工，至今未完工。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNuw4g.jpg\" alt=\"灵沼轩\"></p>\n<blockquote>\n<p>1914年 <strong>初开紫禁城</strong><br>1914年10月，古物陈列所正式开幕，紫禁城自此对公众开放。古物陈列所规模初具，成为民国初年北京观摩古物和精研画法的艺术殿堂。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPFER.jpg\" alt=\"夕阳余光\"></p>\n<blockquote>\n<p>1925年 <strong>肇建博物院</strong><br>1925年 10月10日，故宫博物院开院。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNuaE8.jpg\" alt=\"长街\"></p>\n<blockquote>\n<p>1933年 <strong>战时护古物</strong><br>1933年，故宫文物南迁，历时八余载，行程数万里，创造了典守国宝的奇迹。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNuNHf.jpg\" alt=\"透风\"></p>\n<blockquote>\n<p>1949年 <strong>重整修缮队</strong><br>1949年成立的故宫工程小组以“保护为主，抢救第一”为原则，逐步改善了建筑的保存状况。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNP1UI.jpg\" alt=\"长街\"></p>\n<blockquote>\n<p>1961年 <strong>首荐颁国保</strong><br>1961年，故宫入选第一批全国重点文物保护单位。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPlVA.jpg\" alt=\"长街\"></p>\n<blockquote>\n<p>1987年 <strong>瑰宝列世遗</strong><br>1987年，故宫被联合国教科文组织列入世界遗产名录。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNuD3j.jpg\" alt=\"神兽\"></p>\n<blockquote>\n<p>2002年 <strong>大修百年计</strong><br>2002年，以武英殿大修作为试点工程，故宫的“世纪大修”拉开了序幕。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNPGPP.jpg\" alt=\"长街\"></p>"},{"title":"二刷鬼笑石","abbrlink":"dfbe8392","date":"2020-09-06T10:35:14.000Z","_content":"\n![首屏图](https://s3.ax1x.com/2021/01/13/stRd7q.jpg)\n\n<!-- more -->\n\n> 第二次夜爬，可以更从容的欣赏周围的景色\n\n![远眺](https://s3.ax1x.com/2021/01/13/stR6c4.jpg)\n![头文字D既视感](https://s3.ax1x.com/2021/01/13/stRcjJ.jpg)\n![街灯照亮城市的轮廓](https://s3.ax1x.com/2021/01/13/stRy3F.jpg)\n![众星朗朗不如孤月独明](https://s3.ax1x.com/2021/01/13/stRs9U.jpg)\n","source":"_posts/二刷鬼笑石.md","raw":"---\ntitle: 二刷鬼笑石\nabbrlink: dfbe8392\ndate: 2020-09-06 18:35:14\ntags:\n  - 游记\n  - 西山国家森林公园\n  - 鬼笑石\ncategories:\n  - 游记\n---\n\n![首屏图](https://s3.ax1x.com/2021/01/13/stRd7q.jpg)\n\n<!-- more -->\n\n> 第二次夜爬，可以更从容的欣赏周围的景色\n\n![远眺](https://s3.ax1x.com/2021/01/13/stR6c4.jpg)\n![头文字D既视感](https://s3.ax1x.com/2021/01/13/stRcjJ.jpg)\n![街灯照亮城市的轮廓](https://s3.ax1x.com/2021/01/13/stRy3F.jpg)\n![众星朗朗不如孤月独明](https://s3.ax1x.com/2021/01/13/stRs9U.jpg)\n","slug":"二刷鬼笑石","published":1,"updated":"2021-01-30T04:16:46.666Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyh000l2an98ru1ducf","content":"<p><img src=\"https://s3.ax1x.com/2021/01/13/stRd7q.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>第二次夜爬，可以更从容的欣赏周围的景色</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/stR6c4.jpg\" alt=\"远眺\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stRcjJ.jpg\" alt=\"头文字D既视感\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stRy3F.jpg\" alt=\"街灯照亮城市的轮廓\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stRs9U.jpg\" alt=\"众星朗朗不如孤月独明\"></p>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s3.ax1x.com/2021/01/13/stRd7q.jpg\" alt=\"首屏图\"></p>","more":"<blockquote>\n<p>第二次夜爬，可以更从容的欣赏周围的景色</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/stR6c4.jpg\" alt=\"远眺\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stRcjJ.jpg\" alt=\"头文字D既视感\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stRy3F.jpg\" alt=\"街灯照亮城市的轮廓\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stRs9U.jpg\" alt=\"众星朗朗不如孤月独明\"></p>"},{"title":"云图","abbrlink":"72d9b152","date":"2020-08-17T03:56:27.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/08/17/dZzcc9.jpg)\n\n<!-- more -->\n\n> 世上从不缺乏美 只缺乏一双发现美的眼睛\n\n![图1](https://s1.ax1x.com/2020/08/17/deFa28.jpg)\n\n![图1](https://s1.ax1x.com/2020/08/17/deFU8f.jpg)\n\n![图3](https://s1.ax1x.com/2020/08/17/dZxzl9.jpg)\n\n![图4](https://s1.ax1x.com/2020/08/17/dZzCex.jpg)\n\n![图5](https://s1.ax1x.com/2020/08/17/dZzpO1.jpg)\n\n![图6](https://s1.ax1x.com/2020/08/17/dZxBzd.jpg)\n\n![图7](https://s1.ax1x.com/2020/08/17/dZxwJe.jpg)\n\n![图8](https://s1.ax1x.com/2020/08/17/dZxdiD.jpg)\n\n![图9](https://s1.ax1x.com/2020/08/17/dZx0RH.jpg)\n","source":"_posts/云图.md","raw":"---\ntitle: 云图\ntags:\n  - 游记\n  - 太阳宫公园\n  - 随手拍\ncategories:\n  - 游记\nabbrlink: 72d9b152\ndate: 2020-08-17 11:56:27\n---\n\n![首屏图](https://s1.ax1x.com/2020/08/17/dZzcc9.jpg)\n\n<!-- more -->\n\n> 世上从不缺乏美 只缺乏一双发现美的眼睛\n\n![图1](https://s1.ax1x.com/2020/08/17/deFa28.jpg)\n\n![图1](https://s1.ax1x.com/2020/08/17/deFU8f.jpg)\n\n![图3](https://s1.ax1x.com/2020/08/17/dZxzl9.jpg)\n\n![图4](https://s1.ax1x.com/2020/08/17/dZzCex.jpg)\n\n![图5](https://s1.ax1x.com/2020/08/17/dZzpO1.jpg)\n\n![图6](https://s1.ax1x.com/2020/08/17/dZxBzd.jpg)\n\n![图7](https://s1.ax1x.com/2020/08/17/dZxwJe.jpg)\n\n![图8](https://s1.ax1x.com/2020/08/17/dZxdiD.jpg)\n\n![图9](https://s1.ax1x.com/2020/08/17/dZx0RH.jpg)\n","slug":"云图","published":1,"updated":"2020-12-30T01:08:23.105Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyi000m2an92s0805s9","content":"<p><img src=\"https://s1.ax1x.com/2020/08/17/dZzcc9.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>世上从不缺乏美 只缺乏一双发现美的眼睛</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/deFa28.jpg\" alt=\"图1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/deFU8f.jpg\" alt=\"图1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/dZxzl9.jpg\" alt=\"图3\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/dZzCex.jpg\" alt=\"图4\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/dZzpO1.jpg\" alt=\"图5\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/dZxBzd.jpg\" alt=\"图6\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/dZxwJe.jpg\" alt=\"图7\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/dZxdiD.jpg\" alt=\"图8\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/dZx0RH.jpg\" alt=\"图9\"></p>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/08/17/dZzcc9.jpg\" alt=\"首屏图\"></p>","more":"<blockquote>\n<p>世上从不缺乏美 只缺乏一双发现美的眼睛</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/deFa28.jpg\" alt=\"图1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/deFU8f.jpg\" alt=\"图1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/dZxzl9.jpg\" alt=\"图3\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/dZzCex.jpg\" alt=\"图4\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/dZzpO1.jpg\" alt=\"图5\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/dZxBzd.jpg\" alt=\"图6\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/dZxwJe.jpg\" alt=\"图7\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/dZxdiD.jpg\" alt=\"图8\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/17/dZx0RH.jpg\" alt=\"图9\"></p>"},{"title":"使用dayjs替代moment","toc":true,"abbrlink":"e362d928","date":"2020-08-13T02:21:40.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/08/13/azsXcR.jpg)\n\n<!-- more -->\n\nMoment.js 是一个大而全的 JS 时间库，很大地方便了我们处理日期和时间。\n但是 Moment.js太重了(200k+ with locals)，可能一般项目也只使用到了她几个常用的API。\n虽然社区也有几个轻量的时间库，要想迁移过去又会增加新的学习和迁移成本。\n\n**如果能有一个和 Moment.js 一样语法，一样功能，又轻量的库该多好！**\n\nDay.js 是一个轻量的 JavaScript 时间日期处理库，和 Moment.js 的 API 设计保持完全一样. 如果你曾经用过 Moment.js, 那么你已经知道如何使用 Day.js\n\n`Day.js` 基本用法如下，相同的API，相同的链式操作。\n\n```js\ndayjs().startOf('month').add(1, 'day').set('year', 2018).format('YYYY-MM-DD HH:mm:ss');\n```\n\n* 🕒 和 Moment.js 相同的 API 和用法\n* 💪 不可变数据 (Immutable)\n* 🔥 支持链式操作 (Chainable)\n* 🌐 I18n 国际化\n* 📦 仅 2kb 大小的微型库\n* 👫 全浏览器兼容\n\nDay.js 虽然仅有 2kb 大小，但是功能一点都没有阉割。包含了时间处理的全部常用方法。\n\n## 安装\n\n### npm\n\n```shell\nnpm install dayjs --save\n```\n\n```js\nvar dayjs = require('dayjs');\ndayjs().format();\n```\n\n### cdn\n\n```js\n<script src=\"https://unpkg.com/dayjs\"></script>\n<script>\n  dayjs().format();\n</script>\n```\n\n> 注：Day.js 的返回值都是新的 Dayjs 对象\n\n### 从moment迁移至dayjs\n\nv1.6.0 支持多语言国际化了，按需加载需要的语言，那想缩小打包体积，\n提升开发体验只需要 `replace(/moment/g, 'dayjs')` 全局替换一下。\n就能从 `Moment.js + locals` 200kb 减小成 `dayjs` 2kb的体积。\n所有的API调用都保持不变，无需修改。\n\n## 使用\n\n来感受一下 `Dayjs` 的语法吧，是不是很看起来亲切呢 😋 (没错 这就是 moment 的语法嘛)\n\n### 解析时间\n\n直接运行 dayjs()，得到包含当前时间和日期的 Dayjs 对象\n\n```js\ndayjs() // 返回当前时间 Tue, 28 May 2019 05:57:34 GMT\n```\n\n可以解析传入的一个标准的[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)时间字符串。\n\n```js\ndayjs('1995-12-25') // Sun, 24 Dec 1995 16:00:00 GMT\n```\n\n可以解析传入的一个 Javascript Date 对象。\n\n```js\ndayjs(new Date(2018, 8, 18)) //Mon, 17 Sep 2018 16:00:00 GMT\n```\n\n可以解析传入的一个 Unix 时间戳 (13 位数字)。\n\n```js\ndayjs(1318781876406) // Sun, 16 Oct 2011 16:17:56 GMT\n```\n\n可以解析计算后的时间。\n\n```js\ndayjs(Date.now() - 24 * 60 * 60 * 1000) // 昨天\n```\n\nDayjs 对象是不可变的，如果您想获得一个对象的拷贝，请执行 .clone()。 向 dayjs() 里传入一个 Dayjs 对象也能实现同样的效果。\n\n```js\ndayjs(Dayjs)\ndayjs().clone()\n```\n\n检测当前 Dayjs 对象是否是一个有效的时间\n\n```js\ndayjs().isValid()\n```\n\n### 格式化时间\n\n格式化 Dayjs 对象并展示。\n\n接收一系列的时间日期字符串并替换成相应的值。\n\n```js\ndayjs().format(String)\ndayjs('2019-01-25').format('YYYY-MM-DD HH:mm:ss') // 2019-01-25 00:00:00\ndayjs().format('YYYY年MM月DD日 HH:mm:ss') // 2018年08月08日 00:00:00\ndayjs().format('[YYYY]') // \"[2018]\"。[] 里的会原样输出。\n```\n\n|格式|输出|描述|\n|--|--|--|\n|YY|18|两位数的年份|\n|YYYY|2018|四位数的年份|\n|M|1-12|月份，从 1 开始|\n|MM|01-12|月份，两位数|\n|MMM|Jan-Dec|简写的月份名称|\n|MMMM|January-December|完整的月份名称|\n|D|1-31|月份里的一天|\n|DD|01-31|月份里的一天，两位数|\n|d|0-6|一周中的一天，星期天是 0|\n|dd|Su-Sa|最简写的一周中一天的名称|\n|ddd|Sun-Sat|简写的一周中一天的名称|\n|dddd|Sunday-Saturday|一周中一天的名称|\n|H|0-23|小时|\n|HH|00-23|小时，两位数|\n|h|1-12|小时, 12 小时制|\n|hh|01-12|Hours, 12 小时制, 两位数|\n|m|0-59|分钟|\n|mm|00-59|分钟，两位数|\n|s|0-59|秒|\n|ss|00-59|秒 两位数|\n|SSS|000-999|毫秒 三位数|\n|Z|+5:00|UTC 的偏移量|\n|ZZ|+0500|UTC 的偏移量，数字前面加上 0|\n|A|AM PM|&nbsp;|\n|a|am pm|&nbsp;|\n\n### 操作时间\n\n您可以对 Dayjs 对象如下增加减少之类的操作\n\n增加时间并返回一个新的 Dayjs() 对象。\n\n```js\ndayjs().add(value : Number, unit : String);\ndayjs().add(7, 'days'); // 之后的第7天\n```\n\n减少时间并返回一个新的 Dayjs() 对象。\n\n```js\ndayjs().subtract(value : Number, unit : String);\ndayjs().subtract(1, 'months'); //在当前基础上减少1个月\n```\n\n返回当前时间的开头时间的 Dayjs() 对象，如本月份的第一天。\n\n```js\ndayjs().startOf(unit : String);\ndayjs().startOf('month'); // 获取本月初\n```\n\n返回当前时间的末尾时间的 Dayjs() 对象，如本年的最后一天。\n\n```js\ndayjs().endOf(unit : String);\ndayjs().endOf('year'); // 获取本年年末\n```\n\n### 设置时间\n\n获取或设置年份。\n\n```js\ndayjs().year() //2019\ndayjs().year(2000) //Sun, 28 May 2000 06:14:07 GMT\n```\n\n获取或设置月份。从 0 开始\n\n```js\ndayjs().month() //4 实际上5月\ndayjs().month(0) //Mon, 28 Jan 2019 06:15:25 GMT\n```\n\n获取或设置日期。从 1 开始\n\n```js\ndayjs().date() //28 当天是2019年5月28日\ndayjs().date(1) //Wed, 01 May 2019 06:17:04 GMT\n```\n\n获取或设置星期。从星期天 0 开始\n\n```js\ndayjs().day() //2 当天是星期二\ndayjs().day(0) //Sun, 26 May 2019 06:18:13 GMT 被强行设置为上周日\n```\n\n获取或设置小时\n\n```js\ndayjs().hour()  //14 当时为下午2点\ndayjs().hour(12) //Tue, 28 May 2019 04:21:30 GMT 不清楚\n```\n\n获取或设置分钟。\n\n```js\ndayjs().minute() //22\ndayjs().minute(59) //Tue, 28 May 2019 06:59:50 GMT\n```\n\n获取或设置秒\n\n```js\ndayjs().second()\ndayjs().second(1)\n```\n\n获取或设置毫秒。\n\n```js\ndayjs().millisecond()\ndayjs().millisecond(1)\n```\n\n获取从 Dayjs 对象中取到的信息 传入的单位 (unit) 对大小写不敏感\n\n```js\ndayjs().get('month') //4\n```\n\n|单位|缩写|描述|\n|--|--|--|\n|date||日期|\n|day|d|星期几 (星期天 0, 星期六 6)|\n|month|M|月 (一月 0, 十二月 11)|\n|year|y|年|\n|hour|h|时|\n|minute|m|分|\n|second|s|秒|\n|millisecond|ms|毫秒|\n\n设置时间\n\n```js\ndayjs().set('date', 1);\ndayjs().set('month', 3); // 四月\ndayjs().set('second', 30);\n```\n\n### 显示时间\n\n获取两个 Dayjs 对象的时间差，默认毫秒。\n\n```js\nconst date1 = dayjs('2019-01-25')\nconst date2 = dayjs('2018-06-05')\ndate1.diff(date2) // 20214000000\ndate1.diff(date2, 'month') // 7\ndate1.diff(date2, 'month', true) // 7.645161290322581\ndate1.diff(date2, 'day') // 233\n```\n\n返回 Unix 时间戳 (毫秒)\n\n```js\ndayjs().valueOf()\n```\n\n返回 Unix 时间戳 (秒)。\n\n```js\ndayjs().unix()\n```\n\n返回月份的天数\n\n```js\ndayjs().daysInMonth()\n```\n\n返回原生的 Date 对象。\n\n```js\ndayjs().toDate()\n```\n\n当序列化 Dayjs 对象时，会返回 ISO8601 格式的字符串。\n\n```js\ndayjs().toJSON() //\"2018-08-08T00:00:00.000Z\"\n```\n\n返回 ISO8601 格式的字符串。\n\n```js\ndayjs().toISOString()\n```\n\n返回字符串\n\n```js\ndayjs().toString()\n```\n\n### 查询时间\n\n检查一个 Dayjs 对象是否在另一个 Dayjs 对象时间之前。\n\n```js\ndayjs('2010-10-20').isBefore('2010-10-21') // 早于\ndayjs().isBefore(Dayjs, unit? : String);\ndayjs().isBefore(dayjs()); // false\ndayjs().isBefore(dayjs(), 'year'); // false\n```\n\n检查一个 Dayjs 对象是否和另一个 Dayjs 对象时间相同。\n\n```js\ndayjs().isSame(Dayjs, unit? : String);\ndayjs().isSame(dayjs()); // true\ndayjs().isSame(dayjs(), 'year'); // true\n```\n\n检查一个 Dayjs 对象是否在另一个 Dayjs 对象时间之后。\n\n```js\ndayjs('2010-10-20').isAfter('2010-10-19') // 晚于\ndayjs().isAfter(Dayjs, unit? : String);\ndayjs().isAfter(dayjs()); // false\ndayjs().isAfter(dayjs(), 'year'); // false\n```\n\n检查一个 Dayjs 对象是否是闰年。\n\n```js\ndayjs().isLeapYear() // 闰年\n```\n\n## 参考资料\n\n* [day.js官方文档](https://github.com/iamkun/dayjs/blob/HEAD/docs/zh-cn/README.zh-CN.md)\n* [如何使用輕量級的 day.js 處理複雜日期](https://juejin.im/post/6844903597709197319)\n* [Day.js教程](https://www.jianshu.com/p/15d6a9c1bf18)\n* [Day.js 2kB超轻量时间库 和Moment.js一样的API](https://calpa.me/2018/09/19/five-minutes-to-reduce-application-weight-dayjs/)\n","source":"_posts/使用dayjs替代moment.md","raw":"---\ntitle: 使用dayjs替代moment\ntags:\n  - 技术积累\n  - 前端\n  - js\ncategories:\n  - 技术积累\n  - 前端\n  - js\ntoc: true\nabbrlink: e362d928\ndate: 2020-08-13 10:21:40\n---\n\n![首屏图](https://s1.ax1x.com/2020/08/13/azsXcR.jpg)\n\n<!-- more -->\n\nMoment.js 是一个大而全的 JS 时间库，很大地方便了我们处理日期和时间。\n但是 Moment.js太重了(200k+ with locals)，可能一般项目也只使用到了她几个常用的API。\n虽然社区也有几个轻量的时间库，要想迁移过去又会增加新的学习和迁移成本。\n\n**如果能有一个和 Moment.js 一样语法，一样功能，又轻量的库该多好！**\n\nDay.js 是一个轻量的 JavaScript 时间日期处理库，和 Moment.js 的 API 设计保持完全一样. 如果你曾经用过 Moment.js, 那么你已经知道如何使用 Day.js\n\n`Day.js` 基本用法如下，相同的API，相同的链式操作。\n\n```js\ndayjs().startOf('month').add(1, 'day').set('year', 2018).format('YYYY-MM-DD HH:mm:ss');\n```\n\n* 🕒 和 Moment.js 相同的 API 和用法\n* 💪 不可变数据 (Immutable)\n* 🔥 支持链式操作 (Chainable)\n* 🌐 I18n 国际化\n* 📦 仅 2kb 大小的微型库\n* 👫 全浏览器兼容\n\nDay.js 虽然仅有 2kb 大小，但是功能一点都没有阉割。包含了时间处理的全部常用方法。\n\n## 安装\n\n### npm\n\n```shell\nnpm install dayjs --save\n```\n\n```js\nvar dayjs = require('dayjs');\ndayjs().format();\n```\n\n### cdn\n\n```js\n<script src=\"https://unpkg.com/dayjs\"></script>\n<script>\n  dayjs().format();\n</script>\n```\n\n> 注：Day.js 的返回值都是新的 Dayjs 对象\n\n### 从moment迁移至dayjs\n\nv1.6.0 支持多语言国际化了，按需加载需要的语言，那想缩小打包体积，\n提升开发体验只需要 `replace(/moment/g, 'dayjs')` 全局替换一下。\n就能从 `Moment.js + locals` 200kb 减小成 `dayjs` 2kb的体积。\n所有的API调用都保持不变，无需修改。\n\n## 使用\n\n来感受一下 `Dayjs` 的语法吧，是不是很看起来亲切呢 😋 (没错 这就是 moment 的语法嘛)\n\n### 解析时间\n\n直接运行 dayjs()，得到包含当前时间和日期的 Dayjs 对象\n\n```js\ndayjs() // 返回当前时间 Tue, 28 May 2019 05:57:34 GMT\n```\n\n可以解析传入的一个标准的[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)时间字符串。\n\n```js\ndayjs('1995-12-25') // Sun, 24 Dec 1995 16:00:00 GMT\n```\n\n可以解析传入的一个 Javascript Date 对象。\n\n```js\ndayjs(new Date(2018, 8, 18)) //Mon, 17 Sep 2018 16:00:00 GMT\n```\n\n可以解析传入的一个 Unix 时间戳 (13 位数字)。\n\n```js\ndayjs(1318781876406) // Sun, 16 Oct 2011 16:17:56 GMT\n```\n\n可以解析计算后的时间。\n\n```js\ndayjs(Date.now() - 24 * 60 * 60 * 1000) // 昨天\n```\n\nDayjs 对象是不可变的，如果您想获得一个对象的拷贝，请执行 .clone()。 向 dayjs() 里传入一个 Dayjs 对象也能实现同样的效果。\n\n```js\ndayjs(Dayjs)\ndayjs().clone()\n```\n\n检测当前 Dayjs 对象是否是一个有效的时间\n\n```js\ndayjs().isValid()\n```\n\n### 格式化时间\n\n格式化 Dayjs 对象并展示。\n\n接收一系列的时间日期字符串并替换成相应的值。\n\n```js\ndayjs().format(String)\ndayjs('2019-01-25').format('YYYY-MM-DD HH:mm:ss') // 2019-01-25 00:00:00\ndayjs().format('YYYY年MM月DD日 HH:mm:ss') // 2018年08月08日 00:00:00\ndayjs().format('[YYYY]') // \"[2018]\"。[] 里的会原样输出。\n```\n\n|格式|输出|描述|\n|--|--|--|\n|YY|18|两位数的年份|\n|YYYY|2018|四位数的年份|\n|M|1-12|月份，从 1 开始|\n|MM|01-12|月份，两位数|\n|MMM|Jan-Dec|简写的月份名称|\n|MMMM|January-December|完整的月份名称|\n|D|1-31|月份里的一天|\n|DD|01-31|月份里的一天，两位数|\n|d|0-6|一周中的一天，星期天是 0|\n|dd|Su-Sa|最简写的一周中一天的名称|\n|ddd|Sun-Sat|简写的一周中一天的名称|\n|dddd|Sunday-Saturday|一周中一天的名称|\n|H|0-23|小时|\n|HH|00-23|小时，两位数|\n|h|1-12|小时, 12 小时制|\n|hh|01-12|Hours, 12 小时制, 两位数|\n|m|0-59|分钟|\n|mm|00-59|分钟，两位数|\n|s|0-59|秒|\n|ss|00-59|秒 两位数|\n|SSS|000-999|毫秒 三位数|\n|Z|+5:00|UTC 的偏移量|\n|ZZ|+0500|UTC 的偏移量，数字前面加上 0|\n|A|AM PM|&nbsp;|\n|a|am pm|&nbsp;|\n\n### 操作时间\n\n您可以对 Dayjs 对象如下增加减少之类的操作\n\n增加时间并返回一个新的 Dayjs() 对象。\n\n```js\ndayjs().add(value : Number, unit : String);\ndayjs().add(7, 'days'); // 之后的第7天\n```\n\n减少时间并返回一个新的 Dayjs() 对象。\n\n```js\ndayjs().subtract(value : Number, unit : String);\ndayjs().subtract(1, 'months'); //在当前基础上减少1个月\n```\n\n返回当前时间的开头时间的 Dayjs() 对象，如本月份的第一天。\n\n```js\ndayjs().startOf(unit : String);\ndayjs().startOf('month'); // 获取本月初\n```\n\n返回当前时间的末尾时间的 Dayjs() 对象，如本年的最后一天。\n\n```js\ndayjs().endOf(unit : String);\ndayjs().endOf('year'); // 获取本年年末\n```\n\n### 设置时间\n\n获取或设置年份。\n\n```js\ndayjs().year() //2019\ndayjs().year(2000) //Sun, 28 May 2000 06:14:07 GMT\n```\n\n获取或设置月份。从 0 开始\n\n```js\ndayjs().month() //4 实际上5月\ndayjs().month(0) //Mon, 28 Jan 2019 06:15:25 GMT\n```\n\n获取或设置日期。从 1 开始\n\n```js\ndayjs().date() //28 当天是2019年5月28日\ndayjs().date(1) //Wed, 01 May 2019 06:17:04 GMT\n```\n\n获取或设置星期。从星期天 0 开始\n\n```js\ndayjs().day() //2 当天是星期二\ndayjs().day(0) //Sun, 26 May 2019 06:18:13 GMT 被强行设置为上周日\n```\n\n获取或设置小时\n\n```js\ndayjs().hour()  //14 当时为下午2点\ndayjs().hour(12) //Tue, 28 May 2019 04:21:30 GMT 不清楚\n```\n\n获取或设置分钟。\n\n```js\ndayjs().minute() //22\ndayjs().minute(59) //Tue, 28 May 2019 06:59:50 GMT\n```\n\n获取或设置秒\n\n```js\ndayjs().second()\ndayjs().second(1)\n```\n\n获取或设置毫秒。\n\n```js\ndayjs().millisecond()\ndayjs().millisecond(1)\n```\n\n获取从 Dayjs 对象中取到的信息 传入的单位 (unit) 对大小写不敏感\n\n```js\ndayjs().get('month') //4\n```\n\n|单位|缩写|描述|\n|--|--|--|\n|date||日期|\n|day|d|星期几 (星期天 0, 星期六 6)|\n|month|M|月 (一月 0, 十二月 11)|\n|year|y|年|\n|hour|h|时|\n|minute|m|分|\n|second|s|秒|\n|millisecond|ms|毫秒|\n\n设置时间\n\n```js\ndayjs().set('date', 1);\ndayjs().set('month', 3); // 四月\ndayjs().set('second', 30);\n```\n\n### 显示时间\n\n获取两个 Dayjs 对象的时间差，默认毫秒。\n\n```js\nconst date1 = dayjs('2019-01-25')\nconst date2 = dayjs('2018-06-05')\ndate1.diff(date2) // 20214000000\ndate1.diff(date2, 'month') // 7\ndate1.diff(date2, 'month', true) // 7.645161290322581\ndate1.diff(date2, 'day') // 233\n```\n\n返回 Unix 时间戳 (毫秒)\n\n```js\ndayjs().valueOf()\n```\n\n返回 Unix 时间戳 (秒)。\n\n```js\ndayjs().unix()\n```\n\n返回月份的天数\n\n```js\ndayjs().daysInMonth()\n```\n\n返回原生的 Date 对象。\n\n```js\ndayjs().toDate()\n```\n\n当序列化 Dayjs 对象时，会返回 ISO8601 格式的字符串。\n\n```js\ndayjs().toJSON() //\"2018-08-08T00:00:00.000Z\"\n```\n\n返回 ISO8601 格式的字符串。\n\n```js\ndayjs().toISOString()\n```\n\n返回字符串\n\n```js\ndayjs().toString()\n```\n\n### 查询时间\n\n检查一个 Dayjs 对象是否在另一个 Dayjs 对象时间之前。\n\n```js\ndayjs('2010-10-20').isBefore('2010-10-21') // 早于\ndayjs().isBefore(Dayjs, unit? : String);\ndayjs().isBefore(dayjs()); // false\ndayjs().isBefore(dayjs(), 'year'); // false\n```\n\n检查一个 Dayjs 对象是否和另一个 Dayjs 对象时间相同。\n\n```js\ndayjs().isSame(Dayjs, unit? : String);\ndayjs().isSame(dayjs()); // true\ndayjs().isSame(dayjs(), 'year'); // true\n```\n\n检查一个 Dayjs 对象是否在另一个 Dayjs 对象时间之后。\n\n```js\ndayjs('2010-10-20').isAfter('2010-10-19') // 晚于\ndayjs().isAfter(Dayjs, unit? : String);\ndayjs().isAfter(dayjs()); // false\ndayjs().isAfter(dayjs(), 'year'); // false\n```\n\n检查一个 Dayjs 对象是否是闰年。\n\n```js\ndayjs().isLeapYear() // 闰年\n```\n\n## 参考资料\n\n* [day.js官方文档](https://github.com/iamkun/dayjs/blob/HEAD/docs/zh-cn/README.zh-CN.md)\n* [如何使用輕量級的 day.js 處理複雜日期](https://juejin.im/post/6844903597709197319)\n* [Day.js教程](https://www.jianshu.com/p/15d6a9c1bf18)\n* [Day.js 2kB超轻量时间库 和Moment.js一样的API](https://calpa.me/2018/09/19/five-minutes-to-reduce-application-weight-dayjs/)\n","slug":"使用dayjs替代moment","published":1,"updated":"2020-12-30T01:08:23.105Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyj000n2an9bjzp1sxw","content":"<p><img src=\"https://s1.ax1x.com/2020/08/13/azsXcR.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<p>Moment.js 是一个大而全的 JS 时间库，很大地方便了我们处理日期和时间。<br>但是 Moment.js太重了(200k+ with locals)，可能一般项目也只使用到了她几个常用的API。<br>虽然社区也有几个轻量的时间库，要想迁移过去又会增加新的学习和迁移成本。</p>\n<p><strong>如果能有一个和 Moment.js 一样语法，一样功能，又轻量的库该多好！</strong></p>\n<p>Day.js 是一个轻量的 JavaScript 时间日期处理库，和 Moment.js 的 API 设计保持完全一样. 如果你曾经用过 Moment.js, 那么你已经知道如何使用 Day.js</p>\n<p><code>Day.js</code> 基本用法如下，相同的API，相同的链式操作。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().startOf(<span class=\"string\">&#x27;month&#x27;</span>).add(<span class=\"number\">1</span>, <span class=\"string\">&#x27;day&#x27;</span>).set(<span class=\"string\">&#x27;year&#x27;</span>, <span class=\"number\">2018</span>).format(<span class=\"string\">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>🕒 和 Moment.js 相同的 API 和用法</li>\n<li>💪 不可变数据 (Immutable)</li>\n<li>🔥 支持链式操作 (Chainable)</li>\n<li>🌐 I18n 国际化</li>\n<li>📦 仅 2kb 大小的微型库</li>\n<li>👫 全浏览器兼容</li>\n</ul>\n<p>Day.js 虽然仅有 2kb 大小，但是功能一点都没有阉割。包含了时间处理的全部常用方法。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"npm\"><a href=\"#npm\" class=\"headerlink\" title=\"npm\"></a>npm</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install dayjs --save</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> dayjs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;dayjs&#x27;</span>);</span><br><span class=\"line\">dayjs().format();</span><br></pre></td></tr></table></figure>\n<h3 id=\"cdn\"><a href=\"#cdn\" class=\"headerlink\" title=\"cdn\"></a>cdn</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">&quot;https://unpkg.com/dayjs&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  dayjs().format();</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注：Day.js 的返回值都是新的 Dayjs 对象</p>\n</blockquote>\n<h3 id=\"从moment迁移至dayjs\"><a href=\"#从moment迁移至dayjs\" class=\"headerlink\" title=\"从moment迁移至dayjs\"></a>从moment迁移至dayjs</h3><p>v1.6.0 支持多语言国际化了，按需加载需要的语言，那想缩小打包体积，<br>提升开发体验只需要 <code>replace(/moment/g, &#39;dayjs&#39;)</code> 全局替换一下。<br>就能从 <code>Moment.js + locals</code> 200kb 减小成 <code>dayjs</code> 2kb的体积。<br>所有的API调用都保持不变，无需修改。</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>来感受一下 <code>Dayjs</code> 的语法吧，是不是很看起来亲切呢 😋 (没错 这就是 moment 的语法嘛)</p>\n<h3 id=\"解析时间\"><a href=\"#解析时间\" class=\"headerlink\" title=\"解析时间\"></a>解析时间</h3><p>直接运行 dayjs()，得到包含当前时间和日期的 Dayjs 对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs() <span class=\"comment\">// 返回当前时间 Tue, 28 May 2019 05:57:34 GMT</span></span><br></pre></td></tr></table></figure>\n<p>可以解析传入的一个标准的<a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a>时间字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"string\">&#x27;1995-12-25&#x27;</span>) <span class=\"comment\">// Sun, 24 Dec 1995 16:00:00 GMT</span></span><br></pre></td></tr></table></figure>\n<p>可以解析传入的一个 Javascript Date 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"number\">2018</span>, <span class=\"number\">8</span>, <span class=\"number\">18</span>)) <span class=\"comment\">//Mon, 17 Sep 2018 16:00:00 GMT</span></span><br></pre></td></tr></table></figure>\n<p>可以解析传入的一个 Unix 时间戳 (13 位数字)。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"number\">1318781876406</span>) <span class=\"comment\">// Sun, 16 Oct 2011 16:17:56 GMT</span></span><br></pre></td></tr></table></figure>\n<p>可以解析计算后的时间。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"built_in\">Date</span>.now() - <span class=\"number\">24</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>) <span class=\"comment\">// 昨天</span></span><br></pre></td></tr></table></figure>\n<p>Dayjs 对象是不可变的，如果您想获得一个对象的拷贝，请执行 .clone()。 向 dayjs() 里传入一个 Dayjs 对象也能实现同样的效果。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(Dayjs)</span><br><span class=\"line\">dayjs().clone()</span><br></pre></td></tr></table></figure>\n<p>检测当前 Dayjs 对象是否是一个有效的时间</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().isValid()</span><br></pre></td></tr></table></figure>\n<h3 id=\"格式化时间\"><a href=\"#格式化时间\" class=\"headerlink\" title=\"格式化时间\"></a>格式化时间</h3><p>格式化 Dayjs 对象并展示。</p>\n<p>接收一系列的时间日期字符串并替换成相应的值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().format(<span class=\"built_in\">String</span>)</span><br><span class=\"line\">dayjs(<span class=\"string\">&#x27;2019-01-25&#x27;</span>).format(<span class=\"string\">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>) <span class=\"comment\">// 2019-01-25 00:00:00</span></span><br><span class=\"line\">dayjs().format(<span class=\"string\">&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;</span>) <span class=\"comment\">// 2018年08月08日 00:00:00</span></span><br><span class=\"line\">dayjs().format(<span class=\"string\">&#x27;[YYYY]&#x27;</span>) <span class=\"comment\">// &quot;[2018]&quot;。[] 里的会原样输出。</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>格式</th>\n<th>输出</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>YY</td>\n<td>18</td>\n<td>两位数的年份</td>\n</tr>\n<tr>\n<td>YYYY</td>\n<td>2018</td>\n<td>四位数的年份</td>\n</tr>\n<tr>\n<td>M</td>\n<td>1-12</td>\n<td>月份，从 1 开始</td>\n</tr>\n<tr>\n<td>MM</td>\n<td>01-12</td>\n<td>月份，两位数</td>\n</tr>\n<tr>\n<td>MMM</td>\n<td>Jan-Dec</td>\n<td>简写的月份名称</td>\n</tr>\n<tr>\n<td>MMMM</td>\n<td>January-December</td>\n<td>完整的月份名称</td>\n</tr>\n<tr>\n<td>D</td>\n<td>1-31</td>\n<td>月份里的一天</td>\n</tr>\n<tr>\n<td>DD</td>\n<td>01-31</td>\n<td>月份里的一天，两位数</td>\n</tr>\n<tr>\n<td>d</td>\n<td>0-6</td>\n<td>一周中的一天，星期天是 0</td>\n</tr>\n<tr>\n<td>dd</td>\n<td>Su-Sa</td>\n<td>最简写的一周中一天的名称</td>\n</tr>\n<tr>\n<td>ddd</td>\n<td>Sun-Sat</td>\n<td>简写的一周中一天的名称</td>\n</tr>\n<tr>\n<td>dddd</td>\n<td>Sunday-Saturday</td>\n<td>一周中一天的名称</td>\n</tr>\n<tr>\n<td>H</td>\n<td>0-23</td>\n<td>小时</td>\n</tr>\n<tr>\n<td>HH</td>\n<td>00-23</td>\n<td>小时，两位数</td>\n</tr>\n<tr>\n<td>h</td>\n<td>1-12</td>\n<td>小时, 12 小时制</td>\n</tr>\n<tr>\n<td>hh</td>\n<td>01-12</td>\n<td>Hours, 12 小时制, 两位数</td>\n</tr>\n<tr>\n<td>m</td>\n<td>0-59</td>\n<td>分钟</td>\n</tr>\n<tr>\n<td>mm</td>\n<td>00-59</td>\n<td>分钟，两位数</td>\n</tr>\n<tr>\n<td>s</td>\n<td>0-59</td>\n<td>秒</td>\n</tr>\n<tr>\n<td>ss</td>\n<td>00-59</td>\n<td>秒 两位数</td>\n</tr>\n<tr>\n<td>SSS</td>\n<td>000-999</td>\n<td>毫秒 三位数</td>\n</tr>\n<tr>\n<td>Z</td>\n<td>+5:00</td>\n<td>UTC 的偏移量</td>\n</tr>\n<tr>\n<td>ZZ</td>\n<td>+0500</td>\n<td>UTC 的偏移量，数字前面加上 0</td>\n</tr>\n<tr>\n<td>A</td>\n<td>AM PM</td>\n<td>&nbsp;</td>\n</tr>\n<tr>\n<td>a</td>\n<td>am pm</td>\n<td>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"操作时间\"><a href=\"#操作时间\" class=\"headerlink\" title=\"操作时间\"></a>操作时间</h3><p>您可以对 Dayjs 对象如下增加减少之类的操作</p>\n<p>增加时间并返回一个新的 Dayjs() 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().add(value : <span class=\"built_in\">Number</span>, <span class=\"attr\">unit</span> : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().add(<span class=\"number\">7</span>, <span class=\"string\">&#x27;days&#x27;</span>); <span class=\"comment\">// 之后的第7天</span></span><br></pre></td></tr></table></figure>\n<p>减少时间并返回一个新的 Dayjs() 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().subtract(value : <span class=\"built_in\">Number</span>, <span class=\"attr\">unit</span> : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().subtract(<span class=\"number\">1</span>, <span class=\"string\">&#x27;months&#x27;</span>); <span class=\"comment\">//在当前基础上减少1个月</span></span><br></pre></td></tr></table></figure>\n<p>返回当前时间的开头时间的 Dayjs() 对象，如本月份的第一天。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().startOf(unit : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().startOf(<span class=\"string\">&#x27;month&#x27;</span>); <span class=\"comment\">// 获取本月初</span></span><br></pre></td></tr></table></figure>\n<p>返回当前时间的末尾时间的 Dayjs() 对象，如本年的最后一天。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().endOf(unit : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().endOf(<span class=\"string\">&#x27;year&#x27;</span>); <span class=\"comment\">// 获取本年年末</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"设置时间\"><a href=\"#设置时间\" class=\"headerlink\" title=\"设置时间\"></a>设置时间</h3><p>获取或设置年份。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().year() <span class=\"comment\">//2019</span></span><br><span class=\"line\">dayjs().year(<span class=\"number\">2000</span>) <span class=\"comment\">//Sun, 28 May 2000 06:14:07 GMT</span></span><br></pre></td></tr></table></figure>\n<p>获取或设置月份。从 0 开始</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().month() <span class=\"comment\">//4 实际上5月</span></span><br><span class=\"line\">dayjs().month(<span class=\"number\">0</span>) <span class=\"comment\">//Mon, 28 Jan 2019 06:15:25 GMT</span></span><br></pre></td></tr></table></figure>\n<p>获取或设置日期。从 1 开始</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().date() <span class=\"comment\">//28 当天是2019年5月28日</span></span><br><span class=\"line\">dayjs().date(<span class=\"number\">1</span>) <span class=\"comment\">//Wed, 01 May 2019 06:17:04 GMT</span></span><br></pre></td></tr></table></figure>\n<p>获取或设置星期。从星期天 0 开始</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().day() <span class=\"comment\">//2 当天是星期二</span></span><br><span class=\"line\">dayjs().day(<span class=\"number\">0</span>) <span class=\"comment\">//Sun, 26 May 2019 06:18:13 GMT 被强行设置为上周日</span></span><br></pre></td></tr></table></figure>\n<p>获取或设置小时</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().hour()  <span class=\"comment\">//14 当时为下午2点</span></span><br><span class=\"line\">dayjs().hour(<span class=\"number\">12</span>) <span class=\"comment\">//Tue, 28 May 2019 04:21:30 GMT 不清楚</span></span><br></pre></td></tr></table></figure>\n<p>获取或设置分钟。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().minute() <span class=\"comment\">//22</span></span><br><span class=\"line\">dayjs().minute(<span class=\"number\">59</span>) <span class=\"comment\">//Tue, 28 May 2019 06:59:50 GMT</span></span><br></pre></td></tr></table></figure>\n<p>获取或设置秒</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().second()</span><br><span class=\"line\">dayjs().second(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<p>获取或设置毫秒。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().millisecond()</span><br><span class=\"line\">dayjs().millisecond(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<p>获取从 Dayjs 对象中取到的信息 传入的单位 (unit) 对大小写不敏感</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().get(<span class=\"string\">&#x27;month&#x27;</span>) <span class=\"comment\">//4</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>单位</th>\n<th>缩写</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>date</td>\n<td></td>\n<td>日期</td>\n</tr>\n<tr>\n<td>day</td>\n<td>d</td>\n<td>星期几 (星期天 0, 星期六 6)</td>\n</tr>\n<tr>\n<td>month</td>\n<td>M</td>\n<td>月 (一月 0, 十二月 11)</td>\n</tr>\n<tr>\n<td>year</td>\n<td>y</td>\n<td>年</td>\n</tr>\n<tr>\n<td>hour</td>\n<td>h</td>\n<td>时</td>\n</tr>\n<tr>\n<td>minute</td>\n<td>m</td>\n<td>分</td>\n</tr>\n<tr>\n<td>second</td>\n<td>s</td>\n<td>秒</td>\n</tr>\n<tr>\n<td>millisecond</td>\n<td>ms</td>\n<td>毫秒</td>\n</tr>\n</tbody>\n</table>\n<p>设置时间</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().set(<span class=\"string\">&#x27;date&#x27;</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">dayjs().set(<span class=\"string\">&#x27;month&#x27;</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 四月</span></span><br><span class=\"line\">dayjs().set(<span class=\"string\">&#x27;second&#x27;</span>, <span class=\"number\">30</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"显示时间\"><a href=\"#显示时间\" class=\"headerlink\" title=\"显示时间\"></a>显示时间</h3><p>获取两个 Dayjs 对象的时间差，默认毫秒。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> date1 = dayjs(<span class=\"string\">&#x27;2019-01-25&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> date2 = dayjs(<span class=\"string\">&#x27;2018-06-05&#x27;</span>)</span><br><span class=\"line\">date1.diff(date2) <span class=\"comment\">// 20214000000</span></span><br><span class=\"line\">date1.diff(date2, <span class=\"string\">&#x27;month&#x27;</span>) <span class=\"comment\">// 7</span></span><br><span class=\"line\">date1.diff(date2, <span class=\"string\">&#x27;month&#x27;</span>, <span class=\"literal\">true</span>) <span class=\"comment\">// 7.645161290322581</span></span><br><span class=\"line\">date1.diff(date2, <span class=\"string\">&#x27;day&#x27;</span>) <span class=\"comment\">// 233</span></span><br></pre></td></tr></table></figure>\n<p>返回 Unix 时间戳 (毫秒)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().valueOf()</span><br></pre></td></tr></table></figure>\n<p>返回 Unix 时间戳 (秒)。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().unix()</span><br></pre></td></tr></table></figure>\n<p>返回月份的天数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().daysInMonth()</span><br></pre></td></tr></table></figure>\n<p>返回原生的 Date 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toDate()</span><br></pre></td></tr></table></figure>\n<p>当序列化 Dayjs 对象时，会返回 ISO8601 格式的字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toJSON() <span class=\"comment\">//&quot;2018-08-08T00:00:00.000Z&quot;</span></span><br></pre></td></tr></table></figure>\n<p>返回 ISO8601 格式的字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toISOString()</span><br></pre></td></tr></table></figure>\n<p>返回字符串</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toString()</span><br></pre></td></tr></table></figure>\n<h3 id=\"查询时间\"><a href=\"#查询时间\" class=\"headerlink\" title=\"查询时间\"></a>查询时间</h3><p>检查一个 Dayjs 对象是否在另一个 Dayjs 对象时间之前。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"string\">&#x27;2010-10-20&#x27;</span>).isBefore(<span class=\"string\">&#x27;2010-10-21&#x27;</span>) <span class=\"comment\">// 早于</span></span><br><span class=\"line\">dayjs().isBefore(Dayjs, unit? : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().isBefore(dayjs()); <span class=\"comment\">// false</span></span><br><span class=\"line\">dayjs().isBefore(dayjs(), <span class=\"string\">&#x27;year&#x27;</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<p>检查一个 Dayjs 对象是否和另一个 Dayjs 对象时间相同。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().isSame(Dayjs, unit? : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().isSame(dayjs()); <span class=\"comment\">// true</span></span><br><span class=\"line\">dayjs().isSame(dayjs(), <span class=\"string\">&#x27;year&#x27;</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>检查一个 Dayjs 对象是否在另一个 Dayjs 对象时间之后。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"string\">&#x27;2010-10-20&#x27;</span>).isAfter(<span class=\"string\">&#x27;2010-10-19&#x27;</span>) <span class=\"comment\">// 晚于</span></span><br><span class=\"line\">dayjs().isAfter(Dayjs, unit? : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().isAfter(dayjs()); <span class=\"comment\">// false</span></span><br><span class=\"line\">dayjs().isAfter(dayjs(), <span class=\"string\">&#x27;year&#x27;</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<p>检查一个 Dayjs 对象是否是闰年。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().isLeapYear() <span class=\"comment\">// 闰年</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://github.com/iamkun/dayjs/blob/HEAD/docs/zh-cn/README.zh-CN.md\">day.js官方文档</a></li>\n<li><a href=\"https://juejin.im/post/6844903597709197319\">如何使用輕量級的 day.js 處理複雜日期</a></li>\n<li><a href=\"https://www.jianshu.com/p/15d6a9c1bf18\">Day.js教程</a></li>\n<li><a href=\"https://calpa.me/2018/09/19/five-minutes-to-reduce-application-weight-dayjs/\">Day.js 2kB超轻量时间库 和Moment.js一样的API</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/08/13/azsXcR.jpg\" alt=\"首屏图\"></p>","more":"<p>Moment.js 是一个大而全的 JS 时间库，很大地方便了我们处理日期和时间。<br>但是 Moment.js太重了(200k+ with locals)，可能一般项目也只使用到了她几个常用的API。<br>虽然社区也有几个轻量的时间库，要想迁移过去又会增加新的学习和迁移成本。</p>\n<p><strong>如果能有一个和 Moment.js 一样语法，一样功能，又轻量的库该多好！</strong></p>\n<p>Day.js 是一个轻量的 JavaScript 时间日期处理库，和 Moment.js 的 API 设计保持完全一样. 如果你曾经用过 Moment.js, 那么你已经知道如何使用 Day.js</p>\n<p><code>Day.js</code> 基本用法如下，相同的API，相同的链式操作。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().startOf(<span class=\"string\">&#x27;month&#x27;</span>).add(<span class=\"number\">1</span>, <span class=\"string\">&#x27;day&#x27;</span>).set(<span class=\"string\">&#x27;year&#x27;</span>, <span class=\"number\">2018</span>).format(<span class=\"string\">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>🕒 和 Moment.js 相同的 API 和用法</li>\n<li>💪 不可变数据 (Immutable)</li>\n<li>🔥 支持链式操作 (Chainable)</li>\n<li>🌐 I18n 国际化</li>\n<li>📦 仅 2kb 大小的微型库</li>\n<li>👫 全浏览器兼容</li>\n</ul>\n<p>Day.js 虽然仅有 2kb 大小，但是功能一点都没有阉割。包含了时间处理的全部常用方法。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"npm\"><a href=\"#npm\" class=\"headerlink\" title=\"npm\"></a>npm</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install dayjs --save</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> dayjs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;dayjs&#x27;</span>);</span><br><span class=\"line\">dayjs().format();</span><br></pre></td></tr></table></figure>\n<h3 id=\"cdn\"><a href=\"#cdn\" class=\"headerlink\" title=\"cdn\"></a>cdn</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">&quot;https://unpkg.com/dayjs&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  dayjs().format();</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注：Day.js 的返回值都是新的 Dayjs 对象</p>\n</blockquote>\n<h3 id=\"从moment迁移至dayjs\"><a href=\"#从moment迁移至dayjs\" class=\"headerlink\" title=\"从moment迁移至dayjs\"></a>从moment迁移至dayjs</h3><p>v1.6.0 支持多语言国际化了，按需加载需要的语言，那想缩小打包体积，<br>提升开发体验只需要 <code>replace(/moment/g, &#39;dayjs&#39;)</code> 全局替换一下。<br>就能从 <code>Moment.js + locals</code> 200kb 减小成 <code>dayjs</code> 2kb的体积。<br>所有的API调用都保持不变，无需修改。</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>来感受一下 <code>Dayjs</code> 的语法吧，是不是很看起来亲切呢 😋 (没错 这就是 moment 的语法嘛)</p>\n<h3 id=\"解析时间\"><a href=\"#解析时间\" class=\"headerlink\" title=\"解析时间\"></a>解析时间</h3><p>直接运行 dayjs()，得到包含当前时间和日期的 Dayjs 对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs() <span class=\"comment\">// 返回当前时间 Tue, 28 May 2019 05:57:34 GMT</span></span><br></pre></td></tr></table></figure>\n<p>可以解析传入的一个标准的<a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a>时间字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"string\">&#x27;1995-12-25&#x27;</span>) <span class=\"comment\">// Sun, 24 Dec 1995 16:00:00 GMT</span></span><br></pre></td></tr></table></figure>\n<p>可以解析传入的一个 Javascript Date 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"number\">2018</span>, <span class=\"number\">8</span>, <span class=\"number\">18</span>)) <span class=\"comment\">//Mon, 17 Sep 2018 16:00:00 GMT</span></span><br></pre></td></tr></table></figure>\n<p>可以解析传入的一个 Unix 时间戳 (13 位数字)。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"number\">1318781876406</span>) <span class=\"comment\">// Sun, 16 Oct 2011 16:17:56 GMT</span></span><br></pre></td></tr></table></figure>\n<p>可以解析计算后的时间。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"built_in\">Date</span>.now() - <span class=\"number\">24</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>) <span class=\"comment\">// 昨天</span></span><br></pre></td></tr></table></figure>\n<p>Dayjs 对象是不可变的，如果您想获得一个对象的拷贝，请执行 .clone()。 向 dayjs() 里传入一个 Dayjs 对象也能实现同样的效果。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(Dayjs)</span><br><span class=\"line\">dayjs().clone()</span><br></pre></td></tr></table></figure>\n<p>检测当前 Dayjs 对象是否是一个有效的时间</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().isValid()</span><br></pre></td></tr></table></figure>\n<h3 id=\"格式化时间\"><a href=\"#格式化时间\" class=\"headerlink\" title=\"格式化时间\"></a>格式化时间</h3><p>格式化 Dayjs 对象并展示。</p>\n<p>接收一系列的时间日期字符串并替换成相应的值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().format(<span class=\"built_in\">String</span>)</span><br><span class=\"line\">dayjs(<span class=\"string\">&#x27;2019-01-25&#x27;</span>).format(<span class=\"string\">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>) <span class=\"comment\">// 2019-01-25 00:00:00</span></span><br><span class=\"line\">dayjs().format(<span class=\"string\">&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;</span>) <span class=\"comment\">// 2018年08月08日 00:00:00</span></span><br><span class=\"line\">dayjs().format(<span class=\"string\">&#x27;[YYYY]&#x27;</span>) <span class=\"comment\">// &quot;[2018]&quot;。[] 里的会原样输出。</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>格式</th>\n<th>输出</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>YY</td>\n<td>18</td>\n<td>两位数的年份</td>\n</tr>\n<tr>\n<td>YYYY</td>\n<td>2018</td>\n<td>四位数的年份</td>\n</tr>\n<tr>\n<td>M</td>\n<td>1-12</td>\n<td>月份，从 1 开始</td>\n</tr>\n<tr>\n<td>MM</td>\n<td>01-12</td>\n<td>月份，两位数</td>\n</tr>\n<tr>\n<td>MMM</td>\n<td>Jan-Dec</td>\n<td>简写的月份名称</td>\n</tr>\n<tr>\n<td>MMMM</td>\n<td>January-December</td>\n<td>完整的月份名称</td>\n</tr>\n<tr>\n<td>D</td>\n<td>1-31</td>\n<td>月份里的一天</td>\n</tr>\n<tr>\n<td>DD</td>\n<td>01-31</td>\n<td>月份里的一天，两位数</td>\n</tr>\n<tr>\n<td>d</td>\n<td>0-6</td>\n<td>一周中的一天，星期天是 0</td>\n</tr>\n<tr>\n<td>dd</td>\n<td>Su-Sa</td>\n<td>最简写的一周中一天的名称</td>\n</tr>\n<tr>\n<td>ddd</td>\n<td>Sun-Sat</td>\n<td>简写的一周中一天的名称</td>\n</tr>\n<tr>\n<td>dddd</td>\n<td>Sunday-Saturday</td>\n<td>一周中一天的名称</td>\n</tr>\n<tr>\n<td>H</td>\n<td>0-23</td>\n<td>小时</td>\n</tr>\n<tr>\n<td>HH</td>\n<td>00-23</td>\n<td>小时，两位数</td>\n</tr>\n<tr>\n<td>h</td>\n<td>1-12</td>\n<td>小时, 12 小时制</td>\n</tr>\n<tr>\n<td>hh</td>\n<td>01-12</td>\n<td>Hours, 12 小时制, 两位数</td>\n</tr>\n<tr>\n<td>m</td>\n<td>0-59</td>\n<td>分钟</td>\n</tr>\n<tr>\n<td>mm</td>\n<td>00-59</td>\n<td>分钟，两位数</td>\n</tr>\n<tr>\n<td>s</td>\n<td>0-59</td>\n<td>秒</td>\n</tr>\n<tr>\n<td>ss</td>\n<td>00-59</td>\n<td>秒 两位数</td>\n</tr>\n<tr>\n<td>SSS</td>\n<td>000-999</td>\n<td>毫秒 三位数</td>\n</tr>\n<tr>\n<td>Z</td>\n<td>+5:00</td>\n<td>UTC 的偏移量</td>\n</tr>\n<tr>\n<td>ZZ</td>\n<td>+0500</td>\n<td>UTC 的偏移量，数字前面加上 0</td>\n</tr>\n<tr>\n<td>A</td>\n<td>AM PM</td>\n<td>&nbsp;</td>\n</tr>\n<tr>\n<td>a</td>\n<td>am pm</td>\n<td>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"操作时间\"><a href=\"#操作时间\" class=\"headerlink\" title=\"操作时间\"></a>操作时间</h3><p>您可以对 Dayjs 对象如下增加减少之类的操作</p>\n<p>增加时间并返回一个新的 Dayjs() 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().add(value : <span class=\"built_in\">Number</span>, <span class=\"attr\">unit</span> : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().add(<span class=\"number\">7</span>, <span class=\"string\">&#x27;days&#x27;</span>); <span class=\"comment\">// 之后的第7天</span></span><br></pre></td></tr></table></figure>\n<p>减少时间并返回一个新的 Dayjs() 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().subtract(value : <span class=\"built_in\">Number</span>, <span class=\"attr\">unit</span> : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().subtract(<span class=\"number\">1</span>, <span class=\"string\">&#x27;months&#x27;</span>); <span class=\"comment\">//在当前基础上减少1个月</span></span><br></pre></td></tr></table></figure>\n<p>返回当前时间的开头时间的 Dayjs() 对象，如本月份的第一天。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().startOf(unit : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().startOf(<span class=\"string\">&#x27;month&#x27;</span>); <span class=\"comment\">// 获取本月初</span></span><br></pre></td></tr></table></figure>\n<p>返回当前时间的末尾时间的 Dayjs() 对象，如本年的最后一天。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().endOf(unit : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().endOf(<span class=\"string\">&#x27;year&#x27;</span>); <span class=\"comment\">// 获取本年年末</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"设置时间\"><a href=\"#设置时间\" class=\"headerlink\" title=\"设置时间\"></a>设置时间</h3><p>获取或设置年份。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().year() <span class=\"comment\">//2019</span></span><br><span class=\"line\">dayjs().year(<span class=\"number\">2000</span>) <span class=\"comment\">//Sun, 28 May 2000 06:14:07 GMT</span></span><br></pre></td></tr></table></figure>\n<p>获取或设置月份。从 0 开始</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().month() <span class=\"comment\">//4 实际上5月</span></span><br><span class=\"line\">dayjs().month(<span class=\"number\">0</span>) <span class=\"comment\">//Mon, 28 Jan 2019 06:15:25 GMT</span></span><br></pre></td></tr></table></figure>\n<p>获取或设置日期。从 1 开始</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().date() <span class=\"comment\">//28 当天是2019年5月28日</span></span><br><span class=\"line\">dayjs().date(<span class=\"number\">1</span>) <span class=\"comment\">//Wed, 01 May 2019 06:17:04 GMT</span></span><br></pre></td></tr></table></figure>\n<p>获取或设置星期。从星期天 0 开始</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().day() <span class=\"comment\">//2 当天是星期二</span></span><br><span class=\"line\">dayjs().day(<span class=\"number\">0</span>) <span class=\"comment\">//Sun, 26 May 2019 06:18:13 GMT 被强行设置为上周日</span></span><br></pre></td></tr></table></figure>\n<p>获取或设置小时</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().hour()  <span class=\"comment\">//14 当时为下午2点</span></span><br><span class=\"line\">dayjs().hour(<span class=\"number\">12</span>) <span class=\"comment\">//Tue, 28 May 2019 04:21:30 GMT 不清楚</span></span><br></pre></td></tr></table></figure>\n<p>获取或设置分钟。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().minute() <span class=\"comment\">//22</span></span><br><span class=\"line\">dayjs().minute(<span class=\"number\">59</span>) <span class=\"comment\">//Tue, 28 May 2019 06:59:50 GMT</span></span><br></pre></td></tr></table></figure>\n<p>获取或设置秒</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().second()</span><br><span class=\"line\">dayjs().second(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<p>获取或设置毫秒。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().millisecond()</span><br><span class=\"line\">dayjs().millisecond(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<p>获取从 Dayjs 对象中取到的信息 传入的单位 (unit) 对大小写不敏感</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().get(<span class=\"string\">&#x27;month&#x27;</span>) <span class=\"comment\">//4</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>单位</th>\n<th>缩写</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>date</td>\n<td></td>\n<td>日期</td>\n</tr>\n<tr>\n<td>day</td>\n<td>d</td>\n<td>星期几 (星期天 0, 星期六 6)</td>\n</tr>\n<tr>\n<td>month</td>\n<td>M</td>\n<td>月 (一月 0, 十二月 11)</td>\n</tr>\n<tr>\n<td>year</td>\n<td>y</td>\n<td>年</td>\n</tr>\n<tr>\n<td>hour</td>\n<td>h</td>\n<td>时</td>\n</tr>\n<tr>\n<td>minute</td>\n<td>m</td>\n<td>分</td>\n</tr>\n<tr>\n<td>second</td>\n<td>s</td>\n<td>秒</td>\n</tr>\n<tr>\n<td>millisecond</td>\n<td>ms</td>\n<td>毫秒</td>\n</tr>\n</tbody>\n</table>\n<p>设置时间</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().set(<span class=\"string\">&#x27;date&#x27;</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">dayjs().set(<span class=\"string\">&#x27;month&#x27;</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 四月</span></span><br><span class=\"line\">dayjs().set(<span class=\"string\">&#x27;second&#x27;</span>, <span class=\"number\">30</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"显示时间\"><a href=\"#显示时间\" class=\"headerlink\" title=\"显示时间\"></a>显示时间</h3><p>获取两个 Dayjs 对象的时间差，默认毫秒。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> date1 = dayjs(<span class=\"string\">&#x27;2019-01-25&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> date2 = dayjs(<span class=\"string\">&#x27;2018-06-05&#x27;</span>)</span><br><span class=\"line\">date1.diff(date2) <span class=\"comment\">// 20214000000</span></span><br><span class=\"line\">date1.diff(date2, <span class=\"string\">&#x27;month&#x27;</span>) <span class=\"comment\">// 7</span></span><br><span class=\"line\">date1.diff(date2, <span class=\"string\">&#x27;month&#x27;</span>, <span class=\"literal\">true</span>) <span class=\"comment\">// 7.645161290322581</span></span><br><span class=\"line\">date1.diff(date2, <span class=\"string\">&#x27;day&#x27;</span>) <span class=\"comment\">// 233</span></span><br></pre></td></tr></table></figure>\n<p>返回 Unix 时间戳 (毫秒)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().valueOf()</span><br></pre></td></tr></table></figure>\n<p>返回 Unix 时间戳 (秒)。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().unix()</span><br></pre></td></tr></table></figure>\n<p>返回月份的天数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().daysInMonth()</span><br></pre></td></tr></table></figure>\n<p>返回原生的 Date 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toDate()</span><br></pre></td></tr></table></figure>\n<p>当序列化 Dayjs 对象时，会返回 ISO8601 格式的字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toJSON() <span class=\"comment\">//&quot;2018-08-08T00:00:00.000Z&quot;</span></span><br></pre></td></tr></table></figure>\n<p>返回 ISO8601 格式的字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toISOString()</span><br></pre></td></tr></table></figure>\n<p>返回字符串</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toString()</span><br></pre></td></tr></table></figure>\n<h3 id=\"查询时间\"><a href=\"#查询时间\" class=\"headerlink\" title=\"查询时间\"></a>查询时间</h3><p>检查一个 Dayjs 对象是否在另一个 Dayjs 对象时间之前。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"string\">&#x27;2010-10-20&#x27;</span>).isBefore(<span class=\"string\">&#x27;2010-10-21&#x27;</span>) <span class=\"comment\">// 早于</span></span><br><span class=\"line\">dayjs().isBefore(Dayjs, unit? : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().isBefore(dayjs()); <span class=\"comment\">// false</span></span><br><span class=\"line\">dayjs().isBefore(dayjs(), <span class=\"string\">&#x27;year&#x27;</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<p>检查一个 Dayjs 对象是否和另一个 Dayjs 对象时间相同。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().isSame(Dayjs, unit? : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().isSame(dayjs()); <span class=\"comment\">// true</span></span><br><span class=\"line\">dayjs().isSame(dayjs(), <span class=\"string\">&#x27;year&#x27;</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>检查一个 Dayjs 对象是否在另一个 Dayjs 对象时间之后。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"string\">&#x27;2010-10-20&#x27;</span>).isAfter(<span class=\"string\">&#x27;2010-10-19&#x27;</span>) <span class=\"comment\">// 晚于</span></span><br><span class=\"line\">dayjs().isAfter(Dayjs, unit? : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().isAfter(dayjs()); <span class=\"comment\">// false</span></span><br><span class=\"line\">dayjs().isAfter(dayjs(), <span class=\"string\">&#x27;year&#x27;</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<p>检查一个 Dayjs 对象是否是闰年。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().isLeapYear() <span class=\"comment\">// 闰年</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://github.com/iamkun/dayjs/blob/HEAD/docs/zh-cn/README.zh-CN.md\">day.js官方文档</a></li>\n<li><a href=\"https://juejin.im/post/6844903597709197319\">如何使用輕量級的 day.js 處理複雜日期</a></li>\n<li><a href=\"https://www.jianshu.com/p/15d6a9c1bf18\">Day.js教程</a></li>\n<li><a href=\"https://calpa.me/2018/09/19/five-minutes-to-reduce-application-weight-dayjs/\">Day.js 2kB超轻量时间库 和Moment.js一样的API</a></li>\n</ul>"},{"title":"使用mock.js模拟数据","toc":true,"abbrlink":"c3af7d0b","date":"2020-08-04T10:12:29.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/08/24/dDO8v8.png)\n\n<!-- more -->\n\n[mock.js](http://mockjs.com/)是一款前端开发中拦截`AJAX`请求再生成随机数据响应的工具。可以用来模拟服务器响应。优点是非常简单方便，无侵入性，基本覆盖常用的接口数据类型。\n\n大概记录下使用过程, 详细使用可以参见Mock文档[Mock Wiki](https://github.com/nuysoft/Mock/wiki)\n\n## 安装\n\n使用npm安装: `npm install mockjs`;\n或直接`<script src=\"http://mockjs.com/dist/mock.js\"></script>;`\n\n> 这里安装时注意是`mockjs`不是`mock` 不要问我是怎么知道还有`mock`的\n\n## 数据模板格式\n\n```text\n'name|rule': value\n\n属性名|生成规则: 属性值\n```\n\n## GET请求\n\n发起get请求:\n\n```js\n$.ajax({\n    url: 'http://test.com',\n    type: 'get',\n    dataType: 'json'\n}).done(function(data, status, xhr) {\n    console.log(JSON.stringify(data, null, 4));\n});\n```\n\nMock.js响应:\n\n```js\nvar obj = {'aa':'11', 'bb':'22', 'cc':'33', 'dd':'44'};\n\n// Mock响应模板\nMock.mock('http://test.com', {\n    \"user|1-3\": [{   // 随机生成1到3个数组元素\n        'name': '@cname',  // 中文名称\n        'id|+1': 88,    // 属性值自动加 1，初始值为88\n        'age|18-28': 0,   // 18至28以内随机整数, 0只是用来确定类型\n        'birthday': '@date(\"yyyy-MM-dd\")',  // 日期\n        'city': '@city(true)',   // 中国城市\n        'color': '@color',  // 16进制颜色\n        'isMale|1': true,  // 布尔值\n        'isFat|1-2': true,  // true的概率是1/3\n        'fromObj|2': obj,  // 从obj对象中随机获取2个属性\n        'fromObj2|1-3': obj,  // 从obj对象中随机获取1至3个属性\n        'brother|1': ['jack', 'jim'], // 随机选取 1 个元素\n        'sister|+1': ['jack', 'jim', 'lily'], // array中顺序选取元素作为结果\n        'friends|2': ['jack', 'jim'] // 重复2次属性值生成一个新数组\n    },{\n        'gf': '@cname'\n    }]\n});\n```\n\n可以看到结果:\n\n```js\n{\n    \"user\": [\n        {\n            \"name\": \"董静\",\n            \"id\": 88,\n            \"age\": 25,\n            \"birthday\": \"2015-04-01\",\n            \"city\": \"湖南省 怀化市\",\n            \"color\": \"#c0f279\",\n            \"isMale\": false,\n            \"isFat\": false,\n            \"fromObj\": {\n                \"dd\": \"44\",\n                \"aa\": \"11\"\n            },\n            \"fromObj2\": {\n                \"bb\": \"22\",\n                \"cc\": \"33\"\n            },\n            \"brother\": \"jack\",\n            \"sister\": \"jack\",\n            \"friends\": [\n                \"jack\",\n                \"jim\",\n                \"jack\",\n                \"jim\"\n            ]\n        },\n        {\n            \"gf\": \"田杰\"\n        }\n    ]\n}\n```\n\n响应时也可以是使用`function`, 如:\n\n```js\nMock.mock('http://test.com', 'get', function() {\n    return Mock.mock({\n        \"user|1-3\": [{\n            'name': '@cname',\n            'id': 88\n        }\n      ]\n    });\n});\n```\n\n结果:\n\n```js\n{\n    \"user\": [\n        {\n            \"name\": \"许超\",\n            \"id\": 88\n        }\n    ]\n}\n```\n\n## POST请求\n\n发起post请求:\n\n```js\n$.ajax({\n    url: 'http://test.com',\n    type: 'post',\n    dataType: 'json',\n    data: {\n      account: 888,\n      pwd: 'abc123'\n    }\n}).done(function(data, status, xhr) {\n    console.log(JSON.stringify(data, null, 4));\n});\n```\n\nMock.js响应:\n\n```js\nMock.mock('http://test.com', function(options) {\n    console.log(options);\n    return Mock.mock({\n        \"user|1-3\": [{\n            'name': '@cname',\n            'id|+1': 88\n        }\n      ]\n    });\n});\n```\n\n可以看到结果:\n\n```js\n{url: \"http://test.com\", type: \"POST\", body: \"account=888&pwd=abc123\"}\n\n{\n    \"user\": [\n        {\n            \"name\": \"曾明\",\n            \"id\": 88\n        }\n    ]\n}\n```\n\n## 自定义响应时间\n\n可以自定义设置响应时间, 可以是绝对值, 也可以是区间.\n\n```js\n// 设置4秒后再响应\nMock.setup({ timeout: 4000 });  \n\n// 设置1秒至4秒间响应\nMock.setup({ timeout: '1000-4000' });\n```\n\n## 数据集\n\n`Mock.Random`是一个工具类，用于生成各种格式随机数据. 有两种写法:\n\n第一种:\n\n```js\n// 生成一个email格式的字符串\nconsole.log(Mock.mock('@email'));  // 结果: s.uorjeqdou@crqfpdypt.gw\n```\n\n第二种:\n\n```js\nvar Random = Mock.Random;\nconsole.log(Random.email());  // 结果: r.quyppn@yit.cv\n```\n\n提供的种类有:\n\n|type|Method|\n|-|-|\n|Basic|boolean, natural, integer, float, character, string, range, date, time, datetime, now|\n|Image|image, dataImage|\n|Color|color|\n|Text|paragraph, sentence, word, title, cparagraph, csentence, cword, ctitle|\n|Name|first, last, name, cfirst, clast, cname|\n|Web|url, domain, email, ip, tld|\n|Address|area, region|\n|Helper|capitalize, upper, lower, pick, shuffle|\n|Miscellaneous|guid, id|\n\n如果上面没有你需要的种类, 还可以自定义扩展, 如下:\n\n```js\nRandom.extend({\n    weekday: function(date) {\n        var weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        return this.pick(weekdays);\n    },\n    sex: function(date) {\n        var sexes = ['男', '女', '中性', '未知'];\n        return this.pick(sexes);\n    }\n});\n\nconsole.log(Random.weekday()); // 结果: Saturday\nconsole.log(Mock.mock('@weekday')); // 结果: 112Tuesday\nconsole.log(Random.sex()); // 结果: 男\nconsole.log(Mock.mock('@sex')); // 结果: 未知\n```\n\n## 校验\n\n`Mock.valid(template, data)`: 用来校验真实数据`data`是否与数据模板`template`匹配\n\n```js\nvar tempObj = { \"user|1-3\": [{ 'name': '@cname', 'id|18-28': 88 } ]};\nvar realData = { \"user\": [{ 'name': '张三', 'id': 90 } ]};\nconsole.log(Mock.valid(tempObj, realData));\n```\n\n## JSON Schema\n\n`Mock.toJSONSchema(template)`: 用来把`Mock.js`风格的数据模板`template`转换成`JSON Schema`\n\n```js\nvar tempObj = { \"user|1-3\": [{ 'name': '@cname', 'id|18-28': 88 } ]};\nconsole.log(Mock.toJSONSchema(tempObj));\n```\n\n## 示例代码\n\n```js\nconst data = Mock.mock({\n      \"data|10-20\": [\n        {\n          \"key|10\": '@string', // 随机10位字符串\n          \"id\": /\\s\\S{5,10}/,\n          \"name\": '@name(1,2)', // 随机英文名\n          \"uname\": '@cname()', // 随机中文名\n          \"age|18-50\": 30, // 随机数字\n          \"phone\": /1[3-9]\\d{9}/, // 正则手机号\n          \"email\": '@email', // 随机邮箱\n          \"province\": '@province', // 随机省份\n          \"city\": '@city', // 随机城市\n          \"type|1\": ['线上', '线下', '三方支付'], // 随机选取 1 个元素\n          'price': '@integer(100,2000)', //随机价格\n          \"created_at\": '@datetime', //随机时间\n        }]\n    })\n```\n\n得到的结果\n\n```js\n{\n    \"data\": [\n        {\n            \"age\": 45,\n            \"city\": \"澳门半岛\",\n            \"created_at\": \"1971-03-20 17:38:04\",\n            \"email\": \"d.rqeifdlpx@yvcxt.tz\",\n            \"id\": \"TlNgYW7\",\n            \"key\": \"jKi8&ZSWBEnnNzlMwSyLK$sB8UUp@H*[c2[b!ieZfg#*34LSM[u1z\",\n            \"name\": \"Margaret Helen Robinson\",\n            \"phone\": \"13687356217\",\n            \"price\": 598,\n            \"province\": \"广东省\",\n            \"type\": \"三方支付\",\n            \"uname\": \"龚娟\"\n        },\n        {\n            \"age\": 40,\n            \"city\": \"日喀则地区\",\n            \"created_at\": \"1985-03-26 06:13:03\",\n            \"email\": \"x.kikgtslgk@ynqeirb.fo\",\n            \"id\": \"\\fPv28ds\",\n            \"key\": \"j6kjQ%$Z37F$]$mHU&)M2PJnLtk3YtNkDCM!6ij^lfO3&@FkjpJ7vZ@\",\n            \"name\": \"Lisa Brenda Thompson\",\n            \"phone\": \"19031788181\",\n            \"price\": 1393,\n            \"province\": \"香港特别行政区\",\n            \"type\": \"线下\",\n            \"uname\": \"戴平\"\n        },\n        {\n            \"age\": 40,\n            \"city\": \"三沙市\",\n            \"created_at\": \"2009-05-22 01:51:03\",\n            \"email\": \"c.zvgixnmovq@pdwps.lt\",\n            \"id\": \" kaQd2\",\n            \"key\": \"F)5VNx83YJ26]AygiiLWBHRIk1ANy9%NH$Mq$P8FbhF#x)tJLVH4\",\n            \"name\": \"John Jennifer Johnson\",\n            \"phone\": \"17315544215\",\n            \"price\": 590,\n            \"province\": \"海南省\",\n            \"type\": \"线下\",\n            \"uname\": \"范杰\"\n        },\n        {\n            \"age\": 20,\n            \"city\": \"上海市\",\n            \"created_at\": \"1998-02-15 09:35:36\",\n            \"email\": \"w.igoupuxm@mxnclekk.ci\",\n            \"id\": \"rb065M\",\n            \"key\": \"B^KDv(I3OiPkVV]25YMP&]eL4BE8bFD^Ja6aSJhEbjrjdyzrsI@GFT4\",\n            \"name\": \"Michelle Thomas Davis\",\n            \"phone\": \"15374035812\",\n            \"price\": 1098,\n            \"province\": \"贵州省\",\n            \"type\": \"线上\",\n            \"uname\": \"蔡刚\"\n        },\n        {\n            \"age\": 36,\n            \"city\": \"雅安市\",\n            \"created_at\": \"1972-02-27 20:45:27\",\n            \"email\": \"k.sdyep@kwxwdydy.ni\",\n            \"id\": \"\\tu8Ctp\",\n            \"key\": \"zmKd&W^c0HDwAlvp^GWtQEo@&r4#nAatcM)S(2Y*(\",\n            \"name\": \"Eric Cynthia Moore\",\n            \"phone\": \"15893736095\",\n            \"price\": 1435,\n            \"province\": \"辽宁省\",\n            \"type\": \"线下\",\n            \"uname\": \"锺丽\"\n        },\n        {\n            \"age\": 32,\n            \"city\": \"石嘴山市\",\n            \"created_at\": \"2018-05-27 04:44:36\",\n            \"email\": \"f.tdbp@rkovt.ng\",\n            \"id\": \" KSvKQ\",\n            \"key\": \"B((6cMzcAkVrmrr4^fA0ENos5@VE0gq#lJcZT6EhoZ4Mk2lWvI\",\n            \"name\": \"Joseph Anthony White\",\n            \"phone\": \"13036692471\",\n            \"price\": 878,\n            \"province\": \"江西省\",\n            \"type\": \"三方支付\",\n            \"uname\": \"锺静\"\n        },\n        {\n            \"age\": 50,\n            \"city\": \"石嘴山市\",\n            \"created_at\": \"1978-04-12 13:56:37\",\n            \"email\": \"n.ticof@dosvgos.tg\",\n            \"id\": \"\\tLi7Jql2a\",\n            \"key\": \"3&2t#dvTXD1sExrrXAHf0CSRkj5qn5fi(EOyTA$lK8O!F1gW^@&&xE\",\n            \"name\": \"Betty Angela Hernandez\",\n            \"phone\": \"19265388448\",\n            \"price\": 1995,\n            \"province\": \"黑龙江省\",\n            \"type\": \"三方支付\",\n            \"uname\": \"于磊\"\n        },\n        {\n            \"age\": 27,\n            \"city\": \"北京市\",\n            \"created_at\": \"2001-09-24 16:28:19\",\n            \"email\": \"t.xlqvfk@xthi.li\",\n            \"id\": \" DB77FKVI\",\n            \"key\": \"*(x9D[ugXmw2WCPFqUpbzsNVZzOoY2drdEa@ZdPFSDnLtqV(pxVEk\",\n            \"name\": \"Helen Elizabeth Walker\",\n            \"phone\": \"16227805422\",\n            \"price\": 550,\n            \"province\": \"湖北省\",\n            \"type\": \"线上\",\n            \"uname\": \"于丽\"\n        },\n        {\n            \"age\": 43,\n            \"city\": \"上海市\",\n            \"created_at\": \"1975-06-10 19:44:33\",\n            \"email\": \"e.fxlfi@wmbm.mh\",\n            \"id\": \"fwOxTCW\",\n            \"key\": \"x8^j#!qNzPCY!zz88NNNsWU*NboVlAa$fTWalQim0EmiZxAsAkJTR\",\n            \"name\": \"Laura Mary Thompson\",\n            \"phone\": \"14594487251\",\n            \"price\": 456,\n            \"province\": \"新疆维吾尔自治区\",\n            \"type\": \"三方支付\",\n            \"uname\": \"胡秀英\"\n        },\n        {\n            \"age\": 22,\n            \"city\": \"桃园县\",\n            \"created_at\": \"2006-03-08 07:29:42\",\n            \"email\": \"h.bviyekl@vlrgak.nc\",\n            \"id\": \"tJ4F1tC\",\n            \"key\": \"40NF#V[qfM3#PJN3[PKP7vKY8514Yu[lr5q0pycMpBwg7SQgjO7o\",\n            \"name\": \"Carol Steven Hernandez\",\n            \"phone\": \"15263737372\",\n            \"price\": 1664,\n            \"province\": \"广西壮族自治区\",\n            \"type\": \"线上\",\n            \"uname\": \"郝静\"\n        }\n    ]\n}\n```\n\n## 参考资料\n\n* [mock.js官网](http://mockjs.com/)\n* [mock.js使用](https://segmentfault.com/a/1190000008839142)\n* [正确开启Mockjs的三种姿势：入门参考（一）](https://www.cnblogs.com/soyxiaobi/p/9846057.html)\n* [使用Mock.js模拟数据请求](https://juejin.im/post/6844903571381551111)\n","source":"_posts/使用mock-js模拟数据.md","raw":"---\ntitle: 使用mock.js模拟数据\ntags:\n  - 技术积累\n  - 前端\n  - js\ncategories:\n  - 技术积累\n  - 前端\n  - js\ntoc: true\nabbrlink: c3af7d0b\ndate: 2020-08-04 18:12:29\n---\n\n![首屏图](https://s1.ax1x.com/2020/08/24/dDO8v8.png)\n\n<!-- more -->\n\n[mock.js](http://mockjs.com/)是一款前端开发中拦截`AJAX`请求再生成随机数据响应的工具。可以用来模拟服务器响应。优点是非常简单方便，无侵入性，基本覆盖常用的接口数据类型。\n\n大概记录下使用过程, 详细使用可以参见Mock文档[Mock Wiki](https://github.com/nuysoft/Mock/wiki)\n\n## 安装\n\n使用npm安装: `npm install mockjs`;\n或直接`<script src=\"http://mockjs.com/dist/mock.js\"></script>;`\n\n> 这里安装时注意是`mockjs`不是`mock` 不要问我是怎么知道还有`mock`的\n\n## 数据模板格式\n\n```text\n'name|rule': value\n\n属性名|生成规则: 属性值\n```\n\n## GET请求\n\n发起get请求:\n\n```js\n$.ajax({\n    url: 'http://test.com',\n    type: 'get',\n    dataType: 'json'\n}).done(function(data, status, xhr) {\n    console.log(JSON.stringify(data, null, 4));\n});\n```\n\nMock.js响应:\n\n```js\nvar obj = {'aa':'11', 'bb':'22', 'cc':'33', 'dd':'44'};\n\n// Mock响应模板\nMock.mock('http://test.com', {\n    \"user|1-3\": [{   // 随机生成1到3个数组元素\n        'name': '@cname',  // 中文名称\n        'id|+1': 88,    // 属性值自动加 1，初始值为88\n        'age|18-28': 0,   // 18至28以内随机整数, 0只是用来确定类型\n        'birthday': '@date(\"yyyy-MM-dd\")',  // 日期\n        'city': '@city(true)',   // 中国城市\n        'color': '@color',  // 16进制颜色\n        'isMale|1': true,  // 布尔值\n        'isFat|1-2': true,  // true的概率是1/3\n        'fromObj|2': obj,  // 从obj对象中随机获取2个属性\n        'fromObj2|1-3': obj,  // 从obj对象中随机获取1至3个属性\n        'brother|1': ['jack', 'jim'], // 随机选取 1 个元素\n        'sister|+1': ['jack', 'jim', 'lily'], // array中顺序选取元素作为结果\n        'friends|2': ['jack', 'jim'] // 重复2次属性值生成一个新数组\n    },{\n        'gf': '@cname'\n    }]\n});\n```\n\n可以看到结果:\n\n```js\n{\n    \"user\": [\n        {\n            \"name\": \"董静\",\n            \"id\": 88,\n            \"age\": 25,\n            \"birthday\": \"2015-04-01\",\n            \"city\": \"湖南省 怀化市\",\n            \"color\": \"#c0f279\",\n            \"isMale\": false,\n            \"isFat\": false,\n            \"fromObj\": {\n                \"dd\": \"44\",\n                \"aa\": \"11\"\n            },\n            \"fromObj2\": {\n                \"bb\": \"22\",\n                \"cc\": \"33\"\n            },\n            \"brother\": \"jack\",\n            \"sister\": \"jack\",\n            \"friends\": [\n                \"jack\",\n                \"jim\",\n                \"jack\",\n                \"jim\"\n            ]\n        },\n        {\n            \"gf\": \"田杰\"\n        }\n    ]\n}\n```\n\n响应时也可以是使用`function`, 如:\n\n```js\nMock.mock('http://test.com', 'get', function() {\n    return Mock.mock({\n        \"user|1-3\": [{\n            'name': '@cname',\n            'id': 88\n        }\n      ]\n    });\n});\n```\n\n结果:\n\n```js\n{\n    \"user\": [\n        {\n            \"name\": \"许超\",\n            \"id\": 88\n        }\n    ]\n}\n```\n\n## POST请求\n\n发起post请求:\n\n```js\n$.ajax({\n    url: 'http://test.com',\n    type: 'post',\n    dataType: 'json',\n    data: {\n      account: 888,\n      pwd: 'abc123'\n    }\n}).done(function(data, status, xhr) {\n    console.log(JSON.stringify(data, null, 4));\n});\n```\n\nMock.js响应:\n\n```js\nMock.mock('http://test.com', function(options) {\n    console.log(options);\n    return Mock.mock({\n        \"user|1-3\": [{\n            'name': '@cname',\n            'id|+1': 88\n        }\n      ]\n    });\n});\n```\n\n可以看到结果:\n\n```js\n{url: \"http://test.com\", type: \"POST\", body: \"account=888&pwd=abc123\"}\n\n{\n    \"user\": [\n        {\n            \"name\": \"曾明\",\n            \"id\": 88\n        }\n    ]\n}\n```\n\n## 自定义响应时间\n\n可以自定义设置响应时间, 可以是绝对值, 也可以是区间.\n\n```js\n// 设置4秒后再响应\nMock.setup({ timeout: 4000 });  \n\n// 设置1秒至4秒间响应\nMock.setup({ timeout: '1000-4000' });\n```\n\n## 数据集\n\n`Mock.Random`是一个工具类，用于生成各种格式随机数据. 有两种写法:\n\n第一种:\n\n```js\n// 生成一个email格式的字符串\nconsole.log(Mock.mock('@email'));  // 结果: s.uorjeqdou@crqfpdypt.gw\n```\n\n第二种:\n\n```js\nvar Random = Mock.Random;\nconsole.log(Random.email());  // 结果: r.quyppn@yit.cv\n```\n\n提供的种类有:\n\n|type|Method|\n|-|-|\n|Basic|boolean, natural, integer, float, character, string, range, date, time, datetime, now|\n|Image|image, dataImage|\n|Color|color|\n|Text|paragraph, sentence, word, title, cparagraph, csentence, cword, ctitle|\n|Name|first, last, name, cfirst, clast, cname|\n|Web|url, domain, email, ip, tld|\n|Address|area, region|\n|Helper|capitalize, upper, lower, pick, shuffle|\n|Miscellaneous|guid, id|\n\n如果上面没有你需要的种类, 还可以自定义扩展, 如下:\n\n```js\nRandom.extend({\n    weekday: function(date) {\n        var weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        return this.pick(weekdays);\n    },\n    sex: function(date) {\n        var sexes = ['男', '女', '中性', '未知'];\n        return this.pick(sexes);\n    }\n});\n\nconsole.log(Random.weekday()); // 结果: Saturday\nconsole.log(Mock.mock('@weekday')); // 结果: 112Tuesday\nconsole.log(Random.sex()); // 结果: 男\nconsole.log(Mock.mock('@sex')); // 结果: 未知\n```\n\n## 校验\n\n`Mock.valid(template, data)`: 用来校验真实数据`data`是否与数据模板`template`匹配\n\n```js\nvar tempObj = { \"user|1-3\": [{ 'name': '@cname', 'id|18-28': 88 } ]};\nvar realData = { \"user\": [{ 'name': '张三', 'id': 90 } ]};\nconsole.log(Mock.valid(tempObj, realData));\n```\n\n## JSON Schema\n\n`Mock.toJSONSchema(template)`: 用来把`Mock.js`风格的数据模板`template`转换成`JSON Schema`\n\n```js\nvar tempObj = { \"user|1-3\": [{ 'name': '@cname', 'id|18-28': 88 } ]};\nconsole.log(Mock.toJSONSchema(tempObj));\n```\n\n## 示例代码\n\n```js\nconst data = Mock.mock({\n      \"data|10-20\": [\n        {\n          \"key|10\": '@string', // 随机10位字符串\n          \"id\": /\\s\\S{5,10}/,\n          \"name\": '@name(1,2)', // 随机英文名\n          \"uname\": '@cname()', // 随机中文名\n          \"age|18-50\": 30, // 随机数字\n          \"phone\": /1[3-9]\\d{9}/, // 正则手机号\n          \"email\": '@email', // 随机邮箱\n          \"province\": '@province', // 随机省份\n          \"city\": '@city', // 随机城市\n          \"type|1\": ['线上', '线下', '三方支付'], // 随机选取 1 个元素\n          'price': '@integer(100,2000)', //随机价格\n          \"created_at\": '@datetime', //随机时间\n        }]\n    })\n```\n\n得到的结果\n\n```js\n{\n    \"data\": [\n        {\n            \"age\": 45,\n            \"city\": \"澳门半岛\",\n            \"created_at\": \"1971-03-20 17:38:04\",\n            \"email\": \"d.rqeifdlpx@yvcxt.tz\",\n            \"id\": \"TlNgYW7\",\n            \"key\": \"jKi8&ZSWBEnnNzlMwSyLK$sB8UUp@H*[c2[b!ieZfg#*34LSM[u1z\",\n            \"name\": \"Margaret Helen Robinson\",\n            \"phone\": \"13687356217\",\n            \"price\": 598,\n            \"province\": \"广东省\",\n            \"type\": \"三方支付\",\n            \"uname\": \"龚娟\"\n        },\n        {\n            \"age\": 40,\n            \"city\": \"日喀则地区\",\n            \"created_at\": \"1985-03-26 06:13:03\",\n            \"email\": \"x.kikgtslgk@ynqeirb.fo\",\n            \"id\": \"\\fPv28ds\",\n            \"key\": \"j6kjQ%$Z37F$]$mHU&)M2PJnLtk3YtNkDCM!6ij^lfO3&@FkjpJ7vZ@\",\n            \"name\": \"Lisa Brenda Thompson\",\n            \"phone\": \"19031788181\",\n            \"price\": 1393,\n            \"province\": \"香港特别行政区\",\n            \"type\": \"线下\",\n            \"uname\": \"戴平\"\n        },\n        {\n            \"age\": 40,\n            \"city\": \"三沙市\",\n            \"created_at\": \"2009-05-22 01:51:03\",\n            \"email\": \"c.zvgixnmovq@pdwps.lt\",\n            \"id\": \" kaQd2\",\n            \"key\": \"F)5VNx83YJ26]AygiiLWBHRIk1ANy9%NH$Mq$P8FbhF#x)tJLVH4\",\n            \"name\": \"John Jennifer Johnson\",\n            \"phone\": \"17315544215\",\n            \"price\": 590,\n            \"province\": \"海南省\",\n            \"type\": \"线下\",\n            \"uname\": \"范杰\"\n        },\n        {\n            \"age\": 20,\n            \"city\": \"上海市\",\n            \"created_at\": \"1998-02-15 09:35:36\",\n            \"email\": \"w.igoupuxm@mxnclekk.ci\",\n            \"id\": \"rb065M\",\n            \"key\": \"B^KDv(I3OiPkVV]25YMP&]eL4BE8bFD^Ja6aSJhEbjrjdyzrsI@GFT4\",\n            \"name\": \"Michelle Thomas Davis\",\n            \"phone\": \"15374035812\",\n            \"price\": 1098,\n            \"province\": \"贵州省\",\n            \"type\": \"线上\",\n            \"uname\": \"蔡刚\"\n        },\n        {\n            \"age\": 36,\n            \"city\": \"雅安市\",\n            \"created_at\": \"1972-02-27 20:45:27\",\n            \"email\": \"k.sdyep@kwxwdydy.ni\",\n            \"id\": \"\\tu8Ctp\",\n            \"key\": \"zmKd&W^c0HDwAlvp^GWtQEo@&r4#nAatcM)S(2Y*(\",\n            \"name\": \"Eric Cynthia Moore\",\n            \"phone\": \"15893736095\",\n            \"price\": 1435,\n            \"province\": \"辽宁省\",\n            \"type\": \"线下\",\n            \"uname\": \"锺丽\"\n        },\n        {\n            \"age\": 32,\n            \"city\": \"石嘴山市\",\n            \"created_at\": \"2018-05-27 04:44:36\",\n            \"email\": \"f.tdbp@rkovt.ng\",\n            \"id\": \" KSvKQ\",\n            \"key\": \"B((6cMzcAkVrmrr4^fA0ENos5@VE0gq#lJcZT6EhoZ4Mk2lWvI\",\n            \"name\": \"Joseph Anthony White\",\n            \"phone\": \"13036692471\",\n            \"price\": 878,\n            \"province\": \"江西省\",\n            \"type\": \"三方支付\",\n            \"uname\": \"锺静\"\n        },\n        {\n            \"age\": 50,\n            \"city\": \"石嘴山市\",\n            \"created_at\": \"1978-04-12 13:56:37\",\n            \"email\": \"n.ticof@dosvgos.tg\",\n            \"id\": \"\\tLi7Jql2a\",\n            \"key\": \"3&2t#dvTXD1sExrrXAHf0CSRkj5qn5fi(EOyTA$lK8O!F1gW^@&&xE\",\n            \"name\": \"Betty Angela Hernandez\",\n            \"phone\": \"19265388448\",\n            \"price\": 1995,\n            \"province\": \"黑龙江省\",\n            \"type\": \"三方支付\",\n            \"uname\": \"于磊\"\n        },\n        {\n            \"age\": 27,\n            \"city\": \"北京市\",\n            \"created_at\": \"2001-09-24 16:28:19\",\n            \"email\": \"t.xlqvfk@xthi.li\",\n            \"id\": \" DB77FKVI\",\n            \"key\": \"*(x9D[ugXmw2WCPFqUpbzsNVZzOoY2drdEa@ZdPFSDnLtqV(pxVEk\",\n            \"name\": \"Helen Elizabeth Walker\",\n            \"phone\": \"16227805422\",\n            \"price\": 550,\n            \"province\": \"湖北省\",\n            \"type\": \"线上\",\n            \"uname\": \"于丽\"\n        },\n        {\n            \"age\": 43,\n            \"city\": \"上海市\",\n            \"created_at\": \"1975-06-10 19:44:33\",\n            \"email\": \"e.fxlfi@wmbm.mh\",\n            \"id\": \"fwOxTCW\",\n            \"key\": \"x8^j#!qNzPCY!zz88NNNsWU*NboVlAa$fTWalQim0EmiZxAsAkJTR\",\n            \"name\": \"Laura Mary Thompson\",\n            \"phone\": \"14594487251\",\n            \"price\": 456,\n            \"province\": \"新疆维吾尔自治区\",\n            \"type\": \"三方支付\",\n            \"uname\": \"胡秀英\"\n        },\n        {\n            \"age\": 22,\n            \"city\": \"桃园县\",\n            \"created_at\": \"2006-03-08 07:29:42\",\n            \"email\": \"h.bviyekl@vlrgak.nc\",\n            \"id\": \"tJ4F1tC\",\n            \"key\": \"40NF#V[qfM3#PJN3[PKP7vKY8514Yu[lr5q0pycMpBwg7SQgjO7o\",\n            \"name\": \"Carol Steven Hernandez\",\n            \"phone\": \"15263737372\",\n            \"price\": 1664,\n            \"province\": \"广西壮族自治区\",\n            \"type\": \"线上\",\n            \"uname\": \"郝静\"\n        }\n    ]\n}\n```\n\n## 参考资料\n\n* [mock.js官网](http://mockjs.com/)\n* [mock.js使用](https://segmentfault.com/a/1190000008839142)\n* [正确开启Mockjs的三种姿势：入门参考（一）](https://www.cnblogs.com/soyxiaobi/p/9846057.html)\n* [使用Mock.js模拟数据请求](https://juejin.im/post/6844903571381551111)\n","slug":"使用mock-js模拟数据","published":1,"updated":"2020-12-30T01:08:23.106Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyj000o2an9e1pt4783","content":"<p><img src=\"https://s1.ax1x.com/2020/08/24/dDO8v8.png\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<p><a href=\"http://mockjs.com/\">mock.js</a>是一款前端开发中拦截<code>AJAX</code>请求再生成随机数据响应的工具。可以用来模拟服务器响应。优点是非常简单方便，无侵入性，基本覆盖常用的接口数据类型。</p>\n<p>大概记录下使用过程, 详细使用可以参见Mock文档<a href=\"https://github.com/nuysoft/Mock/wiki\">Mock Wiki</a></p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>使用npm安装: <code>npm install mockjs</code>;<br>或直接<code>&lt;script src=&quot;http://mockjs.com/dist/mock.js&quot;&gt;&lt;/script&gt;;</code></p>\n<blockquote>\n<p>这里安装时注意是<code>mockjs</code>不是<code>mock</code> 不要问我是怎么知道还有<code>mock</code>的</p>\n</blockquote>\n<h2 id=\"数据模板格式\"><a href=\"#数据模板格式\" class=\"headerlink\" title=\"数据模板格式\"></a>数据模板格式</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27;name|rule&#x27;: value</span><br><span class=\"line\"></span><br><span class=\"line\">属性名|生成规则: 属性值</span><br></pre></td></tr></table></figure>\n<h2 id=\"GET请求\"><a href=\"#GET请求\" class=\"headerlink\" title=\"GET请求\"></a>GET请求</h2><p>发起get请求:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    url: <span class=\"string\">&#x27;http://test.com&#x27;</span>,</span><br><span class=\"line\">    type: <span class=\"string\">&#x27;get&#x27;</span>,</span><br><span class=\"line\">    dataType: <span class=\"string\">&#x27;json&#x27;</span></span><br><span class=\"line\">&#125;).done(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, status, xhr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(data, <span class=\"literal\">null</span>, <span class=\"number\">4</span>));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Mock.js响应:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"string\">&#x27;aa&#x27;</span>:<span class=\"string\">&#x27;11&#x27;</span>, <span class=\"string\">&#x27;bb&#x27;</span>:<span class=\"string\">&#x27;22&#x27;</span>, <span class=\"string\">&#x27;cc&#x27;</span>:<span class=\"string\">&#x27;33&#x27;</span>, <span class=\"string\">&#x27;dd&#x27;</span>:<span class=\"string\">&#x27;44&#x27;</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Mock响应模板</span></span><br><span class=\"line\">Mock.mock(<span class=\"string\">&#x27;http://test.com&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;user|1-3&quot;</span>: [&#123;   <span class=\"comment\">// 随机生成1到3个数组元素</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;@cname&#x27;</span>,  <span class=\"comment\">// 中文名称</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">88</span>,    <span class=\"comment\">// 属性值自动加 1，初始值为88</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;age|18-28&#x27;</span>: <span class=\"number\">0</span>,   <span class=\"comment\">// 18至28以内随机整数, 0只是用来确定类型</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;birthday&#x27;</span>: <span class=\"string\">&#x27;@date(&quot;yyyy-MM-dd&quot;)&#x27;</span>,  <span class=\"comment\">// 日期</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;city&#x27;</span>: <span class=\"string\">&#x27;@city(true)&#x27;</span>,   <span class=\"comment\">// 中国城市</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;color&#x27;</span>: <span class=\"string\">&#x27;@color&#x27;</span>,  <span class=\"comment\">// 16进制颜色</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;isMale|1&#x27;</span>: <span class=\"literal\">true</span>,  <span class=\"comment\">// 布尔值</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;isFat|1-2&#x27;</span>: <span class=\"literal\">true</span>,  <span class=\"comment\">// true的概率是1/3</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;fromObj|2&#x27;</span>: obj,  <span class=\"comment\">// 从obj对象中随机获取2个属性</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;fromObj2|1-3&#x27;</span>: obj,  <span class=\"comment\">// 从obj对象中随机获取1至3个属性</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;brother|1&#x27;</span>: [<span class=\"string\">&#x27;jack&#x27;</span>, <span class=\"string\">&#x27;jim&#x27;</span>], <span class=\"comment\">// 随机选取 1 个元素</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;sister|+1&#x27;</span>: [<span class=\"string\">&#x27;jack&#x27;</span>, <span class=\"string\">&#x27;jim&#x27;</span>, <span class=\"string\">&#x27;lily&#x27;</span>], <span class=\"comment\">// array中顺序选取元素作为结果</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;friends|2&#x27;</span>: [<span class=\"string\">&#x27;jack&#x27;</span>, <span class=\"string\">&#x27;jim&#x27;</span>] <span class=\"comment\">// 重复2次属性值生成一个新数组</span></span><br><span class=\"line\">    &#125;,&#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;gf&#x27;</span>: <span class=\"string\">&#x27;@cname&#x27;</span></span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>可以看到结果:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;user&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;董静&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"number\">88</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">25</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;birthday&quot;</span>: <span class=\"string\">&quot;2015-04-01&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;湖南省 怀化市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;color&quot;</span>: <span class=\"string\">&quot;#c0f279&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;isMale&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;isFat&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;fromObj&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;dd&quot;</span>: <span class=\"string\">&quot;44&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;aa&quot;</span>: <span class=\"string\">&quot;11&quot;</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&quot;fromObj2&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;bb&quot;</span>: <span class=\"string\">&quot;22&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;cc&quot;</span>: <span class=\"string\">&quot;33&quot;</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&quot;brother&quot;</span>: <span class=\"string\">&quot;jack&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;sister&quot;</span>: <span class=\"string\">&quot;jack&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;friends&quot;</span>: [</span><br><span class=\"line\">                <span class=\"string\">&quot;jack&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;jim&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;jack&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;jim&quot;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;gf&quot;</span>: <span class=\"string\">&quot;田杰&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>响应时也可以是使用<code>function</code>, 如:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mock.mock(<span class=\"string\">&#x27;http://test.com&#x27;</span>, <span class=\"string\">&#x27;get&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Mock.mock(&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;user|1-3&quot;</span>: [&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;@cname&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;id&#x27;</span>: <span class=\"number\">88</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>结果:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;user&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;许超&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"number\">88</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"POST请求\"><a href=\"#POST请求\" class=\"headerlink\" title=\"POST请求\"></a>POST请求</h2><p>发起post请求:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    url: <span class=\"string\">&#x27;http://test.com&#x27;</span>,</span><br><span class=\"line\">    type: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">    dataType: <span class=\"string\">&#x27;json&#x27;</span>,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      account: <span class=\"number\">888</span>,</span><br><span class=\"line\">      pwd: <span class=\"string\">&#x27;abc123&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;).done(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, status, xhr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(data, <span class=\"literal\">null</span>, <span class=\"number\">4</span>));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Mock.js响应:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mock.mock(<span class=\"string\">&#x27;http://test.com&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(options);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Mock.mock(&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;user|1-3&quot;</span>: [&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;@cname&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">88</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>可以看到结果:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">url</span>: <span class=\"string\">&quot;http://test.com&quot;</span>, <span class=\"attr\">type</span>: <span class=\"string\">&quot;POST&quot;</span>, <span class=\"attr\">body</span>: <span class=\"string\">&quot;account=888&amp;pwd=abc123&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;user&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;曾明&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"number\">88</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"自定义响应时间\"><a href=\"#自定义响应时间\" class=\"headerlink\" title=\"自定义响应时间\"></a>自定义响应时间</h2><p>可以自定义设置响应时间, 可以是绝对值, 也可以是区间.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置4秒后再响应</span></span><br><span class=\"line\">Mock.setup(&#123; <span class=\"attr\">timeout</span>: <span class=\"number\">4000</span> &#125;);  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置1秒至4秒间响应</span></span><br><span class=\"line\">Mock.setup(&#123; <span class=\"attr\">timeout</span>: <span class=\"string\">&#x27;1000-4000&#x27;</span> &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据集\"><a href=\"#数据集\" class=\"headerlink\" title=\"数据集\"></a>数据集</h2><p><code>Mock.Random</code>是一个工具类，用于生成各种格式随机数据. 有两种写法:</p>\n<p>第一种:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 生成一个email格式的字符串</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Mock.mock(<span class=\"string\">&#x27;@email&#x27;</span>));  <span class=\"comment\">// 结果: s.uorjeqdou@crqfpdypt.gw</span></span><br></pre></td></tr></table></figure>\n<p>第二种:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Random = Mock.Random;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Random.email());  <span class=\"comment\">// 结果: r.quyppn@yit.cv</span></span><br></pre></td></tr></table></figure>\n<p>提供的种类有:</p>\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>Method</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Basic</td>\n<td>boolean, natural, integer, float, character, string, range, date, time, datetime, now</td>\n</tr>\n<tr>\n<td>Image</td>\n<td>image, dataImage</td>\n</tr>\n<tr>\n<td>Color</td>\n<td>color</td>\n</tr>\n<tr>\n<td>Text</td>\n<td>paragraph, sentence, word, title, cparagraph, csentence, cword, ctitle</td>\n</tr>\n<tr>\n<td>Name</td>\n<td>first, last, name, cfirst, clast, cname</td>\n</tr>\n<tr>\n<td>Web</td>\n<td>url, domain, email, ip, tld</td>\n</tr>\n<tr>\n<td>Address</td>\n<td>area, region</td>\n</tr>\n<tr>\n<td>Helper</td>\n<td>capitalize, upper, lower, pick, shuffle</td>\n</tr>\n<tr>\n<td>Miscellaneous</td>\n<td>guid, id</td>\n</tr>\n</tbody>\n</table>\n<p>如果上面没有你需要的种类, 还可以自定义扩展, 如下:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Random.extend(&#123;</span><br><span class=\"line\">    weekday: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">date</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> weekdays = [<span class=\"string\">&#x27;Sunday&#x27;</span>, <span class=\"string\">&#x27;Monday&#x27;</span>, <span class=\"string\">&#x27;Tuesday&#x27;</span>, <span class=\"string\">&#x27;Wednesday&#x27;</span>, <span class=\"string\">&#x27;Thursday&#x27;</span>, <span class=\"string\">&#x27;Friday&#x27;</span>, <span class=\"string\">&#x27;Saturday&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.pick(weekdays);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    sex: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">date</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> sexes = [<span class=\"string\">&#x27;男&#x27;</span>, <span class=\"string\">&#x27;女&#x27;</span>, <span class=\"string\">&#x27;中性&#x27;</span>, <span class=\"string\">&#x27;未知&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.pick(sexes);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Random.weekday()); <span class=\"comment\">// 结果: Saturday</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Mock.mock(<span class=\"string\">&#x27;@weekday&#x27;</span>)); <span class=\"comment\">// 结果: 112Tuesday</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Random.sex()); <span class=\"comment\">// 结果: 男</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Mock.mock(<span class=\"string\">&#x27;@sex&#x27;</span>)); <span class=\"comment\">// 结果: 未知</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"校验\"><a href=\"#校验\" class=\"headerlink\" title=\"校验\"></a>校验</h2><p><code>Mock.valid(template, data)</code>: 用来校验真实数据<code>data</code>是否与数据模板<code>template</code>匹配</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> tempObj = &#123; <span class=\"string\">&quot;user|1-3&quot;</span>: [&#123; <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;@cname&#x27;</span>, <span class=\"string\">&#x27;id|18-28&#x27;</span>: <span class=\"number\">88</span> &#125; ]&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> realData = &#123; <span class=\"string\">&quot;user&quot;</span>: [&#123; <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"string\">&#x27;id&#x27;</span>: <span class=\"number\">90</span> &#125; ]&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Mock.valid(tempObj, realData));</span><br></pre></td></tr></table></figure>\n<h2 id=\"JSON-Schema\"><a href=\"#JSON-Schema\" class=\"headerlink\" title=\"JSON Schema\"></a>JSON Schema</h2><p><code>Mock.toJSONSchema(template)</code>: 用来把<code>Mock.js</code>风格的数据模板<code>template</code>转换成<code>JSON Schema</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> tempObj = &#123; <span class=\"string\">&quot;user|1-3&quot;</span>: [&#123; <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;@cname&#x27;</span>, <span class=\"string\">&#x27;id|18-28&#x27;</span>: <span class=\"number\">88</span> &#125; ]&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Mock.toJSONSchema(tempObj));</span><br></pre></td></tr></table></figure>\n<h2 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> data = Mock.mock(&#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;data|10-20&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;key|10&quot;</span>: <span class=\"string\">&#x27;@string&#x27;</span>, <span class=\"comment\">// 随机10位字符串</span></span><br><span class=\"line\">          <span class=\"string\">&quot;id&quot;</span>: <span class=\"regexp\">/\\s\\S&#123;5,10&#125;/</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&#x27;@name(1,2)&#x27;</span>, <span class=\"comment\">// 随机英文名</span></span><br><span class=\"line\">          <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&#x27;@cname()&#x27;</span>, <span class=\"comment\">// 随机中文名</span></span><br><span class=\"line\">          <span class=\"string\">&quot;age|18-50&quot;</span>: <span class=\"number\">30</span>, <span class=\"comment\">// 随机数字</span></span><br><span class=\"line\">          <span class=\"string\">&quot;phone&quot;</span>: <span class=\"regexp\">/1[3-9]\\d&#123;9&#125;/</span>, <span class=\"comment\">// 正则手机号</span></span><br><span class=\"line\">          <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&#x27;@email&#x27;</span>, <span class=\"comment\">// 随机邮箱</span></span><br><span class=\"line\">          <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&#x27;@province&#x27;</span>, <span class=\"comment\">// 随机省份</span></span><br><span class=\"line\">          <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&#x27;@city&#x27;</span>, <span class=\"comment\">// 随机城市</span></span><br><span class=\"line\">          <span class=\"string\">&quot;type|1&quot;</span>: [<span class=\"string\">&#x27;线上&#x27;</span>, <span class=\"string\">&#x27;线下&#x27;</span>, <span class=\"string\">&#x27;三方支付&#x27;</span>], <span class=\"comment\">// 随机选取 1 个元素</span></span><br><span class=\"line\">          <span class=\"string\">&#x27;price&#x27;</span>: <span class=\"string\">&#x27;@integer(100,2000)&#x27;</span>, <span class=\"comment\">//随机价格</span></span><br><span class=\"line\">          <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&#x27;@datetime&#x27;</span>, <span class=\"comment\">//随机时间</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n<p>得到的结果</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;data&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">45</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;澳门半岛&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;1971-03-20 17:38:04&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;d.rqeifdlpx@yvcxt.tz&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;TlNgYW7&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;jKi8&amp;ZSWBEnnNzlMwSyLK$sB8UUp@H*[c2[b!ieZfg#*34LSM[u1z&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Margaret Helen Robinson&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;13687356217&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">598</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;广东省&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;三方支付&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;龚娟&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">40</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;日喀则地区&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;1985-03-26 06:13:03&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;x.kikgtslgk@ynqeirb.fo&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;\\fPv28ds&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;j6kjQ%$Z37F$]$mHU&amp;)M2PJnLtk3YtNkDCM!6ij^lfO3&amp;@FkjpJ7vZ@&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Lisa Brenda Thompson&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;19031788181&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">1393</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;香港特别行政区&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;线下&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;戴平&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">40</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;三沙市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;2009-05-22 01:51:03&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;c.zvgixnmovq@pdwps.lt&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot; kaQd2&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;F)5VNx83YJ26]AygiiLWBHRIk1ANy9%NH$Mq$P8FbhF#x)tJLVH4&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;John Jennifer Johnson&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;17315544215&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">590</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;海南省&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;线下&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;范杰&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">20</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;上海市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;1998-02-15 09:35:36&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;w.igoupuxm@mxnclekk.ci&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;rb065M&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;B^KDv(I3OiPkVV]25YMP&amp;]eL4BE8bFD^Ja6aSJhEbjrjdyzrsI@GFT4&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Michelle Thomas Davis&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;15374035812&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">1098</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;贵州省&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;线上&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;蔡刚&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">36</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;雅安市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;1972-02-27 20:45:27&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;k.sdyep@kwxwdydy.ni&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;\\tu8Ctp&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;zmKd&amp;W^c0HDwAlvp^GWtQEo@&amp;r4#nAatcM)S(2Y*(&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Eric Cynthia Moore&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;15893736095&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">1435</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;辽宁省&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;线下&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;锺丽&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">32</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;石嘴山市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;2018-05-27 04:44:36&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;f.tdbp@rkovt.ng&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot; KSvKQ&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;B((6cMzcAkVrmrr4^fA0ENos5@VE0gq#lJcZT6EhoZ4Mk2lWvI&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Joseph Anthony White&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;13036692471&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">878</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;江西省&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;三方支付&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;锺静&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">50</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;石嘴山市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;1978-04-12 13:56:37&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;n.ticof@dosvgos.tg&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;\\tLi7Jql2a&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;3&amp;2t#dvTXD1sExrrXAHf0CSRkj5qn5fi(EOyTA$lK8O!F1gW^@&amp;&amp;xE&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Betty Angela Hernandez&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;19265388448&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">1995</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;黑龙江省&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;三方支付&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;于磊&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">27</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;北京市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;2001-09-24 16:28:19&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;t.xlqvfk@xthi.li&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot; DB77FKVI&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;*(x9D[ugXmw2WCPFqUpbzsNVZzOoY2drdEa@ZdPFSDnLtqV(pxVEk&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Helen Elizabeth Walker&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;16227805422&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">550</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;湖北省&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;线上&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;于丽&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">43</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;上海市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;1975-06-10 19:44:33&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;e.fxlfi@wmbm.mh&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;fwOxTCW&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;x8^j#!qNzPCY!zz88NNNsWU*NboVlAa$fTWalQim0EmiZxAsAkJTR&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Laura Mary Thompson&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;14594487251&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">456</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;新疆维吾尔自治区&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;三方支付&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;胡秀英&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">22</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;桃园县&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;2006-03-08 07:29:42&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;h.bviyekl@vlrgak.nc&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;tJ4F1tC&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;40NF#V[qfM3#PJN3[PKP7vKY8514Yu[lr5q0pycMpBwg7SQgjO7o&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Carol Steven Hernandez&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;15263737372&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">1664</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;广西壮族自治区&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;线上&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;郝静&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"http://mockjs.com/\">mock.js官网</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000008839142\">mock.js使用</a></li>\n<li><a href=\"https://www.cnblogs.com/soyxiaobi/p/9846057.html\">正确开启Mockjs的三种姿势：入门参考（一）</a></li>\n<li><a href=\"https://juejin.im/post/6844903571381551111\">使用Mock.js模拟数据请求</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/08/24/dDO8v8.png\" alt=\"首屏图\"></p>","more":"<p><a href=\"http://mockjs.com/\">mock.js</a>是一款前端开发中拦截<code>AJAX</code>请求再生成随机数据响应的工具。可以用来模拟服务器响应。优点是非常简单方便，无侵入性，基本覆盖常用的接口数据类型。</p>\n<p>大概记录下使用过程, 详细使用可以参见Mock文档<a href=\"https://github.com/nuysoft/Mock/wiki\">Mock Wiki</a></p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>使用npm安装: <code>npm install mockjs</code>;<br>或直接<code>&lt;script src=&quot;http://mockjs.com/dist/mock.js&quot;&gt;&lt;/script&gt;;</code></p>\n<blockquote>\n<p>这里安装时注意是<code>mockjs</code>不是<code>mock</code> 不要问我是怎么知道还有<code>mock</code>的</p>\n</blockquote>\n<h2 id=\"数据模板格式\"><a href=\"#数据模板格式\" class=\"headerlink\" title=\"数据模板格式\"></a>数据模板格式</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27;name|rule&#x27;: value</span><br><span class=\"line\"></span><br><span class=\"line\">属性名|生成规则: 属性值</span><br></pre></td></tr></table></figure>\n<h2 id=\"GET请求\"><a href=\"#GET请求\" class=\"headerlink\" title=\"GET请求\"></a>GET请求</h2><p>发起get请求:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    url: <span class=\"string\">&#x27;http://test.com&#x27;</span>,</span><br><span class=\"line\">    type: <span class=\"string\">&#x27;get&#x27;</span>,</span><br><span class=\"line\">    dataType: <span class=\"string\">&#x27;json&#x27;</span></span><br><span class=\"line\">&#125;).done(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, status, xhr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(data, <span class=\"literal\">null</span>, <span class=\"number\">4</span>));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Mock.js响应:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"string\">&#x27;aa&#x27;</span>:<span class=\"string\">&#x27;11&#x27;</span>, <span class=\"string\">&#x27;bb&#x27;</span>:<span class=\"string\">&#x27;22&#x27;</span>, <span class=\"string\">&#x27;cc&#x27;</span>:<span class=\"string\">&#x27;33&#x27;</span>, <span class=\"string\">&#x27;dd&#x27;</span>:<span class=\"string\">&#x27;44&#x27;</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Mock响应模板</span></span><br><span class=\"line\">Mock.mock(<span class=\"string\">&#x27;http://test.com&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;user|1-3&quot;</span>: [&#123;   <span class=\"comment\">// 随机生成1到3个数组元素</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;@cname&#x27;</span>,  <span class=\"comment\">// 中文名称</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">88</span>,    <span class=\"comment\">// 属性值自动加 1，初始值为88</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;age|18-28&#x27;</span>: <span class=\"number\">0</span>,   <span class=\"comment\">// 18至28以内随机整数, 0只是用来确定类型</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;birthday&#x27;</span>: <span class=\"string\">&#x27;@date(&quot;yyyy-MM-dd&quot;)&#x27;</span>,  <span class=\"comment\">// 日期</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;city&#x27;</span>: <span class=\"string\">&#x27;@city(true)&#x27;</span>,   <span class=\"comment\">// 中国城市</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;color&#x27;</span>: <span class=\"string\">&#x27;@color&#x27;</span>,  <span class=\"comment\">// 16进制颜色</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;isMale|1&#x27;</span>: <span class=\"literal\">true</span>,  <span class=\"comment\">// 布尔值</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;isFat|1-2&#x27;</span>: <span class=\"literal\">true</span>,  <span class=\"comment\">// true的概率是1/3</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;fromObj|2&#x27;</span>: obj,  <span class=\"comment\">// 从obj对象中随机获取2个属性</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;fromObj2|1-3&#x27;</span>: obj,  <span class=\"comment\">// 从obj对象中随机获取1至3个属性</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;brother|1&#x27;</span>: [<span class=\"string\">&#x27;jack&#x27;</span>, <span class=\"string\">&#x27;jim&#x27;</span>], <span class=\"comment\">// 随机选取 1 个元素</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;sister|+1&#x27;</span>: [<span class=\"string\">&#x27;jack&#x27;</span>, <span class=\"string\">&#x27;jim&#x27;</span>, <span class=\"string\">&#x27;lily&#x27;</span>], <span class=\"comment\">// array中顺序选取元素作为结果</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;friends|2&#x27;</span>: [<span class=\"string\">&#x27;jack&#x27;</span>, <span class=\"string\">&#x27;jim&#x27;</span>] <span class=\"comment\">// 重复2次属性值生成一个新数组</span></span><br><span class=\"line\">    &#125;,&#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;gf&#x27;</span>: <span class=\"string\">&#x27;@cname&#x27;</span></span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>可以看到结果:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;user&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;董静&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"number\">88</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">25</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;birthday&quot;</span>: <span class=\"string\">&quot;2015-04-01&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;湖南省 怀化市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;color&quot;</span>: <span class=\"string\">&quot;#c0f279&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;isMale&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;isFat&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;fromObj&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;dd&quot;</span>: <span class=\"string\">&quot;44&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;aa&quot;</span>: <span class=\"string\">&quot;11&quot;</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&quot;fromObj2&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;bb&quot;</span>: <span class=\"string\">&quot;22&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;cc&quot;</span>: <span class=\"string\">&quot;33&quot;</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&quot;brother&quot;</span>: <span class=\"string\">&quot;jack&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;sister&quot;</span>: <span class=\"string\">&quot;jack&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;friends&quot;</span>: [</span><br><span class=\"line\">                <span class=\"string\">&quot;jack&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;jim&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;jack&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;jim&quot;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;gf&quot;</span>: <span class=\"string\">&quot;田杰&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>响应时也可以是使用<code>function</code>, 如:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mock.mock(<span class=\"string\">&#x27;http://test.com&#x27;</span>, <span class=\"string\">&#x27;get&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Mock.mock(&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;user|1-3&quot;</span>: [&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;@cname&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;id&#x27;</span>: <span class=\"number\">88</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>结果:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;user&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;许超&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"number\">88</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"POST请求\"><a href=\"#POST请求\" class=\"headerlink\" title=\"POST请求\"></a>POST请求</h2><p>发起post请求:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    url: <span class=\"string\">&#x27;http://test.com&#x27;</span>,</span><br><span class=\"line\">    type: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">    dataType: <span class=\"string\">&#x27;json&#x27;</span>,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      account: <span class=\"number\">888</span>,</span><br><span class=\"line\">      pwd: <span class=\"string\">&#x27;abc123&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;).done(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, status, xhr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(data, <span class=\"literal\">null</span>, <span class=\"number\">4</span>));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Mock.js响应:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mock.mock(<span class=\"string\">&#x27;http://test.com&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(options);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Mock.mock(&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;user|1-3&quot;</span>: [&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;@cname&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">88</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>可以看到结果:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">url</span>: <span class=\"string\">&quot;http://test.com&quot;</span>, <span class=\"attr\">type</span>: <span class=\"string\">&quot;POST&quot;</span>, <span class=\"attr\">body</span>: <span class=\"string\">&quot;account=888&amp;pwd=abc123&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;user&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;曾明&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"number\">88</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"自定义响应时间\"><a href=\"#自定义响应时间\" class=\"headerlink\" title=\"自定义响应时间\"></a>自定义响应时间</h2><p>可以自定义设置响应时间, 可以是绝对值, 也可以是区间.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置4秒后再响应</span></span><br><span class=\"line\">Mock.setup(&#123; <span class=\"attr\">timeout</span>: <span class=\"number\">4000</span> &#125;);  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置1秒至4秒间响应</span></span><br><span class=\"line\">Mock.setup(&#123; <span class=\"attr\">timeout</span>: <span class=\"string\">&#x27;1000-4000&#x27;</span> &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据集\"><a href=\"#数据集\" class=\"headerlink\" title=\"数据集\"></a>数据集</h2><p><code>Mock.Random</code>是一个工具类，用于生成各种格式随机数据. 有两种写法:</p>\n<p>第一种:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 生成一个email格式的字符串</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Mock.mock(<span class=\"string\">&#x27;@email&#x27;</span>));  <span class=\"comment\">// 结果: s.uorjeqdou@crqfpdypt.gw</span></span><br></pre></td></tr></table></figure>\n<p>第二种:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Random = Mock.Random;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Random.email());  <span class=\"comment\">// 结果: r.quyppn@yit.cv</span></span><br></pre></td></tr></table></figure>\n<p>提供的种类有:</p>\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>Method</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Basic</td>\n<td>boolean, natural, integer, float, character, string, range, date, time, datetime, now</td>\n</tr>\n<tr>\n<td>Image</td>\n<td>image, dataImage</td>\n</tr>\n<tr>\n<td>Color</td>\n<td>color</td>\n</tr>\n<tr>\n<td>Text</td>\n<td>paragraph, sentence, word, title, cparagraph, csentence, cword, ctitle</td>\n</tr>\n<tr>\n<td>Name</td>\n<td>first, last, name, cfirst, clast, cname</td>\n</tr>\n<tr>\n<td>Web</td>\n<td>url, domain, email, ip, tld</td>\n</tr>\n<tr>\n<td>Address</td>\n<td>area, region</td>\n</tr>\n<tr>\n<td>Helper</td>\n<td>capitalize, upper, lower, pick, shuffle</td>\n</tr>\n<tr>\n<td>Miscellaneous</td>\n<td>guid, id</td>\n</tr>\n</tbody>\n</table>\n<p>如果上面没有你需要的种类, 还可以自定义扩展, 如下:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Random.extend(&#123;</span><br><span class=\"line\">    weekday: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">date</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> weekdays = [<span class=\"string\">&#x27;Sunday&#x27;</span>, <span class=\"string\">&#x27;Monday&#x27;</span>, <span class=\"string\">&#x27;Tuesday&#x27;</span>, <span class=\"string\">&#x27;Wednesday&#x27;</span>, <span class=\"string\">&#x27;Thursday&#x27;</span>, <span class=\"string\">&#x27;Friday&#x27;</span>, <span class=\"string\">&#x27;Saturday&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.pick(weekdays);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    sex: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">date</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> sexes = [<span class=\"string\">&#x27;男&#x27;</span>, <span class=\"string\">&#x27;女&#x27;</span>, <span class=\"string\">&#x27;中性&#x27;</span>, <span class=\"string\">&#x27;未知&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.pick(sexes);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Random.weekday()); <span class=\"comment\">// 结果: Saturday</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Mock.mock(<span class=\"string\">&#x27;@weekday&#x27;</span>)); <span class=\"comment\">// 结果: 112Tuesday</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Random.sex()); <span class=\"comment\">// 结果: 男</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Mock.mock(<span class=\"string\">&#x27;@sex&#x27;</span>)); <span class=\"comment\">// 结果: 未知</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"校验\"><a href=\"#校验\" class=\"headerlink\" title=\"校验\"></a>校验</h2><p><code>Mock.valid(template, data)</code>: 用来校验真实数据<code>data</code>是否与数据模板<code>template</code>匹配</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> tempObj = &#123; <span class=\"string\">&quot;user|1-3&quot;</span>: [&#123; <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;@cname&#x27;</span>, <span class=\"string\">&#x27;id|18-28&#x27;</span>: <span class=\"number\">88</span> &#125; ]&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> realData = &#123; <span class=\"string\">&quot;user&quot;</span>: [&#123; <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"string\">&#x27;id&#x27;</span>: <span class=\"number\">90</span> &#125; ]&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Mock.valid(tempObj, realData));</span><br></pre></td></tr></table></figure>\n<h2 id=\"JSON-Schema\"><a href=\"#JSON-Schema\" class=\"headerlink\" title=\"JSON Schema\"></a>JSON Schema</h2><p><code>Mock.toJSONSchema(template)</code>: 用来把<code>Mock.js</code>风格的数据模板<code>template</code>转换成<code>JSON Schema</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> tempObj = &#123; <span class=\"string\">&quot;user|1-3&quot;</span>: [&#123; <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;@cname&#x27;</span>, <span class=\"string\">&#x27;id|18-28&#x27;</span>: <span class=\"number\">88</span> &#125; ]&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Mock.toJSONSchema(tempObj));</span><br></pre></td></tr></table></figure>\n<h2 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> data = Mock.mock(&#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;data|10-20&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;key|10&quot;</span>: <span class=\"string\">&#x27;@string&#x27;</span>, <span class=\"comment\">// 随机10位字符串</span></span><br><span class=\"line\">          <span class=\"string\">&quot;id&quot;</span>: <span class=\"regexp\">/\\s\\S&#123;5,10&#125;/</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&#x27;@name(1,2)&#x27;</span>, <span class=\"comment\">// 随机英文名</span></span><br><span class=\"line\">          <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&#x27;@cname()&#x27;</span>, <span class=\"comment\">// 随机中文名</span></span><br><span class=\"line\">          <span class=\"string\">&quot;age|18-50&quot;</span>: <span class=\"number\">30</span>, <span class=\"comment\">// 随机数字</span></span><br><span class=\"line\">          <span class=\"string\">&quot;phone&quot;</span>: <span class=\"regexp\">/1[3-9]\\d&#123;9&#125;/</span>, <span class=\"comment\">// 正则手机号</span></span><br><span class=\"line\">          <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&#x27;@email&#x27;</span>, <span class=\"comment\">// 随机邮箱</span></span><br><span class=\"line\">          <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&#x27;@province&#x27;</span>, <span class=\"comment\">// 随机省份</span></span><br><span class=\"line\">          <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&#x27;@city&#x27;</span>, <span class=\"comment\">// 随机城市</span></span><br><span class=\"line\">          <span class=\"string\">&quot;type|1&quot;</span>: [<span class=\"string\">&#x27;线上&#x27;</span>, <span class=\"string\">&#x27;线下&#x27;</span>, <span class=\"string\">&#x27;三方支付&#x27;</span>], <span class=\"comment\">// 随机选取 1 个元素</span></span><br><span class=\"line\">          <span class=\"string\">&#x27;price&#x27;</span>: <span class=\"string\">&#x27;@integer(100,2000)&#x27;</span>, <span class=\"comment\">//随机价格</span></span><br><span class=\"line\">          <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&#x27;@datetime&#x27;</span>, <span class=\"comment\">//随机时间</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n<p>得到的结果</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;data&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">45</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;澳门半岛&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;1971-03-20 17:38:04&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;d.rqeifdlpx@yvcxt.tz&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;TlNgYW7&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;jKi8&amp;ZSWBEnnNzlMwSyLK$sB8UUp@H*[c2[b!ieZfg#*34LSM[u1z&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Margaret Helen Robinson&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;13687356217&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">598</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;广东省&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;三方支付&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;龚娟&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">40</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;日喀则地区&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;1985-03-26 06:13:03&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;x.kikgtslgk@ynqeirb.fo&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;\\fPv28ds&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;j6kjQ%$Z37F$]$mHU&amp;)M2PJnLtk3YtNkDCM!6ij^lfO3&amp;@FkjpJ7vZ@&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Lisa Brenda Thompson&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;19031788181&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">1393</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;香港特别行政区&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;线下&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;戴平&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">40</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;三沙市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;2009-05-22 01:51:03&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;c.zvgixnmovq@pdwps.lt&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot; kaQd2&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;F)5VNx83YJ26]AygiiLWBHRIk1ANy9%NH$Mq$P8FbhF#x)tJLVH4&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;John Jennifer Johnson&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;17315544215&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">590</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;海南省&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;线下&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;范杰&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">20</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;上海市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;1998-02-15 09:35:36&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;w.igoupuxm@mxnclekk.ci&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;rb065M&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;B^KDv(I3OiPkVV]25YMP&amp;]eL4BE8bFD^Ja6aSJhEbjrjdyzrsI@GFT4&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Michelle Thomas Davis&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;15374035812&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">1098</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;贵州省&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;线上&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;蔡刚&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">36</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;雅安市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;1972-02-27 20:45:27&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;k.sdyep@kwxwdydy.ni&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;\\tu8Ctp&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;zmKd&amp;W^c0HDwAlvp^GWtQEo@&amp;r4#nAatcM)S(2Y*(&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Eric Cynthia Moore&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;15893736095&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">1435</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;辽宁省&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;线下&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;锺丽&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">32</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;石嘴山市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;2018-05-27 04:44:36&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;f.tdbp@rkovt.ng&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot; KSvKQ&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;B((6cMzcAkVrmrr4^fA0ENos5@VE0gq#lJcZT6EhoZ4Mk2lWvI&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Joseph Anthony White&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;13036692471&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">878</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;江西省&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;三方支付&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;锺静&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">50</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;石嘴山市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;1978-04-12 13:56:37&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;n.ticof@dosvgos.tg&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;\\tLi7Jql2a&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;3&amp;2t#dvTXD1sExrrXAHf0CSRkj5qn5fi(EOyTA$lK8O!F1gW^@&amp;&amp;xE&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Betty Angela Hernandez&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;19265388448&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">1995</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;黑龙江省&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;三方支付&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;于磊&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">27</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;北京市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;2001-09-24 16:28:19&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;t.xlqvfk@xthi.li&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot; DB77FKVI&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;*(x9D[ugXmw2WCPFqUpbzsNVZzOoY2drdEa@ZdPFSDnLtqV(pxVEk&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Helen Elizabeth Walker&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;16227805422&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">550</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;湖北省&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;线上&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;于丽&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">43</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;上海市&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;1975-06-10 19:44:33&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;e.fxlfi@wmbm.mh&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;fwOxTCW&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;x8^j#!qNzPCY!zz88NNNsWU*NboVlAa$fTWalQim0EmiZxAsAkJTR&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Laura Mary Thompson&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;14594487251&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">456</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;新疆维吾尔自治区&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;三方支付&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;胡秀英&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">22</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;city&quot;</span>: <span class=\"string\">&quot;桃园县&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;created_at&quot;</span>: <span class=\"string\">&quot;2006-03-08 07:29:42&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;h.bviyekl@vlrgak.nc&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;tJ4F1tC&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;40NF#V[qfM3#PJN3[PKP7vKY8514Yu[lr5q0pycMpBwg7SQgjO7o&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Carol Steven Hernandez&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;phone&quot;</span>: <span class=\"string\">&quot;15263737372&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">1664</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;province&quot;</span>: <span class=\"string\">&quot;广西壮族自治区&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;线上&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;uname&quot;</span>: <span class=\"string\">&quot;郝静&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"http://mockjs.com/\">mock.js官网</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000008839142\">mock.js使用</a></li>\n<li><a href=\"https://www.cnblogs.com/soyxiaobi/p/9846057.html\">正确开启Mockjs的三种姿势：入门参考（一）</a></li>\n<li><a href=\"https://juejin.im/post/6844903571381551111\">使用Mock.js模拟数据请求</a></li>\n</ul>"},{"title":"入木-黄永玉版画艺术展","abbrlink":"c48a2c76","date":"2020-09-05T10:39:13.000Z","_content":"\n![首屏图](https://s3.ax1x.com/2021/01/13/stdW7Q.png)\n\n<!-- more -->\n\n> 入木版画系列\n\n![入木](https://s3.ax1x.com/2021/01/13/stwS91.jpg)\n![蔷薇 黄永玉 38×33cm 1990](https://s3.ax1x.com/2021/01/13/stdO74.jpg)\n![古埃及人的歌 24×38.5cm 1961年 黑白木刻](https://s3.ax1x.com/2021/01/13/stdLBF.jpg)\n![敬爱的周总理 32×54cm 1977年 黑白木刻](https://s3.ax1x.com/2021/01/13/stdjAJ.jpg)\n![翠峦的冰道 37.5×28cm 1954年 黑白木刻](https://s3.ax1x.com/2021/01/13/stdvN9.jpg)\n![森林之路 27×40cm 1954年 黑白木刻](https://s3.ax1x.com/2021/01/13/stw9c6.jpg)\n![颐和园 黄永玉 66×80.5cm 1964](https://s3.ax1x.com/2021/01/13/stwFBD.jpg)\n![春潮 黄永玉 40×55cm 1961](https://s3.ax1x.com/2021/01/13/stwp1x.jpg)\n![于翡冷翠 黄永玉 20×29cm 1991](https://s3.ax1x.com/2021/01/13/stwinO.jpg)\n\n> [线上参观地址](http://www.bjaa.com.cn/exhibit.html?hcs=11&clg=163&exhibit=296)\n","source":"_posts/入木-黄永玉版画艺术展.md","raw":"---\ntitle: 入木-黄永玉版画艺术展\nabbrlink: c48a2c76\ndate: 2020-09-05 18:39:13\ntags:\n  - 游记\n  - 北京画院美术馆\n  - 黄永玉版画艺术展\ncategories:\n  - 游记\n---\n\n![首屏图](https://s3.ax1x.com/2021/01/13/stdW7Q.png)\n\n<!-- more -->\n\n> 入木版画系列\n\n![入木](https://s3.ax1x.com/2021/01/13/stwS91.jpg)\n![蔷薇 黄永玉 38×33cm 1990](https://s3.ax1x.com/2021/01/13/stdO74.jpg)\n![古埃及人的歌 24×38.5cm 1961年 黑白木刻](https://s3.ax1x.com/2021/01/13/stdLBF.jpg)\n![敬爱的周总理 32×54cm 1977年 黑白木刻](https://s3.ax1x.com/2021/01/13/stdjAJ.jpg)\n![翠峦的冰道 37.5×28cm 1954年 黑白木刻](https://s3.ax1x.com/2021/01/13/stdvN9.jpg)\n![森林之路 27×40cm 1954年 黑白木刻](https://s3.ax1x.com/2021/01/13/stw9c6.jpg)\n![颐和园 黄永玉 66×80.5cm 1964](https://s3.ax1x.com/2021/01/13/stwFBD.jpg)\n![春潮 黄永玉 40×55cm 1961](https://s3.ax1x.com/2021/01/13/stwp1x.jpg)\n![于翡冷翠 黄永玉 20×29cm 1991](https://s3.ax1x.com/2021/01/13/stwinO.jpg)\n\n> [线上参观地址](http://www.bjaa.com.cn/exhibit.html?hcs=11&clg=163&exhibit=296)\n","slug":"入木-黄永玉版画艺术展","published":1,"updated":"2021-01-30T04:16:46.666Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyk000p2an92pxtafqf","content":"<p><img src=\"https://s3.ax1x.com/2021/01/13/stdW7Q.png\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>入木版画系列</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/stwS91.jpg\" alt=\"入木\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stdO74.jpg\" alt=\"蔷薇 黄永玉 38×33cm 1990\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stdLBF.jpg\" alt=\"古埃及人的歌 24×38.5cm 1961年 黑白木刻\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stdjAJ.jpg\" alt=\"敬爱的周总理 32×54cm 1977年 黑白木刻\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stdvN9.jpg\" alt=\"翠峦的冰道 37.5×28cm 1954年 黑白木刻\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stw9c6.jpg\" alt=\"森林之路 27×40cm 1954年 黑白木刻\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stwFBD.jpg\" alt=\"颐和园 黄永玉 66×80.5cm 1964\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stwp1x.jpg\" alt=\"春潮 黄永玉 40×55cm 1961\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stwinO.jpg\" alt=\"于翡冷翠 黄永玉 20×29cm 1991\"></p>\n<blockquote>\n<p><a href=\"http://www.bjaa.com.cn/exhibit.html?hcs=11&amp;clg=163&amp;exhibit=296\">线上参观地址</a></p>\n</blockquote>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s3.ax1x.com/2021/01/13/stdW7Q.png\" alt=\"首屏图\"></p>","more":"<blockquote>\n<p>入木版画系列</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/stwS91.jpg\" alt=\"入木\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stdO74.jpg\" alt=\"蔷薇 黄永玉 38×33cm 1990\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stdLBF.jpg\" alt=\"古埃及人的歌 24×38.5cm 1961年 黑白木刻\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stdjAJ.jpg\" alt=\"敬爱的周总理 32×54cm 1977年 黑白木刻\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stdvN9.jpg\" alt=\"翠峦的冰道 37.5×28cm 1954年 黑白木刻\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stw9c6.jpg\" alt=\"森林之路 27×40cm 1954年 黑白木刻\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stwFBD.jpg\" alt=\"颐和园 黄永玉 66×80.5cm 1964\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stwp1x.jpg\" alt=\"春潮 黄永玉 40×55cm 1961\"><br><img src=\"https://s3.ax1x.com/2021/01/13/stwinO.jpg\" alt=\"于翡冷翠 黄永玉 20×29cm 1991\"></p>\n<blockquote>\n<p><a href=\"http://www.bjaa.com.cn/exhibit.html?hcs=11&amp;clg=163&amp;exhibit=296\">线上参观地址</a></p>\n</blockquote>"},{"title":"前端微服务","abbrlink":"d0a9039b","date":"2021-01-04T02:28:37.000Z","toc":true,"_content":"\n![首屏图](https://s3.ax1x.com/2021/01/12/sG4uY8.jpg)\n\n<!-- more -->\n\n## 概念\n\n本质上前端微服务就是把一个大型的应用拆分为很多个独立的模块，每一个模块的可以单独的开发、调试并上线。\n\n## 优势\n\n* 每个模块都是一个独立的个体，如果有某个模块出现问题了，不会导致整个应用挂掉。\n* 由于每个模块可以单独上线，因此上线会更快，有利于更新迭代。\n* 由于有了服务注册的功能，因此页面都可以通过配置化的方式来动态加载，对于功能的新增、回滚特别方便。\n* 框架无关(这可能取决于具体实现)，每个模块间可以使用不同的框架(但不推荐这样做)。\n\n## 实现方式\n\n### 服务发现\n\n首先，我们来思考一个问题。如果我们将一个大型应用拆分为多个模块的话，那主程序怎么知道有哪些模块，\n以及各个模块对应的配置信息(js / css 等配置信息)呢。其实，查找配置的模块信息的过程，就叫做服务发现。\n\n> 那么我们怎么实现服务发现呢?\n\n#### 方式一\n\n有一种很简单粗暴的做法，就是我们将这些配置信息直接硬编码在主程序里面。AIOT、AIMS项目使用的是这个方式。\n通过基座stack项目，进行登录鉴权管理，并开放对应权限的路由进行子应用跳转。\n\n> 注：子项目的加载使用的useSpring是用来编写react的动画的\n\n可查看[react-spring的使用](/archives/202101044fbd9ce8/)\n\n项目选型为飞冰团队的[icestark](https://ice.work/docs/icestark/about)，可查看[icestark的使用](/archives/20210105b721b7cb/)\n\n可是这样造成的问题是什么呢？每一次你要新增、修改和删除模块的话，你都需要发布一次主程序。\n\n> 除了写死在主程序中，有没有其他更好的办法呢？\n\n#### 方式二\n\n这个时候比较聪明的同学可能就想到了，那我把配置信息通过接口的方式调用不就行了？我个人比较推荐的也是这种做法。\n因此有时候我们需要根据用户的身份、权限来返回不同的模块配置信息，通过接口的话，我们就可以很方便的做到这一点。我给一个简单的模块配置信息模块：\n\n```json\n[{\n    name: 'home',\n    path: '/home',\n    js: 'https://unpkg.com/react@16/umd/react.development.js',\n    css: 'https://unpkg.com/react@16/umd/react.css'\n}]\n```\n\n复制代码配置信息主要分为四项，path 指的是该模块对应的路由地址，也就是说，当前端匹配到路由为 /home 的时候，就会加载对应的 js 文件和 css 文件，并执行对应的 js 文件，渲染模块内容。\n\n### 动态加载模块\n\n#### new Function\n\n##### 基础知识\n\n##### F实现步骤\n\n#### AMD\n\n##### A实现步骤\n\n#### 路由监听\n\n## 参考资料\n\n* [ucf-web 微前端框架使用手册](https://www.yuque.com/ucf-web/book)\n* [github icestark](https://github.com/ice-lab/icestark)\n* [前端微服务简单实践](https://juejin.cn/post/6844904088757370887)\n* [面向大型工作台的微前端解决方案 icestark](https://zhuanlan.zhihu.com/p/88449415)\n","source":"_posts/前端微服务.md","raw":"---\ntitle: 前端微服务\nabbrlink: d0a9039b\ndate: 2021-01-04 10:28:37\ntags:\n  - 技术积累\n  - 前端\n  - 微服务\ncategories:\n  - 技术积累\n  - 前端\n  - 微服务\ntoc: true\n---\n\n![首屏图](https://s3.ax1x.com/2021/01/12/sG4uY8.jpg)\n\n<!-- more -->\n\n## 概念\n\n本质上前端微服务就是把一个大型的应用拆分为很多个独立的模块，每一个模块的可以单独的开发、调试并上线。\n\n## 优势\n\n* 每个模块都是一个独立的个体，如果有某个模块出现问题了，不会导致整个应用挂掉。\n* 由于每个模块可以单独上线，因此上线会更快，有利于更新迭代。\n* 由于有了服务注册的功能，因此页面都可以通过配置化的方式来动态加载，对于功能的新增、回滚特别方便。\n* 框架无关(这可能取决于具体实现)，每个模块间可以使用不同的框架(但不推荐这样做)。\n\n## 实现方式\n\n### 服务发现\n\n首先，我们来思考一个问题。如果我们将一个大型应用拆分为多个模块的话，那主程序怎么知道有哪些模块，\n以及各个模块对应的配置信息(js / css 等配置信息)呢。其实，查找配置的模块信息的过程，就叫做服务发现。\n\n> 那么我们怎么实现服务发现呢?\n\n#### 方式一\n\n有一种很简单粗暴的做法，就是我们将这些配置信息直接硬编码在主程序里面。AIOT、AIMS项目使用的是这个方式。\n通过基座stack项目，进行登录鉴权管理，并开放对应权限的路由进行子应用跳转。\n\n> 注：子项目的加载使用的useSpring是用来编写react的动画的\n\n可查看[react-spring的使用](/archives/202101044fbd9ce8/)\n\n项目选型为飞冰团队的[icestark](https://ice.work/docs/icestark/about)，可查看[icestark的使用](/archives/20210105b721b7cb/)\n\n可是这样造成的问题是什么呢？每一次你要新增、修改和删除模块的话，你都需要发布一次主程序。\n\n> 除了写死在主程序中，有没有其他更好的办法呢？\n\n#### 方式二\n\n这个时候比较聪明的同学可能就想到了，那我把配置信息通过接口的方式调用不就行了？我个人比较推荐的也是这种做法。\n因此有时候我们需要根据用户的身份、权限来返回不同的模块配置信息，通过接口的话，我们就可以很方便的做到这一点。我给一个简单的模块配置信息模块：\n\n```json\n[{\n    name: 'home',\n    path: '/home',\n    js: 'https://unpkg.com/react@16/umd/react.development.js',\n    css: 'https://unpkg.com/react@16/umd/react.css'\n}]\n```\n\n复制代码配置信息主要分为四项，path 指的是该模块对应的路由地址，也就是说，当前端匹配到路由为 /home 的时候，就会加载对应的 js 文件和 css 文件，并执行对应的 js 文件，渲染模块内容。\n\n### 动态加载模块\n\n#### new Function\n\n##### 基础知识\n\n##### F实现步骤\n\n#### AMD\n\n##### A实现步骤\n\n#### 路由监听\n\n## 参考资料\n\n* [ucf-web 微前端框架使用手册](https://www.yuque.com/ucf-web/book)\n* [github icestark](https://github.com/ice-lab/icestark)\n* [前端微服务简单实践](https://juejin.cn/post/6844904088757370887)\n* [面向大型工作台的微前端解决方案 icestark](https://zhuanlan.zhihu.com/p/88449415)\n","slug":"前端微服务","published":1,"updated":"2021-03-02T13:16:32.313Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjym000q2an97ynx6b8d","content":"<p><img src=\"https://s3.ax1x.com/2021/01/12/sG4uY8.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><p>本质上前端微服务就是把一个大型的应用拆分为很多个独立的模块，每一个模块的可以单独的开发、调试并上线。</p>\n<h2 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h2><ul>\n<li>每个模块都是一个独立的个体，如果有某个模块出现问题了，不会导致整个应用挂掉。</li>\n<li>由于每个模块可以单独上线，因此上线会更快，有利于更新迭代。</li>\n<li>由于有了服务注册的功能，因此页面都可以通过配置化的方式来动态加载，对于功能的新增、回滚特别方便。</li>\n<li>框架无关(这可能取决于具体实现)，每个模块间可以使用不同的框架(但不推荐这样做)。</li>\n</ul>\n<h2 id=\"实现方式\"><a href=\"#实现方式\" class=\"headerlink\" title=\"实现方式\"></a>实现方式</h2><h3 id=\"服务发现\"><a href=\"#服务发现\" class=\"headerlink\" title=\"服务发现\"></a>服务发现</h3><p>首先，我们来思考一个问题。如果我们将一个大型应用拆分为多个模块的话，那主程序怎么知道有哪些模块，<br>以及各个模块对应的配置信息(js / css 等配置信息)呢。其实，查找配置的模块信息的过程，就叫做服务发现。</p>\n<blockquote>\n<p>那么我们怎么实现服务发现呢?</p>\n</blockquote>\n<h4 id=\"方式一\"><a href=\"#方式一\" class=\"headerlink\" title=\"方式一\"></a>方式一</h4><p>有一种很简单粗暴的做法，就是我们将这些配置信息直接硬编码在主程序里面。AIOT、AIMS项目使用的是这个方式。<br>通过基座stack项目，进行登录鉴权管理，并开放对应权限的路由进行子应用跳转。</p>\n<blockquote>\n<p>注：子项目的加载使用的useSpring是用来编写react的动画的</p>\n</blockquote>\n<p>可查看<a href=\"/archives/202101044fbd9ce8/\">react-spring的使用</a></p>\n<p>项目选型为飞冰团队的<a href=\"https://ice.work/docs/icestark/about\">icestark</a>，可查看<a href=\"/archives/20210105b721b7cb/\">icestark的使用</a></p>\n<p>可是这样造成的问题是什么呢？每一次你要新增、修改和删除模块的话，你都需要发布一次主程序。</p>\n<blockquote>\n<p>除了写死在主程序中，有没有其他更好的办法呢？</p>\n</blockquote>\n<h4 id=\"方式二\"><a href=\"#方式二\" class=\"headerlink\" title=\"方式二\"></a>方式二</h4><p>这个时候比较聪明的同学可能就想到了，那我把配置信息通过接口的方式调用不就行了？我个人比较推荐的也是这种做法。<br>因此有时候我们需要根据用户的身份、权限来返回不同的模块配置信息，通过接口的话，我们就可以很方便的做到这一点。我给一个简单的模块配置信息模块：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;</span><br><span class=\"line\">    name: &#x27;home&#x27;,</span><br><span class=\"line\">    path: &#x27;/home&#x27;,</span><br><span class=\"line\">    js: &#x27;https://unpkg.com/react@16/umd/react.development.js&#x27;,</span><br><span class=\"line\">    css: &#x27;https://unpkg.com/react@16/umd/react.css&#x27;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure>\n<p>复制代码配置信息主要分为四项，path 指的是该模块对应的路由地址，也就是说，当前端匹配到路由为 /home 的时候，就会加载对应的 js 文件和 css 文件，并执行对应的 js 文件，渲染模块内容。</p>\n<h3 id=\"动态加载模块\"><a href=\"#动态加载模块\" class=\"headerlink\" title=\"动态加载模块\"></a>动态加载模块</h3><h4 id=\"new-Function\"><a href=\"#new-Function\" class=\"headerlink\" title=\"new Function\"></a>new Function</h4><h5 id=\"基础知识\"><a href=\"#基础知识\" class=\"headerlink\" title=\"基础知识\"></a>基础知识</h5><h5 id=\"F实现步骤\"><a href=\"#F实现步骤\" class=\"headerlink\" title=\"F实现步骤\"></a>F实现步骤</h5><h4 id=\"AMD\"><a href=\"#AMD\" class=\"headerlink\" title=\"AMD\"></a>AMD</h4><h5 id=\"A实现步骤\"><a href=\"#A实现步骤\" class=\"headerlink\" title=\"A实现步骤\"></a>A实现步骤</h5><h4 id=\"路由监听\"><a href=\"#路由监听\" class=\"headerlink\" title=\"路由监听\"></a>路由监听</h4><h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.yuque.com/ucf-web/book\">ucf-web 微前端框架使用手册</a></li>\n<li><a href=\"https://github.com/ice-lab/icestark\">github icestark</a></li>\n<li><a href=\"https://juejin.cn/post/6844904088757370887\">前端微服务简单实践</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/88449415\">面向大型工作台的微前端解决方案 icestark</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s3.ax1x.com/2021/01/12/sG4uY8.jpg\" alt=\"首屏图\"></p>","more":"<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><p>本质上前端微服务就是把一个大型的应用拆分为很多个独立的模块，每一个模块的可以单独的开发、调试并上线。</p>\n<h2 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h2><ul>\n<li>每个模块都是一个独立的个体，如果有某个模块出现问题了，不会导致整个应用挂掉。</li>\n<li>由于每个模块可以单独上线，因此上线会更快，有利于更新迭代。</li>\n<li>由于有了服务注册的功能，因此页面都可以通过配置化的方式来动态加载，对于功能的新增、回滚特别方便。</li>\n<li>框架无关(这可能取决于具体实现)，每个模块间可以使用不同的框架(但不推荐这样做)。</li>\n</ul>\n<h2 id=\"实现方式\"><a href=\"#实现方式\" class=\"headerlink\" title=\"实现方式\"></a>实现方式</h2><h3 id=\"服务发现\"><a href=\"#服务发现\" class=\"headerlink\" title=\"服务发现\"></a>服务发现</h3><p>首先，我们来思考一个问题。如果我们将一个大型应用拆分为多个模块的话，那主程序怎么知道有哪些模块，<br>以及各个模块对应的配置信息(js / css 等配置信息)呢。其实，查找配置的模块信息的过程，就叫做服务发现。</p>\n<blockquote>\n<p>那么我们怎么实现服务发现呢?</p>\n</blockquote>\n<h4 id=\"方式一\"><a href=\"#方式一\" class=\"headerlink\" title=\"方式一\"></a>方式一</h4><p>有一种很简单粗暴的做法，就是我们将这些配置信息直接硬编码在主程序里面。AIOT、AIMS项目使用的是这个方式。<br>通过基座stack项目，进行登录鉴权管理，并开放对应权限的路由进行子应用跳转。</p>\n<blockquote>\n<p>注：子项目的加载使用的useSpring是用来编写react的动画的</p>\n</blockquote>\n<p>可查看<a href=\"/archives/202101044fbd9ce8/\">react-spring的使用</a></p>\n<p>项目选型为飞冰团队的<a href=\"https://ice.work/docs/icestark/about\">icestark</a>，可查看<a href=\"/archives/20210105b721b7cb/\">icestark的使用</a></p>\n<p>可是这样造成的问题是什么呢？每一次你要新增、修改和删除模块的话，你都需要发布一次主程序。</p>\n<blockquote>\n<p>除了写死在主程序中，有没有其他更好的办法呢？</p>\n</blockquote>\n<h4 id=\"方式二\"><a href=\"#方式二\" class=\"headerlink\" title=\"方式二\"></a>方式二</h4><p>这个时候比较聪明的同学可能就想到了，那我把配置信息通过接口的方式调用不就行了？我个人比较推荐的也是这种做法。<br>因此有时候我们需要根据用户的身份、权限来返回不同的模块配置信息，通过接口的话，我们就可以很方便的做到这一点。我给一个简单的模块配置信息模块：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;</span><br><span class=\"line\">    name: &#x27;home&#x27;,</span><br><span class=\"line\">    path: &#x27;/home&#x27;,</span><br><span class=\"line\">    js: &#x27;https://unpkg.com/react@16/umd/react.development.js&#x27;,</span><br><span class=\"line\">    css: &#x27;https://unpkg.com/react@16/umd/react.css&#x27;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure>\n<p>复制代码配置信息主要分为四项，path 指的是该模块对应的路由地址，也就是说，当前端匹配到路由为 /home 的时候，就会加载对应的 js 文件和 css 文件，并执行对应的 js 文件，渲染模块内容。</p>\n<h3 id=\"动态加载模块\"><a href=\"#动态加载模块\" class=\"headerlink\" title=\"动态加载模块\"></a>动态加载模块</h3><h4 id=\"new-Function\"><a href=\"#new-Function\" class=\"headerlink\" title=\"new Function\"></a>new Function</h4><h5 id=\"基础知识\"><a href=\"#基础知识\" class=\"headerlink\" title=\"基础知识\"></a>基础知识</h5><h5 id=\"F实现步骤\"><a href=\"#F实现步骤\" class=\"headerlink\" title=\"F实现步骤\"></a>F实现步骤</h5><h4 id=\"AMD\"><a href=\"#AMD\" class=\"headerlink\" title=\"AMD\"></a>AMD</h4><h5 id=\"A实现步骤\"><a href=\"#A实现步骤\" class=\"headerlink\" title=\"A实现步骤\"></a>A实现步骤</h5><h4 id=\"路由监听\"><a href=\"#路由监听\" class=\"headerlink\" title=\"路由监听\"></a>路由监听</h4><h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.yuque.com/ucf-web/book\">ucf-web 微前端框架使用手册</a></li>\n<li><a href=\"https://github.com/ice-lab/icestark\">github icestark</a></li>\n<li><a href=\"https://juejin.cn/post/6844904088757370887\">前端微服务简单实践</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/88449415\">面向大型工作台的微前端解决方案 icestark</a></li>\n</ul>"},{"title":"前端知识积累","abbrlink":"70ca98d5","date":"2021-02-15T06:59:30.000Z","toc":true,"_content":"\n![首屏图](https://s3.ax1x.com/2021/02/22/y7Le4x.jpg)\n\n<!-- more -->\n\n## web前端面试题\n\n### HTML5\n\n### CSS3\n\n### JS\n\n#### 原型链和继承\n\n![原型链](https://s3.ax1x.com/2021/03/06/6nomVK.png)\n\n##### 原型链\n\njs对象独有的__proto__属性，当访问一个对象的属性时，如果该对象内不存在这个属性，会去它的__proto__属性所指向的那个对象（父对象）里找，直到null\n\n##### proto\n\n对象都有私有属性__proto__（），从对象指向实例原型\n\n##### prototype\n\n函数独有的属性，从一个函数指向一个对象，包含所有实例可共享的属性和方法，任何函数创建时，会默认创建该函数的prototype对象\n\n##### constructor\n\n实例的构造函数（constructor）属性，指向实例\n\n##### 总结\n\n所有函数和对象最终都是由Function构造函数得来，所以constructor属性的终点就是Function这个函数。\n\n1. prototype指向的原型对象又有一个属性constructor，这个属性也是一个指针，指回原构造函数，即这个方法。\n2. __proto__和constructor属性是对象所独有的，prototype属性是函数所独有的。\n3. JS中函数也是一种对象，所以函数也拥有__proto__和constructor属性\n4. 为什么有prototype，如果没有，每次新建对象都会继承构造函数的所有属性，方法，浪费性能，用了prototype后，属性每个对象的值相同性不高，写在构造函数里，而方法通常是通用的，使用prototype可以让每个对象共享同一个方法，而不用每次都copy一个，而且能实时更新\n5. [JavaScript原型链和继承](https://www.cnblogs.com/tylerdonet/p/9595436.html)\n6. [为什么使用prototype](https://segmentfault.com/a/1190000000653327)\n\n#### 浅拷贝和深拷贝\n\n* 基本数据类型：名字和值都存在栈中\n* 引用数据类型：名字在栈中，值在堆中，栈内存会提供一个引用地址，指向堆内存中的值\n* 浅拷贝：\n  * for只遍历第一层\n  * assign\n  * `=`直接赋值\n* 深拷贝：\n  * 递归遍历所有层级\n  * 利用JSON对象【JSON.stringfy() JSON.parse()】\n  * 通过jQuery的extend方法实现深拷贝\n  * lodash函数库实现深拷贝\n  * 用slice实现对数组的深拷贝,slice() 方法可从已有的数组中返回选定的元素。\n  * 使用扩展运算符实现深拷贝\n  * 如对象的value是基本类型，可以用Object.assign来实现深拷贝，但是要把它赋值给一个空对象assign第一层是深拷贝，第二层以后是浅拷贝\n  * Reflect法\n  * 用concat实现对数组的深拷贝\n  * 直接使用var newObj = Object.create(oldObj)，可以达到深拷贝的效果。\n  * 手动实现深拷贝\n\n```js\n// JSON对象进行深拷贝\nfunction deepClone2(obj) {\n  var _obj = JSON.stringify(obj),\n    objClone = JSON.parse(_obj);\n  return objClone;\n} // 无法实现对对象中 方法 的深拷贝，会显示为undefined\n\n// jQuery的extend方法进行深拷贝\nvar array = [1,2,3,4];\nvar newArray = $.extend(true,[],array); // true为深拷贝，false为浅拷贝\n\n// lodash方法进行深拷贝\nlet result = _.cloneDeep(test)\n```\n\n#### js中的堆和栈\n\n* 栈（stack）：简单地数据段，存放在栈中，有固定大小的内存（自动分配），自动释放\n  * 基本数据类型：number，string，boolean，undefined，null\n  * 栈存储了什么：变量名，基本数据类型值，地址\n  * 全局作用域，私有作用域，都属是栈内存，理论上，存储的越少，运行速度越快\n  * 先进后出\n  * 栈内存回收：作用域销毁（立即销毁，不销毁，不立即销毁）\n    * 全局作用域销毁：一般情况不销毁，页面关闭，整个作用域销毁\n    * 私有作用域销毁 ：\n      * 不销毁\n      * 销毁\n      * 不立即销毁\n* 堆（heap）：动态分配内存，大小不定也不会自动释放\n  * 引用类型：栈中存放地址，指向堆中的对象，当我们要获取（函数，数组，对象等）的时候，先从栈中获取地址，然后从堆中获取数据\n  * 先进先出\n  * 堆存储了什么：引用数据类型的值\n  * 内存回收：GC垃圾回收机制\n    * chrome：标记法，每隔一段时间对所有的空间地址检测，如果没有被占用，立即回收\n    * ie和火狐：计数法，空间地址被占用一次+1，空闲一次空间地址-1，如果为0 被回收\n\n[10分钟了解JS堆、栈以及事件循环的概念](https://juejin.cn/post/6844903618999500808)\n\n#### 闭包\n\n* 闭包函数：声明在一个函数中的函数，叫做闭包函数。\n* 闭包：内部函数总是可以访问其所在的外部函数中声明的参数和变量，即使在其外部函数被返回（寿命终结）了之后。\n* 参数和变量不会被垃圾回收机制回收\n\n```js\nfunction a() {\n    var name = 'Shier'\n    return function(){\n        return name\n    }\n}\nvar b = a()\nconsole.log(b())\n// 通过返回函数中返回的内部变量，使函数外部能够使用和访问函数内部变量\n```\n\n#### setTimeout\n\n#### 事件委托\n\n#### this指向，call/apply/bind，回调函数\n\n#### 数组的常用操作\n\n#### set和weakset，map和weakmap\n\n#### let和const\n\n#### 解构赋值\n\n#### typeof原理\n\n#### 0.1+0.2 === 0.3吗，为什么\n\n#### 前端安全 xss 和 csrf\n\n#### 说明BFC及其使用\n\n#### js基本数据类型\n\n#### 循环\n\n#### Js数组都有哪些方法及其作用、用法、返回值？详细说了一下splice()\n\n#### Js数组去重\n\n#### 说明冒泡排序、插入排序实现的思想、步骤、每趟的结果等\n\n#### 什么是二分查找\n\n#### HTTP协议相关\n\n##### 请求头\n\n##### 响应头\n\n##### 状态码（5大类）\n\n##### 报文格式\n\n##### 一次http完整的过程\n\n##### 详细说一下Accept - Encoding的作用，和性能有关系？\n\n##### http有哪些请求方式？\n\n##### Get和post的区别？\n\n#### Ajax相关\n\n##### 如何实现\n\n##### 用jQuery实现一个ajax\n\n##### 有没有看过jQuery内部是如何实现的？\n\n##### 说说链式调用\n\n#### Application相关\n\n##### 什么是Cookie和Session？\n\n##### Cookie和Session他们的区别？\n\n##### Js实现cookie和session两者有联系吗？\n\n##### localStorage、sessionStorage、cookie是什么？\n\n#### 垂直居中布局 4中\n\n#### 浮动引起的问题，如何清除浮动【4种\n\n#### postion和z-index的关系？\n\n#### DOM操作：获取、增、删、查、改等操作\n\n#### JS交换两个节点如何实现？\n\n#### tcp三次握手四次挥手\n\n#### ES6有哪些新特性\n\n* let，const\n* 箭头函数\n* 解构赋值\n* set、weakSet、map、weakMap\n* proxy\n* generator\n* reflect\n* async、await\n* class\n* promise\n\n#### 如何设置一个元素不可见 4中\n\n#### 什么是跨域问题，有哪些跨域方式\n\n#### JS 异步解决方案的发展历程以及优缺点\n\n#### 行内元素和块元素区别，image 标签属于哪种\n\n#### eval\n\n#### Object.assign()\n\n#### reduce 求和\n\n#### 普通函数和构造函数\n\n### http\n\n### ES6\n\n### Vue\n\n### React\n\n### 打包优化\n\n### 其他\n\n## 参考资料\n\n* [2021前端必问面试题及答案](https://blog.csdn.net/weixin_42003850/article/details/108651427)\n* [2021前端面试经常被问到的题(附答案)](https://blog.csdn.net/xieanna123/article/details/105545758)\n","source":"_posts/前端知识积累.md","raw":"---\ntitle: 前端知识积累\nabbrlink: 70ca98d5\ndate: 2021-02-15 14:59:30\ntags:\n  - 技术积累\n  - 前端\n  - 面试题\ncategories:\n  - 技术积累\n  - 前端\n  - 面试题\ntoc: true\n---\n\n![首屏图](https://s3.ax1x.com/2021/02/22/y7Le4x.jpg)\n\n<!-- more -->\n\n## web前端面试题\n\n### HTML5\n\n### CSS3\n\n### JS\n\n#### 原型链和继承\n\n![原型链](https://s3.ax1x.com/2021/03/06/6nomVK.png)\n\n##### 原型链\n\njs对象独有的__proto__属性，当访问一个对象的属性时，如果该对象内不存在这个属性，会去它的__proto__属性所指向的那个对象（父对象）里找，直到null\n\n##### proto\n\n对象都有私有属性__proto__（），从对象指向实例原型\n\n##### prototype\n\n函数独有的属性，从一个函数指向一个对象，包含所有实例可共享的属性和方法，任何函数创建时，会默认创建该函数的prototype对象\n\n##### constructor\n\n实例的构造函数（constructor）属性，指向实例\n\n##### 总结\n\n所有函数和对象最终都是由Function构造函数得来，所以constructor属性的终点就是Function这个函数。\n\n1. prototype指向的原型对象又有一个属性constructor，这个属性也是一个指针，指回原构造函数，即这个方法。\n2. __proto__和constructor属性是对象所独有的，prototype属性是函数所独有的。\n3. JS中函数也是一种对象，所以函数也拥有__proto__和constructor属性\n4. 为什么有prototype，如果没有，每次新建对象都会继承构造函数的所有属性，方法，浪费性能，用了prototype后，属性每个对象的值相同性不高，写在构造函数里，而方法通常是通用的，使用prototype可以让每个对象共享同一个方法，而不用每次都copy一个，而且能实时更新\n5. [JavaScript原型链和继承](https://www.cnblogs.com/tylerdonet/p/9595436.html)\n6. [为什么使用prototype](https://segmentfault.com/a/1190000000653327)\n\n#### 浅拷贝和深拷贝\n\n* 基本数据类型：名字和值都存在栈中\n* 引用数据类型：名字在栈中，值在堆中，栈内存会提供一个引用地址，指向堆内存中的值\n* 浅拷贝：\n  * for只遍历第一层\n  * assign\n  * `=`直接赋值\n* 深拷贝：\n  * 递归遍历所有层级\n  * 利用JSON对象【JSON.stringfy() JSON.parse()】\n  * 通过jQuery的extend方法实现深拷贝\n  * lodash函数库实现深拷贝\n  * 用slice实现对数组的深拷贝,slice() 方法可从已有的数组中返回选定的元素。\n  * 使用扩展运算符实现深拷贝\n  * 如对象的value是基本类型，可以用Object.assign来实现深拷贝，但是要把它赋值给一个空对象assign第一层是深拷贝，第二层以后是浅拷贝\n  * Reflect法\n  * 用concat实现对数组的深拷贝\n  * 直接使用var newObj = Object.create(oldObj)，可以达到深拷贝的效果。\n  * 手动实现深拷贝\n\n```js\n// JSON对象进行深拷贝\nfunction deepClone2(obj) {\n  var _obj = JSON.stringify(obj),\n    objClone = JSON.parse(_obj);\n  return objClone;\n} // 无法实现对对象中 方法 的深拷贝，会显示为undefined\n\n// jQuery的extend方法进行深拷贝\nvar array = [1,2,3,4];\nvar newArray = $.extend(true,[],array); // true为深拷贝，false为浅拷贝\n\n// lodash方法进行深拷贝\nlet result = _.cloneDeep(test)\n```\n\n#### js中的堆和栈\n\n* 栈（stack）：简单地数据段，存放在栈中，有固定大小的内存（自动分配），自动释放\n  * 基本数据类型：number，string，boolean，undefined，null\n  * 栈存储了什么：变量名，基本数据类型值，地址\n  * 全局作用域，私有作用域，都属是栈内存，理论上，存储的越少，运行速度越快\n  * 先进后出\n  * 栈内存回收：作用域销毁（立即销毁，不销毁，不立即销毁）\n    * 全局作用域销毁：一般情况不销毁，页面关闭，整个作用域销毁\n    * 私有作用域销毁 ：\n      * 不销毁\n      * 销毁\n      * 不立即销毁\n* 堆（heap）：动态分配内存，大小不定也不会自动释放\n  * 引用类型：栈中存放地址，指向堆中的对象，当我们要获取（函数，数组，对象等）的时候，先从栈中获取地址，然后从堆中获取数据\n  * 先进先出\n  * 堆存储了什么：引用数据类型的值\n  * 内存回收：GC垃圾回收机制\n    * chrome：标记法，每隔一段时间对所有的空间地址检测，如果没有被占用，立即回收\n    * ie和火狐：计数法，空间地址被占用一次+1，空闲一次空间地址-1，如果为0 被回收\n\n[10分钟了解JS堆、栈以及事件循环的概念](https://juejin.cn/post/6844903618999500808)\n\n#### 闭包\n\n* 闭包函数：声明在一个函数中的函数，叫做闭包函数。\n* 闭包：内部函数总是可以访问其所在的外部函数中声明的参数和变量，即使在其外部函数被返回（寿命终结）了之后。\n* 参数和变量不会被垃圾回收机制回收\n\n```js\nfunction a() {\n    var name = 'Shier'\n    return function(){\n        return name\n    }\n}\nvar b = a()\nconsole.log(b())\n// 通过返回函数中返回的内部变量，使函数外部能够使用和访问函数内部变量\n```\n\n#### setTimeout\n\n#### 事件委托\n\n#### this指向，call/apply/bind，回调函数\n\n#### 数组的常用操作\n\n#### set和weakset，map和weakmap\n\n#### let和const\n\n#### 解构赋值\n\n#### typeof原理\n\n#### 0.1+0.2 === 0.3吗，为什么\n\n#### 前端安全 xss 和 csrf\n\n#### 说明BFC及其使用\n\n#### js基本数据类型\n\n#### 循环\n\n#### Js数组都有哪些方法及其作用、用法、返回值？详细说了一下splice()\n\n#### Js数组去重\n\n#### 说明冒泡排序、插入排序实现的思想、步骤、每趟的结果等\n\n#### 什么是二分查找\n\n#### HTTP协议相关\n\n##### 请求头\n\n##### 响应头\n\n##### 状态码（5大类）\n\n##### 报文格式\n\n##### 一次http完整的过程\n\n##### 详细说一下Accept - Encoding的作用，和性能有关系？\n\n##### http有哪些请求方式？\n\n##### Get和post的区别？\n\n#### Ajax相关\n\n##### 如何实现\n\n##### 用jQuery实现一个ajax\n\n##### 有没有看过jQuery内部是如何实现的？\n\n##### 说说链式调用\n\n#### Application相关\n\n##### 什么是Cookie和Session？\n\n##### Cookie和Session他们的区别？\n\n##### Js实现cookie和session两者有联系吗？\n\n##### localStorage、sessionStorage、cookie是什么？\n\n#### 垂直居中布局 4中\n\n#### 浮动引起的问题，如何清除浮动【4种\n\n#### postion和z-index的关系？\n\n#### DOM操作：获取、增、删、查、改等操作\n\n#### JS交换两个节点如何实现？\n\n#### tcp三次握手四次挥手\n\n#### ES6有哪些新特性\n\n* let，const\n* 箭头函数\n* 解构赋值\n* set、weakSet、map、weakMap\n* proxy\n* generator\n* reflect\n* async、await\n* class\n* promise\n\n#### 如何设置一个元素不可见 4中\n\n#### 什么是跨域问题，有哪些跨域方式\n\n#### JS 异步解决方案的发展历程以及优缺点\n\n#### 行内元素和块元素区别，image 标签属于哪种\n\n#### eval\n\n#### Object.assign()\n\n#### reduce 求和\n\n#### 普通函数和构造函数\n\n### http\n\n### ES6\n\n### Vue\n\n### React\n\n### 打包优化\n\n### 其他\n\n## 参考资料\n\n* [2021前端必问面试题及答案](https://blog.csdn.net/weixin_42003850/article/details/108651427)\n* [2021前端面试经常被问到的题(附答案)](https://blog.csdn.net/xieanna123/article/details/105545758)\n","slug":"前端知识积累","published":1,"updated":"2021-03-06T08:39:25.849Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyn000r2an9gifj2swz","content":"<p><img src=\"https://s3.ax1x.com/2021/02/22/y7Le4x.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<h2 id=\"web前端面试题\"><a href=\"#web前端面试题\" class=\"headerlink\" title=\"web前端面试题\"></a>web前端面试题</h2><h3 id=\"HTML5\"><a href=\"#HTML5\" class=\"headerlink\" title=\"HTML5\"></a>HTML5</h3><h3 id=\"CSS3\"><a href=\"#CSS3\" class=\"headerlink\" title=\"CSS3\"></a>CSS3</h3><h3 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h3><h4 id=\"原型链和继承\"><a href=\"#原型链和继承\" class=\"headerlink\" title=\"原型链和继承\"></a>原型链和继承</h4><p><img src=\"https://s3.ax1x.com/2021/03/06/6nomVK.png\" alt=\"原型链\"></p>\n<h5 id=\"原型链\"><a href=\"#原型链\" class=\"headerlink\" title=\"原型链\"></a>原型链</h5><p>js对象独有的<strong>proto</strong>属性，当访问一个对象的属性时，如果该对象内不存在这个属性，会去它的<strong>proto</strong>属性所指向的那个对象（父对象）里找，直到null</p>\n<h5 id=\"proto\"><a href=\"#proto\" class=\"headerlink\" title=\"proto\"></a>proto</h5><p>对象都有私有属性<strong>proto</strong>（），从对象指向实例原型</p>\n<h5 id=\"prototype\"><a href=\"#prototype\" class=\"headerlink\" title=\"prototype\"></a>prototype</h5><p>函数独有的属性，从一个函数指向一个对象，包含所有实例可共享的属性和方法，任何函数创建时，会默认创建该函数的prototype对象</p>\n<h5 id=\"constructor-NaN\"><a href=\"#constructor-NaN\" class=\"headerlink\" title=\"constructor\"></a>constructor</h5><p>实例的构造函数（constructor）属性，指向实例</p>\n<h5 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h5><p>所有函数和对象最终都是由Function构造函数得来，所以constructor属性的终点就是Function这个函数。</p>\n<ol>\n<li>prototype指向的原型对象又有一个属性constructor，这个属性也是一个指针，指回原构造函数，即这个方法。</li>\n<li><strong>proto</strong>和constructor属性是对象所独有的，prototype属性是函数所独有的。</li>\n<li>JS中函数也是一种对象，所以函数也拥有<strong>proto</strong>和constructor属性</li>\n<li>为什么有prototype，如果没有，每次新建对象都会继承构造函数的所有属性，方法，浪费性能，用了prototype后，属性每个对象的值相同性不高，写在构造函数里，而方法通常是通用的，使用prototype可以让每个对象共享同一个方法，而不用每次都copy一个，而且能实时更新</li>\n<li><a href=\"https://www.cnblogs.com/tylerdonet/p/9595436.html\">JavaScript原型链和继承</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000000653327\">为什么使用prototype</a></li>\n</ol>\n<h4 id=\"浅拷贝和深拷贝\"><a href=\"#浅拷贝和深拷贝\" class=\"headerlink\" title=\"浅拷贝和深拷贝\"></a>浅拷贝和深拷贝</h4><ul>\n<li>基本数据类型：名字和值都存在栈中</li>\n<li>引用数据类型：名字在栈中，值在堆中，栈内存会提供一个引用地址，指向堆内存中的值</li>\n<li>浅拷贝：<ul>\n<li>for只遍历第一层</li>\n<li>assign</li>\n<li><code>=</code>直接赋值</li>\n</ul>\n</li>\n<li>深拷贝：<ul>\n<li>递归遍历所有层级</li>\n<li>利用JSON对象【JSON.stringfy() JSON.parse()】</li>\n<li>通过jQuery的extend方法实现深拷贝</li>\n<li>lodash函数库实现深拷贝</li>\n<li>用slice实现对数组的深拷贝,slice() 方法可从已有的数组中返回选定的元素。</li>\n<li>使用扩展运算符实现深拷贝</li>\n<li>如对象的value是基本类型，可以用Object.assign来实现深拷贝，但是要把它赋值给一个空对象assign第一层是深拷贝，第二层以后是浅拷贝</li>\n<li>Reflect法</li>\n<li>用concat实现对数组的深拷贝</li>\n<li>直接使用var newObj = Object.create(oldObj)，可以达到深拷贝的效果。</li>\n<li>手动实现深拷贝</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// JSON对象进行深拷贝</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deepClone2</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> _obj = <span class=\"built_in\">JSON</span>.stringify(obj),</span><br><span class=\"line\">    objClone = <span class=\"built_in\">JSON</span>.parse(_obj);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> objClone;</span><br><span class=\"line\">&#125; <span class=\"comment\">// 无法实现对对象中 方法 的深拷贝，会显示为undefined</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// jQuery的extend方法进行深拷贝</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> array = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> newArray = $.extend(<span class=\"literal\">true</span>,[],array); <span class=\"comment\">// true为深拷贝，false为浅拷贝</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// lodash方法进行深拷贝</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = _.cloneDeep(test)</span><br></pre></td></tr></table></figure>\n<h4 id=\"js中的堆和栈\"><a href=\"#js中的堆和栈\" class=\"headerlink\" title=\"js中的堆和栈\"></a>js中的堆和栈</h4><ul>\n<li>栈（stack）：简单地数据段，存放在栈中，有固定大小的内存（自动分配），自动释放<ul>\n<li>基本数据类型：number，string，boolean，undefined，null</li>\n<li>栈存储了什么：变量名，基本数据类型值，地址</li>\n<li>全局作用域，私有作用域，都属是栈内存，理论上，存储的越少，运行速度越快</li>\n<li>先进后出</li>\n<li>栈内存回收：作用域销毁（立即销毁，不销毁，不立即销毁）<ul>\n<li>全局作用域销毁：一般情况不销毁，页面关闭，整个作用域销毁</li>\n<li>私有作用域销毁 ：<ul>\n<li>不销毁</li>\n<li>销毁</li>\n<li>不立即销毁</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>堆（heap）：动态分配内存，大小不定也不会自动释放<ul>\n<li>引用类型：栈中存放地址，指向堆中的对象，当我们要获取（函数，数组，对象等）的时候，先从栈中获取地址，然后从堆中获取数据</li>\n<li>先进先出</li>\n<li>堆存储了什么：引用数据类型的值</li>\n<li>内存回收：GC垃圾回收机制<ul>\n<li>chrome：标记法，每隔一段时间对所有的空间地址检测，如果没有被占用，立即回收</li>\n<li>ie和火狐：计数法，空间地址被占用一次+1，空闲一次空间地址-1，如果为0 被回收</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://juejin.cn/post/6844903618999500808\">10分钟了解JS堆、栈以及事件循环的概念</a></p>\n<h4 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h4><ul>\n<li>闭包函数：声明在一个函数中的函数，叫做闭包函数。</li>\n<li>闭包：内部函数总是可以访问其所在的外部函数中声明的参数和变量，即使在其外部函数被返回（寿命终结）了之后。</li>\n<li>参数和变量不会被垃圾回收机制回收</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;Shier&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b())</span><br><span class=\"line\"><span class=\"comment\">// 通过返回函数中返回的内部变量，使函数外部能够使用和访问函数内部变量</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"setTimeout\"><a href=\"#setTimeout\" class=\"headerlink\" title=\"setTimeout\"></a>setTimeout</h4><h4 id=\"事件委托\"><a href=\"#事件委托\" class=\"headerlink\" title=\"事件委托\"></a>事件委托</h4><h4 id=\"this指向，call-apply-bind，回调函数\"><a href=\"#this指向，call-apply-bind，回调函数\" class=\"headerlink\" title=\"this指向，call/apply/bind，回调函数\"></a>this指向，call/apply/bind，回调函数</h4><h4 id=\"数组的常用操作\"><a href=\"#数组的常用操作\" class=\"headerlink\" title=\"数组的常用操作\"></a>数组的常用操作</h4><h4 id=\"set和weakset，map和weakmap\"><a href=\"#set和weakset，map和weakmap\" class=\"headerlink\" title=\"set和weakset，map和weakmap\"></a>set和weakset，map和weakmap</h4><h4 id=\"let和const\"><a href=\"#let和const\" class=\"headerlink\" title=\"let和const\"></a>let和const</h4><h4 id=\"解构赋值\"><a href=\"#解构赋值\" class=\"headerlink\" title=\"解构赋值\"></a>解构赋值</h4><h4 id=\"typeof原理\"><a href=\"#typeof原理\" class=\"headerlink\" title=\"typeof原理\"></a>typeof原理</h4><h4 id=\"0-1-0-2-0-3吗，为什么\"><a href=\"#0-1-0-2-0-3吗，为什么\" class=\"headerlink\" title=\"0.1+0.2 === 0.3吗，为什么\"></a>0.1+0.2 === 0.3吗，为什么</h4><h4 id=\"前端安全-xss-和-csrf\"><a href=\"#前端安全-xss-和-csrf\" class=\"headerlink\" title=\"前端安全 xss 和 csrf\"></a>前端安全 xss 和 csrf</h4><h4 id=\"说明BFC及其使用\"><a href=\"#说明BFC及其使用\" class=\"headerlink\" title=\"说明BFC及其使用\"></a>说明BFC及其使用</h4><h4 id=\"js基本数据类型\"><a href=\"#js基本数据类型\" class=\"headerlink\" title=\"js基本数据类型\"></a>js基本数据类型</h4><h4 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h4><h4 id=\"Js数组都有哪些方法及其作用、用法、返回值？详细说了一下splice\"><a href=\"#Js数组都有哪些方法及其作用、用法、返回值？详细说了一下splice\" class=\"headerlink\" title=\"Js数组都有哪些方法及其作用、用法、返回值？详细说了一下splice()\"></a>Js数组都有哪些方法及其作用、用法、返回值？详细说了一下splice()</h4><h4 id=\"Js数组去重\"><a href=\"#Js数组去重\" class=\"headerlink\" title=\"Js数组去重\"></a>Js数组去重</h4><h4 id=\"说明冒泡排序、插入排序实现的思想、步骤、每趟的结果等\"><a href=\"#说明冒泡排序、插入排序实现的思想、步骤、每趟的结果等\" class=\"headerlink\" title=\"说明冒泡排序、插入排序实现的思想、步骤、每趟的结果等\"></a>说明冒泡排序、插入排序实现的思想、步骤、每趟的结果等</h4><h4 id=\"什么是二分查找\"><a href=\"#什么是二分查找\" class=\"headerlink\" title=\"什么是二分查找\"></a>什么是二分查找</h4><h4 id=\"HTTP协议相关\"><a href=\"#HTTP协议相关\" class=\"headerlink\" title=\"HTTP协议相关\"></a>HTTP协议相关</h4><h5 id=\"请求头\"><a href=\"#请求头\" class=\"headerlink\" title=\"请求头\"></a>请求头</h5><h5 id=\"响应头\"><a href=\"#响应头\" class=\"headerlink\" title=\"响应头\"></a>响应头</h5><h5 id=\"状态码（5大类）\"><a href=\"#状态码（5大类）\" class=\"headerlink\" title=\"状态码（5大类）\"></a>状态码（5大类）</h5><h5 id=\"报文格式\"><a href=\"#报文格式\" class=\"headerlink\" title=\"报文格式\"></a>报文格式</h5><h5 id=\"一次http完整的过程\"><a href=\"#一次http完整的过程\" class=\"headerlink\" title=\"一次http完整的过程\"></a>一次http完整的过程</h5><h5 id=\"详细说一下Accept-Encoding的作用，和性能有关系？\"><a href=\"#详细说一下Accept-Encoding的作用，和性能有关系？\" class=\"headerlink\" title=\"详细说一下Accept - Encoding的作用，和性能有关系？\"></a>详细说一下Accept - Encoding的作用，和性能有关系？</h5><h5 id=\"http有哪些请求方式？\"><a href=\"#http有哪些请求方式？\" class=\"headerlink\" title=\"http有哪些请求方式？\"></a>http有哪些请求方式？</h5><h5 id=\"Get和post的区别？\"><a href=\"#Get和post的区别？\" class=\"headerlink\" title=\"Get和post的区别？\"></a>Get和post的区别？</h5><h4 id=\"Ajax相关\"><a href=\"#Ajax相关\" class=\"headerlink\" title=\"Ajax相关\"></a>Ajax相关</h4><h5 id=\"如何实现\"><a href=\"#如何实现\" class=\"headerlink\" title=\"如何实现\"></a>如何实现</h5><h5 id=\"用jQuery实现一个ajax\"><a href=\"#用jQuery实现一个ajax\" class=\"headerlink\" title=\"用jQuery实现一个ajax\"></a>用jQuery实现一个ajax</h5><h5 id=\"有没有看过jQuery内部是如何实现的？\"><a href=\"#有没有看过jQuery内部是如何实现的？\" class=\"headerlink\" title=\"有没有看过jQuery内部是如何实现的？\"></a>有没有看过jQuery内部是如何实现的？</h5><h5 id=\"说说链式调用\"><a href=\"#说说链式调用\" class=\"headerlink\" title=\"说说链式调用\"></a>说说链式调用</h5><h4 id=\"Application相关\"><a href=\"#Application相关\" class=\"headerlink\" title=\"Application相关\"></a>Application相关</h4><h5 id=\"什么是Cookie和Session？\"><a href=\"#什么是Cookie和Session？\" class=\"headerlink\" title=\"什么是Cookie和Session？\"></a>什么是Cookie和Session？</h5><h5 id=\"Cookie和Session他们的区别？\"><a href=\"#Cookie和Session他们的区别？\" class=\"headerlink\" title=\"Cookie和Session他们的区别？\"></a>Cookie和Session他们的区别？</h5><h5 id=\"Js实现cookie和session两者有联系吗？\"><a href=\"#Js实现cookie和session两者有联系吗？\" class=\"headerlink\" title=\"Js实现cookie和session两者有联系吗？\"></a>Js实现cookie和session两者有联系吗？</h5><h5 id=\"localStorage、sessionStorage、cookie是什么？\"><a href=\"#localStorage、sessionStorage、cookie是什么？\" class=\"headerlink\" title=\"localStorage、sessionStorage、cookie是什么？\"></a>localStorage、sessionStorage、cookie是什么？</h5><h4 id=\"垂直居中布局-4中\"><a href=\"#垂直居中布局-4中\" class=\"headerlink\" title=\"垂直居中布局 4中\"></a>垂直居中布局 4中</h4><h4 id=\"浮动引起的问题，如何清除浮动【4种\"><a href=\"#浮动引起的问题，如何清除浮动【4种\" class=\"headerlink\" title=\"浮动引起的问题，如何清除浮动【4种\"></a>浮动引起的问题，如何清除浮动【4种</h4><h4 id=\"postion和z-index的关系？\"><a href=\"#postion和z-index的关系？\" class=\"headerlink\" title=\"postion和z-index的关系？\"></a>postion和z-index的关系？</h4><h4 id=\"DOM操作：获取、增、删、查、改等操作\"><a href=\"#DOM操作：获取、增、删、查、改等操作\" class=\"headerlink\" title=\"DOM操作：获取、增、删、查、改等操作\"></a>DOM操作：获取、增、删、查、改等操作</h4><h4 id=\"JS交换两个节点如何实现？\"><a href=\"#JS交换两个节点如何实现？\" class=\"headerlink\" title=\"JS交换两个节点如何实现？\"></a>JS交换两个节点如何实现？</h4><h4 id=\"tcp三次握手四次挥手\"><a href=\"#tcp三次握手四次挥手\" class=\"headerlink\" title=\"tcp三次握手四次挥手\"></a>tcp三次握手四次挥手</h4><h4 id=\"ES6有哪些新特性\"><a href=\"#ES6有哪些新特性\" class=\"headerlink\" title=\"ES6有哪些新特性\"></a>ES6有哪些新特性</h4><ul>\n<li>let，const</li>\n<li>箭头函数</li>\n<li>解构赋值</li>\n<li>set、weakSet、map、weakMap</li>\n<li>proxy</li>\n<li>generator</li>\n<li>reflect</li>\n<li>async、await</li>\n<li>class</li>\n<li>promise</li>\n</ul>\n<h4 id=\"如何设置一个元素不可见-4中\"><a href=\"#如何设置一个元素不可见-4中\" class=\"headerlink\" title=\"如何设置一个元素不可见 4中\"></a>如何设置一个元素不可见 4中</h4><h4 id=\"什么是跨域问题，有哪些跨域方式\"><a href=\"#什么是跨域问题，有哪些跨域方式\" class=\"headerlink\" title=\"什么是跨域问题，有哪些跨域方式\"></a>什么是跨域问题，有哪些跨域方式</h4><h4 id=\"JS-异步解决方案的发展历程以及优缺点\"><a href=\"#JS-异步解决方案的发展历程以及优缺点\" class=\"headerlink\" title=\"JS 异步解决方案的发展历程以及优缺点\"></a>JS 异步解决方案的发展历程以及优缺点</h4><h4 id=\"行内元素和块元素区别，image-标签属于哪种\"><a href=\"#行内元素和块元素区别，image-标签属于哪种\" class=\"headerlink\" title=\"行内元素和块元素区别，image 标签属于哪种\"></a>行内元素和块元素区别，image 标签属于哪种</h4><h4 id=\"eval\"><a href=\"#eval\" class=\"headerlink\" title=\"eval\"></a>eval</h4><h4 id=\"Object-assign\"><a href=\"#Object-assign\" class=\"headerlink\" title=\"Object.assign()\"></a>Object.assign()</h4><h4 id=\"reduce-求和\"><a href=\"#reduce-求和\" class=\"headerlink\" title=\"reduce 求和\"></a>reduce 求和</h4><h4 id=\"普通函数和构造函数\"><a href=\"#普通函数和构造函数\" class=\"headerlink\" title=\"普通函数和构造函数\"></a>普通函数和构造函数</h4><h3 id=\"http\"><a href=\"#http\" class=\"headerlink\" title=\"http\"></a>http</h3><h3 id=\"ES6\"><a href=\"#ES6\" class=\"headerlink\" title=\"ES6\"></a>ES6</h3><h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><h3 id=\"React\"><a href=\"#React\" class=\"headerlink\" title=\"React\"></a>React</h3><h3 id=\"打包优化\"><a href=\"#打包优化\" class=\"headerlink\" title=\"打包优化\"></a>打包优化</h3><h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://blog.csdn.net/weixin_42003850/article/details/108651427\">2021前端必问面试题及答案</a></li>\n<li><a href=\"https://blog.csdn.net/xieanna123/article/details/105545758\">2021前端面试经常被问到的题(附答案)</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s3.ax1x.com/2021/02/22/y7Le4x.jpg\" alt=\"首屏图\"></p>","more":"<h2 id=\"web前端面试题\"><a href=\"#web前端面试题\" class=\"headerlink\" title=\"web前端面试题\"></a>web前端面试题</h2><h3 id=\"HTML5\"><a href=\"#HTML5\" class=\"headerlink\" title=\"HTML5\"></a>HTML5</h3><h3 id=\"CSS3\"><a href=\"#CSS3\" class=\"headerlink\" title=\"CSS3\"></a>CSS3</h3><h3 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h3><h4 id=\"原型链和继承\"><a href=\"#原型链和继承\" class=\"headerlink\" title=\"原型链和继承\"></a>原型链和继承</h4><p><img src=\"https://s3.ax1x.com/2021/03/06/6nomVK.png\" alt=\"原型链\"></p>\n<h5 id=\"原型链\"><a href=\"#原型链\" class=\"headerlink\" title=\"原型链\"></a>原型链</h5><p>js对象独有的<strong>proto</strong>属性，当访问一个对象的属性时，如果该对象内不存在这个属性，会去它的<strong>proto</strong>属性所指向的那个对象（父对象）里找，直到null</p>\n<h5 id=\"proto\"><a href=\"#proto\" class=\"headerlink\" title=\"proto\"></a>proto</h5><p>对象都有私有属性<strong>proto</strong>（），从对象指向实例原型</p>\n<h5 id=\"prototype\"><a href=\"#prototype\" class=\"headerlink\" title=\"prototype\"></a>prototype</h5><p>函数独有的属性，从一个函数指向一个对象，包含所有实例可共享的属性和方法，任何函数创建时，会默认创建该函数的prototype对象</p>\n<h5 id=\"constructor-NaN\"><a href=\"#constructor-NaN\" class=\"headerlink\" title=\"constructor\"></a>constructor</h5><p>实例的构造函数（constructor）属性，指向实例</p>\n<h5 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h5><p>所有函数和对象最终都是由Function构造函数得来，所以constructor属性的终点就是Function这个函数。</p>\n<ol>\n<li>prototype指向的原型对象又有一个属性constructor，这个属性也是一个指针，指回原构造函数，即这个方法。</li>\n<li><strong>proto</strong>和constructor属性是对象所独有的，prototype属性是函数所独有的。</li>\n<li>JS中函数也是一种对象，所以函数也拥有<strong>proto</strong>和constructor属性</li>\n<li>为什么有prototype，如果没有，每次新建对象都会继承构造函数的所有属性，方法，浪费性能，用了prototype后，属性每个对象的值相同性不高，写在构造函数里，而方法通常是通用的，使用prototype可以让每个对象共享同一个方法，而不用每次都copy一个，而且能实时更新</li>\n<li><a href=\"https://www.cnblogs.com/tylerdonet/p/9595436.html\">JavaScript原型链和继承</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000000653327\">为什么使用prototype</a></li>\n</ol>\n<h4 id=\"浅拷贝和深拷贝\"><a href=\"#浅拷贝和深拷贝\" class=\"headerlink\" title=\"浅拷贝和深拷贝\"></a>浅拷贝和深拷贝</h4><ul>\n<li>基本数据类型：名字和值都存在栈中</li>\n<li>引用数据类型：名字在栈中，值在堆中，栈内存会提供一个引用地址，指向堆内存中的值</li>\n<li>浅拷贝：<ul>\n<li>for只遍历第一层</li>\n<li>assign</li>\n<li><code>=</code>直接赋值</li>\n</ul>\n</li>\n<li>深拷贝：<ul>\n<li>递归遍历所有层级</li>\n<li>利用JSON对象【JSON.stringfy() JSON.parse()】</li>\n<li>通过jQuery的extend方法实现深拷贝</li>\n<li>lodash函数库实现深拷贝</li>\n<li>用slice实现对数组的深拷贝,slice() 方法可从已有的数组中返回选定的元素。</li>\n<li>使用扩展运算符实现深拷贝</li>\n<li>如对象的value是基本类型，可以用Object.assign来实现深拷贝，但是要把它赋值给一个空对象assign第一层是深拷贝，第二层以后是浅拷贝</li>\n<li>Reflect法</li>\n<li>用concat实现对数组的深拷贝</li>\n<li>直接使用var newObj = Object.create(oldObj)，可以达到深拷贝的效果。</li>\n<li>手动实现深拷贝</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// JSON对象进行深拷贝</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deepClone2</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> _obj = <span class=\"built_in\">JSON</span>.stringify(obj),</span><br><span class=\"line\">    objClone = <span class=\"built_in\">JSON</span>.parse(_obj);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> objClone;</span><br><span class=\"line\">&#125; <span class=\"comment\">// 无法实现对对象中 方法 的深拷贝，会显示为undefined</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// jQuery的extend方法进行深拷贝</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> array = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> newArray = $.extend(<span class=\"literal\">true</span>,[],array); <span class=\"comment\">// true为深拷贝，false为浅拷贝</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// lodash方法进行深拷贝</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = _.cloneDeep(test)</span><br></pre></td></tr></table></figure>\n<h4 id=\"js中的堆和栈\"><a href=\"#js中的堆和栈\" class=\"headerlink\" title=\"js中的堆和栈\"></a>js中的堆和栈</h4><ul>\n<li>栈（stack）：简单地数据段，存放在栈中，有固定大小的内存（自动分配），自动释放<ul>\n<li>基本数据类型：number，string，boolean，undefined，null</li>\n<li>栈存储了什么：变量名，基本数据类型值，地址</li>\n<li>全局作用域，私有作用域，都属是栈内存，理论上，存储的越少，运行速度越快</li>\n<li>先进后出</li>\n<li>栈内存回收：作用域销毁（立即销毁，不销毁，不立即销毁）<ul>\n<li>全局作用域销毁：一般情况不销毁，页面关闭，整个作用域销毁</li>\n<li>私有作用域销毁 ：<ul>\n<li>不销毁</li>\n<li>销毁</li>\n<li>不立即销毁</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>堆（heap）：动态分配内存，大小不定也不会自动释放<ul>\n<li>引用类型：栈中存放地址，指向堆中的对象，当我们要获取（函数，数组，对象等）的时候，先从栈中获取地址，然后从堆中获取数据</li>\n<li>先进先出</li>\n<li>堆存储了什么：引用数据类型的值</li>\n<li>内存回收：GC垃圾回收机制<ul>\n<li>chrome：标记法，每隔一段时间对所有的空间地址检测，如果没有被占用，立即回收</li>\n<li>ie和火狐：计数法，空间地址被占用一次+1，空闲一次空间地址-1，如果为0 被回收</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://juejin.cn/post/6844903618999500808\">10分钟了解JS堆、栈以及事件循环的概念</a></p>\n<h4 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h4><ul>\n<li>闭包函数：声明在一个函数中的函数，叫做闭包函数。</li>\n<li>闭包：内部函数总是可以访问其所在的外部函数中声明的参数和变量，即使在其外部函数被返回（寿命终结）了之后。</li>\n<li>参数和变量不会被垃圾回收机制回收</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;Shier&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b())</span><br><span class=\"line\"><span class=\"comment\">// 通过返回函数中返回的内部变量，使函数外部能够使用和访问函数内部变量</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"setTimeout\"><a href=\"#setTimeout\" class=\"headerlink\" title=\"setTimeout\"></a>setTimeout</h4><h4 id=\"事件委托\"><a href=\"#事件委托\" class=\"headerlink\" title=\"事件委托\"></a>事件委托</h4><h4 id=\"this指向，call-apply-bind，回调函数\"><a href=\"#this指向，call-apply-bind，回调函数\" class=\"headerlink\" title=\"this指向，call/apply/bind，回调函数\"></a>this指向，call/apply/bind，回调函数</h4><h4 id=\"数组的常用操作\"><a href=\"#数组的常用操作\" class=\"headerlink\" title=\"数组的常用操作\"></a>数组的常用操作</h4><h4 id=\"set和weakset，map和weakmap\"><a href=\"#set和weakset，map和weakmap\" class=\"headerlink\" title=\"set和weakset，map和weakmap\"></a>set和weakset，map和weakmap</h4><h4 id=\"let和const\"><a href=\"#let和const\" class=\"headerlink\" title=\"let和const\"></a>let和const</h4><h4 id=\"解构赋值\"><a href=\"#解构赋值\" class=\"headerlink\" title=\"解构赋值\"></a>解构赋值</h4><h4 id=\"typeof原理\"><a href=\"#typeof原理\" class=\"headerlink\" title=\"typeof原理\"></a>typeof原理</h4><h4 id=\"0-1-0-2-0-3吗，为什么\"><a href=\"#0-1-0-2-0-3吗，为什么\" class=\"headerlink\" title=\"0.1+0.2 === 0.3吗，为什么\"></a>0.1+0.2 === 0.3吗，为什么</h4><h4 id=\"前端安全-xss-和-csrf\"><a href=\"#前端安全-xss-和-csrf\" class=\"headerlink\" title=\"前端安全 xss 和 csrf\"></a>前端安全 xss 和 csrf</h4><h4 id=\"说明BFC及其使用\"><a href=\"#说明BFC及其使用\" class=\"headerlink\" title=\"说明BFC及其使用\"></a>说明BFC及其使用</h4><h4 id=\"js基本数据类型\"><a href=\"#js基本数据类型\" class=\"headerlink\" title=\"js基本数据类型\"></a>js基本数据类型</h4><h4 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h4><h4 id=\"Js数组都有哪些方法及其作用、用法、返回值？详细说了一下splice\"><a href=\"#Js数组都有哪些方法及其作用、用法、返回值？详细说了一下splice\" class=\"headerlink\" title=\"Js数组都有哪些方法及其作用、用法、返回值？详细说了一下splice()\"></a>Js数组都有哪些方法及其作用、用法、返回值？详细说了一下splice()</h4><h4 id=\"Js数组去重\"><a href=\"#Js数组去重\" class=\"headerlink\" title=\"Js数组去重\"></a>Js数组去重</h4><h4 id=\"说明冒泡排序、插入排序实现的思想、步骤、每趟的结果等\"><a href=\"#说明冒泡排序、插入排序实现的思想、步骤、每趟的结果等\" class=\"headerlink\" title=\"说明冒泡排序、插入排序实现的思想、步骤、每趟的结果等\"></a>说明冒泡排序、插入排序实现的思想、步骤、每趟的结果等</h4><h4 id=\"什么是二分查找\"><a href=\"#什么是二分查找\" class=\"headerlink\" title=\"什么是二分查找\"></a>什么是二分查找</h4><h4 id=\"HTTP协议相关\"><a href=\"#HTTP协议相关\" class=\"headerlink\" title=\"HTTP协议相关\"></a>HTTP协议相关</h4><h5 id=\"请求头\"><a href=\"#请求头\" class=\"headerlink\" title=\"请求头\"></a>请求头</h5><h5 id=\"响应头\"><a href=\"#响应头\" class=\"headerlink\" title=\"响应头\"></a>响应头</h5><h5 id=\"状态码（5大类）\"><a href=\"#状态码（5大类）\" class=\"headerlink\" title=\"状态码（5大类）\"></a>状态码（5大类）</h5><h5 id=\"报文格式\"><a href=\"#报文格式\" class=\"headerlink\" title=\"报文格式\"></a>报文格式</h5><h5 id=\"一次http完整的过程\"><a href=\"#一次http完整的过程\" class=\"headerlink\" title=\"一次http完整的过程\"></a>一次http完整的过程</h5><h5 id=\"详细说一下Accept-Encoding的作用，和性能有关系？\"><a href=\"#详细说一下Accept-Encoding的作用，和性能有关系？\" class=\"headerlink\" title=\"详细说一下Accept - Encoding的作用，和性能有关系？\"></a>详细说一下Accept - Encoding的作用，和性能有关系？</h5><h5 id=\"http有哪些请求方式？\"><a href=\"#http有哪些请求方式？\" class=\"headerlink\" title=\"http有哪些请求方式？\"></a>http有哪些请求方式？</h5><h5 id=\"Get和post的区别？\"><a href=\"#Get和post的区别？\" class=\"headerlink\" title=\"Get和post的区别？\"></a>Get和post的区别？</h5><h4 id=\"Ajax相关\"><a href=\"#Ajax相关\" class=\"headerlink\" title=\"Ajax相关\"></a>Ajax相关</h4><h5 id=\"如何实现\"><a href=\"#如何实现\" class=\"headerlink\" title=\"如何实现\"></a>如何实现</h5><h5 id=\"用jQuery实现一个ajax\"><a href=\"#用jQuery实现一个ajax\" class=\"headerlink\" title=\"用jQuery实现一个ajax\"></a>用jQuery实现一个ajax</h5><h5 id=\"有没有看过jQuery内部是如何实现的？\"><a href=\"#有没有看过jQuery内部是如何实现的？\" class=\"headerlink\" title=\"有没有看过jQuery内部是如何实现的？\"></a>有没有看过jQuery内部是如何实现的？</h5><h5 id=\"说说链式调用\"><a href=\"#说说链式调用\" class=\"headerlink\" title=\"说说链式调用\"></a>说说链式调用</h5><h4 id=\"Application相关\"><a href=\"#Application相关\" class=\"headerlink\" title=\"Application相关\"></a>Application相关</h4><h5 id=\"什么是Cookie和Session？\"><a href=\"#什么是Cookie和Session？\" class=\"headerlink\" title=\"什么是Cookie和Session？\"></a>什么是Cookie和Session？</h5><h5 id=\"Cookie和Session他们的区别？\"><a href=\"#Cookie和Session他们的区别？\" class=\"headerlink\" title=\"Cookie和Session他们的区别？\"></a>Cookie和Session他们的区别？</h5><h5 id=\"Js实现cookie和session两者有联系吗？\"><a href=\"#Js实现cookie和session两者有联系吗？\" class=\"headerlink\" title=\"Js实现cookie和session两者有联系吗？\"></a>Js实现cookie和session两者有联系吗？</h5><h5 id=\"localStorage、sessionStorage、cookie是什么？\"><a href=\"#localStorage、sessionStorage、cookie是什么？\" class=\"headerlink\" title=\"localStorage、sessionStorage、cookie是什么？\"></a>localStorage、sessionStorage、cookie是什么？</h5><h4 id=\"垂直居中布局-4中\"><a href=\"#垂直居中布局-4中\" class=\"headerlink\" title=\"垂直居中布局 4中\"></a>垂直居中布局 4中</h4><h4 id=\"浮动引起的问题，如何清除浮动【4种\"><a href=\"#浮动引起的问题，如何清除浮动【4种\" class=\"headerlink\" title=\"浮动引起的问题，如何清除浮动【4种\"></a>浮动引起的问题，如何清除浮动【4种</h4><h4 id=\"postion和z-index的关系？\"><a href=\"#postion和z-index的关系？\" class=\"headerlink\" title=\"postion和z-index的关系？\"></a>postion和z-index的关系？</h4><h4 id=\"DOM操作：获取、增、删、查、改等操作\"><a href=\"#DOM操作：获取、增、删、查、改等操作\" class=\"headerlink\" title=\"DOM操作：获取、增、删、查、改等操作\"></a>DOM操作：获取、增、删、查、改等操作</h4><h4 id=\"JS交换两个节点如何实现？\"><a href=\"#JS交换两个节点如何实现？\" class=\"headerlink\" title=\"JS交换两个节点如何实现？\"></a>JS交换两个节点如何实现？</h4><h4 id=\"tcp三次握手四次挥手\"><a href=\"#tcp三次握手四次挥手\" class=\"headerlink\" title=\"tcp三次握手四次挥手\"></a>tcp三次握手四次挥手</h4><h4 id=\"ES6有哪些新特性\"><a href=\"#ES6有哪些新特性\" class=\"headerlink\" title=\"ES6有哪些新特性\"></a>ES6有哪些新特性</h4><ul>\n<li>let，const</li>\n<li>箭头函数</li>\n<li>解构赋值</li>\n<li>set、weakSet、map、weakMap</li>\n<li>proxy</li>\n<li>generator</li>\n<li>reflect</li>\n<li>async、await</li>\n<li>class</li>\n<li>promise</li>\n</ul>\n<h4 id=\"如何设置一个元素不可见-4中\"><a href=\"#如何设置一个元素不可见-4中\" class=\"headerlink\" title=\"如何设置一个元素不可见 4中\"></a>如何设置一个元素不可见 4中</h4><h4 id=\"什么是跨域问题，有哪些跨域方式\"><a href=\"#什么是跨域问题，有哪些跨域方式\" class=\"headerlink\" title=\"什么是跨域问题，有哪些跨域方式\"></a>什么是跨域问题，有哪些跨域方式</h4><h4 id=\"JS-异步解决方案的发展历程以及优缺点\"><a href=\"#JS-异步解决方案的发展历程以及优缺点\" class=\"headerlink\" title=\"JS 异步解决方案的发展历程以及优缺点\"></a>JS 异步解决方案的发展历程以及优缺点</h4><h4 id=\"行内元素和块元素区别，image-标签属于哪种\"><a href=\"#行内元素和块元素区别，image-标签属于哪种\" class=\"headerlink\" title=\"行内元素和块元素区别，image 标签属于哪种\"></a>行内元素和块元素区别，image 标签属于哪种</h4><h4 id=\"eval\"><a href=\"#eval\" class=\"headerlink\" title=\"eval\"></a>eval</h4><h4 id=\"Object-assign\"><a href=\"#Object-assign\" class=\"headerlink\" title=\"Object.assign()\"></a>Object.assign()</h4><h4 id=\"reduce-求和\"><a href=\"#reduce-求和\" class=\"headerlink\" title=\"reduce 求和\"></a>reduce 求和</h4><h4 id=\"普通函数和构造函数\"><a href=\"#普通函数和构造函数\" class=\"headerlink\" title=\"普通函数和构造函数\"></a>普通函数和构造函数</h4><h3 id=\"http\"><a href=\"#http\" class=\"headerlink\" title=\"http\"></a>http</h3><h3 id=\"ES6\"><a href=\"#ES6\" class=\"headerlink\" title=\"ES6\"></a>ES6</h3><h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><h3 id=\"React\"><a href=\"#React\" class=\"headerlink\" title=\"React\"></a>React</h3><h3 id=\"打包优化\"><a href=\"#打包优化\" class=\"headerlink\" title=\"打包优化\"></a>打包优化</h3><h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://blog.csdn.net/weixin_42003850/article/details/108651427\">2021前端必问面试题及答案</a></li>\n<li><a href=\"https://blog.csdn.net/xieanna123/article/details/105545758\">2021前端面试经常被问到的题(附答案)</a></li>\n</ul>"},{"title":"坡峰岭","abbrlink":"1ed01ebb","date":"2020-10-25T08:57:11.000Z","_content":"\n![首屏图](https://s3.ax1x.com/2021/01/13/sNBGx1.jpg)\n\n<!-- more -->\n\n> 停车坐爱枫林晚——坡峰岭红叶节我来了。金秋即将来临，坡峰岭是观赏红叶、登山的最佳之选。漫山红叶、风景秀丽。\n\n![你好拾月](https://s3.ax1x.com/2021/01/13/sNDdO0.jpg)\n![走没走过的路](https://s3.ax1x.com/2021/01/13/sNDDTU.jpg)\n![看没看过的风景](https://s3.ax1x.com/2021/01/13/sND0mV.jpg)\n![小径通幽](https://s3.ax1x.com/2021/01/13/sNDskF.jpg)\n![云湖](https://s3.ax1x.com/2021/01/13/sNDayq.jpg)\n![叶落知秋](https://s3.ax1x.com/2021/01/13/sNDyY4.jpg)\n![红叶](https://s3.ax1x.com/2021/01/13/sND6fJ.jpg)\n![夕阳西沉](https://s3.ax1x.com/2021/01/13/sNDBwT.jpg)\n","source":"_posts/坡峰岭.md","raw":"---\ntitle: 坡峰岭\nabbrlink: 1ed01ebb\ndate: 2020-10-25 16:57:11\ntags:\n  - 游记\n  - 坡峰岭\ncategories:\n  - 游记\n---\n\n![首屏图](https://s3.ax1x.com/2021/01/13/sNBGx1.jpg)\n\n<!-- more -->\n\n> 停车坐爱枫林晚——坡峰岭红叶节我来了。金秋即将来临，坡峰岭是观赏红叶、登山的最佳之选。漫山红叶、风景秀丽。\n\n![你好拾月](https://s3.ax1x.com/2021/01/13/sNDdO0.jpg)\n![走没走过的路](https://s3.ax1x.com/2021/01/13/sNDDTU.jpg)\n![看没看过的风景](https://s3.ax1x.com/2021/01/13/sND0mV.jpg)\n![小径通幽](https://s3.ax1x.com/2021/01/13/sNDskF.jpg)\n![云湖](https://s3.ax1x.com/2021/01/13/sNDayq.jpg)\n![叶落知秋](https://s3.ax1x.com/2021/01/13/sNDyY4.jpg)\n![红叶](https://s3.ax1x.com/2021/01/13/sND6fJ.jpg)\n![夕阳西沉](https://s3.ax1x.com/2021/01/13/sNDBwT.jpg)\n","slug":"坡峰岭","published":1,"updated":"2021-01-30T04:16:46.667Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyn000s2an99ukac72c","content":"<p><img src=\"https://s3.ax1x.com/2021/01/13/sNBGx1.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>停车坐爱枫林晚——坡峰岭红叶节我来了。金秋即将来临，坡峰岭是观赏红叶、登山的最佳之选。漫山红叶、风景秀丽。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNDdO0.jpg\" alt=\"你好拾月\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sNDDTU.jpg\" alt=\"走没走过的路\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sND0mV.jpg\" alt=\"看没看过的风景\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sNDskF.jpg\" alt=\"小径通幽\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sNDayq.jpg\" alt=\"云湖\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sNDyY4.jpg\" alt=\"叶落知秋\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sND6fJ.jpg\" alt=\"红叶\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sNDBwT.jpg\" alt=\"夕阳西沉\"></p>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s3.ax1x.com/2021/01/13/sNBGx1.jpg\" alt=\"首屏图\"></p>","more":"<blockquote>\n<p>停车坐爱枫林晚——坡峰岭红叶节我来了。金秋即将来临，坡峰岭是观赏红叶、登山的最佳之选。漫山红叶、风景秀丽。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sNDdO0.jpg\" alt=\"你好拾月\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sNDDTU.jpg\" alt=\"走没走过的路\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sND0mV.jpg\" alt=\"看没看过的风景\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sNDskF.jpg\" alt=\"小径通幽\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sNDayq.jpg\" alt=\"云湖\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sNDyY4.jpg\" alt=\"叶落知秋\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sND6fJ.jpg\" alt=\"红叶\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sNDBwT.jpg\" alt=\"夕阳西沉\"></p>"},{"title":"夜爬西山","abbrlink":"86020100","date":"2020-08-24T02:28:51.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/08/24/dBvlYn.jpg)\n\n<!-- more -->\n\n> 追光者\n\n![图2](https://s1.ax1x.com/2020/08/24/dBv1Wq.jpg)\n\n![图3](https://s1.ax1x.com/2020/08/24/dBvQFs.jpg)\n\n![图4](https://s1.ax1x.com/2020/08/24/dBvKoj.jpg)\n\n![图5](https://s1.ax1x.com/2020/08/24/dBvuwQ.jpg)\n\n![图6](https://s1.ax1x.com/2020/08/24/dBv8S0.jpg)\n\n![图7](https://s1.ax1x.com/2020/08/24/dBvGlV.jpg)\n\n![图8](https://s1.ax1x.com/2020/08/24/dBvYOU.jpg)\n\n![图9](https://s1.ax1x.com/2020/08/24/dBvJyT.jpg)\n\n![图10](https://s1.ax1x.com/2020/08/24/dBvNmF.jpg)\n\n![图11](https://s1.ax1x.com/2020/08/24/dBvUw4.jpg)\n\n![图12](https://s1.ax1x.com/2020/08/24/dBv0YR.jpg)\n\n![图13](https://s1.ax1x.com/2020/08/24/dBvaTJ.jpg)\n\n![图14](https://s1.ax1x.com/2020/08/24/dBvwk9.jpg)\n\n![图15](https://s1.ax1x.com/2020/08/24/dBvBf1.jpg)\n\n![图16](https://s1.ax1x.com/2020/08/24/dBvrSx.jpg)\n\n![图17](https://s1.ax1x.com/2020/08/24/dBvsl6.jpg)\n\n![图18](https://s1.ax1x.com/2020/08/24/dBv6OO.jpg)\n\n![图19](https://s1.ax1x.com/2020/08/24/dBvy6K.jpg)\n","source":"_posts/夜爬西山.md","raw":"---\ntitle: 夜爬西山\ntags:\n  - 游记\n  - 西山国家森林公园\n  - 鬼笑石\ncategories:\n  - 游记\nabbrlink: '86020100'\ndate: 2020-08-24 10:28:51\n---\n\n![首屏图](https://s1.ax1x.com/2020/08/24/dBvlYn.jpg)\n\n<!-- more -->\n\n> 追光者\n\n![图2](https://s1.ax1x.com/2020/08/24/dBv1Wq.jpg)\n\n![图3](https://s1.ax1x.com/2020/08/24/dBvQFs.jpg)\n\n![图4](https://s1.ax1x.com/2020/08/24/dBvKoj.jpg)\n\n![图5](https://s1.ax1x.com/2020/08/24/dBvuwQ.jpg)\n\n![图6](https://s1.ax1x.com/2020/08/24/dBv8S0.jpg)\n\n![图7](https://s1.ax1x.com/2020/08/24/dBvGlV.jpg)\n\n![图8](https://s1.ax1x.com/2020/08/24/dBvYOU.jpg)\n\n![图9](https://s1.ax1x.com/2020/08/24/dBvJyT.jpg)\n\n![图10](https://s1.ax1x.com/2020/08/24/dBvNmF.jpg)\n\n![图11](https://s1.ax1x.com/2020/08/24/dBvUw4.jpg)\n\n![图12](https://s1.ax1x.com/2020/08/24/dBv0YR.jpg)\n\n![图13](https://s1.ax1x.com/2020/08/24/dBvaTJ.jpg)\n\n![图14](https://s1.ax1x.com/2020/08/24/dBvwk9.jpg)\n\n![图15](https://s1.ax1x.com/2020/08/24/dBvBf1.jpg)\n\n![图16](https://s1.ax1x.com/2020/08/24/dBvrSx.jpg)\n\n![图17](https://s1.ax1x.com/2020/08/24/dBvsl6.jpg)\n\n![图18](https://s1.ax1x.com/2020/08/24/dBv6OO.jpg)\n\n![图19](https://s1.ax1x.com/2020/08/24/dBvy6K.jpg)\n","slug":"夜爬西山","published":1,"updated":"2020-12-30T01:08:23.106Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyo000t2an92onu802k","content":"<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvlYn.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>追光者</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBv1Wq.jpg\" alt=\"图2\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvQFs.jpg\" alt=\"图3\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvKoj.jpg\" alt=\"图4\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvuwQ.jpg\" alt=\"图5\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBv8S0.jpg\" alt=\"图6\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvGlV.jpg\" alt=\"图7\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvYOU.jpg\" alt=\"图8\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvJyT.jpg\" alt=\"图9\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvNmF.jpg\" alt=\"图10\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvUw4.jpg\" alt=\"图11\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBv0YR.jpg\" alt=\"图12\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvaTJ.jpg\" alt=\"图13\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvwk9.jpg\" alt=\"图14\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvBf1.jpg\" alt=\"图15\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvrSx.jpg\" alt=\"图16\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvsl6.jpg\" alt=\"图17\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBv6OO.jpg\" alt=\"图18\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvy6K.jpg\" alt=\"图19\"></p>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvlYn.jpg\" alt=\"首屏图\"></p>","more":"<blockquote>\n<p>追光者</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBv1Wq.jpg\" alt=\"图2\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvQFs.jpg\" alt=\"图3\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvKoj.jpg\" alt=\"图4\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvuwQ.jpg\" alt=\"图5\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBv8S0.jpg\" alt=\"图6\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvGlV.jpg\" alt=\"图7\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvYOU.jpg\" alt=\"图8\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvJyT.jpg\" alt=\"图9\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvNmF.jpg\" alt=\"图10\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvUw4.jpg\" alt=\"图11\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBv0YR.jpg\" alt=\"图12\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvaTJ.jpg\" alt=\"图13\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvwk9.jpg\" alt=\"图14\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvBf1.jpg\" alt=\"图15\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvrSx.jpg\" alt=\"图16\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvsl6.jpg\" alt=\"图17\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBv6OO.jpg\" alt=\"图18\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dBvy6K.jpg\" alt=\"图19\"></p>"},{"title":"天坛","abbrlink":"4e94e89b","date":"2020-11-30T10:59:03.000Z","_content":"\n![首屏图](https://s3.ax1x.com/2021/01/13/sNBbLV.jpg)\n\n<!-- more -->\n\n> 我的童年基本上是绕着天坛成长起来的，爷爷奶奶也时常带着我去天坛玩耍。北门的杨树林，七星岩，长廊都是玩耍的好去处。\n\n![双环万寿亭](https://s3.ax1x.com/2021/01/13/sND5TO.jpg)\n![回音壁](https://s3.ax1x.com/2021/01/13/sNDokD.jpg)\n![我的初中](https://s3.ax1x.com/2021/01/13/sNDTte.jpg)\n","source":"_posts/天坛.md","raw":"---\ntitle: 天坛\nabbrlink: 4e94e89b\ndate: 2020-11-30 18:59:03\ntags:\n  - 游记\n  - 天坛\ncategories:\n  - 游记\n---\n\n![首屏图](https://s3.ax1x.com/2021/01/13/sNBbLV.jpg)\n\n<!-- more -->\n\n> 我的童年基本上是绕着天坛成长起来的，爷爷奶奶也时常带着我去天坛玩耍。北门的杨树林，七星岩，长廊都是玩耍的好去处。\n\n![双环万寿亭](https://s3.ax1x.com/2021/01/13/sND5TO.jpg)\n![回音壁](https://s3.ax1x.com/2021/01/13/sNDokD.jpg)\n![我的初中](https://s3.ax1x.com/2021/01/13/sNDTte.jpg)\n","slug":"天坛","published":1,"updated":"2021-01-30T04:16:46.668Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyo000u2an90d8s22o0","content":"<p><img src=\"https://s3.ax1x.com/2021/01/13/sNBbLV.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>我的童年基本上是绕着天坛成长起来的，爷爷奶奶也时常带着我去天坛玩耍。北门的杨树林，七星岩，长廊都是玩耍的好去处。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sND5TO.jpg\" alt=\"双环万寿亭\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sNDokD.jpg\" alt=\"回音壁\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sNDTte.jpg\" alt=\"我的初中\"></p>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s3.ax1x.com/2021/01/13/sNBbLV.jpg\" alt=\"首屏图\"></p>","more":"<blockquote>\n<p>我的童年基本上是绕着天坛成长起来的，爷爷奶奶也时常带着我去天坛玩耍。北门的杨树林，七星岩，长廊都是玩耍的好去处。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/sND5TO.jpg\" alt=\"双环万寿亭\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sNDokD.jpg\" alt=\"回音壁\"><br><img src=\"https://s3.ax1x.com/2021/01/13/sNDTte.jpg\" alt=\"我的初中\"></p>"},{"title":"奥森美图","abbrlink":"a6b75663","date":"2017-10-31T09:56:48.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/07/17/UsU3vR.jpg)\n\n<!-- more -->\n\n> 天气不错 出来走走\n\n![图1](https://s1.ax1x.com/2020/07/17/UyPqFe.jpg)\n\n![图2](https://s1.ax1x.com/2020/07/17/UyPHoD.jpg)\n\n![图3](https://s1.ax1x.com/2020/07/17/UyPLJH.jpg)\n\n![图4](https://s1.ax1x.com/2020/07/17/UyPOWd.jpg)\n\n![图5](https://s1.ax1x.com/2020/07/17/UyP7dO.jpg)\n\n![图6](https://s1.ax1x.com/2020/07/17/UyiFYQ.jpg)\n\n![图7](https://s1.ax1x.com/2020/07/17/UyPzOP.jpg)\n\n![图8](https://s1.ax1x.com/2020/07/17/UyPjSA.jpg)\n\n![图9](https://s1.ax1x.com/2020/07/17/UyPvQI.jpg)\n","source":"_posts/奥森美图.md","raw":"---\ntitle: 奥森美图\ntags:\n  - 游记\n  - 奥林匹克森林公园\ncategories:\n  - 游记\nabbrlink: a6b75663\ndate: 2017-10-31 17:56:48\n---\n\n![首屏图](https://s1.ax1x.com/2020/07/17/UsU3vR.jpg)\n\n<!-- more -->\n\n> 天气不错 出来走走\n\n![图1](https://s1.ax1x.com/2020/07/17/UyPqFe.jpg)\n\n![图2](https://s1.ax1x.com/2020/07/17/UyPHoD.jpg)\n\n![图3](https://s1.ax1x.com/2020/07/17/UyPLJH.jpg)\n\n![图4](https://s1.ax1x.com/2020/07/17/UyPOWd.jpg)\n\n![图5](https://s1.ax1x.com/2020/07/17/UyP7dO.jpg)\n\n![图6](https://s1.ax1x.com/2020/07/17/UyiFYQ.jpg)\n\n![图7](https://s1.ax1x.com/2020/07/17/UyPzOP.jpg)\n\n![图8](https://s1.ax1x.com/2020/07/17/UyPjSA.jpg)\n\n![图9](https://s1.ax1x.com/2020/07/17/UyPvQI.jpg)\n","slug":"奥森美图","published":1,"updated":"2020-08-12T01:57:58.413Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyo000v2an987zubazn","content":"<p><img src=\"https://s1.ax1x.com/2020/07/17/UsU3vR.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>天气不错 出来走走</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyPqFe.jpg\" alt=\"图1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyPHoD.jpg\" alt=\"图2\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyPLJH.jpg\" alt=\"图3\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyPOWd.jpg\" alt=\"图4\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyP7dO.jpg\" alt=\"图5\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyiFYQ.jpg\" alt=\"图6\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyPzOP.jpg\" alt=\"图7\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyPjSA.jpg\" alt=\"图8\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyPvQI.jpg\" alt=\"图9\"></p>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/07/17/UsU3vR.jpg\" alt=\"首屏图\"></p>","more":"<blockquote>\n<p>天气不错 出来走走</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyPqFe.jpg\" alt=\"图1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyPHoD.jpg\" alt=\"图2\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyPLJH.jpg\" alt=\"图3\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyPOWd.jpg\" alt=\"图4\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyP7dO.jpg\" alt=\"图5\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyiFYQ.jpg\" alt=\"图6\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyPzOP.jpg\" alt=\"图7\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyPjSA.jpg\" alt=\"图8\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyPvQI.jpg\" alt=\"图9\"></p>"},{"title":"寻味津门","toc":true,"abbrlink":"22b7ca75","date":"2020-07-25T01:00:49.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/07/28/akXZJH.jpg)\n\n<!-- more -->\n\n> 七月的寻味之旅，跟随着**盗月社**的足迹，来到了曲艺之乡-**天津**。\n\n![你好天津](https://s1.ax1x.com/2020/07/28/akfbqA.jpg)\n\n### 天津老码头\n\n![码头内景](https://s1.ax1x.com/2020/07/28/akf7KH.jpg)\n\n![菜品](https://s1.ax1x.com/2020/07/28/akfHrd.jpg)\n\n![兑换币](https://s1.ax1x.com/2020/07/28/akfvPf.jpg)\n\n### 天津水上公园\n\n**伴**着午后的晴日，一行人漫步在水上公园，欣赏着各色的莲花与荷花争奇斗艳。维纳斯、小宝贝、小桃红…我们严重怀疑这品种的名称是随意起的，要不就是有买家竞价拍卖得来的，哈哈，这名字起的太随意了也。\n\n![粉荷花](https://s1.ax1x.com/2020/07/28/akfoxe.jpg)\n\n![紫荷花](https://s1.ax1x.com/2020/07/28/akh9MQ.jpg)\n\n![白荷花](https://s1.ax1x.com/2020/07/28/akfOat.jpg)\n\n![桥](https://s1.ax1x.com/2020/07/28/akfXIP.jpg)\n\n![莲叶](https://s1.ax1x.com/2020/07/28/akfxG8.jpg)\n\n![莲花](https://s1.ax1x.com/2020/07/28/akhSxg.jpg)\n\n### 五大道\n\n**穿**行于极具年代感的五大道，感受着岁月所赋予的独特气息。听着从远处传来的马蹄声，原来是一匹俊朗的黑马，带着一车的游客渐行渐近。\n\n![狮子头](https://s1.ax1x.com/2020/07/28/akhPqs.jpg)\n\n![瓷房子](https://s1.ax1x.com/2020/07/28/akhFZn.jpg)\n\n![回转楼梯](https://s1.ax1x.com/2020/07/28/akhAI0.jpg)\n\n![她他](https://s1.ax1x.com/2020/07/28/akhZGT.jpg)\n\n![正面](https://s1.ax1x.com/2020/07/28/akhmzF.jpg)\n\n![她](https://s1.ax1x.com/2020/07/28/akheRU.jpg)\n\n![一眼望穿](https://s1.ax1x.com/2020/07/28/akhuM4.jpg)\n\n![壁画](https://s1.ax1x.com/2020/07/28/akhasH.jpg)\n\n![怒火燎原](https://s1.ax1x.com/2020/07/28/akhKsJ.jpg)\n\n**走**进瓷房子，满眼望去，被各色的玛瑙与瓷器所吸引，屋内的壁画与老物件，给人带来一种古代与现代文化相交织的感觉。天色渐晚，城市的灯光亮起。夜晚的五大道也独具风情。街角的酒吧与咖啡厅遥相呼应，雨淅淅沥沥的下着，点一杯拿铁，给自己的内心带来更多的温暖。\n\n![夜色](https://s1.ax1x.com/2020/07/28/akhViV.jpg)\n\n![居酒屋](https://s1.ax1x.com/2020/07/28/akfzRS.jpg)\n\n![无糖拿铁](https://s1.ax1x.com/2020/07/28/akhCrj.jpg)\n\n### 幸福里\n\n**清**晨的老城区生活气息十足，低矮的四层小楼，以及临街一楼的一个个商铺，给人一种老街坊的熟悉感。点上果子与云吞，再来上二两老姨包子，吃完又是元气满满的一天。\nps.时间一到，城管要来整治大街上的摊贩，只能把街边的摊位收起，回到楼内用餐也是蛮真实的。\n\n![老城](https://s1.ax1x.com/2020/07/28/akhkaq.jpg)\n\n**细**数着两天吃的天津菜，有着天津卫码头这样的特色主题餐厅，也有着老姨砂锅这种街边的苍蝇小馆，还有一家颇具东北风格的天津菜尝香聚。笃面筋、醋溜木须、砂锅醋椒豆腐、炸河虾、辣炒花嘎、蜜汁羊排、小铁勺云吞…各类美食的名字真是数不胜数。\n\n![远眺](https://s1.ax1x.com/2020/07/28/akhML9.jpg)\n\n![七里海湿地](https://s1.ax1x.com/2020/07/28/akh1d1.jpg)\n\n![潮白河](https://s1.ax1x.com/2020/07/28/akhYRO.jpg)\n\n![潮白河](https://s1.ax1x.com/2020/07/28/akh3Ix.jpg)\n\n![潮白河](https://s1.ax1x.com/2020/07/28/akhGi6.jpg)\n\n![似曾相识燕归来](https://s1.ax1x.com/2020/07/28/akhJJK.jpg)\n\n![潮白河](https://s1.ax1x.com/2020/07/28/akhtzD.jpg)\n\n![芦苇荡](https://s1.ax1x.com/2020/07/28/akhdLd.jpg)\n\n![渔·家](https://s1.ax1x.com/2020/07/28/akhUQe.jpg)\n\n### 七里海\n\n**阔**别三年，再次来到七里海，感觉真是有些沧海桑田的错觉。因为自然保护区的建立，曾经的人文景观建筑已经一去不返，湿地保护区被一众树木围挡起来，只能在间隙里管中窥豹，一睹各类水鸟的风采。倒是身后的潮白河，给人一种一望无际的宽广之感。\n\n总结下来，再次回到天津，多了感悟，少了玩闹，多了怀念，少了激情，多了坦然，少了浮躁。也许只是因为曾经的我，已不再是少年。\n","source":"_posts/寻味津门.md","raw":"---\ntitle: 寻味津门\ntags:\n  - 游记\n  - 天津\ncategories:\n  - 游记\ntoc: true\nabbrlink: 22b7ca75\ndate: 2020-07-25 09:00:49\n---\n\n![首屏图](https://s1.ax1x.com/2020/07/28/akXZJH.jpg)\n\n<!-- more -->\n\n> 七月的寻味之旅，跟随着**盗月社**的足迹，来到了曲艺之乡-**天津**。\n\n![你好天津](https://s1.ax1x.com/2020/07/28/akfbqA.jpg)\n\n### 天津老码头\n\n![码头内景](https://s1.ax1x.com/2020/07/28/akf7KH.jpg)\n\n![菜品](https://s1.ax1x.com/2020/07/28/akfHrd.jpg)\n\n![兑换币](https://s1.ax1x.com/2020/07/28/akfvPf.jpg)\n\n### 天津水上公园\n\n**伴**着午后的晴日，一行人漫步在水上公园，欣赏着各色的莲花与荷花争奇斗艳。维纳斯、小宝贝、小桃红…我们严重怀疑这品种的名称是随意起的，要不就是有买家竞价拍卖得来的，哈哈，这名字起的太随意了也。\n\n![粉荷花](https://s1.ax1x.com/2020/07/28/akfoxe.jpg)\n\n![紫荷花](https://s1.ax1x.com/2020/07/28/akh9MQ.jpg)\n\n![白荷花](https://s1.ax1x.com/2020/07/28/akfOat.jpg)\n\n![桥](https://s1.ax1x.com/2020/07/28/akfXIP.jpg)\n\n![莲叶](https://s1.ax1x.com/2020/07/28/akfxG8.jpg)\n\n![莲花](https://s1.ax1x.com/2020/07/28/akhSxg.jpg)\n\n### 五大道\n\n**穿**行于极具年代感的五大道，感受着岁月所赋予的独特气息。听着从远处传来的马蹄声，原来是一匹俊朗的黑马，带着一车的游客渐行渐近。\n\n![狮子头](https://s1.ax1x.com/2020/07/28/akhPqs.jpg)\n\n![瓷房子](https://s1.ax1x.com/2020/07/28/akhFZn.jpg)\n\n![回转楼梯](https://s1.ax1x.com/2020/07/28/akhAI0.jpg)\n\n![她他](https://s1.ax1x.com/2020/07/28/akhZGT.jpg)\n\n![正面](https://s1.ax1x.com/2020/07/28/akhmzF.jpg)\n\n![她](https://s1.ax1x.com/2020/07/28/akheRU.jpg)\n\n![一眼望穿](https://s1.ax1x.com/2020/07/28/akhuM4.jpg)\n\n![壁画](https://s1.ax1x.com/2020/07/28/akhasH.jpg)\n\n![怒火燎原](https://s1.ax1x.com/2020/07/28/akhKsJ.jpg)\n\n**走**进瓷房子，满眼望去，被各色的玛瑙与瓷器所吸引，屋内的壁画与老物件，给人带来一种古代与现代文化相交织的感觉。天色渐晚，城市的灯光亮起。夜晚的五大道也独具风情。街角的酒吧与咖啡厅遥相呼应，雨淅淅沥沥的下着，点一杯拿铁，给自己的内心带来更多的温暖。\n\n![夜色](https://s1.ax1x.com/2020/07/28/akhViV.jpg)\n\n![居酒屋](https://s1.ax1x.com/2020/07/28/akfzRS.jpg)\n\n![无糖拿铁](https://s1.ax1x.com/2020/07/28/akhCrj.jpg)\n\n### 幸福里\n\n**清**晨的老城区生活气息十足，低矮的四层小楼，以及临街一楼的一个个商铺，给人一种老街坊的熟悉感。点上果子与云吞，再来上二两老姨包子，吃完又是元气满满的一天。\nps.时间一到，城管要来整治大街上的摊贩，只能把街边的摊位收起，回到楼内用餐也是蛮真实的。\n\n![老城](https://s1.ax1x.com/2020/07/28/akhkaq.jpg)\n\n**细**数着两天吃的天津菜，有着天津卫码头这样的特色主题餐厅，也有着老姨砂锅这种街边的苍蝇小馆，还有一家颇具东北风格的天津菜尝香聚。笃面筋、醋溜木须、砂锅醋椒豆腐、炸河虾、辣炒花嘎、蜜汁羊排、小铁勺云吞…各类美食的名字真是数不胜数。\n\n![远眺](https://s1.ax1x.com/2020/07/28/akhML9.jpg)\n\n![七里海湿地](https://s1.ax1x.com/2020/07/28/akh1d1.jpg)\n\n![潮白河](https://s1.ax1x.com/2020/07/28/akhYRO.jpg)\n\n![潮白河](https://s1.ax1x.com/2020/07/28/akh3Ix.jpg)\n\n![潮白河](https://s1.ax1x.com/2020/07/28/akhGi6.jpg)\n\n![似曾相识燕归来](https://s1.ax1x.com/2020/07/28/akhJJK.jpg)\n\n![潮白河](https://s1.ax1x.com/2020/07/28/akhtzD.jpg)\n\n![芦苇荡](https://s1.ax1x.com/2020/07/28/akhdLd.jpg)\n\n![渔·家](https://s1.ax1x.com/2020/07/28/akhUQe.jpg)\n\n### 七里海\n\n**阔**别三年，再次来到七里海，感觉真是有些沧海桑田的错觉。因为自然保护区的建立，曾经的人文景观建筑已经一去不返，湿地保护区被一众树木围挡起来，只能在间隙里管中窥豹，一睹各类水鸟的风采。倒是身后的潮白河，给人一种一望无际的宽广之感。\n\n总结下来，再次回到天津，多了感悟，少了玩闹，多了怀念，少了激情，多了坦然，少了浮躁。也许只是因为曾经的我，已不再是少年。\n","slug":"寻味津门","published":1,"updated":"2020-08-12T01:57:58.413Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyp000w2an91oxpbdpw","content":"<p><img src=\"https://s1.ax1x.com/2020/07/28/akXZJH.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>七月的寻味之旅，跟随着<strong>盗月社</strong>的足迹，来到了曲艺之乡-<strong>天津</strong>。</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfbqA.jpg\" alt=\"你好天津\"></p>\n<h3 id=\"天津老码头\"><a href=\"#天津老码头\" class=\"headerlink\" title=\"天津老码头\"></a>天津老码头</h3><p><img src=\"https://s1.ax1x.com/2020/07/28/akf7KH.jpg\" alt=\"码头内景\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfHrd.jpg\" alt=\"菜品\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfvPf.jpg\" alt=\"兑换币\"></p>\n<h3 id=\"天津水上公园\"><a href=\"#天津水上公园\" class=\"headerlink\" title=\"天津水上公园\"></a>天津水上公园</h3><p><strong>伴</strong>着午后的晴日，一行人漫步在水上公园，欣赏着各色的莲花与荷花争奇斗艳。维纳斯、小宝贝、小桃红…我们严重怀疑这品种的名称是随意起的，要不就是有买家竞价拍卖得来的，哈哈，这名字起的太随意了也。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfoxe.jpg\" alt=\"粉荷花\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akh9MQ.jpg\" alt=\"紫荷花\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfOat.jpg\" alt=\"白荷花\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfXIP.jpg\" alt=\"桥\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfxG8.jpg\" alt=\"莲叶\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhSxg.jpg\" alt=\"莲花\"></p>\n<h3 id=\"五大道\"><a href=\"#五大道\" class=\"headerlink\" title=\"五大道\"></a>五大道</h3><p><strong>穿</strong>行于极具年代感的五大道，感受着岁月所赋予的独特气息。听着从远处传来的马蹄声，原来是一匹俊朗的黑马，带着一车的游客渐行渐近。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhPqs.jpg\" alt=\"狮子头\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhFZn.jpg\" alt=\"瓷房子\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhAI0.jpg\" alt=\"回转楼梯\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhZGT.jpg\" alt=\"她他\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhmzF.jpg\" alt=\"正面\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akheRU.jpg\" alt=\"她\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhuM4.jpg\" alt=\"一眼望穿\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhasH.jpg\" alt=\"壁画\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhKsJ.jpg\" alt=\"怒火燎原\"></p>\n<p><strong>走</strong>进瓷房子，满眼望去，被各色的玛瑙与瓷器所吸引，屋内的壁画与老物件，给人带来一种古代与现代文化相交织的感觉。天色渐晚，城市的灯光亮起。夜晚的五大道也独具风情。街角的酒吧与咖啡厅遥相呼应，雨淅淅沥沥的下着，点一杯拿铁，给自己的内心带来更多的温暖。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhViV.jpg\" alt=\"夜色\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfzRS.jpg\" alt=\"居酒屋\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhCrj.jpg\" alt=\"无糖拿铁\"></p>\n<h3 id=\"幸福里\"><a href=\"#幸福里\" class=\"headerlink\" title=\"幸福里\"></a>幸福里</h3><p><strong>清</strong>晨的老城区生活气息十足，低矮的四层小楼，以及临街一楼的一个个商铺，给人一种老街坊的熟悉感。点上果子与云吞，再来上二两老姨包子，吃完又是元气满满的一天。<br>ps.时间一到，城管要来整治大街上的摊贩，只能把街边的摊位收起，回到楼内用餐也是蛮真实的。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhkaq.jpg\" alt=\"老城\"></p>\n<p><strong>细</strong>数着两天吃的天津菜，有着天津卫码头这样的特色主题餐厅，也有着老姨砂锅这种街边的苍蝇小馆，还有一家颇具东北风格的天津菜尝香聚。笃面筋、醋溜木须、砂锅醋椒豆腐、炸河虾、辣炒花嘎、蜜汁羊排、小铁勺云吞…各类美食的名字真是数不胜数。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhML9.jpg\" alt=\"远眺\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akh1d1.jpg\" alt=\"七里海湿地\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhYRO.jpg\" alt=\"潮白河\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akh3Ix.jpg\" alt=\"潮白河\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhGi6.jpg\" alt=\"潮白河\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhJJK.jpg\" alt=\"似曾相识燕归来\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhtzD.jpg\" alt=\"潮白河\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhdLd.jpg\" alt=\"芦苇荡\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhUQe.jpg\" alt=\"渔·家\"></p>\n<h3 id=\"七里海\"><a href=\"#七里海\" class=\"headerlink\" title=\"七里海\"></a>七里海</h3><p><strong>阔</strong>别三年，再次来到七里海，感觉真是有些沧海桑田的错觉。因为自然保护区的建立，曾经的人文景观建筑已经一去不返，湿地保护区被一众树木围挡起来，只能在间隙里管中窥豹，一睹各类水鸟的风采。倒是身后的潮白河，给人一种一望无际的宽广之感。</p>\n<p>总结下来，再次回到天津，多了感悟，少了玩闹，多了怀念，少了激情，多了坦然，少了浮躁。也许只是因为曾经的我，已不再是少年。</p>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/07/28/akXZJH.jpg\" alt=\"首屏图\"></p>","more":"<blockquote>\n<p>七月的寻味之旅，跟随着<strong>盗月社</strong>的足迹，来到了曲艺之乡-<strong>天津</strong>。</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfbqA.jpg\" alt=\"你好天津\"></p>\n<h3 id=\"天津老码头\"><a href=\"#天津老码头\" class=\"headerlink\" title=\"天津老码头\"></a>天津老码头</h3><p><img src=\"https://s1.ax1x.com/2020/07/28/akf7KH.jpg\" alt=\"码头内景\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfHrd.jpg\" alt=\"菜品\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfvPf.jpg\" alt=\"兑换币\"></p>\n<h3 id=\"天津水上公园\"><a href=\"#天津水上公园\" class=\"headerlink\" title=\"天津水上公园\"></a>天津水上公园</h3><p><strong>伴</strong>着午后的晴日，一行人漫步在水上公园，欣赏着各色的莲花与荷花争奇斗艳。维纳斯、小宝贝、小桃红…我们严重怀疑这品种的名称是随意起的，要不就是有买家竞价拍卖得来的，哈哈，这名字起的太随意了也。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfoxe.jpg\" alt=\"粉荷花\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akh9MQ.jpg\" alt=\"紫荷花\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfOat.jpg\" alt=\"白荷花\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfXIP.jpg\" alt=\"桥\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfxG8.jpg\" alt=\"莲叶\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhSxg.jpg\" alt=\"莲花\"></p>\n<h3 id=\"五大道\"><a href=\"#五大道\" class=\"headerlink\" title=\"五大道\"></a>五大道</h3><p><strong>穿</strong>行于极具年代感的五大道，感受着岁月所赋予的独特气息。听着从远处传来的马蹄声，原来是一匹俊朗的黑马，带着一车的游客渐行渐近。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhPqs.jpg\" alt=\"狮子头\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhFZn.jpg\" alt=\"瓷房子\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhAI0.jpg\" alt=\"回转楼梯\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhZGT.jpg\" alt=\"她他\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhmzF.jpg\" alt=\"正面\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akheRU.jpg\" alt=\"她\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhuM4.jpg\" alt=\"一眼望穿\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhasH.jpg\" alt=\"壁画\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhKsJ.jpg\" alt=\"怒火燎原\"></p>\n<p><strong>走</strong>进瓷房子，满眼望去，被各色的玛瑙与瓷器所吸引，屋内的壁画与老物件，给人带来一种古代与现代文化相交织的感觉。天色渐晚，城市的灯光亮起。夜晚的五大道也独具风情。街角的酒吧与咖啡厅遥相呼应，雨淅淅沥沥的下着，点一杯拿铁，给自己的内心带来更多的温暖。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhViV.jpg\" alt=\"夜色\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akfzRS.jpg\" alt=\"居酒屋\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhCrj.jpg\" alt=\"无糖拿铁\"></p>\n<h3 id=\"幸福里\"><a href=\"#幸福里\" class=\"headerlink\" title=\"幸福里\"></a>幸福里</h3><p><strong>清</strong>晨的老城区生活气息十足，低矮的四层小楼，以及临街一楼的一个个商铺，给人一种老街坊的熟悉感。点上果子与云吞，再来上二两老姨包子，吃完又是元气满满的一天。<br>ps.时间一到，城管要来整治大街上的摊贩，只能把街边的摊位收起，回到楼内用餐也是蛮真实的。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhkaq.jpg\" alt=\"老城\"></p>\n<p><strong>细</strong>数着两天吃的天津菜，有着天津卫码头这样的特色主题餐厅，也有着老姨砂锅这种街边的苍蝇小馆，还有一家颇具东北风格的天津菜尝香聚。笃面筋、醋溜木须、砂锅醋椒豆腐、炸河虾、辣炒花嘎、蜜汁羊排、小铁勺云吞…各类美食的名字真是数不胜数。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhML9.jpg\" alt=\"远眺\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akh1d1.jpg\" alt=\"七里海湿地\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhYRO.jpg\" alt=\"潮白河\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akh3Ix.jpg\" alt=\"潮白河\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhGi6.jpg\" alt=\"潮白河\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhJJK.jpg\" alt=\"似曾相识燕归来\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhtzD.jpg\" alt=\"潮白河\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhdLd.jpg\" alt=\"芦苇荡\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/28/akhUQe.jpg\" alt=\"渔·家\"></p>\n<h3 id=\"七里海\"><a href=\"#七里海\" class=\"headerlink\" title=\"七里海\"></a>七里海</h3><p><strong>阔</strong>别三年，再次来到七里海，感觉真是有些沧海桑田的错觉。因为自然保护区的建立，曾经的人文景观建筑已经一去不返，湿地保护区被一众树木围挡起来，只能在间隙里管中窥豹，一睹各类水鸟的风采。倒是身后的潮白河，给人一种一望无际的宽广之感。</p>\n<p>总结下来，再次回到天津，多了感悟，少了玩闹，多了怀念，少了激情，多了坦然，少了浮躁。也许只是因为曾经的我，已不再是少年。</p>"},{"title":"无重复字符的最长子串","abbrlink":"4cd9164b","date":"2020-08-18T06:49:51.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/08/18/duIHij.jpg)\n\n<!-- more -->\n\n## LeetCode 题目总结 - 无重复字符的最长子串\n\n### 题目\n\n给定一个字符串，请你找出其中不含有重复字符的**最长子串**的长度。\n\n### 示例\n\n#### 示例1\n\n```text\n输入: \"abcabcbb\"\n输出: 3\n解释: 因为无重复字符的最长子串是 \"abc\"，所以其长度为 3。\n```\n\n#### 示例2\n\n```text\n输入: \"bbbbb\"\n输出: 1\n解释: 因为无重复字符的最长子串是 \"b\"，所以其长度为 1。\n```\n\n#### 示例3\n\n```text\n输入: \"pwwkew\"\n输出: 3\n解释: 因为无重复字符的最长子串是 \"wke\"，所以其长度为 3。\n     请注意，你的答案必须是 子串 的长度，\"pwke\" 是一个子序列，不是子串。\n```\n\n### 解题\n\n#### 解法一: 维护数组\n\n**解题思路：**使用一个数组来维护滑动窗口\n\n遍历字符串，判断字符是否在滑动窗口数组里\n\n* 不在则`push`进数组\n* 在则删除滑动窗口数组里相同字符及相同字符前的字符，然后将当前字符`push`进数组\n* 然后将`max`更新为当前最长子串的长度\n\n遍历完，返回`max`即可\n\n**画图帮助理解一下：**\n\n![维护数组](https://s1.ax1x.com/2020/08/19/dQtNVO.jpg)\n\n**代码实现：**\n\n```js\nvar lengthOfLongestSubstring = function(s) {\n  // 创建空数组及最大长度0\n  let arr = [], max = 0\n  // 遍历字符串\n  for(let i = 0; i < s.length; i++) {\n    // 获取当前字符在数组中的下标(-1则不存在)\n    let index = arr.indexOf(s[i])\n    // 当前字符存在时删除数组中与当前字符相同的字符之前的元素\n    if(index !== -1) {\n      arr.splice(0, index+1);\n    }\n    // 将当前字符push进数组\n    arr.push(s.charAt(i)) // charAt() 方法可返回指定位置的字符。\n    // 存储最大值(若当前数组的长度比最大值大则存储)\n    max = Math.max(arr.length, max)\n  }\n  return max\n};\n```\n\n代码优化\n\n```js\nvar lengthOfLongestSubstring = function(s) {\n  let arr = [], max = 0\n  for(let i = 0; i < s.length; i++) {\n    let index = arr.indexOf(s[i])\n    if(index !== -1) {\n      // 只有当数组需要删除相同元素时才做最大值的存储\n      max = Math.max(arr.length, max)\n      arr.splice(0, index+1);\n    }\n    arr.push(s.charAt(i))\n  }\n  // 若字符串中所有字符均不同 至少进行一次最大值的存储\n  max = Math.max(arr.length, max)\n  return max\n};\n```\n\n**时间复杂度：**O(n<sup>2</sup>)， 其中`arr.indexOf()`时间复杂度为O(n)，`arr.splice(0, index+1)`的时间复杂度也为 O(n)\n\n**空间复杂度：**O(n)\n\n#### 解法二: 维护下标\n\n**解题思路：**使用下标来维护滑动窗口\n\n**代码实现：**\n\n```js\nvar lengthOfLongestSubstring = function(s) {\n  // 初始化下标值0及最大长度0\n  let index = 0, max = 0\n  // i为滑动窗口最左侧的元素下标 j为最右侧元素下标 遍历字符串\n  for(let i = 0, j = 0; j < s.length; j++) {\n    // 查看当前元素是否存在于滑动窗口中\n    index = s.substring(i, j).indexOf(s[j]) // substring() 方法用于提取字符串中介于两个指定下标之间的字符。\n    // 若存在 将最左侧元素的下标 更新为与当前元素相同的最左侧元素下标+1\n    if(index !== -1) {\n      i = i + index + 1\n    }\n    // 记录最大值 滑动窗口最右侧下标-最左侧下标+1\n    max = Math.max(max, j - i + 1)\n  }\n  return max\n};\n```\n\n**时间复杂度：**O(n<sup>2</sup>)\n\n**空间复杂度：**O(n)\n\n#### 解法三: 优化的Map\n\n**解题思路：**\n\n使用`map`来存储当前已经遍历过的字符，`key`为字符，`value`为下标\n\n使用`i`来标记无重复子串开始下标，`j`为当前遍历字符下标\n\n遍历字符串，判断当前字符是否已经在`map`中存在，存在则更新无重复子串开始下标`i`为相同字符的下一位置，\n此时从`i`到`j`为最新的无重复子串，更新`max`，将当前字符与下标放入`map`中\n\n最后，返回`max`即可\n\n**画图帮助理解一下：**\n\n![map](https://s1.ax1x.com/2020/08/19/dlbEvQ.jpg)\n\n**代码实现：**\n\n```js\nvar lengthOfLongestSubstring = function(s) {\n  // 初始化map及最大值\n  let map = new Map(), max = 0\n  // 初始化无重复子串开始下标i 当前遍历字符下标j 遍历字符串\n  for(let i = 0, j = 0; j < s.length; j++) {\n    // 判断当前值是否存在于map中\n    if(map.has(s[j])) {\n      // 若存在 将无重复子串开始下标i 赋值为重复元素下标+1\n      // 注意 赋值时需比较当前查找到的重复元素下标是否比i大\n      i = Math.max(map.get(s[j]) + 1, i)\n    }\n    // 更新无重读子串最大值\n    max = Math.max(max, j - i + 1)\n    // 更新map中重复字符的下标为最新的下标\n    map.set(s[j], j)\n  }\n  return max\n};\n```\n\n**输出查看一下数据的变化：**\n\n* 当数据为`abba`时\n\n![abba](https://s1.ax1x.com/2020/08/19/dlrqER.png)\n\n* 当数据为`abcabcbb`时\n\n![abcabcbb](https://s1.ax1x.com/2020/08/19/dlrLU1.png)\n\n**时间复杂度：**O(n)\n\n**空间复杂度：**O(n)\n\n## 参考资料\n\n* [无重复字符的最长子串](https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/)\n* [无重复字符的最长子串官方解题思路](https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/wu-zhong-fu-zi-fu-de-zui-chang-zi-chuan-by-leetc-2/)\n* [JavaScript三种解法：无重复字符的最长子串](https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/zi-jie-leetcode3wu-zhong-fu-zi-fu-de-zui-chang-zi-/)\n","source":"_posts/无重复字符的最长子串.md","raw":"---\ntitle: 无重复字符的最长子串\ntags:\n  - 技术积累\n  - LeetCode\n  - 无重复字符的最长子串\n  - 中等\n  - 每日一练\ncategories:\n  - 技术积累\n  - LeetCode\nabbrlink: 4cd9164b\ndate: 2020-08-18 14:49:51\n---\n\n![首屏图](https://s1.ax1x.com/2020/08/18/duIHij.jpg)\n\n<!-- more -->\n\n## LeetCode 题目总结 - 无重复字符的最长子串\n\n### 题目\n\n给定一个字符串，请你找出其中不含有重复字符的**最长子串**的长度。\n\n### 示例\n\n#### 示例1\n\n```text\n输入: \"abcabcbb\"\n输出: 3\n解释: 因为无重复字符的最长子串是 \"abc\"，所以其长度为 3。\n```\n\n#### 示例2\n\n```text\n输入: \"bbbbb\"\n输出: 1\n解释: 因为无重复字符的最长子串是 \"b\"，所以其长度为 1。\n```\n\n#### 示例3\n\n```text\n输入: \"pwwkew\"\n输出: 3\n解释: 因为无重复字符的最长子串是 \"wke\"，所以其长度为 3。\n     请注意，你的答案必须是 子串 的长度，\"pwke\" 是一个子序列，不是子串。\n```\n\n### 解题\n\n#### 解法一: 维护数组\n\n**解题思路：**使用一个数组来维护滑动窗口\n\n遍历字符串，判断字符是否在滑动窗口数组里\n\n* 不在则`push`进数组\n* 在则删除滑动窗口数组里相同字符及相同字符前的字符，然后将当前字符`push`进数组\n* 然后将`max`更新为当前最长子串的长度\n\n遍历完，返回`max`即可\n\n**画图帮助理解一下：**\n\n![维护数组](https://s1.ax1x.com/2020/08/19/dQtNVO.jpg)\n\n**代码实现：**\n\n```js\nvar lengthOfLongestSubstring = function(s) {\n  // 创建空数组及最大长度0\n  let arr = [], max = 0\n  // 遍历字符串\n  for(let i = 0; i < s.length; i++) {\n    // 获取当前字符在数组中的下标(-1则不存在)\n    let index = arr.indexOf(s[i])\n    // 当前字符存在时删除数组中与当前字符相同的字符之前的元素\n    if(index !== -1) {\n      arr.splice(0, index+1);\n    }\n    // 将当前字符push进数组\n    arr.push(s.charAt(i)) // charAt() 方法可返回指定位置的字符。\n    // 存储最大值(若当前数组的长度比最大值大则存储)\n    max = Math.max(arr.length, max)\n  }\n  return max\n};\n```\n\n代码优化\n\n```js\nvar lengthOfLongestSubstring = function(s) {\n  let arr = [], max = 0\n  for(let i = 0; i < s.length; i++) {\n    let index = arr.indexOf(s[i])\n    if(index !== -1) {\n      // 只有当数组需要删除相同元素时才做最大值的存储\n      max = Math.max(arr.length, max)\n      arr.splice(0, index+1);\n    }\n    arr.push(s.charAt(i))\n  }\n  // 若字符串中所有字符均不同 至少进行一次最大值的存储\n  max = Math.max(arr.length, max)\n  return max\n};\n```\n\n**时间复杂度：**O(n<sup>2</sup>)， 其中`arr.indexOf()`时间复杂度为O(n)，`arr.splice(0, index+1)`的时间复杂度也为 O(n)\n\n**空间复杂度：**O(n)\n\n#### 解法二: 维护下标\n\n**解题思路：**使用下标来维护滑动窗口\n\n**代码实现：**\n\n```js\nvar lengthOfLongestSubstring = function(s) {\n  // 初始化下标值0及最大长度0\n  let index = 0, max = 0\n  // i为滑动窗口最左侧的元素下标 j为最右侧元素下标 遍历字符串\n  for(let i = 0, j = 0; j < s.length; j++) {\n    // 查看当前元素是否存在于滑动窗口中\n    index = s.substring(i, j).indexOf(s[j]) // substring() 方法用于提取字符串中介于两个指定下标之间的字符。\n    // 若存在 将最左侧元素的下标 更新为与当前元素相同的最左侧元素下标+1\n    if(index !== -1) {\n      i = i + index + 1\n    }\n    // 记录最大值 滑动窗口最右侧下标-最左侧下标+1\n    max = Math.max(max, j - i + 1)\n  }\n  return max\n};\n```\n\n**时间复杂度：**O(n<sup>2</sup>)\n\n**空间复杂度：**O(n)\n\n#### 解法三: 优化的Map\n\n**解题思路：**\n\n使用`map`来存储当前已经遍历过的字符，`key`为字符，`value`为下标\n\n使用`i`来标记无重复子串开始下标，`j`为当前遍历字符下标\n\n遍历字符串，判断当前字符是否已经在`map`中存在，存在则更新无重复子串开始下标`i`为相同字符的下一位置，\n此时从`i`到`j`为最新的无重复子串，更新`max`，将当前字符与下标放入`map`中\n\n最后，返回`max`即可\n\n**画图帮助理解一下：**\n\n![map](https://s1.ax1x.com/2020/08/19/dlbEvQ.jpg)\n\n**代码实现：**\n\n```js\nvar lengthOfLongestSubstring = function(s) {\n  // 初始化map及最大值\n  let map = new Map(), max = 0\n  // 初始化无重复子串开始下标i 当前遍历字符下标j 遍历字符串\n  for(let i = 0, j = 0; j < s.length; j++) {\n    // 判断当前值是否存在于map中\n    if(map.has(s[j])) {\n      // 若存在 将无重复子串开始下标i 赋值为重复元素下标+1\n      // 注意 赋值时需比较当前查找到的重复元素下标是否比i大\n      i = Math.max(map.get(s[j]) + 1, i)\n    }\n    // 更新无重读子串最大值\n    max = Math.max(max, j - i + 1)\n    // 更新map中重复字符的下标为最新的下标\n    map.set(s[j], j)\n  }\n  return max\n};\n```\n\n**输出查看一下数据的变化：**\n\n* 当数据为`abba`时\n\n![abba](https://s1.ax1x.com/2020/08/19/dlrqER.png)\n\n* 当数据为`abcabcbb`时\n\n![abcabcbb](https://s1.ax1x.com/2020/08/19/dlrLU1.png)\n\n**时间复杂度：**O(n)\n\n**空间复杂度：**O(n)\n\n## 参考资料\n\n* [无重复字符的最长子串](https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/)\n* [无重复字符的最长子串官方解题思路](https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/wu-zhong-fu-zi-fu-de-zui-chang-zi-chuan-by-leetc-2/)\n* [JavaScript三种解法：无重复字符的最长子串](https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/zi-jie-leetcode3wu-zhong-fu-zi-fu-de-zui-chang-zi-/)\n","slug":"无重复字符的最长子串","published":1,"updated":"2020-12-30T01:08:23.106Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyp000x2an961k67y3t","content":"<p><img src=\"https://s1.ax1x.com/2020/08/18/duIHij.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<h2 id=\"LeetCode-题目总结-无重复字符的最长子串\"><a href=\"#LeetCode-题目总结-无重复字符的最长子串\" class=\"headerlink\" title=\"LeetCode 题目总结 - 无重复字符的最长子串\"></a>LeetCode 题目总结 - 无重复字符的最长子串</h2><h3 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h3><p>给定一个字符串，请你找出其中不含有重复字符的<strong>最长子串</strong>的长度。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><h4 id=\"示例1\"><a href=\"#示例1\" class=\"headerlink\" title=\"示例1\"></a>示例1</h4><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: &quot;abcabcbb&quot;</span><br><span class=\"line\">输出: 3</span><br><span class=\"line\">解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3。</span><br></pre></td></tr></table></figure>\n<h4 id=\"示例2\"><a href=\"#示例2\" class=\"headerlink\" title=\"示例2\"></a>示例2</h4><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: &quot;bbbbb&quot;</span><br><span class=\"line\">输出: 1</span><br><span class=\"line\">解释: 因为无重复字符的最长子串是 &quot;b&quot;，所以其长度为 1。</span><br></pre></td></tr></table></figure>\n<h4 id=\"示例3\"><a href=\"#示例3\" class=\"headerlink\" title=\"示例3\"></a>示例3</h4><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: &quot;pwwkew&quot;</span><br><span class=\"line\">输出: 3</span><br><span class=\"line\">解释: 因为无重复字符的最长子串是 &quot;wke&quot;，所以其长度为 3。</span><br><span class=\"line\">     请注意，你的答案必须是 子串 的长度，&quot;pwke&quot; 是一个子序列，不是子串。</span><br></pre></td></tr></table></figure>\n<h3 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h3><h4 id=\"解法一-维护数组\"><a href=\"#解法一-维护数组\" class=\"headerlink\" title=\"解法一: 维护数组\"></a>解法一: 维护数组</h4><p><strong>解题思路：</strong>使用一个数组来维护滑动窗口</p>\n<p>遍历字符串，判断字符是否在滑动窗口数组里</p>\n<ul>\n<li>不在则<code>push</code>进数组</li>\n<li>在则删除滑动窗口数组里相同字符及相同字符前的字符，然后将当前字符<code>push</code>进数组</li>\n<li>然后将<code>max</code>更新为当前最长子串的长度</li>\n</ul>\n<p>遍历完，返回<code>max</code>即可</p>\n<p><strong>画图帮助理解一下：</strong></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/19/dQtNVO.jpg\" alt=\"维护数组\"></p>\n<p><strong>代码实现：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLongestSubstring = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 创建空数组及最大长度0</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> arr = [], max = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"comment\">// 遍历字符串</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取当前字符在数组中的下标(-1则不存在)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> index = arr.indexOf(s[i])</span><br><span class=\"line\">    <span class=\"comment\">// 当前字符存在时删除数组中与当前字符相同的字符之前的元素</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(index !== <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      arr.splice(<span class=\"number\">0</span>, index+<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 将当前字符push进数组</span></span><br><span class=\"line\">    arr.push(s.charAt(i)) <span class=\"comment\">// charAt() 方法可返回指定位置的字符。</span></span><br><span class=\"line\">    <span class=\"comment\">// 存储最大值(若当前数组的长度比最大值大则存储)</span></span><br><span class=\"line\">    max = <span class=\"built_in\">Math</span>.max(arr.length, max)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> max</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>代码优化</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLongestSubstring = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arr = [], max = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> index = arr.indexOf(s[i])</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(index !== <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 只有当数组需要删除相同元素时才做最大值的存储</span></span><br><span class=\"line\">      max = <span class=\"built_in\">Math</span>.max(arr.length, max)</span><br><span class=\"line\">      arr.splice(<span class=\"number\">0</span>, index+<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    arr.push(s.charAt(i))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 若字符串中所有字符均不同 至少进行一次最大值的存储</span></span><br><span class=\"line\">  max = <span class=\"built_in\">Math</span>.max(arr.length, max)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> max</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>时间复杂度：</strong>O(n<sup>2</sup>)， 其中<code>arr.indexOf()</code>时间复杂度为O(n)，<code>arr.splice(0, index+1)</code>的时间复杂度也为 O(n)</p>\n<p><strong>空间复杂度：</strong>O(n)</p>\n<h4 id=\"解法二-维护下标\"><a href=\"#解法二-维护下标\" class=\"headerlink\" title=\"解法二: 维护下标\"></a>解法二: 维护下标</h4><p><strong>解题思路：</strong>使用下标来维护滑动窗口</p>\n<p><strong>代码实现：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLongestSubstring = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 初始化下标值0及最大长度0</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> index = <span class=\"number\">0</span>, max = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"comment\">// i为滑动窗口最左侧的元素下标 j为最右侧元素下标 遍历字符串</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>; j &lt; s.length; j++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 查看当前元素是否存在于滑动窗口中</span></span><br><span class=\"line\">    index = s.substring(i, j).indexOf(s[j]) <span class=\"comment\">// substring() 方法用于提取字符串中介于两个指定下标之间的字符。</span></span><br><span class=\"line\">    <span class=\"comment\">// 若存在 将最左侧元素的下标 更新为与当前元素相同的最左侧元素下标+1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(index !== <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      i = i + index + <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 记录最大值 滑动窗口最右侧下标-最左侧下标+1</span></span><br><span class=\"line\">    max = <span class=\"built_in\">Math</span>.max(max, j - i + <span class=\"number\">1</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> max</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>时间复杂度：</strong>O(n<sup>2</sup>)</p>\n<p><strong>空间复杂度：</strong>O(n)</p>\n<h4 id=\"解法三-优化的Map\"><a href=\"#解法三-优化的Map\" class=\"headerlink\" title=\"解法三: 优化的Map\"></a>解法三: 优化的Map</h4><p><strong>解题思路：</strong></p>\n<p>使用<code>map</code>来存储当前已经遍历过的字符，<code>key</code>为字符，<code>value</code>为下标</p>\n<p>使用<code>i</code>来标记无重复子串开始下标，<code>j</code>为当前遍历字符下标</p>\n<p>遍历字符串，判断当前字符是否已经在<code>map</code>中存在，存在则更新无重复子串开始下标<code>i</code>为相同字符的下一位置，<br>此时从<code>i</code>到<code>j</code>为最新的无重复子串，更新<code>max</code>，将当前字符与下标放入<code>map</code>中</p>\n<p>最后，返回<code>max</code>即可</p>\n<p><strong>画图帮助理解一下：</strong></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/19/dlbEvQ.jpg\" alt=\"map\"></p>\n<p><strong>代码实现：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLongestSubstring = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 初始化map及最大值</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> map = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>(), max = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化无重复子串开始下标i 当前遍历字符下标j 遍历字符串</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>; j &lt; s.length; j++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 判断当前值是否存在于map中</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(map.has(s[j])) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 若存在 将无重复子串开始下标i 赋值为重复元素下标+1</span></span><br><span class=\"line\">      <span class=\"comment\">// 注意 赋值时需比较当前查找到的重复元素下标是否比i大</span></span><br><span class=\"line\">      i = <span class=\"built_in\">Math</span>.max(map.get(s[j]) + <span class=\"number\">1</span>, i)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 更新无重读子串最大值</span></span><br><span class=\"line\">    max = <span class=\"built_in\">Math</span>.max(max, j - i + <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 更新map中重复字符的下标为最新的下标</span></span><br><span class=\"line\">    map.set(s[j], j)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> max</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>输出查看一下数据的变化：</strong></p>\n<ul>\n<li>当数据为<code>abba</code>时</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/08/19/dlrqER.png\" alt=\"abba\"></p>\n<ul>\n<li>当数据为<code>abcabcbb</code>时</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/08/19/dlrLU1.png\" alt=\"abcabcbb\"></p>\n<p><strong>时间复杂度：</strong>O(n)</p>\n<p><strong>空间复杂度：</strong>O(n)</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/\">无重复字符的最长子串</a></li>\n<li><a href=\"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/wu-zhong-fu-zi-fu-de-zui-chang-zi-chuan-by-leetc-2/\">无重复字符的最长子串官方解题思路</a></li>\n<li><a href=\"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/zi-jie-leetcode3wu-zhong-fu-zi-fu-de-zui-chang-zi-/\">JavaScript三种解法：无重复字符的最长子串</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/08/18/duIHij.jpg\" alt=\"首屏图\"></p>","more":"<h2 id=\"LeetCode-题目总结-无重复字符的最长子串\"><a href=\"#LeetCode-题目总结-无重复字符的最长子串\" class=\"headerlink\" title=\"LeetCode 题目总结 - 无重复字符的最长子串\"></a>LeetCode 题目总结 - 无重复字符的最长子串</h2><h3 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h3><p>给定一个字符串，请你找出其中不含有重复字符的<strong>最长子串</strong>的长度。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><h4 id=\"示例1\"><a href=\"#示例1\" class=\"headerlink\" title=\"示例1\"></a>示例1</h4><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: &quot;abcabcbb&quot;</span><br><span class=\"line\">输出: 3</span><br><span class=\"line\">解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3。</span><br></pre></td></tr></table></figure>\n<h4 id=\"示例2\"><a href=\"#示例2\" class=\"headerlink\" title=\"示例2\"></a>示例2</h4><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: &quot;bbbbb&quot;</span><br><span class=\"line\">输出: 1</span><br><span class=\"line\">解释: 因为无重复字符的最长子串是 &quot;b&quot;，所以其长度为 1。</span><br></pre></td></tr></table></figure>\n<h4 id=\"示例3\"><a href=\"#示例3\" class=\"headerlink\" title=\"示例3\"></a>示例3</h4><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: &quot;pwwkew&quot;</span><br><span class=\"line\">输出: 3</span><br><span class=\"line\">解释: 因为无重复字符的最长子串是 &quot;wke&quot;，所以其长度为 3。</span><br><span class=\"line\">     请注意，你的答案必须是 子串 的长度，&quot;pwke&quot; 是一个子序列，不是子串。</span><br></pre></td></tr></table></figure>\n<h3 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h3><h4 id=\"解法一-维护数组\"><a href=\"#解法一-维护数组\" class=\"headerlink\" title=\"解法一: 维护数组\"></a>解法一: 维护数组</h4><p><strong>解题思路：</strong>使用一个数组来维护滑动窗口</p>\n<p>遍历字符串，判断字符是否在滑动窗口数组里</p>\n<ul>\n<li>不在则<code>push</code>进数组</li>\n<li>在则删除滑动窗口数组里相同字符及相同字符前的字符，然后将当前字符<code>push</code>进数组</li>\n<li>然后将<code>max</code>更新为当前最长子串的长度</li>\n</ul>\n<p>遍历完，返回<code>max</code>即可</p>\n<p><strong>画图帮助理解一下：</strong></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/19/dQtNVO.jpg\" alt=\"维护数组\"></p>\n<p><strong>代码实现：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLongestSubstring = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 创建空数组及最大长度0</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> arr = [], max = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"comment\">// 遍历字符串</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取当前字符在数组中的下标(-1则不存在)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> index = arr.indexOf(s[i])</span><br><span class=\"line\">    <span class=\"comment\">// 当前字符存在时删除数组中与当前字符相同的字符之前的元素</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(index !== <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      arr.splice(<span class=\"number\">0</span>, index+<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 将当前字符push进数组</span></span><br><span class=\"line\">    arr.push(s.charAt(i)) <span class=\"comment\">// charAt() 方法可返回指定位置的字符。</span></span><br><span class=\"line\">    <span class=\"comment\">// 存储最大值(若当前数组的长度比最大值大则存储)</span></span><br><span class=\"line\">    max = <span class=\"built_in\">Math</span>.max(arr.length, max)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> max</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>代码优化</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLongestSubstring = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arr = [], max = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> index = arr.indexOf(s[i])</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(index !== <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 只有当数组需要删除相同元素时才做最大值的存储</span></span><br><span class=\"line\">      max = <span class=\"built_in\">Math</span>.max(arr.length, max)</span><br><span class=\"line\">      arr.splice(<span class=\"number\">0</span>, index+<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    arr.push(s.charAt(i))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 若字符串中所有字符均不同 至少进行一次最大值的存储</span></span><br><span class=\"line\">  max = <span class=\"built_in\">Math</span>.max(arr.length, max)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> max</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>时间复杂度：</strong>O(n<sup>2</sup>)， 其中<code>arr.indexOf()</code>时间复杂度为O(n)，<code>arr.splice(0, index+1)</code>的时间复杂度也为 O(n)</p>\n<p><strong>空间复杂度：</strong>O(n)</p>\n<h4 id=\"解法二-维护下标\"><a href=\"#解法二-维护下标\" class=\"headerlink\" title=\"解法二: 维护下标\"></a>解法二: 维护下标</h4><p><strong>解题思路：</strong>使用下标来维护滑动窗口</p>\n<p><strong>代码实现：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLongestSubstring = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 初始化下标值0及最大长度0</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> index = <span class=\"number\">0</span>, max = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"comment\">// i为滑动窗口最左侧的元素下标 j为最右侧元素下标 遍历字符串</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>; j &lt; s.length; j++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 查看当前元素是否存在于滑动窗口中</span></span><br><span class=\"line\">    index = s.substring(i, j).indexOf(s[j]) <span class=\"comment\">// substring() 方法用于提取字符串中介于两个指定下标之间的字符。</span></span><br><span class=\"line\">    <span class=\"comment\">// 若存在 将最左侧元素的下标 更新为与当前元素相同的最左侧元素下标+1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(index !== <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      i = i + index + <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 记录最大值 滑动窗口最右侧下标-最左侧下标+1</span></span><br><span class=\"line\">    max = <span class=\"built_in\">Math</span>.max(max, j - i + <span class=\"number\">1</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> max</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>时间复杂度：</strong>O(n<sup>2</sup>)</p>\n<p><strong>空间复杂度：</strong>O(n)</p>\n<h4 id=\"解法三-优化的Map\"><a href=\"#解法三-优化的Map\" class=\"headerlink\" title=\"解法三: 优化的Map\"></a>解法三: 优化的Map</h4><p><strong>解题思路：</strong></p>\n<p>使用<code>map</code>来存储当前已经遍历过的字符，<code>key</code>为字符，<code>value</code>为下标</p>\n<p>使用<code>i</code>来标记无重复子串开始下标，<code>j</code>为当前遍历字符下标</p>\n<p>遍历字符串，判断当前字符是否已经在<code>map</code>中存在，存在则更新无重复子串开始下标<code>i</code>为相同字符的下一位置，<br>此时从<code>i</code>到<code>j</code>为最新的无重复子串，更新<code>max</code>，将当前字符与下标放入<code>map</code>中</p>\n<p>最后，返回<code>max</code>即可</p>\n<p><strong>画图帮助理解一下：</strong></p>\n<p><img src=\"https://s1.ax1x.com/2020/08/19/dlbEvQ.jpg\" alt=\"map\"></p>\n<p><strong>代码实现：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLongestSubstring = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 初始化map及最大值</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> map = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>(), max = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化无重复子串开始下标i 当前遍历字符下标j 遍历字符串</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>; j &lt; s.length; j++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 判断当前值是否存在于map中</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(map.has(s[j])) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 若存在 将无重复子串开始下标i 赋值为重复元素下标+1</span></span><br><span class=\"line\">      <span class=\"comment\">// 注意 赋值时需比较当前查找到的重复元素下标是否比i大</span></span><br><span class=\"line\">      i = <span class=\"built_in\">Math</span>.max(map.get(s[j]) + <span class=\"number\">1</span>, i)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 更新无重读子串最大值</span></span><br><span class=\"line\">    max = <span class=\"built_in\">Math</span>.max(max, j - i + <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 更新map中重复字符的下标为最新的下标</span></span><br><span class=\"line\">    map.set(s[j], j)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> max</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>输出查看一下数据的变化：</strong></p>\n<ul>\n<li>当数据为<code>abba</code>时</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/08/19/dlrqER.png\" alt=\"abba\"></p>\n<ul>\n<li>当数据为<code>abcabcbb</code>时</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/08/19/dlrLU1.png\" alt=\"abcabcbb\"></p>\n<p><strong>时间复杂度：</strong>O(n)</p>\n<p><strong>空间复杂度：</strong>O(n)</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/\">无重复字符的最长子串</a></li>\n<li><a href=\"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/wu-zhong-fu-zi-fu-de-zui-chang-zi-chuan-by-leetc-2/\">无重复字符的最长子串官方解题思路</a></li>\n<li><a href=\"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/zi-jie-leetcode3wu-zhong-fu-zi-fu-de-zui-chang-zi-/\">JavaScript三种解法：无重复字符的最长子串</a></li>\n</ul>"},{"title":"时间与空间复杂度","toc":true,"abbrlink":"a5b1fab6","date":"2020-08-24T07:10:31.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/08/04/awruy8.jpg)\n\n<!-- more -->\n\n## 前言\n\n算法（Algorithm）是指用来操作数据、解决程序问题的一组方法。对于同一个问题，使用不同的算法，也许最终得到的结果是一样的，但在过程中消耗的资源和时间却会有很大的区别。\n\n那么我们应该如何去衡量不同算法之间的优劣呢？\n\n主要还是从算法所占用的`时间`和`空间`两个维度去考量。\n\n* 时间维度：是指执行当前算法所消耗的时间，我们通常用`时间复杂度`来描述。\n* 空间维度：是指执行当前算法需要占用多少内存空间，我们通常用`空间复杂度`来描述。\n\n因此，评价一个算法的效率主要是看它的时间复杂度和空间复杂度情况。然而，有的时候时间和空间却又是`鱼和熊掌`，不可兼得的，那么我们就需要从中去取一个平衡点。\n\n下面我来分别介绍一下`时间复杂度`和`空间复杂度`的计算方式。\n\n## 时间复杂度\n\n我们想要知道一个算法的`时间复杂度`，很多人首先想到的的方法就是把这个算法程序运行一遍，那么它所消耗的时间就自然而然知道了。\n\n这种方式可以吗？当然可以，不过它也有很多弊端。\n这种方式非常容易受运行环境的影响，在性能高的机器上跑出来的结果与在性能低的机器上跑的结果相差会很大。而且对测试时使用的数据规模也有很大关系。再者，并我们在写算法的时候，还没有办法完整的去运行呢。\n\n因此，另一种更为通用的方法就出来了：**`大O符号表示法`**，即 T(n) = O(f(n))\n\n我们先来看个例子：\n\n```js\nfor(i=1; i<=n; ++i)\n{\n   j = i;\n   j++;\n}\n```\n\n通过`大O符号表示法`，这段代码的时间复杂度为：O(n) ，为什么呢?\n\n在大O符号表示法中，时间复杂度的公式是： T(n) = O( f(n) )，其中f(n) 表示每行代码执行次数之和，而 O 表示正比例关系，这个公式的全称是：**算法的渐进时间复杂度**。\n\n我们继续看上面的例子，假设每行代码的执行时间都是一样的，我们用 1颗粒时间 来表示，那么这个例子的第一行耗时是1个颗粒时间，第三行的执行时间是 n个颗粒时间，第四行的执行时间也是 n个颗粒时间（第二行和第五行是符号，暂时忽略），那么总时间就是 1颗粒时间 + n颗粒时间 + n颗粒时间 ，即 (1+2n)个颗粒时间，即： T(n) = (1+2n)个颗粒时间，从这个结果可以看出，这个算法的耗时是随着n的变化而变化，因此，我们可以简化的将这个算法的时间复杂度表示为：T(n) = O(n)\n\n为什么可以这么去简化呢，因为大O符号表示法并不是用于来真实代表算法的执行时间的，它是用来表示代码执行时间的增长变化趋势的。\n\n所以上面的例子中，如果n无限大的时候，T(n) = time(1+2n)中的常量1就没有意义了，倍数2也意义不大。因此直接简化为T(n) = O(n) 就可以了。\n\n常见的时间复杂度量级有：\n\n* 常数阶O(1)\n* 对数阶O(logN)\n* 线性阶O(n)\n* 线性对数阶O(nlogN)\n* 平方阶O(n<sup>2</sup>)\n* 立方阶O(n<sup>3</sup>)\n* K次方阶O(n<sup>k</sup>)\n* 指数阶(2<sup>n</sup>)\n\n上面从上至下依次的时间复杂度越来越大，执行的效率越来越低。\n\n![](https://s1.ax1x.com/2020/08/24/dDOqVH.png)\n\n下面选取一些较为常用的来讲解一下（没有严格按照顺序）：\n\n### 常数阶O(1)\n\n无论代码执行了多少行，只要是没有循环等复杂结构，那这个代码的时间复杂度就都是O(1)，如：\n\n```js\nint i = 1;\nint j = 2;\n++i;\nj++;\nint m = i + j;\n```\n\n上述代码在执行的时候，它消耗的时候并不随着某个变量的增长而增长，那么无论这类代码有多长，即使有几万几十万行，都可以用O(1)来表示它的时间复杂度。\n\n### 对数阶O(logN)\n\n还是先来看代码：\n\n```js\nint i = 1;\nwhile(i<n)\n{\n    i = i * 2;\n}\n```\n\n从上面代码可以看到，在while循环里面，每次都将 i 乘以 2，乘完之后，i 距离 n 就越来越近了。我们试着求解一下，假设循环x次之后，i 就大于 2 了，此时这个循环就退出了，也就是说 2 的 x 次方等于 n，那么 x = log(2<sup>n</sup>)\n也就是说当循环 log(2<sup>n</sup>) 次以后，这个代码就结束了。因此这个代码的时间复杂度为：**O(logn)**\n\n### 线性阶O(n)\n\n这个在最开始的代码示例中就讲解过了，如：\n\n```js\nfor(i=1; i<=n; ++i)\n{\n   j = i;\n   j++;\n}\n```\n\n这段代码，for循环里面的代码会执行n遍，因此它消耗的时间是随着n的变化而变化的，因此这类代码都可以用O(n)来表示它的时间复杂度。\n\n### 线性对数阶O(nlogN)\n\n线性对数阶O(nlogN) 其实非常容易理解，将时间复杂度为O(logn)的代码循环N遍的话，那么它的时间复杂度就是 n * O(logN)，也就是了O(nlogN)。\n\n就拿上面的代码加一点修改来举例：\n\n```js\nfor(m=1; m<n; m++)\n{\n    i = 1;\n    while(i<n)\n    {\n        i = i * 2;\n    }\n}\n```\n\n### 平方阶O(n<sup>2</sup>)\n\n平方阶O(n<sup>2</sup>) 就更容易理解了，如果把 O(n) 的代码再嵌套循环一遍，它的时间复杂度就是 O(n<sup>2</sup>) 了。\n举例：\n\n```js\nfor(x=1; i<=n; x++)\n{\n   for(i=1; i<=n; i++)\n    {\n       j = i;\n       j++;\n    }\n}\n```\n\n这段代码其实就是嵌套了2层n循环，它的时间复杂度就是 O(n*n)，即 O(n<sup>2</sup>)\n如果将其中一层循环的n改成m，即：\n\n```js\nfor(x=1; i<=m; x++)\n{\n   for(i=1; i<=n; i++)\n    {\n       j = i;\n       j++;\n    }\n}\n```\n\n那它的时间复杂度就变成了 O(m*n)\n\n### 立方阶O(n<sup>3</sup>)、K次方阶O(n<sup>k</sup>)\n\n参考上面的O(n²) 去理解就好了，O(n³)相当于三层n循环，其它的类似。\n\n除此之外，其实还有 平均时间复杂度、均摊时间复杂度、最坏时间复杂度、最好时间复杂度的分析方法，有点复杂，这里就不展开了。\n\n## 空间复杂度\n\n我们先看一个代码：\n\n```js\nint[] m = new int[n]\nfor(i=1; i<=n; ++i)\n{\n   j = i;\n   j++;\n}\n```\n\n这段代码中，第一行new了一个数组出来，这个数据占用的大小为n，这段代码的2-6行，虽然有循环，但没有再分配新的空间，因此，这段代码的空间复杂度主要看第一行即可，即 S(n) = O(n)\n\n## 参考资料\n\n* [算法的时间与空间复杂度（一看就懂）](https://zhuanlan.zhihu.com/p/50479555)\n* [维基百科-时间复杂度](https://zh.wikipedia.org/wiki/%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6)\n* [（数据结构）十分钟搞定时间复杂度（算法的时间复杂度）](https://www.jianshu.com/p/f4cca5ce055a)","source":"_posts/时间与空间复杂度.md","raw":"---\ntitle: 时间与空间复杂度\ntags:\n  - 技术积累\n  - 前端\n  - 算法\ncategories:\n  - 技术积累\n  - 前端\n  - 算法\ntoc: true\nabbrlink: a5b1fab6\ndate: 2020-08-24 15:10:31\n---\n\n![首屏图](https://s1.ax1x.com/2020/08/04/awruy8.jpg)\n\n<!-- more -->\n\n## 前言\n\n算法（Algorithm）是指用来操作数据、解决程序问题的一组方法。对于同一个问题，使用不同的算法，也许最终得到的结果是一样的，但在过程中消耗的资源和时间却会有很大的区别。\n\n那么我们应该如何去衡量不同算法之间的优劣呢？\n\n主要还是从算法所占用的`时间`和`空间`两个维度去考量。\n\n* 时间维度：是指执行当前算法所消耗的时间，我们通常用`时间复杂度`来描述。\n* 空间维度：是指执行当前算法需要占用多少内存空间，我们通常用`空间复杂度`来描述。\n\n因此，评价一个算法的效率主要是看它的时间复杂度和空间复杂度情况。然而，有的时候时间和空间却又是`鱼和熊掌`，不可兼得的，那么我们就需要从中去取一个平衡点。\n\n下面我来分别介绍一下`时间复杂度`和`空间复杂度`的计算方式。\n\n## 时间复杂度\n\n我们想要知道一个算法的`时间复杂度`，很多人首先想到的的方法就是把这个算法程序运行一遍，那么它所消耗的时间就自然而然知道了。\n\n这种方式可以吗？当然可以，不过它也有很多弊端。\n这种方式非常容易受运行环境的影响，在性能高的机器上跑出来的结果与在性能低的机器上跑的结果相差会很大。而且对测试时使用的数据规模也有很大关系。再者，并我们在写算法的时候，还没有办法完整的去运行呢。\n\n因此，另一种更为通用的方法就出来了：**`大O符号表示法`**，即 T(n) = O(f(n))\n\n我们先来看个例子：\n\n```js\nfor(i=1; i<=n; ++i)\n{\n   j = i;\n   j++;\n}\n```\n\n通过`大O符号表示法`，这段代码的时间复杂度为：O(n) ，为什么呢?\n\n在大O符号表示法中，时间复杂度的公式是： T(n) = O( f(n) )，其中f(n) 表示每行代码执行次数之和，而 O 表示正比例关系，这个公式的全称是：**算法的渐进时间复杂度**。\n\n我们继续看上面的例子，假设每行代码的执行时间都是一样的，我们用 1颗粒时间 来表示，那么这个例子的第一行耗时是1个颗粒时间，第三行的执行时间是 n个颗粒时间，第四行的执行时间也是 n个颗粒时间（第二行和第五行是符号，暂时忽略），那么总时间就是 1颗粒时间 + n颗粒时间 + n颗粒时间 ，即 (1+2n)个颗粒时间，即： T(n) = (1+2n)个颗粒时间，从这个结果可以看出，这个算法的耗时是随着n的变化而变化，因此，我们可以简化的将这个算法的时间复杂度表示为：T(n) = O(n)\n\n为什么可以这么去简化呢，因为大O符号表示法并不是用于来真实代表算法的执行时间的，它是用来表示代码执行时间的增长变化趋势的。\n\n所以上面的例子中，如果n无限大的时候，T(n) = time(1+2n)中的常量1就没有意义了，倍数2也意义不大。因此直接简化为T(n) = O(n) 就可以了。\n\n常见的时间复杂度量级有：\n\n* 常数阶O(1)\n* 对数阶O(logN)\n* 线性阶O(n)\n* 线性对数阶O(nlogN)\n* 平方阶O(n<sup>2</sup>)\n* 立方阶O(n<sup>3</sup>)\n* K次方阶O(n<sup>k</sup>)\n* 指数阶(2<sup>n</sup>)\n\n上面从上至下依次的时间复杂度越来越大，执行的效率越来越低。\n\n![](https://s1.ax1x.com/2020/08/24/dDOqVH.png)\n\n下面选取一些较为常用的来讲解一下（没有严格按照顺序）：\n\n### 常数阶O(1)\n\n无论代码执行了多少行，只要是没有循环等复杂结构，那这个代码的时间复杂度就都是O(1)，如：\n\n```js\nint i = 1;\nint j = 2;\n++i;\nj++;\nint m = i + j;\n```\n\n上述代码在执行的时候，它消耗的时候并不随着某个变量的增长而增长，那么无论这类代码有多长，即使有几万几十万行，都可以用O(1)来表示它的时间复杂度。\n\n### 对数阶O(logN)\n\n还是先来看代码：\n\n```js\nint i = 1;\nwhile(i<n)\n{\n    i = i * 2;\n}\n```\n\n从上面代码可以看到，在while循环里面，每次都将 i 乘以 2，乘完之后，i 距离 n 就越来越近了。我们试着求解一下，假设循环x次之后，i 就大于 2 了，此时这个循环就退出了，也就是说 2 的 x 次方等于 n，那么 x = log(2<sup>n</sup>)\n也就是说当循环 log(2<sup>n</sup>) 次以后，这个代码就结束了。因此这个代码的时间复杂度为：**O(logn)**\n\n### 线性阶O(n)\n\n这个在最开始的代码示例中就讲解过了，如：\n\n```js\nfor(i=1; i<=n; ++i)\n{\n   j = i;\n   j++;\n}\n```\n\n这段代码，for循环里面的代码会执行n遍，因此它消耗的时间是随着n的变化而变化的，因此这类代码都可以用O(n)来表示它的时间复杂度。\n\n### 线性对数阶O(nlogN)\n\n线性对数阶O(nlogN) 其实非常容易理解，将时间复杂度为O(logn)的代码循环N遍的话，那么它的时间复杂度就是 n * O(logN)，也就是了O(nlogN)。\n\n就拿上面的代码加一点修改来举例：\n\n```js\nfor(m=1; m<n; m++)\n{\n    i = 1;\n    while(i<n)\n    {\n        i = i * 2;\n    }\n}\n```\n\n### 平方阶O(n<sup>2</sup>)\n\n平方阶O(n<sup>2</sup>) 就更容易理解了，如果把 O(n) 的代码再嵌套循环一遍，它的时间复杂度就是 O(n<sup>2</sup>) 了。\n举例：\n\n```js\nfor(x=1; i<=n; x++)\n{\n   for(i=1; i<=n; i++)\n    {\n       j = i;\n       j++;\n    }\n}\n```\n\n这段代码其实就是嵌套了2层n循环，它的时间复杂度就是 O(n*n)，即 O(n<sup>2</sup>)\n如果将其中一层循环的n改成m，即：\n\n```js\nfor(x=1; i<=m; x++)\n{\n   for(i=1; i<=n; i++)\n    {\n       j = i;\n       j++;\n    }\n}\n```\n\n那它的时间复杂度就变成了 O(m*n)\n\n### 立方阶O(n<sup>3</sup>)、K次方阶O(n<sup>k</sup>)\n\n参考上面的O(n²) 去理解就好了，O(n³)相当于三层n循环，其它的类似。\n\n除此之外，其实还有 平均时间复杂度、均摊时间复杂度、最坏时间复杂度、最好时间复杂度的分析方法，有点复杂，这里就不展开了。\n\n## 空间复杂度\n\n我们先看一个代码：\n\n```js\nint[] m = new int[n]\nfor(i=1; i<=n; ++i)\n{\n   j = i;\n   j++;\n}\n```\n\n这段代码中，第一行new了一个数组出来，这个数据占用的大小为n，这段代码的2-6行，虽然有循环，但没有再分配新的空间，因此，这段代码的空间复杂度主要看第一行即可，即 S(n) = O(n)\n\n## 参考资料\n\n* [算法的时间与空间复杂度（一看就懂）](https://zhuanlan.zhihu.com/p/50479555)\n* [维基百科-时间复杂度](https://zh.wikipedia.org/wiki/%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6)\n* [（数据结构）十分钟搞定时间复杂度（算法的时间复杂度）](https://www.jianshu.com/p/f4cca5ce055a)","slug":"时间与空间复杂度","published":1,"updated":"2020-12-30T01:08:23.106Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyq000y2an9fnez7bwd","content":"<p><img src=\"https://s1.ax1x.com/2020/08/04/awruy8.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>算法（Algorithm）是指用来操作数据、解决程序问题的一组方法。对于同一个问题，使用不同的算法，也许最终得到的结果是一样的，但在过程中消耗的资源和时间却会有很大的区别。</p>\n<p>那么我们应该如何去衡量不同算法之间的优劣呢？</p>\n<p>主要还是从算法所占用的<code>时间</code>和<code>空间</code>两个维度去考量。</p>\n<ul>\n<li>时间维度：是指执行当前算法所消耗的时间，我们通常用<code>时间复杂度</code>来描述。</li>\n<li>空间维度：是指执行当前算法需要占用多少内存空间，我们通常用<code>空间复杂度</code>来描述。</li>\n</ul>\n<p>因此，评价一个算法的效率主要是看它的时间复杂度和空间复杂度情况。然而，有的时候时间和空间却又是<code>鱼和熊掌</code>，不可兼得的，那么我们就需要从中去取一个平衡点。</p>\n<p>下面我来分别介绍一下<code>时间复杂度</code>和<code>空间复杂度</code>的计算方式。</p>\n<h2 id=\"时间复杂度\"><a href=\"#时间复杂度\" class=\"headerlink\" title=\"时间复杂度\"></a>时间复杂度</h2><p>我们想要知道一个算法的<code>时间复杂度</code>，很多人首先想到的的方法就是把这个算法程序运行一遍，那么它所消耗的时间就自然而然知道了。</p>\n<p>这种方式可以吗？当然可以，不过它也有很多弊端。<br>这种方式非常容易受运行环境的影响，在性能高的机器上跑出来的结果与在性能低的机器上跑的结果相差会很大。而且对测试时使用的数据规模也有很大关系。再者，并我们在写算法的时候，还没有办法完整的去运行呢。</p>\n<p>因此，另一种更为通用的方法就出来了：<strong><code>大O符号表示法</code></strong>，即 T(n) = O(f(n))</p>\n<p>我们先来看个例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>; i&lt;=n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   j = i;</span><br><span class=\"line\">   j++;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过<code>大O符号表示法</code>，这段代码的时间复杂度为：O(n) ，为什么呢?</p>\n<p>在大O符号表示法中，时间复杂度的公式是： T(n) = O( f(n) )，其中f(n) 表示每行代码执行次数之和，而 O 表示正比例关系，这个公式的全称是：<strong>算法的渐进时间复杂度</strong>。</p>\n<p>我们继续看上面的例子，假设每行代码的执行时间都是一样的，我们用 1颗粒时间 来表示，那么这个例子的第一行耗时是1个颗粒时间，第三行的执行时间是 n个颗粒时间，第四行的执行时间也是 n个颗粒时间（第二行和第五行是符号，暂时忽略），那么总时间就是 1颗粒时间 + n颗粒时间 + n颗粒时间 ，即 (1+2n)个颗粒时间，即： T(n) = (1+2n)个颗粒时间，从这个结果可以看出，这个算法的耗时是随着n的变化而变化，因此，我们可以简化的将这个算法的时间复杂度表示为：T(n) = O(n)</p>\n<p>为什么可以这么去简化呢，因为大O符号表示法并不是用于来真实代表算法的执行时间的，它是用来表示代码执行时间的增长变化趋势的。</p>\n<p>所以上面的例子中，如果n无限大的时候，T(n) = time(1+2n)中的常量1就没有意义了，倍数2也意义不大。因此直接简化为T(n) = O(n) 就可以了。</p>\n<p>常见的时间复杂度量级有：</p>\n<ul>\n<li>常数阶O(1)</li>\n<li>对数阶O(logN)</li>\n<li>线性阶O(n)</li>\n<li>线性对数阶O(nlogN)</li>\n<li>平方阶O(n<sup>2</sup>)</li>\n<li>立方阶O(n<sup>3</sup>)</li>\n<li>K次方阶O(n<sup>k</sup>)</li>\n<li>指数阶(2<sup>n</sup>)</li>\n</ul>\n<p>上面从上至下依次的时间复杂度越来越大，执行的效率越来越低。</p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dDOqVH.png\" alt=\"\"></p>\n<p>下面选取一些较为常用的来讲解一下（没有严格按照顺序）：</p>\n<h3 id=\"常数阶O-1\"><a href=\"#常数阶O-1\" class=\"headerlink\" title=\"常数阶O(1)\"></a>常数阶O(1)</h3><p>无论代码执行了多少行，只要是没有循环等复杂结构，那这个代码的时间复杂度就都是O(1)，如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int i = <span class=\"number\">1</span>;</span><br><span class=\"line\">int j = <span class=\"number\">2</span>;</span><br><span class=\"line\">++i;</span><br><span class=\"line\">j++;</span><br><span class=\"line\">int m = i + j;</span><br></pre></td></tr></table></figure>\n<p>上述代码在执行的时候，它消耗的时候并不随着某个变量的增长而增长，那么无论这类代码有多长，即使有几万几十万行，都可以用O(1)来表示它的时间复杂度。</p>\n<h3 id=\"对数阶O-logN\"><a href=\"#对数阶O-logN\" class=\"headerlink\" title=\"对数阶O(logN)\"></a>对数阶O(logN)</h3><p>还是先来看代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int i = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(i&lt;n)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    i = i * <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>从上面代码可以看到，在while循环里面，每次都将 i 乘以 2，乘完之后，i 距离 n 就越来越近了。我们试着求解一下，假设循环x次之后，i 就大于 2 了，此时这个循环就退出了，也就是说 2 的 x 次方等于 n，那么 x = log(2<sup>n</sup>)<br>也就是说当循环 log(2<sup>n</sup>) 次以后，这个代码就结束了。因此这个代码的时间复杂度为：<strong>O(logn)</strong></p>\n<h3 id=\"线性阶O-n\"><a href=\"#线性阶O-n\" class=\"headerlink\" title=\"线性阶O(n)\"></a>线性阶O(n)</h3><p>这个在最开始的代码示例中就讲解过了，如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>; i&lt;=n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   j = i;</span><br><span class=\"line\">   j++;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这段代码，for循环里面的代码会执行n遍，因此它消耗的时间是随着n的变化而变化的，因此这类代码都可以用O(n)来表示它的时间复杂度。</p>\n<h3 id=\"线性对数阶O-nlogN\"><a href=\"#线性对数阶O-nlogN\" class=\"headerlink\" title=\"线性对数阶O(nlogN)\"></a>线性对数阶O(nlogN)</h3><p>线性对数阶O(nlogN) 其实非常容易理解，将时间复杂度为O(logn)的代码循环N遍的话，那么它的时间复杂度就是 n * O(logN)，也就是了O(nlogN)。</p>\n<p>就拿上面的代码加一点修改来举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(m=<span class=\"number\">1</span>; m&lt;n; m++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    i = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        i = i * <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"平方阶O-n2\"><a href=\"#平方阶O-n2\" class=\"headerlink\" title=\"平方阶O(n2)\"></a>平方阶O(n<sup>2</sup>)</h3><p>平方阶O(n<sup>2</sup>) 就更容易理解了，如果把 O(n) 的代码再嵌套循环一遍，它的时间复杂度就是 O(n<sup>2</sup>) 了。<br>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(x=<span class=\"number\">1</span>; i&lt;=n; x++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>; i&lt;=n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">       j = i;</span><br><span class=\"line\">       j++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这段代码其实就是嵌套了2层n循环，它的时间复杂度就是 O(n*n)，即 O(n<sup>2</sup>)<br>如果将其中一层循环的n改成m，即：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(x=<span class=\"number\">1</span>; i&lt;=m; x++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>; i&lt;=n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">       j = i;</span><br><span class=\"line\">       j++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那它的时间复杂度就变成了 O(m*n)</p>\n<h3 id=\"立方阶O-n3-、K次方阶O-nk\"><a href=\"#立方阶O-n3-、K次方阶O-nk\" class=\"headerlink\" title=\"立方阶O(n3)、K次方阶O(nk)\"></a>立方阶O(n<sup>3</sup>)、K次方阶O(n<sup>k</sup>)</h3><p>参考上面的O(n²) 去理解就好了，O(n³)相当于三层n循环，其它的类似。</p>\n<p>除此之外，其实还有 平均时间复杂度、均摊时间复杂度、最坏时间复杂度、最好时间复杂度的分析方法，有点复杂，这里就不展开了。</p>\n<h2 id=\"空间复杂度\"><a href=\"#空间复杂度\" class=\"headerlink\" title=\"空间复杂度\"></a>空间复杂度</h2><p>我们先看一个代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int[] m = <span class=\"keyword\">new</span> int[n]</span><br><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>; i&lt;=n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   j = i;</span><br><span class=\"line\">   j++;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这段代码中，第一行new了一个数组出来，这个数据占用的大小为n，这段代码的2-6行，虽然有循环，但没有再分配新的空间，因此，这段代码的空间复杂度主要看第一行即可，即 S(n) = O(n)</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/50479555\">算法的时间与空间复杂度（一看就懂）</a></li>\n<li><a href=\"https://zh.wikipedia.org/wiki/%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6\">维基百科-时间复杂度</a></li>\n<li><a href=\"https://www.jianshu.com/p/f4cca5ce055a\">（数据结构）十分钟搞定时间复杂度（算法的时间复杂度）</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/08/04/awruy8.jpg\" alt=\"首屏图\"></p>","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>算法（Algorithm）是指用来操作数据、解决程序问题的一组方法。对于同一个问题，使用不同的算法，也许最终得到的结果是一样的，但在过程中消耗的资源和时间却会有很大的区别。</p>\n<p>那么我们应该如何去衡量不同算法之间的优劣呢？</p>\n<p>主要还是从算法所占用的<code>时间</code>和<code>空间</code>两个维度去考量。</p>\n<ul>\n<li>时间维度：是指执行当前算法所消耗的时间，我们通常用<code>时间复杂度</code>来描述。</li>\n<li>空间维度：是指执行当前算法需要占用多少内存空间，我们通常用<code>空间复杂度</code>来描述。</li>\n</ul>\n<p>因此，评价一个算法的效率主要是看它的时间复杂度和空间复杂度情况。然而，有的时候时间和空间却又是<code>鱼和熊掌</code>，不可兼得的，那么我们就需要从中去取一个平衡点。</p>\n<p>下面我来分别介绍一下<code>时间复杂度</code>和<code>空间复杂度</code>的计算方式。</p>\n<h2 id=\"时间复杂度\"><a href=\"#时间复杂度\" class=\"headerlink\" title=\"时间复杂度\"></a>时间复杂度</h2><p>我们想要知道一个算法的<code>时间复杂度</code>，很多人首先想到的的方法就是把这个算法程序运行一遍，那么它所消耗的时间就自然而然知道了。</p>\n<p>这种方式可以吗？当然可以，不过它也有很多弊端。<br>这种方式非常容易受运行环境的影响，在性能高的机器上跑出来的结果与在性能低的机器上跑的结果相差会很大。而且对测试时使用的数据规模也有很大关系。再者，并我们在写算法的时候，还没有办法完整的去运行呢。</p>\n<p>因此，另一种更为通用的方法就出来了：<strong><code>大O符号表示法</code></strong>，即 T(n) = O(f(n))</p>\n<p>我们先来看个例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>; i&lt;=n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   j = i;</span><br><span class=\"line\">   j++;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过<code>大O符号表示法</code>，这段代码的时间复杂度为：O(n) ，为什么呢?</p>\n<p>在大O符号表示法中，时间复杂度的公式是： T(n) = O( f(n) )，其中f(n) 表示每行代码执行次数之和，而 O 表示正比例关系，这个公式的全称是：<strong>算法的渐进时间复杂度</strong>。</p>\n<p>我们继续看上面的例子，假设每行代码的执行时间都是一样的，我们用 1颗粒时间 来表示，那么这个例子的第一行耗时是1个颗粒时间，第三行的执行时间是 n个颗粒时间，第四行的执行时间也是 n个颗粒时间（第二行和第五行是符号，暂时忽略），那么总时间就是 1颗粒时间 + n颗粒时间 + n颗粒时间 ，即 (1+2n)个颗粒时间，即： T(n) = (1+2n)个颗粒时间，从这个结果可以看出，这个算法的耗时是随着n的变化而变化，因此，我们可以简化的将这个算法的时间复杂度表示为：T(n) = O(n)</p>\n<p>为什么可以这么去简化呢，因为大O符号表示法并不是用于来真实代表算法的执行时间的，它是用来表示代码执行时间的增长变化趋势的。</p>\n<p>所以上面的例子中，如果n无限大的时候，T(n) = time(1+2n)中的常量1就没有意义了，倍数2也意义不大。因此直接简化为T(n) = O(n) 就可以了。</p>\n<p>常见的时间复杂度量级有：</p>\n<ul>\n<li>常数阶O(1)</li>\n<li>对数阶O(logN)</li>\n<li>线性阶O(n)</li>\n<li>线性对数阶O(nlogN)</li>\n<li>平方阶O(n<sup>2</sup>)</li>\n<li>立方阶O(n<sup>3</sup>)</li>\n<li>K次方阶O(n<sup>k</sup>)</li>\n<li>指数阶(2<sup>n</sup>)</li>\n</ul>\n<p>上面从上至下依次的时间复杂度越来越大，执行的效率越来越低。</p>\n<p><img src=\"https://s1.ax1x.com/2020/08/24/dDOqVH.png\" alt=\"\"></p>\n<p>下面选取一些较为常用的来讲解一下（没有严格按照顺序）：</p>\n<h3 id=\"常数阶O-1\"><a href=\"#常数阶O-1\" class=\"headerlink\" title=\"常数阶O(1)\"></a>常数阶O(1)</h3><p>无论代码执行了多少行，只要是没有循环等复杂结构，那这个代码的时间复杂度就都是O(1)，如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int i = <span class=\"number\">1</span>;</span><br><span class=\"line\">int j = <span class=\"number\">2</span>;</span><br><span class=\"line\">++i;</span><br><span class=\"line\">j++;</span><br><span class=\"line\">int m = i + j;</span><br></pre></td></tr></table></figure>\n<p>上述代码在执行的时候，它消耗的时候并不随着某个变量的增长而增长，那么无论这类代码有多长，即使有几万几十万行，都可以用O(1)来表示它的时间复杂度。</p>\n<h3 id=\"对数阶O-logN\"><a href=\"#对数阶O-logN\" class=\"headerlink\" title=\"对数阶O(logN)\"></a>对数阶O(logN)</h3><p>还是先来看代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int i = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(i&lt;n)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    i = i * <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>从上面代码可以看到，在while循环里面，每次都将 i 乘以 2，乘完之后，i 距离 n 就越来越近了。我们试着求解一下，假设循环x次之后，i 就大于 2 了，此时这个循环就退出了，也就是说 2 的 x 次方等于 n，那么 x = log(2<sup>n</sup>)<br>也就是说当循环 log(2<sup>n</sup>) 次以后，这个代码就结束了。因此这个代码的时间复杂度为：<strong>O(logn)</strong></p>\n<h3 id=\"线性阶O-n\"><a href=\"#线性阶O-n\" class=\"headerlink\" title=\"线性阶O(n)\"></a>线性阶O(n)</h3><p>这个在最开始的代码示例中就讲解过了，如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>; i&lt;=n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   j = i;</span><br><span class=\"line\">   j++;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这段代码，for循环里面的代码会执行n遍，因此它消耗的时间是随着n的变化而变化的，因此这类代码都可以用O(n)来表示它的时间复杂度。</p>\n<h3 id=\"线性对数阶O-nlogN\"><a href=\"#线性对数阶O-nlogN\" class=\"headerlink\" title=\"线性对数阶O(nlogN)\"></a>线性对数阶O(nlogN)</h3><p>线性对数阶O(nlogN) 其实非常容易理解，将时间复杂度为O(logn)的代码循环N遍的话，那么它的时间复杂度就是 n * O(logN)，也就是了O(nlogN)。</p>\n<p>就拿上面的代码加一点修改来举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(m=<span class=\"number\">1</span>; m&lt;n; m++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    i = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        i = i * <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"平方阶O-n2\"><a href=\"#平方阶O-n2\" class=\"headerlink\" title=\"平方阶O(n2)\"></a>平方阶O(n<sup>2</sup>)</h3><p>平方阶O(n<sup>2</sup>) 就更容易理解了，如果把 O(n) 的代码再嵌套循环一遍，它的时间复杂度就是 O(n<sup>2</sup>) 了。<br>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(x=<span class=\"number\">1</span>; i&lt;=n; x++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>; i&lt;=n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">       j = i;</span><br><span class=\"line\">       j++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这段代码其实就是嵌套了2层n循环，它的时间复杂度就是 O(n*n)，即 O(n<sup>2</sup>)<br>如果将其中一层循环的n改成m，即：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(x=<span class=\"number\">1</span>; i&lt;=m; x++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>; i&lt;=n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">       j = i;</span><br><span class=\"line\">       j++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那它的时间复杂度就变成了 O(m*n)</p>\n<h3 id=\"立方阶O-n3-、K次方阶O-nk\"><a href=\"#立方阶O-n3-、K次方阶O-nk\" class=\"headerlink\" title=\"立方阶O(n3)、K次方阶O(nk)\"></a>立方阶O(n<sup>3</sup>)、K次方阶O(n<sup>k</sup>)</h3><p>参考上面的O(n²) 去理解就好了，O(n³)相当于三层n循环，其它的类似。</p>\n<p>除此之外，其实还有 平均时间复杂度、均摊时间复杂度、最坏时间复杂度、最好时间复杂度的分析方法，有点复杂，这里就不展开了。</p>\n<h2 id=\"空间复杂度\"><a href=\"#空间复杂度\" class=\"headerlink\" title=\"空间复杂度\"></a>空间复杂度</h2><p>我们先看一个代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int[] m = <span class=\"keyword\">new</span> int[n]</span><br><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>; i&lt;=n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   j = i;</span><br><span class=\"line\">   j++;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这段代码中，第一行new了一个数组出来，这个数据占用的大小为n，这段代码的2-6行，虽然有循环，但没有再分配新的空间，因此，这段代码的空间复杂度主要看第一行即可，即 S(n) = O(n)</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/50479555\">算法的时间与空间复杂度（一看就懂）</a></li>\n<li><a href=\"https://zh.wikipedia.org/wiki/%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6\">维基百科-时间复杂度</a></li>\n<li><a href=\"https://www.jianshu.com/p/f4cca5ce055a\">（数据结构）十分钟搞定时间复杂度（算法的时间复杂度）</a></li>\n</ul>"},{"title":"最长回文子串","abbrlink":"13c31df7","date":"2020-09-09T11:12:42.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/09/09/w3v1nH.jpg)\n\n<!-- more -->\n\n## LeetCode 题目总结 - 最长回文子串\n\n### 题目\n\n给定一个字符串`s`，找到`s`中最长的回文子串。你可以假设`s`的最大长度为 1000。\n\n### 示例\n\n#### 示例1\n\n```text\n输入: \"babad\"\n输出: \"bab\"\n注意: \"aba\" 也是一个有效答案。\n```\n\n#### 示例2\n\n```text\n输入: \"cbbd\"\n输出: \"bb\"\n```\n\n### 解题\n\n#### 解法一: 暴力枚举法\n\n* 时间复杂度O(n<sup>3</sup>)\n* 空间复杂度O(1)\n\n```js\n/**\n * @param {string} s\n * @return {string}\n */\nvar longestPalindrome = function(s) {\n    function isPalindrome(str) {\n        var len  = str.length\n        var middle = parseInt(len/2)\n        for(var i = 0;i<middle;i++){\n            if(str[i]!=str[len-i-1]){\n                return false\n            }\n        }\n        return true\n    }\n    var ans = '';\n    var max = 0;\n    var len = s.length\n    for(var i = 0;i<len;i++){\n        for(var r = i+1;r<=len;r++){\n            var tmpStr = s.substring(i,r)\n            if(isPalindrome(tmpStr) && tmpStr.length > max){\n                ans = s.substring(i,r)\n                max = tmpStr.length;\n            }\n        }\n    }\n    return ans;\n}\n```\n\n#### 解法二: 动态规划 - A\n\n##### 代码\n\n```js\n/**\n * @param {string} s\n * @return {string}\n */\nvar longestPalindrome = function(s) {\n    if(!s || s.length < 2){\n        return s;\n    }\n    var s_f = s.split('').reverse().join('');   //字符串调转 split字符串转数组 reverse数组顺序调转 join数组拼接字符串\n    var resultStr = s[0];\n    var maxLen = 1;\n    var tmpLen = 1;\n    var maxStrIndex = 0;\n    var len = s.length; //有无实际含义\n    //判断字符串是否回文\n    function isPalinerome(i,r){\n        if(len - i - 1 == r -tmpLen + 1){\n            return true\n        }\n        return false;\n    }\n    //初始化二维数组\n    var len = s.length;\n    var arr = new Array(len);\n    for(var i = 0;i<len;i++){\n        arr[i] = [];\n        for(var r = 0;r<len;r++){\n            arr[i][r] = 0\n        }\n    }\n    for(var i = 0;i<len;i++){\n        for(var r=0;r<len;r++){\n            if(s[i] == s_f[r]){\n                if(i==0 || r==0){\n                    arr[i][r] = 1\n                }else{\n                    arr[i][r] = arr[i-1][r-1] + 1\n                    tmpLen = arr[i][r]\n                }\n                if(tmpLen > maxLen && isPalinerome(i,r)){\n                    maxStrIndex = r;\n                    maxLen = tmpLen;\n                    resultStr =  s.substring(i-tmpLen+1,i+1);\n                }\n            }\n        }\n    }\n    return resultStr;\n};\n```\n\n#### 解法二: 动态规划 - B\n\n![图1](https://s1.ax1x.com/2020/09/09/w8iiwD.png)\n![图2](https://s1.ax1x.com/2020/09/09/w8iFTe.png)\n![图3](https://s1.ax1x.com/2020/09/09/w8iPeO.png)\n![图4](https://s1.ax1x.com/2020/09/09/w8iAFH.png)\n![图5](https://s1.ax1x.com/2020/09/09/w8i9OK.png)\n![图6](https://s1.ax1x.com/2020/09/09/w8iEYd.png)\n![图7](https://s1.ax1x.com/2020/09/09/w8iVfA.png)\n\n##### 思路\n\n* 标签：`动态规划`：通过子问题答案来解决大问题答案；子问题都需要是离散且不依赖其他子问题（详可见 《算法图解》 第九章「动态规划」）；\n* 回文字符串是正读和反读都一样，所以如果将回文字符串反转，那么字符串和反转字符串肯定完全一样。\n* 如果字符串不是回文字符串，那么字符串和反转字符串如果有相同的部分，即公共子串，那么最长的公共子串是不是一定就是最长回文子串呢？关于如何得到最长公共子串，看下面[这里](如何获取最长公共子串)\n* 我们发现，最长公共子串不一定就是最长回文子串，比如字符串 S 为 aacdecaa，反转字符串为 aacedcaa，最长公共子串有 aac 和 caa，都不是回文子串，更不是最长回文子串。所以需要进一步判断最长公共子串是否是回文子串。\n* 时间复杂度O(n<sup>2</sup>)——两层遍历\n* 空间复杂度O(n<sup>2</sup>)——二维数组\n\n**代码**\n\n```js\n/**\n * @param {string} s\n * @return {string}\n */\n\n```\n\n#### 解法三: 动态规划 - C\n\n#### 解法四: 中心扩展算法\n\n#### 解法五: Manacher 算法\n\n## 参考资料\n\n* [最长回文子串](https://leetcode-cn.com/problems/longest-palindromic-substring/)\n* [最长回文子串Alexer-660解题思路](https://leetcode-cn.com/problems/longest-palindromic-substring/solution/5-zui-chang-hui-wen-zi-chuan-by-alexer-660/)\n* [画解 LeetCode：5. 最长回文子串](https://leetcode-cn.com/problems/longest-palindromic-substring/solution/hua-jie-suan-fa-5-zui-chang-hui-wen-zi-chuan-by-de/)\n","source":"_posts/最长回文子串.md","raw":"---\ntitle: 最长回文子串\nabbrlink: 13c31df7\ndate: 2020-09-09 19:12:42\ntags:\n  - 技术积累\n  - LeetCode\n  - 最长回文子串\n  - 中等\n  - 每日一练\ncategories:\n  - 技术积累\n  - LeetCode\n---\n\n![首屏图](https://s1.ax1x.com/2020/09/09/w3v1nH.jpg)\n\n<!-- more -->\n\n## LeetCode 题目总结 - 最长回文子串\n\n### 题目\n\n给定一个字符串`s`，找到`s`中最长的回文子串。你可以假设`s`的最大长度为 1000。\n\n### 示例\n\n#### 示例1\n\n```text\n输入: \"babad\"\n输出: \"bab\"\n注意: \"aba\" 也是一个有效答案。\n```\n\n#### 示例2\n\n```text\n输入: \"cbbd\"\n输出: \"bb\"\n```\n\n### 解题\n\n#### 解法一: 暴力枚举法\n\n* 时间复杂度O(n<sup>3</sup>)\n* 空间复杂度O(1)\n\n```js\n/**\n * @param {string} s\n * @return {string}\n */\nvar longestPalindrome = function(s) {\n    function isPalindrome(str) {\n        var len  = str.length\n        var middle = parseInt(len/2)\n        for(var i = 0;i<middle;i++){\n            if(str[i]!=str[len-i-1]){\n                return false\n            }\n        }\n        return true\n    }\n    var ans = '';\n    var max = 0;\n    var len = s.length\n    for(var i = 0;i<len;i++){\n        for(var r = i+1;r<=len;r++){\n            var tmpStr = s.substring(i,r)\n            if(isPalindrome(tmpStr) && tmpStr.length > max){\n                ans = s.substring(i,r)\n                max = tmpStr.length;\n            }\n        }\n    }\n    return ans;\n}\n```\n\n#### 解法二: 动态规划 - A\n\n##### 代码\n\n```js\n/**\n * @param {string} s\n * @return {string}\n */\nvar longestPalindrome = function(s) {\n    if(!s || s.length < 2){\n        return s;\n    }\n    var s_f = s.split('').reverse().join('');   //字符串调转 split字符串转数组 reverse数组顺序调转 join数组拼接字符串\n    var resultStr = s[0];\n    var maxLen = 1;\n    var tmpLen = 1;\n    var maxStrIndex = 0;\n    var len = s.length; //有无实际含义\n    //判断字符串是否回文\n    function isPalinerome(i,r){\n        if(len - i - 1 == r -tmpLen + 1){\n            return true\n        }\n        return false;\n    }\n    //初始化二维数组\n    var len = s.length;\n    var arr = new Array(len);\n    for(var i = 0;i<len;i++){\n        arr[i] = [];\n        for(var r = 0;r<len;r++){\n            arr[i][r] = 0\n        }\n    }\n    for(var i = 0;i<len;i++){\n        for(var r=0;r<len;r++){\n            if(s[i] == s_f[r]){\n                if(i==0 || r==0){\n                    arr[i][r] = 1\n                }else{\n                    arr[i][r] = arr[i-1][r-1] + 1\n                    tmpLen = arr[i][r]\n                }\n                if(tmpLen > maxLen && isPalinerome(i,r)){\n                    maxStrIndex = r;\n                    maxLen = tmpLen;\n                    resultStr =  s.substring(i-tmpLen+1,i+1);\n                }\n            }\n        }\n    }\n    return resultStr;\n};\n```\n\n#### 解法二: 动态规划 - B\n\n![图1](https://s1.ax1x.com/2020/09/09/w8iiwD.png)\n![图2](https://s1.ax1x.com/2020/09/09/w8iFTe.png)\n![图3](https://s1.ax1x.com/2020/09/09/w8iPeO.png)\n![图4](https://s1.ax1x.com/2020/09/09/w8iAFH.png)\n![图5](https://s1.ax1x.com/2020/09/09/w8i9OK.png)\n![图6](https://s1.ax1x.com/2020/09/09/w8iEYd.png)\n![图7](https://s1.ax1x.com/2020/09/09/w8iVfA.png)\n\n##### 思路\n\n* 标签：`动态规划`：通过子问题答案来解决大问题答案；子问题都需要是离散且不依赖其他子问题（详可见 《算法图解》 第九章「动态规划」）；\n* 回文字符串是正读和反读都一样，所以如果将回文字符串反转，那么字符串和反转字符串肯定完全一样。\n* 如果字符串不是回文字符串，那么字符串和反转字符串如果有相同的部分，即公共子串，那么最长的公共子串是不是一定就是最长回文子串呢？关于如何得到最长公共子串，看下面[这里](如何获取最长公共子串)\n* 我们发现，最长公共子串不一定就是最长回文子串，比如字符串 S 为 aacdecaa，反转字符串为 aacedcaa，最长公共子串有 aac 和 caa，都不是回文子串，更不是最长回文子串。所以需要进一步判断最长公共子串是否是回文子串。\n* 时间复杂度O(n<sup>2</sup>)——两层遍历\n* 空间复杂度O(n<sup>2</sup>)——二维数组\n\n**代码**\n\n```js\n/**\n * @param {string} s\n * @return {string}\n */\n\n```\n\n#### 解法三: 动态规划 - C\n\n#### 解法四: 中心扩展算法\n\n#### 解法五: Manacher 算法\n\n## 参考资料\n\n* [最长回文子串](https://leetcode-cn.com/problems/longest-palindromic-substring/)\n* [最长回文子串Alexer-660解题思路](https://leetcode-cn.com/problems/longest-palindromic-substring/solution/5-zui-chang-hui-wen-zi-chuan-by-alexer-660/)\n* [画解 LeetCode：5. 最长回文子串](https://leetcode-cn.com/problems/longest-palindromic-substring/solution/hua-jie-suan-fa-5-zui-chang-hui-wen-zi-chuan-by-de/)\n","slug":"最长回文子串","published":1,"updated":"2020-12-30T01:08:23.106Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyq000z2an9doswc0kt","content":"<p><img src=\"https://s1.ax1x.com/2020/09/09/w3v1nH.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<h2 id=\"LeetCode-题目总结-最长回文子串\"><a href=\"#LeetCode-题目总结-最长回文子串\" class=\"headerlink\" title=\"LeetCode 题目总结 - 最长回文子串\"></a>LeetCode 题目总结 - 最长回文子串</h2><h3 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h3><p>给定一个字符串<code>s</code>，找到<code>s</code>中最长的回文子串。你可以假设<code>s</code>的最大长度为 1000。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><h4 id=\"示例1\"><a href=\"#示例1\" class=\"headerlink\" title=\"示例1\"></a>示例1</h4><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: &quot;babad&quot;</span><br><span class=\"line\">输出: &quot;bab&quot;</span><br><span class=\"line\">注意: &quot;aba&quot; 也是一个有效答案。</span><br></pre></td></tr></table></figure>\n<h4 id=\"示例2\"><a href=\"#示例2\" class=\"headerlink\" title=\"示例2\"></a>示例2</h4><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: &quot;cbbd&quot;</span><br><span class=\"line\">输出: &quot;bb&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h3><h4 id=\"解法一-暴力枚举法\"><a href=\"#解法一-暴力枚举法\" class=\"headerlink\" title=\"解法一: 暴力枚举法\"></a>解法一: 暴力枚举法</h4><ul>\n<li>时间复杂度O(n<sup>3</sup>)</li>\n<li>空间复杂度O(1)</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> <span class=\"variable\">s</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;string&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> longestPalindrome = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPalindrome</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> len  = str.length</span><br><span class=\"line\">        <span class=\"keyword\">var</span> middle = <span class=\"built_in\">parseInt</span>(len/<span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i&lt;middle;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(str[i]!=str[len-i<span class=\"number\">-1</span>])&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ans = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = s.length</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> r = i+<span class=\"number\">1</span>;r&lt;=len;r++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> tmpStr = s.substring(i,r)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(isPalindrome(tmpStr) &amp;&amp; tmpStr.length &gt; max)&#123;</span><br><span class=\"line\">                ans = s.substring(i,r)</span><br><span class=\"line\">                max = tmpStr.length;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"解法二-动态规划-A\"><a href=\"#解法二-动态规划-A\" class=\"headerlink\" title=\"解法二: 动态规划 - A\"></a>解法二: 动态规划 - A</h4><h5 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> <span class=\"variable\">s</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;string&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> longestPalindrome = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!s || s.length &lt; <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s_f = s.split(<span class=\"string\">&#x27;&#x27;</span>).reverse().join(<span class=\"string\">&#x27;&#x27;</span>);   <span class=\"comment\">//字符串调转 split字符串转数组 reverse数组顺序调转 join数组拼接字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> resultStr = s[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> maxLen = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmpLen = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> maxStrIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = s.length; <span class=\"comment\">//有无实际含义</span></span><br><span class=\"line\">    <span class=\"comment\">//判断字符串是否回文</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPalinerome</span>(<span class=\"params\">i,r</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(len - i - <span class=\"number\">1</span> == r -tmpLen + <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//初始化二维数组</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = s.length;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(len);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i&lt;len;i++)&#123;</span><br><span class=\"line\">        arr[i] = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> r = <span class=\"number\">0</span>;r&lt;len;r++)&#123;</span><br><span class=\"line\">            arr[i][r] = <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> r=<span class=\"number\">0</span>;r&lt;len;r++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s[i] == s_f[r])&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i==<span class=\"number\">0</span> || r==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    arr[i][r] = <span class=\"number\">1</span></span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    arr[i][r] = arr[i<span class=\"number\">-1</span>][r<span class=\"number\">-1</span>] + <span class=\"number\">1</span></span><br><span class=\"line\">                    tmpLen = arr[i][r]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(tmpLen &gt; maxLen &amp;&amp; isPalinerome(i,r))&#123;</span><br><span class=\"line\">                    maxStrIndex = r;</span><br><span class=\"line\">                    maxLen = tmpLen;</span><br><span class=\"line\">                    resultStr =  s.substring(i-tmpLen+<span class=\"number\">1</span>,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> resultStr;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"解法二-动态规划-B\"><a href=\"#解法二-动态规划-B\" class=\"headerlink\" title=\"解法二: 动态规划 - B\"></a>解法二: 动态规划 - B</h4><p><img src=\"https://s1.ax1x.com/2020/09/09/w8iiwD.png\" alt=\"图1\"><br><img src=\"https://s1.ax1x.com/2020/09/09/w8iFTe.png\" alt=\"图2\"><br><img src=\"https://s1.ax1x.com/2020/09/09/w8iPeO.png\" alt=\"图3\"><br><img src=\"https://s1.ax1x.com/2020/09/09/w8iAFH.png\" alt=\"图4\"><br><img src=\"https://s1.ax1x.com/2020/09/09/w8i9OK.png\" alt=\"图5\"><br><img src=\"https://s1.ax1x.com/2020/09/09/w8iEYd.png\" alt=\"图6\"><br><img src=\"https://s1.ax1x.com/2020/09/09/w8iVfA.png\" alt=\"图7\"></p>\n<h5 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h5><ul>\n<li>标签：<code>动态规划</code>：通过子问题答案来解决大问题答案；子问题都需要是离散且不依赖其他子问题（详可见 《算法图解》 第九章「动态规划」）；</li>\n<li>回文字符串是正读和反读都一样，所以如果将回文字符串反转，那么字符串和反转字符串肯定完全一样。</li>\n<li>如果字符串不是回文字符串，那么字符串和反转字符串如果有相同的部分，即公共子串，那么最长的公共子串是不是一定就是最长回文子串呢？关于如何得到最长公共子串，看下面<a href=\"如何获取最长公共子串\">这里</a></li>\n<li>我们发现，最长公共子串不一定就是最长回文子串，比如字符串 S 为 aacdecaa，反转字符串为 aacedcaa，最长公共子串有 aac 和 caa，都不是回文子串，更不是最长回文子串。所以需要进一步判断最长公共子串是否是回文子串。</li>\n<li>时间复杂度O(n<sup>2</sup>)——两层遍历</li>\n<li>空间复杂度O(n<sup>2</sup>)——二维数组</li>\n</ul>\n<p><strong>代码</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> <span class=\"variable\">s</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;string&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"解法三-动态规划-C\"><a href=\"#解法三-动态规划-C\" class=\"headerlink\" title=\"解法三: 动态规划 - C\"></a>解法三: 动态规划 - C</h4><h4 id=\"解法四-中心扩展算法\"><a href=\"#解法四-中心扩展算法\" class=\"headerlink\" title=\"解法四: 中心扩展算法\"></a>解法四: 中心扩展算法</h4><h4 id=\"解法五-Manacher-算法\"><a href=\"#解法五-Manacher-算法\" class=\"headerlink\" title=\"解法五: Manacher 算法\"></a>解法五: Manacher 算法</h4><h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://leetcode-cn.com/problems/longest-palindromic-substring/\">最长回文子串</a></li>\n<li><a href=\"https://leetcode-cn.com/problems/longest-palindromic-substring/solution/5-zui-chang-hui-wen-zi-chuan-by-alexer-660/\">最长回文子串Alexer-660解题思路</a></li>\n<li><a href=\"https://leetcode-cn.com/problems/longest-palindromic-substring/solution/hua-jie-suan-fa-5-zui-chang-hui-wen-zi-chuan-by-de/\">画解 LeetCode：5. 最长回文子串</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/09/09/w3v1nH.jpg\" alt=\"首屏图\"></p>","more":"<h2 id=\"LeetCode-题目总结-最长回文子串\"><a href=\"#LeetCode-题目总结-最长回文子串\" class=\"headerlink\" title=\"LeetCode 题目总结 - 最长回文子串\"></a>LeetCode 题目总结 - 最长回文子串</h2><h3 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h3><p>给定一个字符串<code>s</code>，找到<code>s</code>中最长的回文子串。你可以假设<code>s</code>的最大长度为 1000。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><h4 id=\"示例1\"><a href=\"#示例1\" class=\"headerlink\" title=\"示例1\"></a>示例1</h4><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: &quot;babad&quot;</span><br><span class=\"line\">输出: &quot;bab&quot;</span><br><span class=\"line\">注意: &quot;aba&quot; 也是一个有效答案。</span><br></pre></td></tr></table></figure>\n<h4 id=\"示例2\"><a href=\"#示例2\" class=\"headerlink\" title=\"示例2\"></a>示例2</h4><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: &quot;cbbd&quot;</span><br><span class=\"line\">输出: &quot;bb&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h3><h4 id=\"解法一-暴力枚举法\"><a href=\"#解法一-暴力枚举法\" class=\"headerlink\" title=\"解法一: 暴力枚举法\"></a>解法一: 暴力枚举法</h4><ul>\n<li>时间复杂度O(n<sup>3</sup>)</li>\n<li>空间复杂度O(1)</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> <span class=\"variable\">s</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;string&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> longestPalindrome = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPalindrome</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> len  = str.length</span><br><span class=\"line\">        <span class=\"keyword\">var</span> middle = <span class=\"built_in\">parseInt</span>(len/<span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i&lt;middle;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(str[i]!=str[len-i<span class=\"number\">-1</span>])&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ans = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = s.length</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> r = i+<span class=\"number\">1</span>;r&lt;=len;r++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> tmpStr = s.substring(i,r)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(isPalindrome(tmpStr) &amp;&amp; tmpStr.length &gt; max)&#123;</span><br><span class=\"line\">                ans = s.substring(i,r)</span><br><span class=\"line\">                max = tmpStr.length;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"解法二-动态规划-A\"><a href=\"#解法二-动态规划-A\" class=\"headerlink\" title=\"解法二: 动态规划 - A\"></a>解法二: 动态规划 - A</h4><h5 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> <span class=\"variable\">s</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;string&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> longestPalindrome = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!s || s.length &lt; <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s_f = s.split(<span class=\"string\">&#x27;&#x27;</span>).reverse().join(<span class=\"string\">&#x27;&#x27;</span>);   <span class=\"comment\">//字符串调转 split字符串转数组 reverse数组顺序调转 join数组拼接字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> resultStr = s[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> maxLen = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmpLen = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> maxStrIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = s.length; <span class=\"comment\">//有无实际含义</span></span><br><span class=\"line\">    <span class=\"comment\">//判断字符串是否回文</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPalinerome</span>(<span class=\"params\">i,r</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(len - i - <span class=\"number\">1</span> == r -tmpLen + <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//初始化二维数组</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = s.length;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(len);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i&lt;len;i++)&#123;</span><br><span class=\"line\">        arr[i] = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> r = <span class=\"number\">0</span>;r&lt;len;r++)&#123;</span><br><span class=\"line\">            arr[i][r] = <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> r=<span class=\"number\">0</span>;r&lt;len;r++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s[i] == s_f[r])&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i==<span class=\"number\">0</span> || r==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    arr[i][r] = <span class=\"number\">1</span></span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    arr[i][r] = arr[i<span class=\"number\">-1</span>][r<span class=\"number\">-1</span>] + <span class=\"number\">1</span></span><br><span class=\"line\">                    tmpLen = arr[i][r]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(tmpLen &gt; maxLen &amp;&amp; isPalinerome(i,r))&#123;</span><br><span class=\"line\">                    maxStrIndex = r;</span><br><span class=\"line\">                    maxLen = tmpLen;</span><br><span class=\"line\">                    resultStr =  s.substring(i-tmpLen+<span class=\"number\">1</span>,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> resultStr;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"解法二-动态规划-B\"><a href=\"#解法二-动态规划-B\" class=\"headerlink\" title=\"解法二: 动态规划 - B\"></a>解法二: 动态规划 - B</h4><p><img src=\"https://s1.ax1x.com/2020/09/09/w8iiwD.png\" alt=\"图1\"><br><img src=\"https://s1.ax1x.com/2020/09/09/w8iFTe.png\" alt=\"图2\"><br><img src=\"https://s1.ax1x.com/2020/09/09/w8iPeO.png\" alt=\"图3\"><br><img src=\"https://s1.ax1x.com/2020/09/09/w8iAFH.png\" alt=\"图4\"><br><img src=\"https://s1.ax1x.com/2020/09/09/w8i9OK.png\" alt=\"图5\"><br><img src=\"https://s1.ax1x.com/2020/09/09/w8iEYd.png\" alt=\"图6\"><br><img src=\"https://s1.ax1x.com/2020/09/09/w8iVfA.png\" alt=\"图7\"></p>\n<h5 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h5><ul>\n<li>标签：<code>动态规划</code>：通过子问题答案来解决大问题答案；子问题都需要是离散且不依赖其他子问题（详可见 《算法图解》 第九章「动态规划」）；</li>\n<li>回文字符串是正读和反读都一样，所以如果将回文字符串反转，那么字符串和反转字符串肯定完全一样。</li>\n<li>如果字符串不是回文字符串，那么字符串和反转字符串如果有相同的部分，即公共子串，那么最长的公共子串是不是一定就是最长回文子串呢？关于如何得到最长公共子串，看下面<a href=\"如何获取最长公共子串\">这里</a></li>\n<li>我们发现，最长公共子串不一定就是最长回文子串，比如字符串 S 为 aacdecaa，反转字符串为 aacedcaa，最长公共子串有 aac 和 caa，都不是回文子串，更不是最长回文子串。所以需要进一步判断最长公共子串是否是回文子串。</li>\n<li>时间复杂度O(n<sup>2</sup>)——两层遍历</li>\n<li>空间复杂度O(n<sup>2</sup>)——二维数组</li>\n</ul>\n<p><strong>代码</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> <span class=\"variable\">s</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;string&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"解法三-动态规划-C\"><a href=\"#解法三-动态规划-C\" class=\"headerlink\" title=\"解法三: 动态规划 - C\"></a>解法三: 动态规划 - C</h4><h4 id=\"解法四-中心扩展算法\"><a href=\"#解法四-中心扩展算法\" class=\"headerlink\" title=\"解法四: 中心扩展算法\"></a>解法四: 中心扩展算法</h4><h4 id=\"解法五-Manacher-算法\"><a href=\"#解法五-Manacher-算法\" class=\"headerlink\" title=\"解法五: Manacher 算法\"></a>解法五: Manacher 算法</h4><h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://leetcode-cn.com/problems/longest-palindromic-substring/\">最长回文子串</a></li>\n<li><a href=\"https://leetcode-cn.com/problems/longest-palindromic-substring/solution/5-zui-chang-hui-wen-zi-chuan-by-alexer-660/\">最长回文子串Alexer-660解题思路</a></li>\n<li><a href=\"https://leetcode-cn.com/problems/longest-palindromic-substring/solution/hua-jie-suan-fa-5-zui-chang-hui-wen-zi-chuan-by-de/\">画解 LeetCode：5. 最长回文子串</a></li>\n</ul>"},{"title":"梦禅","abbrlink":"da1a79f6","date":"2020-07-19T08:58:44.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/07/18/UcUf1g.jpg)\n\n<!-- more -->\n\n**昨**夜梦来，几人谈论人生境界。自觉甚是有趣，闲来总结一下。\n\n境界共分为五层，小我、自我、无我、忘我、大我。\n\n不自知而独我，心中只有我，自私自利，谓之小我。\n\n知我而独我，活的一个逍遥自在，人生一世，悠哉，乐哉，谓之自我。\n\n不自知，然人云亦云，活在他人的束缚里，谓之无我。\n\n自知，但被世事所拖累，不可从心而活，为他人而活，谓之忘我。\n\n知与不知亦然，心系他人，由心而生。为众生而活，谓之大我。\n","source":"_posts/梦禅.md","raw":"---\ntitle: 梦禅\ntags: 随笔\ncategories:\n  - 随笔\nabbrlink: da1a79f6\ndate: 2020-07-19 16:58:44\n---\n\n![首屏图](https://s1.ax1x.com/2020/07/18/UcUf1g.jpg)\n\n<!-- more -->\n\n**昨**夜梦来，几人谈论人生境界。自觉甚是有趣，闲来总结一下。\n\n境界共分为五层，小我、自我、无我、忘我、大我。\n\n不自知而独我，心中只有我，自私自利，谓之小我。\n\n知我而独我，活的一个逍遥自在，人生一世，悠哉，乐哉，谓之自我。\n\n不自知，然人云亦云，活在他人的束缚里，谓之无我。\n\n自知，但被世事所拖累，不可从心而活，为他人而活，谓之忘我。\n\n知与不知亦然，心系他人，由心而生。为众生而活，谓之大我。\n","slug":"梦禅","published":1,"updated":"2020-08-12T01:57:58.414Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyq00102an96igffk2j","content":"<p><img src=\"https://s1.ax1x.com/2020/07/18/UcUf1g.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<p><strong>昨</strong>夜梦来，几人谈论人生境界。自觉甚是有趣，闲来总结一下。</p>\n<p>境界共分为五层，小我、自我、无我、忘我、大我。</p>\n<p>不自知而独我，心中只有我，自私自利，谓之小我。</p>\n<p>知我而独我，活的一个逍遥自在，人生一世，悠哉，乐哉，谓之自我。</p>\n<p>不自知，然人云亦云，活在他人的束缚里，谓之无我。</p>\n<p>自知，但被世事所拖累，不可从心而活，为他人而活，谓之忘我。</p>\n<p>知与不知亦然，心系他人，由心而生。为众生而活，谓之大我。</p>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/07/18/UcUf1g.jpg\" alt=\"首屏图\"></p>","more":"<p><strong>昨</strong>夜梦来，几人谈论人生境界。自觉甚是有趣，闲来总结一下。</p>\n<p>境界共分为五层，小我、自我、无我、忘我、大我。</p>\n<p>不自知而独我，心中只有我，自私自利，谓之小我。</p>\n<p>知我而独我，活的一个逍遥自在，人生一世，悠哉，乐哉，谓之自我。</p>\n<p>不自知，然人云亦云，活在他人的束缚里，谓之无我。</p>\n<p>自知，但被世事所拖累，不可从心而活，为他人而活，谓之忘我。</p>\n<p>知与不知亦然，心系他人，由心而生。为众生而活，谓之大我。</p>"},{"title":"游十渡","abbrlink":"c314148a","date":"2020-06-07T09:56:48.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/07/17/Uy0abn.jpg)\n\n<!-- more -->\n\n> 好山好水好地方 有酒有肉有故事\n\n![图1](https://s1.ax1x.com/2020/07/17/UydLSe.jpg)\n\n![图2](https://s1.ax1x.com/2020/07/17/UydXyd.jpg)\n\n![图3](https://s1.ax1x.com/2020/07/17/UydbWD.jpg)\n\n![图4](https://s1.ax1x.com/2020/07/17/Uydoo6.jpg)\n\n![图5](https://s1.ax1x.com/2020/07/17/UydHJO.jpg)\n\n![图6](https://s1.ax1x.com/2020/07/17/Uydzwt.jpg)\n\n![图7](https://s1.ax1x.com/2020/07/17/UydxeI.jpg)\n\n![图8](https://s1.ax1x.com/2020/07/17/UydjOA.jpg)\n\n![图9](https://s1.ax1x.com/2020/07/17/UywSTP.jpg)\n\n![图10](https://s1.ax1x.com/2020/07/17/Uyd7FK.jpg)\n","source":"_posts/游十渡.md","raw":"---\ntitle: 游十渡\ntags:\n  - 游记\n  - 十渡\ncategories:\n  - 游记\nabbrlink: c314148a\ndate: 2020-06-07 17:56:48\n---\n\n![首屏图](https://s1.ax1x.com/2020/07/17/Uy0abn.jpg)\n\n<!-- more -->\n\n> 好山好水好地方 有酒有肉有故事\n\n![图1](https://s1.ax1x.com/2020/07/17/UydLSe.jpg)\n\n![图2](https://s1.ax1x.com/2020/07/17/UydXyd.jpg)\n\n![图3](https://s1.ax1x.com/2020/07/17/UydbWD.jpg)\n\n![图4](https://s1.ax1x.com/2020/07/17/Uydoo6.jpg)\n\n![图5](https://s1.ax1x.com/2020/07/17/UydHJO.jpg)\n\n![图6](https://s1.ax1x.com/2020/07/17/Uydzwt.jpg)\n\n![图7](https://s1.ax1x.com/2020/07/17/UydxeI.jpg)\n\n![图8](https://s1.ax1x.com/2020/07/17/UydjOA.jpg)\n\n![图9](https://s1.ax1x.com/2020/07/17/UywSTP.jpg)\n\n![图10](https://s1.ax1x.com/2020/07/17/Uyd7FK.jpg)\n","slug":"游十渡","published":1,"updated":"2020-08-12T01:57:58.414Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyr00112an93iow1gcl","content":"<p><img src=\"https://s1.ax1x.com/2020/07/17/Uy0abn.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>好山好水好地方 有酒有肉有故事</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UydLSe.jpg\" alt=\"图1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UydXyd.jpg\" alt=\"图2\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UydbWD.jpg\" alt=\"图3\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/Uydoo6.jpg\" alt=\"图4\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UydHJO.jpg\" alt=\"图5\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/Uydzwt.jpg\" alt=\"图6\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UydxeI.jpg\" alt=\"图7\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UydjOA.jpg\" alt=\"图8\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UywSTP.jpg\" alt=\"图9\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/Uyd7FK.jpg\" alt=\"图10\"></p>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/07/17/Uy0abn.jpg\" alt=\"首屏图\"></p>","more":"<blockquote>\n<p>好山好水好地方 有酒有肉有故事</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UydLSe.jpg\" alt=\"图1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UydXyd.jpg\" alt=\"图2\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UydbWD.jpg\" alt=\"图3\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/Uydoo6.jpg\" alt=\"图4\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UydHJO.jpg\" alt=\"图5\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/Uydzwt.jpg\" alt=\"图6\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UydxeI.jpg\" alt=\"图7\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UydjOA.jpg\" alt=\"图8\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UywSTP.jpg\" alt=\"图9\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/Uyd7FK.jpg\" alt=\"图10\"></p>"},{"title":"白帽子讲Web安全","abbrlink":"f1b4373b","date":"2017-11-06T10:01:47.000Z","_content":"\nWEB安全\n\n<!-- more -->\n\n## 第一章 我的安全世界观\n\n### 1.5 安全三要素\n\n- 机密性：要求保护数据内容不能泄露，加密是常见手段\n- 完整性：要求保护数据是完整的、未被篡改的。常见的保证一致性手段是数字签名\n- 可用性：要求保护资源是“随需而得”的\n\n### 1.6 如何实施安全评估\n\n- 资产等级划分\n- 威胁分析\n- 风险分析\n- 确认解决方案\n\n![简单网站信任模型](https://s1.ax1x.com/2020/07/17/UyFG4g.jpg)\n\n#### 1.6.2 威胁分析\n\n> STRIDE模型\n\n| 威胁                           | 定义           | 对应的安全属性  |\n| ------------------------------|---------------| --------------|\n| Spoofing(伪装)                 | 冒充他人身份    | 认证           |\n| Tampering(篡改)                | 修改数据或代码   | 完整性        |\n| Repudiation(抵赖)              | 否认做过的事情   | 不可抵赖性     |\n| InformationDisclosure(信息泄露) | 机密信息泄露     | 机密性        |\n| Denial of Service(拒绝服务)     | 拒绝服务        | 可用性         |\n| Elevation of Privilege(提升权限)| 未经授权获得许可  | 授权          |\n\n#### 1.6.3 风险分析\n\n> DREAD模型\n\n| 等级              | 高(3)                                    | 中(2)      | 低(1)       |\n| -----------------|------------------------------------------| -----------| ------------|\n| Damage Potential | 获取完全验证权限: 执行管理员操作: 非法上传文件 | 泄露敏感信息 | 泄露其他信息 |\n| Reproducibility | 攻击者可以随意再次攻击 | 攻击者可以重复攻击 但有时间限制| 攻击者难以重复攻击过程 |\n| Exploitability   | 初学者在短期内能掌握攻击方法 | 熟练地攻击者才能完成此次攻击 | 漏洞利用条件非常苛刻 |\n| Affeeted users   | 所有用户 默认配置 关键用户 | 部分用户 非默认配置 | 极少数用户 匿名用户 |\n| Discoverability  | 漏洞明显 攻击条件很容易获得 | 有私有区域 部分人能看到 需要深入挖掘漏洞 | 发现该漏洞极其困难 |\n\n高危:12~15 中危:8~11 低危:0~7\n\n#### 1.6.4 设计安全方案\n\n- 能够有效解决问题\n- 用户体验好\n- 高性能\n- 低耦合\n- 易于扩展与升级\n\n### 1.7 白帽子兵法\n\n#### 1.7.1 Secure By Default原则\n\n- 黑名单、白名单:推荐多使用白名单 避免因黑名单考虑不周导致的漏洞\n- 最小权限原则:减少过度授权\n- 纵深防御原则:1.不同层面、方面实施安全方案 2.在正确的地方做正确的事——必须把防御方案放到最合适的地方去解决\n\n![XSS防御技术的发展过程](https://s1.ax1x.com/2020/07/17/UyF8US.png)\n\n- 数据与代码分离原则:对数据处理过程中 针对 `<`、`>`等符号做处理\n- 不可预测性原则:在敏感数据上使用token 通过加密算法、随机数算法、哈希算法来实现\n\n### 1.8 小结\n\n安全是一门朴素的学问 也是一种平衡的艺术\n\n## 第二章 浏览器安全\n\n### 2.1 同源策略\n\n浏览器的同源策略 限制了来自不同源的‘document’脚本 对当前的‘doucument’读取或设置某些属性\n\n## 第三章 跨站脚本攻击(XSS)\n\n### 3.1 XSS简介\n\nXSS攻击 通常指黑客通过“HTML注入”篡改网页 插入恶意脚本 从而在用户浏览网页时 控制用户浏览器的一种攻击\n","source":"_posts/白帽子讲Web安全.md","raw":"---\ntitle: 白帽子讲Web安全\ntags: 读书会\nabbrlink: f1b4373b\ndate: 2017-11-06 18:01:47\n---\n\nWEB安全\n\n<!-- more -->\n\n## 第一章 我的安全世界观\n\n### 1.5 安全三要素\n\n- 机密性：要求保护数据内容不能泄露，加密是常见手段\n- 完整性：要求保护数据是完整的、未被篡改的。常见的保证一致性手段是数字签名\n- 可用性：要求保护资源是“随需而得”的\n\n### 1.6 如何实施安全评估\n\n- 资产等级划分\n- 威胁分析\n- 风险分析\n- 确认解决方案\n\n![简单网站信任模型](https://s1.ax1x.com/2020/07/17/UyFG4g.jpg)\n\n#### 1.6.2 威胁分析\n\n> STRIDE模型\n\n| 威胁                           | 定义           | 对应的安全属性  |\n| ------------------------------|---------------| --------------|\n| Spoofing(伪装)                 | 冒充他人身份    | 认证           |\n| Tampering(篡改)                | 修改数据或代码   | 完整性        |\n| Repudiation(抵赖)              | 否认做过的事情   | 不可抵赖性     |\n| InformationDisclosure(信息泄露) | 机密信息泄露     | 机密性        |\n| Denial of Service(拒绝服务)     | 拒绝服务        | 可用性         |\n| Elevation of Privilege(提升权限)| 未经授权获得许可  | 授权          |\n\n#### 1.6.3 风险分析\n\n> DREAD模型\n\n| 等级              | 高(3)                                    | 中(2)      | 低(1)       |\n| -----------------|------------------------------------------| -----------| ------------|\n| Damage Potential | 获取完全验证权限: 执行管理员操作: 非法上传文件 | 泄露敏感信息 | 泄露其他信息 |\n| Reproducibility | 攻击者可以随意再次攻击 | 攻击者可以重复攻击 但有时间限制| 攻击者难以重复攻击过程 |\n| Exploitability   | 初学者在短期内能掌握攻击方法 | 熟练地攻击者才能完成此次攻击 | 漏洞利用条件非常苛刻 |\n| Affeeted users   | 所有用户 默认配置 关键用户 | 部分用户 非默认配置 | 极少数用户 匿名用户 |\n| Discoverability  | 漏洞明显 攻击条件很容易获得 | 有私有区域 部分人能看到 需要深入挖掘漏洞 | 发现该漏洞极其困难 |\n\n高危:12~15 中危:8~11 低危:0~7\n\n#### 1.6.4 设计安全方案\n\n- 能够有效解决问题\n- 用户体验好\n- 高性能\n- 低耦合\n- 易于扩展与升级\n\n### 1.7 白帽子兵法\n\n#### 1.7.1 Secure By Default原则\n\n- 黑名单、白名单:推荐多使用白名单 避免因黑名单考虑不周导致的漏洞\n- 最小权限原则:减少过度授权\n- 纵深防御原则:1.不同层面、方面实施安全方案 2.在正确的地方做正确的事——必须把防御方案放到最合适的地方去解决\n\n![XSS防御技术的发展过程](https://s1.ax1x.com/2020/07/17/UyF8US.png)\n\n- 数据与代码分离原则:对数据处理过程中 针对 `<`、`>`等符号做处理\n- 不可预测性原则:在敏感数据上使用token 通过加密算法、随机数算法、哈希算法来实现\n\n### 1.8 小结\n\n安全是一门朴素的学问 也是一种平衡的艺术\n\n## 第二章 浏览器安全\n\n### 2.1 同源策略\n\n浏览器的同源策略 限制了来自不同源的‘document’脚本 对当前的‘doucument’读取或设置某些属性\n\n## 第三章 跨站脚本攻击(XSS)\n\n### 3.1 XSS简介\n\nXSS攻击 通常指黑客通过“HTML注入”篡改网页 插入恶意脚本 从而在用户浏览网页时 控制用户浏览器的一种攻击\n","slug":"白帽子讲Web安全","published":1,"updated":"2020-08-12T01:57:58.414Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyr00122an9cpb37hiw","content":"<p>WEB安全</p>\n<a id=\"more\"></a>\n<h2 id=\"第一章-我的安全世界观\"><a href=\"#第一章-我的安全世界观\" class=\"headerlink\" title=\"第一章 我的安全世界观\"></a>第一章 我的安全世界观</h2><h3 id=\"1-5-安全三要素\"><a href=\"#1-5-安全三要素\" class=\"headerlink\" title=\"1.5 安全三要素\"></a>1.5 安全三要素</h3><ul>\n<li>机密性：要求保护数据内容不能泄露，加密是常见手段</li>\n<li>完整性：要求保护数据是完整的、未被篡改的。常见的保证一致性手段是数字签名</li>\n<li>可用性：要求保护资源是“随需而得”的</li>\n</ul>\n<h3 id=\"1-6-如何实施安全评估\"><a href=\"#1-6-如何实施安全评估\" class=\"headerlink\" title=\"1.6 如何实施安全评估\"></a>1.6 如何实施安全评估</h3><ul>\n<li>资产等级划分</li>\n<li>威胁分析</li>\n<li>风险分析</li>\n<li>确认解决方案</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyFG4g.jpg\" alt=\"简单网站信任模型\"></p>\n<h4 id=\"1-6-2-威胁分析\"><a href=\"#1-6-2-威胁分析\" class=\"headerlink\" title=\"1.6.2 威胁分析\"></a>1.6.2 威胁分析</h4><blockquote>\n<p>STRIDE模型</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>威胁</th>\n<th>定义</th>\n<th>对应的安全属性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Spoofing(伪装)</td>\n<td>冒充他人身份</td>\n<td>认证</td>\n</tr>\n<tr>\n<td>Tampering(篡改)</td>\n<td>修改数据或代码</td>\n<td>完整性</td>\n</tr>\n<tr>\n<td>Repudiation(抵赖)</td>\n<td>否认做过的事情</td>\n<td>不可抵赖性</td>\n</tr>\n<tr>\n<td>InformationDisclosure(信息泄露)</td>\n<td>机密信息泄露</td>\n<td>机密性</td>\n</tr>\n<tr>\n<td>Denial of Service(拒绝服务)</td>\n<td>拒绝服务</td>\n<td>可用性</td>\n</tr>\n<tr>\n<td>Elevation of Privilege(提升权限)</td>\n<td>未经授权获得许可</td>\n<td>授权</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"1-6-3-风险分析\"><a href=\"#1-6-3-风险分析\" class=\"headerlink\" title=\"1.6.3 风险分析\"></a>1.6.3 风险分析</h4><blockquote>\n<p>DREAD模型</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>等级</th>\n<th>高(3)</th>\n<th>中(2)</th>\n<th>低(1)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Damage Potential</td>\n<td>获取完全验证权限: 执行管理员操作: 非法上传文件</td>\n<td>泄露敏感信息</td>\n<td>泄露其他信息</td>\n</tr>\n<tr>\n<td>Reproducibility</td>\n<td>攻击者可以随意再次攻击</td>\n<td>攻击者可以重复攻击 但有时间限制</td>\n<td>攻击者难以重复攻击过程</td>\n</tr>\n<tr>\n<td>Exploitability</td>\n<td>初学者在短期内能掌握攻击方法</td>\n<td>熟练地攻击者才能完成此次攻击</td>\n<td>漏洞利用条件非常苛刻</td>\n</tr>\n<tr>\n<td>Affeeted users</td>\n<td>所有用户 默认配置 关键用户</td>\n<td>部分用户 非默认配置</td>\n<td>极少数用户 匿名用户</td>\n</tr>\n<tr>\n<td>Discoverability</td>\n<td>漏洞明显 攻击条件很容易获得</td>\n<td>有私有区域 部分人能看到 需要深入挖掘漏洞</td>\n<td>发现该漏洞极其困难</td>\n</tr>\n</tbody>\n</table>\n<p>高危:12~15 中危:8~11 低危:0~7</p>\n<h4 id=\"1-6-4-设计安全方案\"><a href=\"#1-6-4-设计安全方案\" class=\"headerlink\" title=\"1.6.4 设计安全方案\"></a>1.6.4 设计安全方案</h4><ul>\n<li>能够有效解决问题</li>\n<li>用户体验好</li>\n<li>高性能</li>\n<li>低耦合</li>\n<li>易于扩展与升级</li>\n</ul>\n<h3 id=\"1-7-白帽子兵法\"><a href=\"#1-7-白帽子兵法\" class=\"headerlink\" title=\"1.7 白帽子兵法\"></a>1.7 白帽子兵法</h3><h4 id=\"1-7-1-Secure-By-Default原则\"><a href=\"#1-7-1-Secure-By-Default原则\" class=\"headerlink\" title=\"1.7.1 Secure By Default原则\"></a>1.7.1 Secure By Default原则</h4><ul>\n<li>黑名单、白名单:推荐多使用白名单 避免因黑名单考虑不周导致的漏洞</li>\n<li>最小权限原则:减少过度授权</li>\n<li>纵深防御原则:1.不同层面、方面实施安全方案 2.在正确的地方做正确的事——必须把防御方案放到最合适的地方去解决</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyF8US.png\" alt=\"XSS防御技术的发展过程\"></p>\n<ul>\n<li>数据与代码分离原则:对数据处理过程中 针对 <code>&lt;</code>、<code>&gt;</code>等符号做处理</li>\n<li>不可预测性原则:在敏感数据上使用token 通过加密算法、随机数算法、哈希算法来实现</li>\n</ul>\n<h3 id=\"1-8-小结\"><a href=\"#1-8-小结\" class=\"headerlink\" title=\"1.8 小结\"></a>1.8 小结</h3><p>安全是一门朴素的学问 也是一种平衡的艺术</p>\n<h2 id=\"第二章-浏览器安全\"><a href=\"#第二章-浏览器安全\" class=\"headerlink\" title=\"第二章 浏览器安全\"></a>第二章 浏览器安全</h2><h3 id=\"2-1-同源策略\"><a href=\"#2-1-同源策略\" class=\"headerlink\" title=\"2.1 同源策略\"></a>2.1 同源策略</h3><p>浏览器的同源策略 限制了来自不同源的‘document’脚本 对当前的‘doucument’读取或设置某些属性</p>\n<h2 id=\"第三章-跨站脚本攻击-XSS\"><a href=\"#第三章-跨站脚本攻击-XSS\" class=\"headerlink\" title=\"第三章 跨站脚本攻击(XSS)\"></a>第三章 跨站脚本攻击(XSS)</h2><h3 id=\"3-1-XSS简介\"><a href=\"#3-1-XSS简介\" class=\"headerlink\" title=\"3.1 XSS简介\"></a>3.1 XSS简介</h3><p>XSS攻击 通常指黑客通过“HTML注入”篡改网页 插入恶意脚本 从而在用户浏览网页时 控制用户浏览器的一种攻击</p>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p>WEB安全</p>","more":"<h2 id=\"第一章-我的安全世界观\"><a href=\"#第一章-我的安全世界观\" class=\"headerlink\" title=\"第一章 我的安全世界观\"></a>第一章 我的安全世界观</h2><h3 id=\"1-5-安全三要素\"><a href=\"#1-5-安全三要素\" class=\"headerlink\" title=\"1.5 安全三要素\"></a>1.5 安全三要素</h3><ul>\n<li>机密性：要求保护数据内容不能泄露，加密是常见手段</li>\n<li>完整性：要求保护数据是完整的、未被篡改的。常见的保证一致性手段是数字签名</li>\n<li>可用性：要求保护资源是“随需而得”的</li>\n</ul>\n<h3 id=\"1-6-如何实施安全评估\"><a href=\"#1-6-如何实施安全评估\" class=\"headerlink\" title=\"1.6 如何实施安全评估\"></a>1.6 如何实施安全评估</h3><ul>\n<li>资产等级划分</li>\n<li>威胁分析</li>\n<li>风险分析</li>\n<li>确认解决方案</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyFG4g.jpg\" alt=\"简单网站信任模型\"></p>\n<h4 id=\"1-6-2-威胁分析\"><a href=\"#1-6-2-威胁分析\" class=\"headerlink\" title=\"1.6.2 威胁分析\"></a>1.6.2 威胁分析</h4><blockquote>\n<p>STRIDE模型</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>威胁</th>\n<th>定义</th>\n<th>对应的安全属性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Spoofing(伪装)</td>\n<td>冒充他人身份</td>\n<td>认证</td>\n</tr>\n<tr>\n<td>Tampering(篡改)</td>\n<td>修改数据或代码</td>\n<td>完整性</td>\n</tr>\n<tr>\n<td>Repudiation(抵赖)</td>\n<td>否认做过的事情</td>\n<td>不可抵赖性</td>\n</tr>\n<tr>\n<td>InformationDisclosure(信息泄露)</td>\n<td>机密信息泄露</td>\n<td>机密性</td>\n</tr>\n<tr>\n<td>Denial of Service(拒绝服务)</td>\n<td>拒绝服务</td>\n<td>可用性</td>\n</tr>\n<tr>\n<td>Elevation of Privilege(提升权限)</td>\n<td>未经授权获得许可</td>\n<td>授权</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"1-6-3-风险分析\"><a href=\"#1-6-3-风险分析\" class=\"headerlink\" title=\"1.6.3 风险分析\"></a>1.6.3 风险分析</h4><blockquote>\n<p>DREAD模型</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>等级</th>\n<th>高(3)</th>\n<th>中(2)</th>\n<th>低(1)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Damage Potential</td>\n<td>获取完全验证权限: 执行管理员操作: 非法上传文件</td>\n<td>泄露敏感信息</td>\n<td>泄露其他信息</td>\n</tr>\n<tr>\n<td>Reproducibility</td>\n<td>攻击者可以随意再次攻击</td>\n<td>攻击者可以重复攻击 但有时间限制</td>\n<td>攻击者难以重复攻击过程</td>\n</tr>\n<tr>\n<td>Exploitability</td>\n<td>初学者在短期内能掌握攻击方法</td>\n<td>熟练地攻击者才能完成此次攻击</td>\n<td>漏洞利用条件非常苛刻</td>\n</tr>\n<tr>\n<td>Affeeted users</td>\n<td>所有用户 默认配置 关键用户</td>\n<td>部分用户 非默认配置</td>\n<td>极少数用户 匿名用户</td>\n</tr>\n<tr>\n<td>Discoverability</td>\n<td>漏洞明显 攻击条件很容易获得</td>\n<td>有私有区域 部分人能看到 需要深入挖掘漏洞</td>\n<td>发现该漏洞极其困难</td>\n</tr>\n</tbody>\n</table>\n<p>高危:12~15 中危:8~11 低危:0~7</p>\n<h4 id=\"1-6-4-设计安全方案\"><a href=\"#1-6-4-设计安全方案\" class=\"headerlink\" title=\"1.6.4 设计安全方案\"></a>1.6.4 设计安全方案</h4><ul>\n<li>能够有效解决问题</li>\n<li>用户体验好</li>\n<li>高性能</li>\n<li>低耦合</li>\n<li>易于扩展与升级</li>\n</ul>\n<h3 id=\"1-7-白帽子兵法\"><a href=\"#1-7-白帽子兵法\" class=\"headerlink\" title=\"1.7 白帽子兵法\"></a>1.7 白帽子兵法</h3><h4 id=\"1-7-1-Secure-By-Default原则\"><a href=\"#1-7-1-Secure-By-Default原则\" class=\"headerlink\" title=\"1.7.1 Secure By Default原则\"></a>1.7.1 Secure By Default原则</h4><ul>\n<li>黑名单、白名单:推荐多使用白名单 避免因黑名单考虑不周导致的漏洞</li>\n<li>最小权限原则:减少过度授权</li>\n<li>纵深防御原则:1.不同层面、方面实施安全方案 2.在正确的地方做正确的事——必须把防御方案放到最合适的地方去解决</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/17/UyF8US.png\" alt=\"XSS防御技术的发展过程\"></p>\n<ul>\n<li>数据与代码分离原则:对数据处理过程中 针对 <code>&lt;</code>、<code>&gt;</code>等符号做处理</li>\n<li>不可预测性原则:在敏感数据上使用token 通过加密算法、随机数算法、哈希算法来实现</li>\n</ul>\n<h3 id=\"1-8-小结\"><a href=\"#1-8-小结\" class=\"headerlink\" title=\"1.8 小结\"></a>1.8 小结</h3><p>安全是一门朴素的学问 也是一种平衡的艺术</p>\n<h2 id=\"第二章-浏览器安全\"><a href=\"#第二章-浏览器安全\" class=\"headerlink\" title=\"第二章 浏览器安全\"></a>第二章 浏览器安全</h2><h3 id=\"2-1-同源策略\"><a href=\"#2-1-同源策略\" class=\"headerlink\" title=\"2.1 同源策略\"></a>2.1 同源策略</h3><p>浏览器的同源策略 限制了来自不同源的‘document’脚本 对当前的‘doucument’读取或设置某些属性</p>\n<h2 id=\"第三章-跨站脚本攻击-XSS\"><a href=\"#第三章-跨站脚本攻击-XSS\" class=\"headerlink\" title=\"第三章 跨站脚本攻击(XSS)\"></a>第三章 跨站脚本攻击(XSS)</h2><h3 id=\"3-1-XSS简介\"><a href=\"#3-1-XSS简介\" class=\"headerlink\" title=\"3.1 XSS简介\"></a>3.1 XSS简介</h3><p>XSS攻击 通常指黑客通过“HTML注入”篡改网页 插入恶意脚本 从而在用户浏览网页时 控制用户浏览器的一种攻击</p>"},{"title":"蟒山行","abbrlink":"d313b7c4","date":"2020-09-13T03:59:13.000Z","_content":"\n![首屏图](https://s3.ax1x.com/2021/01/13/stfRFx.jpg)\n\n<!-- more -->\n\n> 上次爬蟒山已是多年前了，从地铁站一路北行，走了5公里才到达森林公园门口，还是太年轻了🤣🤣，忽略了自己的体力。\n> 接下来就是艰难爬山之旅了。感觉这次爬山体力确实和之前不一样了，走几步就需要休息会。\n\n![蟒山全景](https://s3.ax1x.com/2021/01/13/st4odA.jpg)\n![仰望最高点](https://s3.ax1x.com/2021/01/13/st4rZ9.jpg)\n![十三陵水库](https://s3.ax1x.com/2021/01/13/st4cPx.jpg)\n![会当凌绝顶](https://s3.ax1x.com/2021/01/13/st42RK.jpg)\n![一览众山小](https://s3.ax1x.com/2021/01/13/st4yI1.jpg)\n","source":"_posts/蟒山行.md","raw":"---\ntitle: 蟒山行\nabbrlink: d313b7c4\ndate: 2020-09-13 11:59:13\ntags:\n  - 游记\n  - 蟒山森林公园\ncategories:\n  - 游记\n---\n\n![首屏图](https://s3.ax1x.com/2021/01/13/stfRFx.jpg)\n\n<!-- more -->\n\n> 上次爬蟒山已是多年前了，从地铁站一路北行，走了5公里才到达森林公园门口，还是太年轻了🤣🤣，忽略了自己的体力。\n> 接下来就是艰难爬山之旅了。感觉这次爬山体力确实和之前不一样了，走几步就需要休息会。\n\n![蟒山全景](https://s3.ax1x.com/2021/01/13/st4odA.jpg)\n![仰望最高点](https://s3.ax1x.com/2021/01/13/st4rZ9.jpg)\n![十三陵水库](https://s3.ax1x.com/2021/01/13/st4cPx.jpg)\n![会当凌绝顶](https://s3.ax1x.com/2021/01/13/st42RK.jpg)\n![一览众山小](https://s3.ax1x.com/2021/01/13/st4yI1.jpg)\n","slug":"蟒山行","published":1,"updated":"2021-01-30T04:16:46.668Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjys00132an90nepgog3","content":"<p><img src=\"https://s3.ax1x.com/2021/01/13/stfRFx.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>上次爬蟒山已是多年前了，从地铁站一路北行，走了5公里才到达森林公园门口，还是太年轻了🤣🤣，忽略了自己的体力。<br>接下来就是艰难爬山之旅了。感觉这次爬山体力确实和之前不一样了，走几步就需要休息会。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/st4odA.jpg\" alt=\"蟒山全景\"><br><img src=\"https://s3.ax1x.com/2021/01/13/st4rZ9.jpg\" alt=\"仰望最高点\"><br><img src=\"https://s3.ax1x.com/2021/01/13/st4cPx.jpg\" alt=\"十三陵水库\"><br><img src=\"https://s3.ax1x.com/2021/01/13/st42RK.jpg\" alt=\"会当凌绝顶\"><br><img src=\"https://s3.ax1x.com/2021/01/13/st4yI1.jpg\" alt=\"一览众山小\"></p>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s3.ax1x.com/2021/01/13/stfRFx.jpg\" alt=\"首屏图\"></p>","more":"<blockquote>\n<p>上次爬蟒山已是多年前了，从地铁站一路北行，走了5公里才到达森林公园门口，还是太年轻了🤣🤣，忽略了自己的体力。<br>接下来就是艰难爬山之旅了。感觉这次爬山体力确实和之前不一样了，走几步就需要休息会。</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/01/13/st4odA.jpg\" alt=\"蟒山全景\"><br><img src=\"https://s3.ax1x.com/2021/01/13/st4rZ9.jpg\" alt=\"仰望最高点\"><br><img src=\"https://s3.ax1x.com/2021/01/13/st4cPx.jpg\" alt=\"十三陵水库\"><br><img src=\"https://s3.ax1x.com/2021/01/13/st42RK.jpg\" alt=\"会当凌绝顶\"><br><img src=\"https://s3.ax1x.com/2021/01/13/st4yI1.jpg\" alt=\"一览众山小\"></p>"},{"title":"语义化标签","toc":true,"abbrlink":"8e596984","date":"2020-07-29T02:31:07.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/07/29/aeVhE8.jpg)\n\n<!-- more -->\n\n## 语义化标签使用背景\n\n讲到语义化，我们首先来聊聊html语义化的背景，HTML结构语义化，是最近几年才提出来的，以前的html结构，都是一堆没有语义的冷冰冰的标签。\n最泛滥的就是div+css，以前的页面，一打开就是一堆div+css，为了改变这种这种状况，\n开发者们和官方提出了让HTML结构语义化的概念，并且官方w3c，也在HTML5给出了几个新的语义化的标签。\n\n## 什么是语义化标签\n\n百度百科如此解释“语义化是指用合理HTML标记以及其特有的属性去格式化文档内容”，每个词都明白，写在一起有些迷糊？\n翻译一下哈“语义化就是使用恰当的标签（有一定语义的英文字母或者标签）去对应正确的内容，\n能够便于开发者阅读，在写出漂亮优雅的代码的同时可以方便其他人爬取进行解析。\n哪怕是不做网页开发的人也能看懂你要表达的意思”，比如说h1~h6代表的是标题，p代表段落，input代表输入框等等。\n\n## 为什么要使用语义化标签\n\n使用语义化标签有诸多好处：\n\n* 即使没有CSS，页面也能呈现出很好地内容结构、代码结构，仍然具备可读性；\n* 用户体验：例如title、alt用于解释名词或解释图片信息的标签尽量填写有含义的词语、label标签的活用；\n* 有利于SEO：和搜索引擎建立良好沟通，有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；\n* 方便特殊设备解析（如屏幕阅读器、盲人阅读器、移动设备）以有意义的方式来渲染网页；\n* 便于团队开发和维护，语义化更具可读性，遵循W3C标准的团队都遵循这个标准，可以减少差异化。\n\n## 怎么使用语义化标签\n\n* 尽可能少的使用div, span等无意义的标签，div和span没有含义，也因此十分适合作为容器标签\n* 尽量不要使用纯样式标签如`<font><b><u>`等，用css替代\n* 需要强调的地方，可以使用`<strong>`和`<em>`，不要使用`<b>`\n* `<label for=\"\">`标签的使用，将输入框和对应文字联系起来\n* `alt`除了做图片解释以外，可以作为页面未加载出来的文字\n* 使用br增加行间距的行为是错误的，`<br />`标签主要用于文本内容换行\n* 表格的caption,thead,tbody等的使用\n* html5新加的语义化标签-节元素，如`<header>,<aside>,<article>,<section>,<footer>,<nav>`等\n\n![H5结元素语义化标签](https://s1.ax1x.com/2020/07/29/aZKROA.png)\n\n### html中使用\n\n简单说，就是在书写HTML代码时，采用恰当的标签或者英文单词来告诉代码块的内容或者功能，至于说显示的样式，由CSS来处理，交互由JS处理。\n\n要达到这样的程度，首先要掌握每一个标签的语义，这样在写代码的时候，才能知道碰到的内容使用哪种标签比较合适：\n\n#### 标题\n\nh1~h6为标题，且随着重要性不断递减，p为段落，a是锚点；\n\n#### 表单\n\n很多表单的标签其实已经要求你对表单的内容进行解释：\n\n分组表单采用fieldset，使用legend进行说明表单的用途；\n\ninput标签对应的label标签就要求自己设置“for=XXId”来与input关联；\n\n#### 表格\n\n标题要用caption，表头用thead，主体部分用tbody包围，尾部用tfoot包围。表头和一般单元格要区分开，表头用th，单元格用td；\n\n#### 布局（HTML5新增）\n\nheader元素代表网页和section的页眉部分；\n\nfooter代表网页和section的页脚部分；\n\nhgroup元素代表网页和section的标题，主要应用在连续多个h1~h6的时候；\n\nnav元素主要应用在页面主要的导航链接区域；\n\naside可以在article内表示附属信息，也可以在article外面做侧边栏，但是最好与article对应；\n\nsection元素表示文档中的节或者段，我用的比较少，可能还没理解；\n\narticle元素我觉得最为容易混淆，我主要用在独立存在的文章或者文档，很多时候直接选择不用，可能是我现在还没有理解；\n\naddress元素主要是作者的联系信息等信息；\n\n#### 浏览器预设样式\n\nstrong不仅仅是加粗，主要是加强强调，显示文本的重要性；em斜体显示，表示强调；q不仅仅给文字增加双引号，更重要的是表明改文字为引用；\n\n#### 减少无语义的标签\n\n如：没有语义的div和span少用，及时用也要对id和class起名的时候也要实现语义化；\n\n减少纯粹的样式标签，如b，font，u，i等，采用CSS进行设置更好；\n\n### react的jsx中使用\n\n#### 更加熟悉\n\njsx与html看起来十分相似。\n\n#### 更加语义化\n\njsx允许你使用所有预定义的html5标签和自定义标签。标签名字自定义了，你语义化的能力多高，你的项目的语义化程度就有多高。\n\n#### 更加直观\n\n相对于使用原生js来写的结构，跟jsx可读性是没得比的\n\n#### 抽象化\n\n使用jsx能更好的抽象问题，当你的需求发现小许改变时，若是抽象得当你会发现，你要改的代码很少或者根本不用更改\n\n#### 定义一个自定义组件\n\n```jsx\nvar Header = React.createClass ({\n    render: function () {\n        return (\n            <div className=\"header\">\n                <h1>title</h1>\n            </div>\n        )\n    }\n})\n```\n\n上面还只是一个一次性的组件，要让这个组件使用起来，还需要一些动态元素\n\n#### 使用动态值\n\n跟vue的动态模版不同，jsx中的动态使用的是单花括号{...}, 花括号指明一个JavaScript上下文环境，\n你再花括号里面放入任何东西都会进行求值，所以不要在里面 new... var...\n\n对于简单的值，你可以直接在里面放一个变量，就像这样\n\n```jsx\nvar text = 'title'\n<h1>{text}</h1>\n```\n\n对于更复杂的逻辑，你可能需要一个函数来执行逻辑，然后把值返回，像这样\n\n```jsx\nvar getTitle = function () {\n    if (parseInt(Math.random()*10)>5) {\n        return '大于5'\n    } else {\n        return '小于等于5'\n    }\n}\n<h1>{getTitle}</h1>\n```\n\n#### 子节点\n\nreact将自定义组件的开始标签到结束标签之间的所有子节点都放在一个 this.props.children 的内置属性里面\n\n然后组件你就可以这样写\n\n```jsx\n<div className=\"title\">\n    <h1>{this.props.chlidren}<h1>\n</div>\n```\n\n然后你就可以想html标签一样使用你的自定义组件\n\n```jsx\n<Header>title</Header>\n```\n\n### 为什么语义化标签这么好但是项目中却基本不用(或少用)\n\n* 实际项目的功能模块划分与目前的语义化标签所设计的不那么契合\n\n但是很多人忽略了语义化标签产生的真实背景，我们通过查阅相关手册并仔细阅读每一个语义化标签的详解，\n不难发现这些标签基本上都是为了更好的描述博客类、文章类的网站而定义的。\n但是我们平时编写的网站基本上都是偏应用的，就拿电商网站来说，如果强行使用h5的语义化标签（如：article，header，footer，address，section等），\n就会发现这样使用已经偏离了这些语义化标签的描述，不仅破坏了html的整体结构，还造成其他人的阅读障碍。\n\n* 对语义化标签理解并不透彻\n\n对语义化标签了解不深的同学要谨慎使用，用错不如不用，当然有情怀的程序猿一定会在最合理的场景使用正确的语义化标签，\n因为语义化标签可以更好的支持搜索引擎，还能让机器去阅读你的html从而更好的支持视障项目的开发。\n\n* 普适性与实用性的权衡\n\nH5的语义化的初衷是非常好的，但是那种div span走天下的程序猿还是占大多数，\n语言标准的定制并不会因为本身的优点而定制，而是因为主流而定制，\n用的人多了，也就成了标准。所以我觉得语义化标签会应用的专业的页面中，\n并不会在通用的页面中大量出现，这也是为什么微信小程序只有view 、text标签而没有像html标签那么丰富，\n估计微信小程序的创作者也是有他自己的思考在里面。\n\n* 代码区块的高度封装及语义化\n\n内容按功能的封装，使得单个文件就是一个功能模块，没有再使用语义化标签的必要。\n\n## 参考资料\n\n* [语义化标签理解](https://www.cnblogs.com/coding-swallow/p/7891757.html)\n* [HTML语义化标签的一些浅显理解](https://zhuanlan.zhihu.com/p/35628414)\n* [关于HTML5语义化标签的一些看法](https://www.jianshu.com/p/1a3f04cf4de3)\n* [如何理解HTML结构的语义化](https://www.jianshu.com/p/6bc1fc059b51)\n* [html5语义化标签](https://juejin.im/entry/5a4ec8816fb9a01cb80f84e5)\n* [Html5，你为什么要语义化标签？](https://juejin.im/entry/5c839d116fb9a049ca38290b)\n* [谈谈语义化标签](https://johanzhu.github.io/2016/10/20/18/)\n* [html5新增标签以及标签的语义化](https://juejin.im/post/5c3f181ee51d4503834d6411)\n* [不要再用这么多 div 了，试试语义化标签吧](https://juejin.im/post/5e3d995e6fb9a07c8a5a0869)\n* [前端面试必问语义化标签的好处](http://www.lucklnk.com/godaddy/details/aid/960715138)\n* [关于语义化标签的一些思考](https://www.jianshu.com/p/1395f83db2f9)\n","source":"_posts/语义化标签.md","raw":"---\ntitle: 语义化标签\ntags:\n  - 技术积累\n  - 前端\n  - html\ncategories:\n  - 技术积累\n  - 前端\n  - html\ntoc: true\nabbrlink: '8e596984'\ndate: 2020-07-29 10:31:07\n---\n\n![首屏图](https://s1.ax1x.com/2020/07/29/aeVhE8.jpg)\n\n<!-- more -->\n\n## 语义化标签使用背景\n\n讲到语义化，我们首先来聊聊html语义化的背景，HTML结构语义化，是最近几年才提出来的，以前的html结构，都是一堆没有语义的冷冰冰的标签。\n最泛滥的就是div+css，以前的页面，一打开就是一堆div+css，为了改变这种这种状况，\n开发者们和官方提出了让HTML结构语义化的概念，并且官方w3c，也在HTML5给出了几个新的语义化的标签。\n\n## 什么是语义化标签\n\n百度百科如此解释“语义化是指用合理HTML标记以及其特有的属性去格式化文档内容”，每个词都明白，写在一起有些迷糊？\n翻译一下哈“语义化就是使用恰当的标签（有一定语义的英文字母或者标签）去对应正确的内容，\n能够便于开发者阅读，在写出漂亮优雅的代码的同时可以方便其他人爬取进行解析。\n哪怕是不做网页开发的人也能看懂你要表达的意思”，比如说h1~h6代表的是标题，p代表段落，input代表输入框等等。\n\n## 为什么要使用语义化标签\n\n使用语义化标签有诸多好处：\n\n* 即使没有CSS，页面也能呈现出很好地内容结构、代码结构，仍然具备可读性；\n* 用户体验：例如title、alt用于解释名词或解释图片信息的标签尽量填写有含义的词语、label标签的活用；\n* 有利于SEO：和搜索引擎建立良好沟通，有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；\n* 方便特殊设备解析（如屏幕阅读器、盲人阅读器、移动设备）以有意义的方式来渲染网页；\n* 便于团队开发和维护，语义化更具可读性，遵循W3C标准的团队都遵循这个标准，可以减少差异化。\n\n## 怎么使用语义化标签\n\n* 尽可能少的使用div, span等无意义的标签，div和span没有含义，也因此十分适合作为容器标签\n* 尽量不要使用纯样式标签如`<font><b><u>`等，用css替代\n* 需要强调的地方，可以使用`<strong>`和`<em>`，不要使用`<b>`\n* `<label for=\"\">`标签的使用，将输入框和对应文字联系起来\n* `alt`除了做图片解释以外，可以作为页面未加载出来的文字\n* 使用br增加行间距的行为是错误的，`<br />`标签主要用于文本内容换行\n* 表格的caption,thead,tbody等的使用\n* html5新加的语义化标签-节元素，如`<header>,<aside>,<article>,<section>,<footer>,<nav>`等\n\n![H5结元素语义化标签](https://s1.ax1x.com/2020/07/29/aZKROA.png)\n\n### html中使用\n\n简单说，就是在书写HTML代码时，采用恰当的标签或者英文单词来告诉代码块的内容或者功能，至于说显示的样式，由CSS来处理，交互由JS处理。\n\n要达到这样的程度，首先要掌握每一个标签的语义，这样在写代码的时候，才能知道碰到的内容使用哪种标签比较合适：\n\n#### 标题\n\nh1~h6为标题，且随着重要性不断递减，p为段落，a是锚点；\n\n#### 表单\n\n很多表单的标签其实已经要求你对表单的内容进行解释：\n\n分组表单采用fieldset，使用legend进行说明表单的用途；\n\ninput标签对应的label标签就要求自己设置“for=XXId”来与input关联；\n\n#### 表格\n\n标题要用caption，表头用thead，主体部分用tbody包围，尾部用tfoot包围。表头和一般单元格要区分开，表头用th，单元格用td；\n\n#### 布局（HTML5新增）\n\nheader元素代表网页和section的页眉部分；\n\nfooter代表网页和section的页脚部分；\n\nhgroup元素代表网页和section的标题，主要应用在连续多个h1~h6的时候；\n\nnav元素主要应用在页面主要的导航链接区域；\n\naside可以在article内表示附属信息，也可以在article外面做侧边栏，但是最好与article对应；\n\nsection元素表示文档中的节或者段，我用的比较少，可能还没理解；\n\narticle元素我觉得最为容易混淆，我主要用在独立存在的文章或者文档，很多时候直接选择不用，可能是我现在还没有理解；\n\naddress元素主要是作者的联系信息等信息；\n\n#### 浏览器预设样式\n\nstrong不仅仅是加粗，主要是加强强调，显示文本的重要性；em斜体显示，表示强调；q不仅仅给文字增加双引号，更重要的是表明改文字为引用；\n\n#### 减少无语义的标签\n\n如：没有语义的div和span少用，及时用也要对id和class起名的时候也要实现语义化；\n\n减少纯粹的样式标签，如b，font，u，i等，采用CSS进行设置更好；\n\n### react的jsx中使用\n\n#### 更加熟悉\n\njsx与html看起来十分相似。\n\n#### 更加语义化\n\njsx允许你使用所有预定义的html5标签和自定义标签。标签名字自定义了，你语义化的能力多高，你的项目的语义化程度就有多高。\n\n#### 更加直观\n\n相对于使用原生js来写的结构，跟jsx可读性是没得比的\n\n#### 抽象化\n\n使用jsx能更好的抽象问题，当你的需求发现小许改变时，若是抽象得当你会发现，你要改的代码很少或者根本不用更改\n\n#### 定义一个自定义组件\n\n```jsx\nvar Header = React.createClass ({\n    render: function () {\n        return (\n            <div className=\"header\">\n                <h1>title</h1>\n            </div>\n        )\n    }\n})\n```\n\n上面还只是一个一次性的组件，要让这个组件使用起来，还需要一些动态元素\n\n#### 使用动态值\n\n跟vue的动态模版不同，jsx中的动态使用的是单花括号{...}, 花括号指明一个JavaScript上下文环境，\n你再花括号里面放入任何东西都会进行求值，所以不要在里面 new... var...\n\n对于简单的值，你可以直接在里面放一个变量，就像这样\n\n```jsx\nvar text = 'title'\n<h1>{text}</h1>\n```\n\n对于更复杂的逻辑，你可能需要一个函数来执行逻辑，然后把值返回，像这样\n\n```jsx\nvar getTitle = function () {\n    if (parseInt(Math.random()*10)>5) {\n        return '大于5'\n    } else {\n        return '小于等于5'\n    }\n}\n<h1>{getTitle}</h1>\n```\n\n#### 子节点\n\nreact将自定义组件的开始标签到结束标签之间的所有子节点都放在一个 this.props.children 的内置属性里面\n\n然后组件你就可以这样写\n\n```jsx\n<div className=\"title\">\n    <h1>{this.props.chlidren}<h1>\n</div>\n```\n\n然后你就可以想html标签一样使用你的自定义组件\n\n```jsx\n<Header>title</Header>\n```\n\n### 为什么语义化标签这么好但是项目中却基本不用(或少用)\n\n* 实际项目的功能模块划分与目前的语义化标签所设计的不那么契合\n\n但是很多人忽略了语义化标签产生的真实背景，我们通过查阅相关手册并仔细阅读每一个语义化标签的详解，\n不难发现这些标签基本上都是为了更好的描述博客类、文章类的网站而定义的。\n但是我们平时编写的网站基本上都是偏应用的，就拿电商网站来说，如果强行使用h5的语义化标签（如：article，header，footer，address，section等），\n就会发现这样使用已经偏离了这些语义化标签的描述，不仅破坏了html的整体结构，还造成其他人的阅读障碍。\n\n* 对语义化标签理解并不透彻\n\n对语义化标签了解不深的同学要谨慎使用，用错不如不用，当然有情怀的程序猿一定会在最合理的场景使用正确的语义化标签，\n因为语义化标签可以更好的支持搜索引擎，还能让机器去阅读你的html从而更好的支持视障项目的开发。\n\n* 普适性与实用性的权衡\n\nH5的语义化的初衷是非常好的，但是那种div span走天下的程序猿还是占大多数，\n语言标准的定制并不会因为本身的优点而定制，而是因为主流而定制，\n用的人多了，也就成了标准。所以我觉得语义化标签会应用的专业的页面中，\n并不会在通用的页面中大量出现，这也是为什么微信小程序只有view 、text标签而没有像html标签那么丰富，\n估计微信小程序的创作者也是有他自己的思考在里面。\n\n* 代码区块的高度封装及语义化\n\n内容按功能的封装，使得单个文件就是一个功能模块，没有再使用语义化标签的必要。\n\n## 参考资料\n\n* [语义化标签理解](https://www.cnblogs.com/coding-swallow/p/7891757.html)\n* [HTML语义化标签的一些浅显理解](https://zhuanlan.zhihu.com/p/35628414)\n* [关于HTML5语义化标签的一些看法](https://www.jianshu.com/p/1a3f04cf4de3)\n* [如何理解HTML结构的语义化](https://www.jianshu.com/p/6bc1fc059b51)\n* [html5语义化标签](https://juejin.im/entry/5a4ec8816fb9a01cb80f84e5)\n* [Html5，你为什么要语义化标签？](https://juejin.im/entry/5c839d116fb9a049ca38290b)\n* [谈谈语义化标签](https://johanzhu.github.io/2016/10/20/18/)\n* [html5新增标签以及标签的语义化](https://juejin.im/post/5c3f181ee51d4503834d6411)\n* [不要再用这么多 div 了，试试语义化标签吧](https://juejin.im/post/5e3d995e6fb9a07c8a5a0869)\n* [前端面试必问语义化标签的好处](http://www.lucklnk.com/godaddy/details/aid/960715138)\n* [关于语义化标签的一些思考](https://www.jianshu.com/p/1395f83db2f9)\n","slug":"语义化标签","published":1,"updated":"2020-08-12T01:57:58.415Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjys00142an9e4hget5a","content":"<p><img src=\"https://s1.ax1x.com/2020/07/29/aeVhE8.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<h2 id=\"语义化标签使用背景\"><a href=\"#语义化标签使用背景\" class=\"headerlink\" title=\"语义化标签使用背景\"></a>语义化标签使用背景</h2><p>讲到语义化，我们首先来聊聊html语义化的背景，HTML结构语义化，是最近几年才提出来的，以前的html结构，都是一堆没有语义的冷冰冰的标签。<br>最泛滥的就是div+css，以前的页面，一打开就是一堆div+css，为了改变这种这种状况，<br>开发者们和官方提出了让HTML结构语义化的概念，并且官方w3c，也在HTML5给出了几个新的语义化的标签。</p>\n<h2 id=\"什么是语义化标签\"><a href=\"#什么是语义化标签\" class=\"headerlink\" title=\"什么是语义化标签\"></a>什么是语义化标签</h2><p>百度百科如此解释“语义化是指用合理HTML标记以及其特有的属性去格式化文档内容”，每个词都明白，写在一起有些迷糊？<br>翻译一下哈“语义化就是使用恰当的标签（有一定语义的英文字母或者标签）去对应正确的内容，<br>能够便于开发者阅读，在写出漂亮优雅的代码的同时可以方便其他人爬取进行解析。<br>哪怕是不做网页开发的人也能看懂你要表达的意思”，比如说h1~h6代表的是标题，p代表段落，input代表输入框等等。</p>\n<h2 id=\"为什么要使用语义化标签\"><a href=\"#为什么要使用语义化标签\" class=\"headerlink\" title=\"为什么要使用语义化标签\"></a>为什么要使用语义化标签</h2><p>使用语义化标签有诸多好处：</p>\n<ul>\n<li>即使没有CSS，页面也能呈现出很好地内容结构、代码结构，仍然具备可读性；</li>\n<li>用户体验：例如title、alt用于解释名词或解释图片信息的标签尽量填写有含义的词语、label标签的活用；</li>\n<li>有利于SEO：和搜索引擎建立良好沟通，有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；</li>\n<li>方便特殊设备解析（如屏幕阅读器、盲人阅读器、移动设备）以有意义的方式来渲染网页；</li>\n<li>便于团队开发和维护，语义化更具可读性，遵循W3C标准的团队都遵循这个标准，可以减少差异化。</li>\n</ul>\n<h2 id=\"怎么使用语义化标签\"><a href=\"#怎么使用语义化标签\" class=\"headerlink\" title=\"怎么使用语义化标签\"></a>怎么使用语义化标签</h2><ul>\n<li>尽可能少的使用div, span等无意义的标签，div和span没有含义，也因此十分适合作为容器标签</li>\n<li>尽量不要使用纯样式标签如<code>&lt;font&gt;&lt;b&gt;&lt;u&gt;</code>等，用css替代</li>\n<li>需要强调的地方，可以使用<code>&lt;strong&gt;</code>和<code>&lt;em&gt;</code>，不要使用<code>&lt;b&gt;</code></li>\n<li><code>&lt;label for=&quot;&quot;&gt;</code>标签的使用，将输入框和对应文字联系起来</li>\n<li><code>alt</code>除了做图片解释以外，可以作为页面未加载出来的文字</li>\n<li>使用br增加行间距的行为是错误的，<code>&lt;br /&gt;</code>标签主要用于文本内容换行</li>\n<li>表格的caption,thead,tbody等的使用</li>\n<li>html5新加的语义化标签-节元素，如<code>&lt;header&gt;,&lt;aside&gt;,&lt;article&gt;,&lt;section&gt;,&lt;footer&gt;,&lt;nav&gt;</code>等</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/29/aZKROA.png\" alt=\"H5结元素语义化标签\"></p>\n<h3 id=\"html中使用\"><a href=\"#html中使用\" class=\"headerlink\" title=\"html中使用\"></a>html中使用</h3><p>简单说，就是在书写HTML代码时，采用恰当的标签或者英文单词来告诉代码块的内容或者功能，至于说显示的样式，由CSS来处理，交互由JS处理。</p>\n<p>要达到这样的程度，首先要掌握每一个标签的语义，这样在写代码的时候，才能知道碰到的内容使用哪种标签比较合适：</p>\n<h4 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h4><p>h1~h6为标题，且随着重要性不断递减，p为段落，a是锚点；</p>\n<h4 id=\"表单\"><a href=\"#表单\" class=\"headerlink\" title=\"表单\"></a>表单</h4><p>很多表单的标签其实已经要求你对表单的内容进行解释：</p>\n<p>分组表单采用fieldset，使用legend进行说明表单的用途；</p>\n<p>input标签对应的label标签就要求自己设置“for=XXId”来与input关联；</p>\n<h4 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h4><p>标题要用caption，表头用thead，主体部分用tbody包围，尾部用tfoot包围。表头和一般单元格要区分开，表头用th，单元格用td；</p>\n<h4 id=\"布局（HTML5新增）\"><a href=\"#布局（HTML5新增）\" class=\"headerlink\" title=\"布局（HTML5新增）\"></a>布局（HTML5新增）</h4><p>header元素代表网页和section的页眉部分；</p>\n<p>footer代表网页和section的页脚部分；</p>\n<p>hgroup元素代表网页和section的标题，主要应用在连续多个h1~h6的时候；</p>\n<p>nav元素主要应用在页面主要的导航链接区域；</p>\n<p>aside可以在article内表示附属信息，也可以在article外面做侧边栏，但是最好与article对应；</p>\n<p>section元素表示文档中的节或者段，我用的比较少，可能还没理解；</p>\n<p>article元素我觉得最为容易混淆，我主要用在独立存在的文章或者文档，很多时候直接选择不用，可能是我现在还没有理解；</p>\n<p>address元素主要是作者的联系信息等信息；</p>\n<h4 id=\"浏览器预设样式\"><a href=\"#浏览器预设样式\" class=\"headerlink\" title=\"浏览器预设样式\"></a>浏览器预设样式</h4><p>strong不仅仅是加粗，主要是加强强调，显示文本的重要性；em斜体显示，表示强调；q不仅仅给文字增加双引号，更重要的是表明改文字为引用；</p>\n<h4 id=\"减少无语义的标签\"><a href=\"#减少无语义的标签\" class=\"headerlink\" title=\"减少无语义的标签\"></a>减少无语义的标签</h4><p>如：没有语义的div和span少用，及时用也要对id和class起名的时候也要实现语义化；</p>\n<p>减少纯粹的样式标签，如b，font，u，i等，采用CSS进行设置更好；</p>\n<h3 id=\"react的jsx中使用\"><a href=\"#react的jsx中使用\" class=\"headerlink\" title=\"react的jsx中使用\"></a>react的jsx中使用</h3><h4 id=\"更加熟悉\"><a href=\"#更加熟悉\" class=\"headerlink\" title=\"更加熟悉\"></a>更加熟悉</h4><p>jsx与html看起来十分相似。</p>\n<h4 id=\"更加语义化\"><a href=\"#更加语义化\" class=\"headerlink\" title=\"更加语义化\"></a>更加语义化</h4><p>jsx允许你使用所有预定义的html5标签和自定义标签。标签名字自定义了，你语义化的能力多高，你的项目的语义化程度就有多高。</p>\n<h4 id=\"更加直观\"><a href=\"#更加直观\" class=\"headerlink\" title=\"更加直观\"></a>更加直观</h4><p>相对于使用原生js来写的结构，跟jsx可读性是没得比的</p>\n<h4 id=\"抽象化\"><a href=\"#抽象化\" class=\"headerlink\" title=\"抽象化\"></a>抽象化</h4><p>使用jsx能更好的抽象问题，当你的需求发现小许改变时，若是抽象得当你会发现，你要改的代码很少或者根本不用更改</p>\n<h4 id=\"定义一个自定义组件\"><a href=\"#定义一个自定义组件\" class=\"headerlink\" title=\"定义一个自定义组件\"></a>定义一个自定义组件</h4><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Header = React.createClass (&#123;</span><br><span class=\"line\">    render: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            &lt;div className=<span class=\"string\">&quot;header&quot;</span>&gt;</span><br><span class=\"line\">                &lt;h1&gt;title&lt;/h1&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">        )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>上面还只是一个一次性的组件，要让这个组件使用起来，还需要一些动态元素</p>\n<h4 id=\"使用动态值\"><a href=\"#使用动态值\" class=\"headerlink\" title=\"使用动态值\"></a>使用动态值</h4><p>跟vue的动态模版不同，jsx中的动态使用的是单花括号{…}, 花括号指明一个JavaScript上下文环境，<br>你再花括号里面放入任何东西都会进行求值，所以不要在里面 new… var…</p>\n<p>对于简单的值，你可以直接在里面放一个变量，就像这样</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> text = <span class=\"string\">&#x27;title&#x27;</span></span><br><span class=\"line\">&lt;h1&gt;&#123;text&#125;&lt;/h1&gt;</span><br></pre></td></tr></table></figure>\n<p>对于更复杂的逻辑，你可能需要一个函数来执行逻辑，然后把值返回，像这样</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> getTitle = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">parseInt</span>(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">10</span>)&gt;<span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;大于5&#x27;</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;小于等于5&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;h1&gt;&#123;getTitle&#125;&lt;/h1&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"子节点\"><a href=\"#子节点\" class=\"headerlink\" title=\"子节点\"></a>子节点</h4><p>react将自定义组件的开始标签到结束标签之间的所有子节点都放在一个 this.props.children 的内置属性里面</p>\n<p>然后组件你就可以这样写</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div className=<span class=\"string\">&quot;title&quot;</span>&gt;</span><br><span class=\"line\">    &lt;h1&gt;&#123;<span class=\"built_in\">this</span>.props.chlidren&#125;&lt;h1&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>然后你就可以想html标签一样使用你的自定义组件</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Header&gt;title&lt;/Header&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"为什么语义化标签这么好但是项目中却基本不用-或少用\"><a href=\"#为什么语义化标签这么好但是项目中却基本不用-或少用\" class=\"headerlink\" title=\"为什么语义化标签这么好但是项目中却基本不用(或少用)\"></a>为什么语义化标签这么好但是项目中却基本不用(或少用)</h3><ul>\n<li>实际项目的功能模块划分与目前的语义化标签所设计的不那么契合</li>\n</ul>\n<p>但是很多人忽略了语义化标签产生的真实背景，我们通过查阅相关手册并仔细阅读每一个语义化标签的详解，<br>不难发现这些标签基本上都是为了更好的描述博客类、文章类的网站而定义的。<br>但是我们平时编写的网站基本上都是偏应用的，就拿电商网站来说，如果强行使用h5的语义化标签（如：article，header，footer，address，section等），<br>就会发现这样使用已经偏离了这些语义化标签的描述，不仅破坏了html的整体结构，还造成其他人的阅读障碍。</p>\n<ul>\n<li>对语义化标签理解并不透彻</li>\n</ul>\n<p>对语义化标签了解不深的同学要谨慎使用，用错不如不用，当然有情怀的程序猿一定会在最合理的场景使用正确的语义化标签，<br>因为语义化标签可以更好的支持搜索引擎，还能让机器去阅读你的html从而更好的支持视障项目的开发。</p>\n<ul>\n<li>普适性与实用性的权衡</li>\n</ul>\n<p>H5的语义化的初衷是非常好的，但是那种div span走天下的程序猿还是占大多数，<br>语言标准的定制并不会因为本身的优点而定制，而是因为主流而定制，<br>用的人多了，也就成了标准。所以我觉得语义化标签会应用的专业的页面中，<br>并不会在通用的页面中大量出现，这也是为什么微信小程序只有view 、text标签而没有像html标签那么丰富，<br>估计微信小程序的创作者也是有他自己的思考在里面。</p>\n<ul>\n<li>代码区块的高度封装及语义化</li>\n</ul>\n<p>内容按功能的封装，使得单个文件就是一个功能模块，没有再使用语义化标签的必要。</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.cnblogs.com/coding-swallow/p/7891757.html\">语义化标签理解</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/35628414\">HTML语义化标签的一些浅显理解</a></li>\n<li><a href=\"https://www.jianshu.com/p/1a3f04cf4de3\">关于HTML5语义化标签的一些看法</a></li>\n<li><a href=\"https://www.jianshu.com/p/6bc1fc059b51\">如何理解HTML结构的语义化</a></li>\n<li><a href=\"https://juejin.im/entry/5a4ec8816fb9a01cb80f84e5\">html5语义化标签</a></li>\n<li><a href=\"https://juejin.im/entry/5c839d116fb9a049ca38290b\">Html5，你为什么要语义化标签？</a></li>\n<li><a href=\"https://johanzhu.github.io/2016/10/20/18/\">谈谈语义化标签</a></li>\n<li><a href=\"https://juejin.im/post/5c3f181ee51d4503834d6411\">html5新增标签以及标签的语义化</a></li>\n<li><a href=\"https://juejin.im/post/5e3d995e6fb9a07c8a5a0869\">不要再用这么多 div 了，试试语义化标签吧</a></li>\n<li><a href=\"http://www.lucklnk.com/godaddy/details/aid/960715138\">前端面试必问语义化标签的好处</a></li>\n<li><a href=\"https://www.jianshu.com/p/1395f83db2f9\">关于语义化标签的一些思考</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/07/29/aeVhE8.jpg\" alt=\"首屏图\"></p>","more":"<h2 id=\"语义化标签使用背景\"><a href=\"#语义化标签使用背景\" class=\"headerlink\" title=\"语义化标签使用背景\"></a>语义化标签使用背景</h2><p>讲到语义化，我们首先来聊聊html语义化的背景，HTML结构语义化，是最近几年才提出来的，以前的html结构，都是一堆没有语义的冷冰冰的标签。<br>最泛滥的就是div+css，以前的页面，一打开就是一堆div+css，为了改变这种这种状况，<br>开发者们和官方提出了让HTML结构语义化的概念，并且官方w3c，也在HTML5给出了几个新的语义化的标签。</p>\n<h2 id=\"什么是语义化标签\"><a href=\"#什么是语义化标签\" class=\"headerlink\" title=\"什么是语义化标签\"></a>什么是语义化标签</h2><p>百度百科如此解释“语义化是指用合理HTML标记以及其特有的属性去格式化文档内容”，每个词都明白，写在一起有些迷糊？<br>翻译一下哈“语义化就是使用恰当的标签（有一定语义的英文字母或者标签）去对应正确的内容，<br>能够便于开发者阅读，在写出漂亮优雅的代码的同时可以方便其他人爬取进行解析。<br>哪怕是不做网页开发的人也能看懂你要表达的意思”，比如说h1~h6代表的是标题，p代表段落，input代表输入框等等。</p>\n<h2 id=\"为什么要使用语义化标签\"><a href=\"#为什么要使用语义化标签\" class=\"headerlink\" title=\"为什么要使用语义化标签\"></a>为什么要使用语义化标签</h2><p>使用语义化标签有诸多好处：</p>\n<ul>\n<li>即使没有CSS，页面也能呈现出很好地内容结构、代码结构，仍然具备可读性；</li>\n<li>用户体验：例如title、alt用于解释名词或解释图片信息的标签尽量填写有含义的词语、label标签的活用；</li>\n<li>有利于SEO：和搜索引擎建立良好沟通，有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；</li>\n<li>方便特殊设备解析（如屏幕阅读器、盲人阅读器、移动设备）以有意义的方式来渲染网页；</li>\n<li>便于团队开发和维护，语义化更具可读性，遵循W3C标准的团队都遵循这个标准，可以减少差异化。</li>\n</ul>\n<h2 id=\"怎么使用语义化标签\"><a href=\"#怎么使用语义化标签\" class=\"headerlink\" title=\"怎么使用语义化标签\"></a>怎么使用语义化标签</h2><ul>\n<li>尽可能少的使用div, span等无意义的标签，div和span没有含义，也因此十分适合作为容器标签</li>\n<li>尽量不要使用纯样式标签如<code>&lt;font&gt;&lt;b&gt;&lt;u&gt;</code>等，用css替代</li>\n<li>需要强调的地方，可以使用<code>&lt;strong&gt;</code>和<code>&lt;em&gt;</code>，不要使用<code>&lt;b&gt;</code></li>\n<li><code>&lt;label for=&quot;&quot;&gt;</code>标签的使用，将输入框和对应文字联系起来</li>\n<li><code>alt</code>除了做图片解释以外，可以作为页面未加载出来的文字</li>\n<li>使用br增加行间距的行为是错误的，<code>&lt;br /&gt;</code>标签主要用于文本内容换行</li>\n<li>表格的caption,thead,tbody等的使用</li>\n<li>html5新加的语义化标签-节元素，如<code>&lt;header&gt;,&lt;aside&gt;,&lt;article&gt;,&lt;section&gt;,&lt;footer&gt;,&lt;nav&gt;</code>等</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/29/aZKROA.png\" alt=\"H5结元素语义化标签\"></p>\n<h3 id=\"html中使用\"><a href=\"#html中使用\" class=\"headerlink\" title=\"html中使用\"></a>html中使用</h3><p>简单说，就是在书写HTML代码时，采用恰当的标签或者英文单词来告诉代码块的内容或者功能，至于说显示的样式，由CSS来处理，交互由JS处理。</p>\n<p>要达到这样的程度，首先要掌握每一个标签的语义，这样在写代码的时候，才能知道碰到的内容使用哪种标签比较合适：</p>\n<h4 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h4><p>h1~h6为标题，且随着重要性不断递减，p为段落，a是锚点；</p>\n<h4 id=\"表单\"><a href=\"#表单\" class=\"headerlink\" title=\"表单\"></a>表单</h4><p>很多表单的标签其实已经要求你对表单的内容进行解释：</p>\n<p>分组表单采用fieldset，使用legend进行说明表单的用途；</p>\n<p>input标签对应的label标签就要求自己设置“for=XXId”来与input关联；</p>\n<h4 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h4><p>标题要用caption，表头用thead，主体部分用tbody包围，尾部用tfoot包围。表头和一般单元格要区分开，表头用th，单元格用td；</p>\n<h4 id=\"布局（HTML5新增）\"><a href=\"#布局（HTML5新增）\" class=\"headerlink\" title=\"布局（HTML5新增）\"></a>布局（HTML5新增）</h4><p>header元素代表网页和section的页眉部分；</p>\n<p>footer代表网页和section的页脚部分；</p>\n<p>hgroup元素代表网页和section的标题，主要应用在连续多个h1~h6的时候；</p>\n<p>nav元素主要应用在页面主要的导航链接区域；</p>\n<p>aside可以在article内表示附属信息，也可以在article外面做侧边栏，但是最好与article对应；</p>\n<p>section元素表示文档中的节或者段，我用的比较少，可能还没理解；</p>\n<p>article元素我觉得最为容易混淆，我主要用在独立存在的文章或者文档，很多时候直接选择不用，可能是我现在还没有理解；</p>\n<p>address元素主要是作者的联系信息等信息；</p>\n<h4 id=\"浏览器预设样式\"><a href=\"#浏览器预设样式\" class=\"headerlink\" title=\"浏览器预设样式\"></a>浏览器预设样式</h4><p>strong不仅仅是加粗，主要是加强强调，显示文本的重要性；em斜体显示，表示强调；q不仅仅给文字增加双引号，更重要的是表明改文字为引用；</p>\n<h4 id=\"减少无语义的标签\"><a href=\"#减少无语义的标签\" class=\"headerlink\" title=\"减少无语义的标签\"></a>减少无语义的标签</h4><p>如：没有语义的div和span少用，及时用也要对id和class起名的时候也要实现语义化；</p>\n<p>减少纯粹的样式标签，如b，font，u，i等，采用CSS进行设置更好；</p>\n<h3 id=\"react的jsx中使用\"><a href=\"#react的jsx中使用\" class=\"headerlink\" title=\"react的jsx中使用\"></a>react的jsx中使用</h3><h4 id=\"更加熟悉\"><a href=\"#更加熟悉\" class=\"headerlink\" title=\"更加熟悉\"></a>更加熟悉</h4><p>jsx与html看起来十分相似。</p>\n<h4 id=\"更加语义化\"><a href=\"#更加语义化\" class=\"headerlink\" title=\"更加语义化\"></a>更加语义化</h4><p>jsx允许你使用所有预定义的html5标签和自定义标签。标签名字自定义了，你语义化的能力多高，你的项目的语义化程度就有多高。</p>\n<h4 id=\"更加直观\"><a href=\"#更加直观\" class=\"headerlink\" title=\"更加直观\"></a>更加直观</h4><p>相对于使用原生js来写的结构，跟jsx可读性是没得比的</p>\n<h4 id=\"抽象化\"><a href=\"#抽象化\" class=\"headerlink\" title=\"抽象化\"></a>抽象化</h4><p>使用jsx能更好的抽象问题，当你的需求发现小许改变时，若是抽象得当你会发现，你要改的代码很少或者根本不用更改</p>\n<h4 id=\"定义一个自定义组件\"><a href=\"#定义一个自定义组件\" class=\"headerlink\" title=\"定义一个自定义组件\"></a>定义一个自定义组件</h4><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Header = React.createClass (&#123;</span><br><span class=\"line\">    render: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            &lt;div className=<span class=\"string\">&quot;header&quot;</span>&gt;</span><br><span class=\"line\">                &lt;h1&gt;title&lt;/h1&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">        )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>上面还只是一个一次性的组件，要让这个组件使用起来，还需要一些动态元素</p>\n<h4 id=\"使用动态值\"><a href=\"#使用动态值\" class=\"headerlink\" title=\"使用动态值\"></a>使用动态值</h4><p>跟vue的动态模版不同，jsx中的动态使用的是单花括号{…}, 花括号指明一个JavaScript上下文环境，<br>你再花括号里面放入任何东西都会进行求值，所以不要在里面 new… var…</p>\n<p>对于简单的值，你可以直接在里面放一个变量，就像这样</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> text = <span class=\"string\">&#x27;title&#x27;</span></span><br><span class=\"line\">&lt;h1&gt;&#123;text&#125;&lt;/h1&gt;</span><br></pre></td></tr></table></figure>\n<p>对于更复杂的逻辑，你可能需要一个函数来执行逻辑，然后把值返回，像这样</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> getTitle = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">parseInt</span>(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">10</span>)&gt;<span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;大于5&#x27;</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;小于等于5&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;h1&gt;&#123;getTitle&#125;&lt;/h1&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"子节点\"><a href=\"#子节点\" class=\"headerlink\" title=\"子节点\"></a>子节点</h4><p>react将自定义组件的开始标签到结束标签之间的所有子节点都放在一个 this.props.children 的内置属性里面</p>\n<p>然后组件你就可以这样写</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div className=<span class=\"string\">&quot;title&quot;</span>&gt;</span><br><span class=\"line\">    &lt;h1&gt;&#123;<span class=\"built_in\">this</span>.props.chlidren&#125;&lt;h1&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>然后你就可以想html标签一样使用你的自定义组件</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Header&gt;title&lt;/Header&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"为什么语义化标签这么好但是项目中却基本不用-或少用\"><a href=\"#为什么语义化标签这么好但是项目中却基本不用-或少用\" class=\"headerlink\" title=\"为什么语义化标签这么好但是项目中却基本不用(或少用)\"></a>为什么语义化标签这么好但是项目中却基本不用(或少用)</h3><ul>\n<li>实际项目的功能模块划分与目前的语义化标签所设计的不那么契合</li>\n</ul>\n<p>但是很多人忽略了语义化标签产生的真实背景，我们通过查阅相关手册并仔细阅读每一个语义化标签的详解，<br>不难发现这些标签基本上都是为了更好的描述博客类、文章类的网站而定义的。<br>但是我们平时编写的网站基本上都是偏应用的，就拿电商网站来说，如果强行使用h5的语义化标签（如：article，header，footer，address，section等），<br>就会发现这样使用已经偏离了这些语义化标签的描述，不仅破坏了html的整体结构，还造成其他人的阅读障碍。</p>\n<ul>\n<li>对语义化标签理解并不透彻</li>\n</ul>\n<p>对语义化标签了解不深的同学要谨慎使用，用错不如不用，当然有情怀的程序猿一定会在最合理的场景使用正确的语义化标签，<br>因为语义化标签可以更好的支持搜索引擎，还能让机器去阅读你的html从而更好的支持视障项目的开发。</p>\n<ul>\n<li>普适性与实用性的权衡</li>\n</ul>\n<p>H5的语义化的初衷是非常好的，但是那种div span走天下的程序猿还是占大多数，<br>语言标准的定制并不会因为本身的优点而定制，而是因为主流而定制，<br>用的人多了，也就成了标准。所以我觉得语义化标签会应用的专业的页面中，<br>并不会在通用的页面中大量出现，这也是为什么微信小程序只有view 、text标签而没有像html标签那么丰富，<br>估计微信小程序的创作者也是有他自己的思考在里面。</p>\n<ul>\n<li>代码区块的高度封装及语义化</li>\n</ul>\n<p>内容按功能的封装，使得单个文件就是一个功能模块，没有再使用语义化标签的必要。</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.cnblogs.com/coding-swallow/p/7891757.html\">语义化标签理解</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/35628414\">HTML语义化标签的一些浅显理解</a></li>\n<li><a href=\"https://www.jianshu.com/p/1a3f04cf4de3\">关于HTML5语义化标签的一些看法</a></li>\n<li><a href=\"https://www.jianshu.com/p/6bc1fc059b51\">如何理解HTML结构的语义化</a></li>\n<li><a href=\"https://juejin.im/entry/5a4ec8816fb9a01cb80f84e5\">html5语义化标签</a></li>\n<li><a href=\"https://juejin.im/entry/5c839d116fb9a049ca38290b\">Html5，你为什么要语义化标签？</a></li>\n<li><a href=\"https://johanzhu.github.io/2016/10/20/18/\">谈谈语义化标签</a></li>\n<li><a href=\"https://juejin.im/post/5c3f181ee51d4503834d6411\">html5新增标签以及标签的语义化</a></li>\n<li><a href=\"https://juejin.im/post/5e3d995e6fb9a07c8a5a0869\">不要再用这么多 div 了，试试语义化标签吧</a></li>\n<li><a href=\"http://www.lucklnk.com/godaddy/details/aid/960715138\">前端面试必问语义化标签的好处</a></li>\n<li><a href=\"https://www.jianshu.com/p/1395f83db2f9\">关于语义化标签的一些思考</a></li>\n</ul>"},{"title":"逛南锣","abbrlink":"1dc1f56e","date":"2020-05-24T08:56:49.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/07/20/UhSi8S.jpg)\n\n<!-- more -->\n\n> 今天借着给老付过生日 再去南锣转转\n\n![图1](https://s1.ax1x.com/2020/07/20/UfjC6A.jpg)\n\n![图2](https://s1.ax1x.com/2020/07/20/UfXzfe.jpg)\n\n![图3](https://s1.ax1x.com/2020/07/20/UfXXTK.jpg)\n\n![图4](https://s1.ax1x.com/2020/07/20/UfXvFO.jpg)\n\n![图5](https://s1.ax1x.com/2020/07/20/UfXxYD.jpg)\n\n<!-- <iframe width=\"100%\" height=\"500\" src=\"https://map.baidu.com/search/%E5%8D%97%E9%94%A3%E9%BC%93%E5%B7%B7/@12958378.23275926,4830040.521454999,17.29z?querytype=con&wd=%E5%8D%97%E9%94%A3%E9%BC%93%E5%B7%B7&c=131&provider=pc-aladin&pn=0&device_ratio=1&da_src=shareurl\"></iframe> -->\n","source":"_posts/逛南锣.md","raw":"---\ntitle: 逛南锣\ntags:\n  - 游记\n  - 南锣鼓巷\ncategories:\n  - 游记\nabbrlink: 1dc1f56e\ndate: 2020-05-24 16:56:49\n---\n\n![首屏图](https://s1.ax1x.com/2020/07/20/UhSi8S.jpg)\n\n<!-- more -->\n\n> 今天借着给老付过生日 再去南锣转转\n\n![图1](https://s1.ax1x.com/2020/07/20/UfjC6A.jpg)\n\n![图2](https://s1.ax1x.com/2020/07/20/UfXzfe.jpg)\n\n![图3](https://s1.ax1x.com/2020/07/20/UfXXTK.jpg)\n\n![图4](https://s1.ax1x.com/2020/07/20/UfXvFO.jpg)\n\n![图5](https://s1.ax1x.com/2020/07/20/UfXxYD.jpg)\n\n<!-- <iframe width=\"100%\" height=\"500\" src=\"https://map.baidu.com/search/%E5%8D%97%E9%94%A3%E9%BC%93%E5%B7%B7/@12958378.23275926,4830040.521454999,17.29z?querytype=con&wd=%E5%8D%97%E9%94%A3%E9%BC%93%E5%B7%B7&c=131&provider=pc-aladin&pn=0&device_ratio=1&da_src=shareurl\"></iframe> -->\n","slug":"逛南锣","published":1,"updated":"2020-08-12T01:57:58.415Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyt00152an90q1o4hi8","content":"<p><img src=\"https://s1.ax1x.com/2020/07/20/UhSi8S.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>今天借着给老付过生日 再去南锣转转</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/07/20/UfjC6A.jpg\" alt=\"图1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/20/UfXzfe.jpg\" alt=\"图2\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/20/UfXXTK.jpg\" alt=\"图3\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/20/UfXvFO.jpg\" alt=\"图4\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/20/UfXxYD.jpg\" alt=\"图5\"></p>\n<!-- <iframe width=\"100%\" height=\"500\" src=\"https://map.baidu.com/search/%E5%8D%97%E9%94%A3%E9%BC%93%E5%B7%B7/@12958378.23275926,4830040.521454999,17.29z?querytype=con&wd=%E5%8D%97%E9%94%A3%E9%BC%93%E5%B7%B7&c=131&provider=pc-aladin&pn=0&device_ratio=1&da_src=shareurl\"></iframe> -->\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/07/20/UhSi8S.jpg\" alt=\"首屏图\"></p>","more":"<blockquote>\n<p>今天借着给老付过生日 再去南锣转转</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/07/20/UfjC6A.jpg\" alt=\"图1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/20/UfXzfe.jpg\" alt=\"图2\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/20/UfXXTK.jpg\" alt=\"图3\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/20/UfXvFO.jpg\" alt=\"图4\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/20/UfXxYD.jpg\" alt=\"图5\"></p>\n<!-- <iframe width=\"100%\" height=\"500\" src=\"https://map.baidu.com/search/%E5%8D%97%E9%94%A3%E9%BC%93%E5%B7%B7/@12958378.23275926,4830040.521454999,17.29z?querytype=con&wd=%E5%8D%97%E9%94%A3%E9%BC%93%E5%B7%B7&c=131&provider=pc-aladin&pn=0&device_ratio=1&da_src=shareurl\"></iframe> -->"},{"title":"阳台山","abbrlink":"1bb83427","date":"2020-05-16T05:13:27.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/07/22/U7vbgP.jpg)\n\n<!-- more -->\n\n> 被阳台山教育了 本以为可以登顶 结果才爬了一半\n\n![图1](https://s1.ax1x.com/2020/07/22/U7jNee.jpg)\n\n![图2](https://s1.ax1x.com/2020/07/22/U7judJ.jpg)\n\n![图3](https://s1.ax1x.com/2020/07/22/U7jJsO.jpg)\n\n![图4](https://s1.ax1x.com/2020/07/22/U7jKo9.jpg)\n\n![图5](https://s1.ax1x.com/2020/07/22/U7jnZ4.jpg)\n\n![图6](https://s1.ax1x.com/2020/07/22/U7jQiR.jpg)\n\n![图7](https://s1.ax1x.com/2020/07/22/U7jlJ1.jpg)\n\n![图8](https://s1.ax1x.com/2020/07/22/U7jGQK.jpg)\n\n![图9](https://s1.ax1x.com/2020/07/22/U7jYLD.jpg)\n","source":"_posts/阳台山.md","raw":"---\ntitle: 阳台山\ntags:\n  - 游记\n  - 阳台山\ncategories:\n  - 游记\nabbrlink: 1bb83427\ndate: 2020-05-16 13:13:27\n---\n\n![首屏图](https://s1.ax1x.com/2020/07/22/U7vbgP.jpg)\n\n<!-- more -->\n\n> 被阳台山教育了 本以为可以登顶 结果才爬了一半\n\n![图1](https://s1.ax1x.com/2020/07/22/U7jNee.jpg)\n\n![图2](https://s1.ax1x.com/2020/07/22/U7judJ.jpg)\n\n![图3](https://s1.ax1x.com/2020/07/22/U7jJsO.jpg)\n\n![图4](https://s1.ax1x.com/2020/07/22/U7jKo9.jpg)\n\n![图5](https://s1.ax1x.com/2020/07/22/U7jnZ4.jpg)\n\n![图6](https://s1.ax1x.com/2020/07/22/U7jQiR.jpg)\n\n![图7](https://s1.ax1x.com/2020/07/22/U7jlJ1.jpg)\n\n![图8](https://s1.ax1x.com/2020/07/22/U7jGQK.jpg)\n\n![图9](https://s1.ax1x.com/2020/07/22/U7jYLD.jpg)\n","slug":"阳台山","published":1,"updated":"2020-08-12T01:57:58.415Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyt00162an90b511rhu","content":"<p><img src=\"https://s1.ax1x.com/2020/07/22/U7vbgP.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>被阳台山教育了 本以为可以登顶 结果才爬了一半</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jNee.jpg\" alt=\"图1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7judJ.jpg\" alt=\"图2\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jJsO.jpg\" alt=\"图3\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jKo9.jpg\" alt=\"图4\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jnZ4.jpg\" alt=\"图5\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jQiR.jpg\" alt=\"图6\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jlJ1.jpg\" alt=\"图7\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jGQK.jpg\" alt=\"图8\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jYLD.jpg\" alt=\"图9\"></p>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/07/22/U7vbgP.jpg\" alt=\"首屏图\"></p>","more":"<blockquote>\n<p>被阳台山教育了 本以为可以登顶 结果才爬了一半</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jNee.jpg\" alt=\"图1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7judJ.jpg\" alt=\"图2\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jJsO.jpg\" alt=\"图3\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jKo9.jpg\" alt=\"图4\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jnZ4.jpg\" alt=\"图5\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jQiR.jpg\" alt=\"图6\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jlJ1.jpg\" alt=\"图7\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jGQK.jpg\" alt=\"图8\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/22/U7jYLD.jpg\" alt=\"图9\"></p>"},{"title":"项目建立手册","toc":true,"abbrlink":"17789b6e","date":"2020-07-14T14:12:40.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/07/17/Us8yDO.jpg)\n\n<!-- more -->\n\n>本项目基于hexo+github结构创建\n\n## 1 配置环境\n\n### 1.1 Node\n\n用来生成静态页面的，到Node.js[官网](https://nodejs.org/en/)下载相应平台的最新版本，一路安装即可。\n\n### 1.2 Git\n\n把本地的hexo内容提交到github上去。安装Xcode就自带有Git，我就不多说了。\n\n* 注意：这里如果是首次生成ssh的话可能有个小坑 下文2.2中会提到\n\n### 1.3 申请GitHub\n\n是用来做博客的远程创库、域名、服务器之类的，怎么与本地hexo建立连接等下讲。\ngithub账号我也不再啰嗦了,没有的话直接申请就行了，跟一般的注册账号差不多，\nSSH Keys，看你自己了，可以不配制，不配置的话以后每次对自己的博客有改动提交的时候就要手动输入账号密码，\n配置了就不需要了，怎么配置我就不多说了，网上有很多教程。\n\n### 1.4 正式安装HEXO\n\nNode和Git都安装好后，可执行如下命令安装hexo：\n\n```shell\nsudo npm install -g hexo\n```\n\n### 1.5 初始化hexo\n\n创建一个文件夹，如：Blog，cd到Blog里执行hexo init的。命令\n\n```shell\nhexo init\n```\n\n好啦，至此，全部安装工作已经完成！\n\n### 1.6 生成静态页面\n\n继续再Blog目录下执行如下命令，生成静态页面\n\n```shell\nhexo generate（hexo g也可以）\n```\n\n### 1.7 本地启动\n\n启动本地服务，进行文章预览调试\n\n```shell\nhexo server\n```\n\n浏览器输入[http://localhost:4000](http://localhost:4000) 这里可能遇到无法启动的问题，可能是环境未配置好\n\n### 1.8 常见的HEXO配置错误\n\n```shell\nERROR Plugin load failed: hexo-server\n\n原因： Besides, utilities are separated into a standalone module. hexo.util is not reachable anymore.\n\n解决方法，执行命令：$ sudo npm install hexo-server\n```\n\n```shell\n执行命令hexo server，提示：Usage: hexo<Command> ....\n\n原因：我认为是没有生成本地服务\n\n解决方法，执行命令：$ npm install hexo-server --save\n\n提示：hexo-server@0.1.2 node_modules/hexo-server\n....\n\n表示成功了[参考](https://hexo.io/zh-cn/docs/server.html)\n```\n\n这个时候再执行：hexo-server\n\n得到: INFO Hexo is running at `http://0.0.0.0:4000/`. Press Ctrl+C to stop.\n\n这个时候再点击`http://0.0.0.0:4000`，正常情况下应该是最原始的画面，但是我看到的是：\n白板和Cannot GET / 几个字 原因： 由于2.6以后就更新了，我们需要手动配置些东西，我们需要输入下面三行命令：\n\n```shell\nnpm install hexo-renderer-ejs --save\nnpm install hexo-renderer-stylus --save\nnpm install hexo-renderer-marked --save\n```\n\n这个时候再重新生成静态文件，命令：\n\n```shell\nhexo generate （或hexo g）\n```\n\n启动本地服务器：\n\n```shell\nhexo server （或hexo s）\n```\n\n再点击网址`http://0.0.0.0:4000` OK终于可以看到属于你自己的blog啦，虽然很简陋，但好歹有了一个属于自己的小窝了。\n[参考链接](https://www.gaotianyang.top/)，本地已经简单的设置好了，但是现在域名和服务器都是基于自己的电脑，接下来需要跟github进行关联。\n\n## 2 配置Github\n\n### 2.1 在github上创建仓库，并clone至本地\n\n* 注意：建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】，固定写法\n例如：【mitudegaoyang.github.io】\n\n### 2.2 将Hexo全部内容复制进上一步创建的文件夹中，并提交仓库\n\n* 注意：这里如果是第一次提交至GitHub仓库 可能遇到如下的问题\n\n在初始化git之后（git init），同时在github建立好仓库之后，\n本地也新增了ssh kye（ssh-keygen -t rsa -C ‘mail address’），\n同时也在本地新增了远程仓库（git remote add origin github地址），\n但是在git push的时候出现错误\n\n```shell\nThe authenticity of host ‘github.com (192.30.255.112)’ can’t be established.\nRSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.\nAre you sure you want to continue connecting (yes/no)?\n```\n\n这里你直接回车的话会出现验证失败\n\n```shell\nHost key verification failed.\nfatal: Could not read from remote repository.\n```\n\n验证失败。谷歌了一下，原来是本地少了 know_host文件，只要在刚刚那个位置输入yes就可以了，而不是回车（回车惯了）\n\n### 2.3 配置HEXO配置文件 关联仓库\n\n现在我们需要_config.yml文件，来建立关联\n\n翻到最下面，改成我这样子的\n\n```shell\ndeploy:\n\n     type: git\n\n     repo: git@github.com:mitudegaoyang/mitudegaoyang.github.io.git\n\n     branch: master\n```\n\n然后执行命令：\n\n```shell\nnpm install hexo-deployer-git --save\n```\n\n* 注意：网上会有很多说法，有的type是github, 还有repository最后面的后缀也不一样，\n是github.com.git，我也踩了很多坑，我现在的版本是hexo: 3.1.1，执行命令hexo -vsersion就出来了,\n貌似3.0后全部改成我上面这种格式了。\n\n* 忘了说了，我没用SSH Keys如果你用了SSH Keys的话直接在github里复制SSH的就行了，总共就两种协议，相信你懂的。\n\n### 2.4 执行配置命令\n\n```shell\nhexo deploy\n```\n\n然后再浏览器中输入`http://mitudegaoyang.github.io/`就行了，我的github的账户叫mitudegaoyang,把这个改成你github的账户名就行了\n\n### 2.5 部署步骤\n\n每次部署的步骤，可按以下三步来进行。\n\n```shell\nhexo clean\n\nhexo generate\n\nhexo deploy\n```\n\n### 2.6. 一些常用命令\n\n```shell\nhexo new \"postName\" #新建文章\n\nhexo new page \"pageName\" #新建页面\n\nhexo generate #生成静态页面至public目录\n\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\n\nhexo deploy #将.deploy目录部署到GitHub\n\nhexo help # 查看帮助\n\nhexo version #查看Hexo的版本\n```\n\n### 2.7 主题安装\n\n#### 安装\n\n```shell\ngit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n```\n\n#### 配置使用yilia\n\n```shell\n修改hexo根目录下的 _config.yml ： theme: yilia\n```\n\n#### 更新\n\n```shell\ncd themes/yilia\ngit pull\n```\n\n#### 配置yilia主题\n\n主题配置文件在主目录下的_config.yml，请根据自己需要修改使用\n\n* 注意：如果是已经修改了主题，并需要多电脑同步主题的话，则需要将主题打包发送至另一台电脑。\n因为主题本身是从github上clone下来的，因此存在.git管理文件。不可以和hexo一同上传至自己的仓库进行托管。\n如果只是较为简单的配置。可以将配置文件放置在`source/_data/`目录下进行代码管理。\n\n```yml\n# Header\n\nmenu:\n  主页: /\n  随笔: /tags/随笔/\n  相册: /tags/相册/\n  摄影: /摄影/\n\n# SubNav\nsubnav:\n  github: \"https://github.com/mitudegaoyang\"\n  #weibo: \"#\"\n  #rss: \"#\"\n  #zhihu: \"#\"\n  #qq: \"#\"\n  weixin: \"/img/timg.jpeg\"\n  #jianshu: \"#\"\n  #douban: \"#\"\n  #segmentfault: \"#\"\n  #bilibili: \"#\"\n  #acfun: \"#\"\n  mail: \"mailto:13683265113@163.com\"\n  facebook: \"https://www.gitbook.com/@mitudegaoyang\"\n  #google: \"#\"\n  #twitter: \"#\"\n  #linkedin: \"#\"\n\nrss: /atom.xml\n\n# 是否需要修改 root 路径\n# 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，\n# 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。\nroot:\n\n# Content\n\n# 文章太长，截断按钮文字\nexcerpt_link: more\n# 文章卡片右下角常驻链接，不需要请设置为false\nshow_all_link: '展开全文'\n# 数学公式\nmathjax: false\n# 是否在新窗口打开链接\nopen_in_new: false\n\n# 打赏\n# 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏\nreward_type: 2\n# 打赏wording\nreward_wording: '谢谢你请我吃糖果'\n# 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg\nalipay:\n# 微信二维码图片地址\nweixin:\n\n# 目录\n# 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录\ntoc: 1\n# 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为false\ntoc_hide_index: true\n# 目录为空时的提示\ntoc_empty_wording: '目录，不存在的…'\n\n# 是否有快速回到顶部的按钮\ntop: true\n\n# Miscellaneous\nbaidu_analytics: ''\ngoogle_analytics: ''\nfavicon: /favicon.ico\n\n#你的头像url\navatar: /img/timg.jpeg\n\n#是否开启分享\nshare_jia: true\n\n#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment\n#不需要使用某项，直接设置值为false，或注释掉\n#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/\n\n#1、多说\nduoshuo: false\n\n#2、网易云跟帖\nwangyiyun: false\n\n#3、畅言\nchangyan_appid: false\nchangyan_conf: false\n\n#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的\ndisqus: false\n\n#5、Gitment\ngitment_owner: false      #你的 GitHub ID\ngitment_repo: ''          #存储评论的 repo\ngitment_oauth:\n  client_id: ''           #client ID\n  client_secret: ''       #client secret\n\n# 样式定制 - 一般不需要修改，除非有很强的定制欲望…\nstyle:\n  # 头像上面的背景颜色\n  header: '#4d4d4d'\n  # 右滑板块背景\n  slider: 'linear-gradient(200deg,#a0cfe4,#e8c37e)'\n\n# slider的设置\nslider:\n  # 是否默认展开tags板块\n  showTags: false\n\n# 智能菜单\n# 如不需要，将该对应项置为false\n# 比如\n#smart_menu:\n#  friends: false\nsmart_menu:\n  innerArchive: '所有文章'\n  friends: '友链'\n  aboutme: '关于我'\n\nfriends:\n  github: https://github.com/mitudegaoyang\n  gitbook: https://www.gitbook.com/@mitudegaoyang\n  个人简历: https://me.gaotianyang.top/\n  个人博客: https://www.gaotianyang.top/\n  静博客: https://jss.gaotianyang.top/\n  网站demo: https://mitudegaoyang.github.io/kuaiyijian/\n\naboutme: 知言善行笃学慎思\n```\n\n## 3 其他\n\n### 3.1 常见主题\n\n这里有大量的[主题列表](https://github.com/hexojs/hexo/wiki/Themes)使用方法里面 都有详细的介绍，我就不多说了。\n我这里有几款个人认为不错的主题，免去你们，一个一个的选了，欢迎吐槽我的审美\n\n* Cover - A chic theme with facebook-like cover photo\n* Oishi - A white theme based on Landscape plus and Writing.\n* Sidebar - Another theme based on Light with a simple sidebar\n* TKL - A responsive design theme for Hexo. 一个设计优雅的响应式主题\n* Tinnypp - A clean, simple theme based on Tinny\n* Writing - A small and simple hexo theme based on Light\n* Yilia - Responsive and simple style 优雅简洁响应式主题，我用得就是这个。\n* Pacman voidy - A theme with dynamic tagcloud and dynamic snow\n\n### 3.2 hexo部署后，CNAME会被自动删除\n\n将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等\n\n![CHNAME](/assets/img/CNAME.png)\n\n### 3.3 hexo的多分支管理\n\n在实际使用的过程中，如果只有master分支进行blog管理会存在一些不便的问题。\n因为GitHub Pages默认是对master分支进行展示的，因此在我们执行`hexo deploy`的时候，\nhexo会将处理后的静态文件推至远端的master分支。\n\n当本地也在master分支进行博客的编写工作时，会导致Hexo项目里的Markdown文件和图片无法推送到master分支(因为文件冲突)。\n这时候选择多分支进行管理，就可以解决这个问题了。\n\n这不仅仅解决了Hexo项目里的Markdown文件和图片的版本控制，还可以使得我们同时在多个机器上编写博客。\n\nmitudegaoyang.github.io仓库中，博客的静态页面放在master分支上，而Markdown文件放在hexo分支上，\n两个分支互相之间不会进行合并。本机写博客的时候，就在hexo分支下写Markdown文件，\n使用Hexo生成静态页面后，部署到远程（GitHub上）的master分支。而博客源文件在hexo分支管理后，\n和远程的hexo分支进行同步。本地从来不处理master分支。这样两个分支就可以相安无事地共同呆在一个仓库里了。\n\n### 3.4 其他报错总结\n\n```shell\nERROR Deployer not found: git 或者 ERROR Deployer not found: github\n```\n\n解决方法\n\n```shell\nnpm install hexo-deployer-git --save\n```\n\n如发生报错： ERROR Process failed: layout/.DS_Store , 那么进入主题里面layout和_partial目录下，使用删除命令：\n\n```shell\nrm-rf.DS_Store\n```\n\n如发生报错： 微信分享二维码获取404\n\n这是因为原主题获取二维码的地址失效了，修改主题的`your-blog/themes/yilia/layout/_partial/post/share.ejs`文件\n\n```html\n<img src=\"<%- 'qrcode' in locals ? qrcode(sUrl) : 'http://api.qrserver.com/v1/create-qr-code/?size=150x150&data=' + sUrl  %>\" alt=\"微信分享二维码\">\n```\n\n* 注意：这里的`sUrl`获取的页面地址和hexo的配置文件`your-blog/_config.yml`中的`url:`是相关的。如果配置文件中的博客地址写错，会影响这里的请求。\n\n## 参考资料\n\n* [HEXO+Github,搭建属于自己的博客](http://www.jianshu.com/p/465830080ea9)\n* [The authenticity of host 'github.com...](https://blog.csdn.net/taoerchun/article/details/94349910)\n* [HEXO主题推荐](https://www.zhihu.com/question/24422335)\n* [hexo部署后，CNAME会被自动删除](https://www.zhihu.com/question/28814437)\n* [Hexo博客的多分支管理方法](http://nettee.github.io/posts/2016/Two-Branch-Managing-Blog/)\n* [Hexo使用theme/next主题部分无法推送github远程仓库](https://www.dazhuanlan.com/2019/12/31/5e0b2151a8260/)\n* [主题hexo-theme-yilia安装](https://github.com/litten/hexo-theme-yilia)\n* [文章分享微信二维码不显示](https://github.com/litten/hexo-theme-yilia/issues/776)\n","source":"_posts/项目建立手册.md","raw":"---\ntitle: 项目建立手册\ntags:\n  - 技术积累\n  - hexo\ncategories:\n  - 技术积累\n  - hexo\ntoc: true\nabbrlink: 17789b6e\ndate: 2020-07-14 22:12:40\n---\n\n![首屏图](https://s1.ax1x.com/2020/07/17/Us8yDO.jpg)\n\n<!-- more -->\n\n>本项目基于hexo+github结构创建\n\n## 1 配置环境\n\n### 1.1 Node\n\n用来生成静态页面的，到Node.js[官网](https://nodejs.org/en/)下载相应平台的最新版本，一路安装即可。\n\n### 1.2 Git\n\n把本地的hexo内容提交到github上去。安装Xcode就自带有Git，我就不多说了。\n\n* 注意：这里如果是首次生成ssh的话可能有个小坑 下文2.2中会提到\n\n### 1.3 申请GitHub\n\n是用来做博客的远程创库、域名、服务器之类的，怎么与本地hexo建立连接等下讲。\ngithub账号我也不再啰嗦了,没有的话直接申请就行了，跟一般的注册账号差不多，\nSSH Keys，看你自己了，可以不配制，不配置的话以后每次对自己的博客有改动提交的时候就要手动输入账号密码，\n配置了就不需要了，怎么配置我就不多说了，网上有很多教程。\n\n### 1.4 正式安装HEXO\n\nNode和Git都安装好后，可执行如下命令安装hexo：\n\n```shell\nsudo npm install -g hexo\n```\n\n### 1.5 初始化hexo\n\n创建一个文件夹，如：Blog，cd到Blog里执行hexo init的。命令\n\n```shell\nhexo init\n```\n\n好啦，至此，全部安装工作已经完成！\n\n### 1.6 生成静态页面\n\n继续再Blog目录下执行如下命令，生成静态页面\n\n```shell\nhexo generate（hexo g也可以）\n```\n\n### 1.7 本地启动\n\n启动本地服务，进行文章预览调试\n\n```shell\nhexo server\n```\n\n浏览器输入[http://localhost:4000](http://localhost:4000) 这里可能遇到无法启动的问题，可能是环境未配置好\n\n### 1.8 常见的HEXO配置错误\n\n```shell\nERROR Plugin load failed: hexo-server\n\n原因： Besides, utilities are separated into a standalone module. hexo.util is not reachable anymore.\n\n解决方法，执行命令：$ sudo npm install hexo-server\n```\n\n```shell\n执行命令hexo server，提示：Usage: hexo<Command> ....\n\n原因：我认为是没有生成本地服务\n\n解决方法，执行命令：$ npm install hexo-server --save\n\n提示：hexo-server@0.1.2 node_modules/hexo-server\n....\n\n表示成功了[参考](https://hexo.io/zh-cn/docs/server.html)\n```\n\n这个时候再执行：hexo-server\n\n得到: INFO Hexo is running at `http://0.0.0.0:4000/`. Press Ctrl+C to stop.\n\n这个时候再点击`http://0.0.0.0:4000`，正常情况下应该是最原始的画面，但是我看到的是：\n白板和Cannot GET / 几个字 原因： 由于2.6以后就更新了，我们需要手动配置些东西，我们需要输入下面三行命令：\n\n```shell\nnpm install hexo-renderer-ejs --save\nnpm install hexo-renderer-stylus --save\nnpm install hexo-renderer-marked --save\n```\n\n这个时候再重新生成静态文件，命令：\n\n```shell\nhexo generate （或hexo g）\n```\n\n启动本地服务器：\n\n```shell\nhexo server （或hexo s）\n```\n\n再点击网址`http://0.0.0.0:4000` OK终于可以看到属于你自己的blog啦，虽然很简陋，但好歹有了一个属于自己的小窝了。\n[参考链接](https://www.gaotianyang.top/)，本地已经简单的设置好了，但是现在域名和服务器都是基于自己的电脑，接下来需要跟github进行关联。\n\n## 2 配置Github\n\n### 2.1 在github上创建仓库，并clone至本地\n\n* 注意：建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】，固定写法\n例如：【mitudegaoyang.github.io】\n\n### 2.2 将Hexo全部内容复制进上一步创建的文件夹中，并提交仓库\n\n* 注意：这里如果是第一次提交至GitHub仓库 可能遇到如下的问题\n\n在初始化git之后（git init），同时在github建立好仓库之后，\n本地也新增了ssh kye（ssh-keygen -t rsa -C ‘mail address’），\n同时也在本地新增了远程仓库（git remote add origin github地址），\n但是在git push的时候出现错误\n\n```shell\nThe authenticity of host ‘github.com (192.30.255.112)’ can’t be established.\nRSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.\nAre you sure you want to continue connecting (yes/no)?\n```\n\n这里你直接回车的话会出现验证失败\n\n```shell\nHost key verification failed.\nfatal: Could not read from remote repository.\n```\n\n验证失败。谷歌了一下，原来是本地少了 know_host文件，只要在刚刚那个位置输入yes就可以了，而不是回车（回车惯了）\n\n### 2.3 配置HEXO配置文件 关联仓库\n\n现在我们需要_config.yml文件，来建立关联\n\n翻到最下面，改成我这样子的\n\n```shell\ndeploy:\n\n     type: git\n\n     repo: git@github.com:mitudegaoyang/mitudegaoyang.github.io.git\n\n     branch: master\n```\n\n然后执行命令：\n\n```shell\nnpm install hexo-deployer-git --save\n```\n\n* 注意：网上会有很多说法，有的type是github, 还有repository最后面的后缀也不一样，\n是github.com.git，我也踩了很多坑，我现在的版本是hexo: 3.1.1，执行命令hexo -vsersion就出来了,\n貌似3.0后全部改成我上面这种格式了。\n\n* 忘了说了，我没用SSH Keys如果你用了SSH Keys的话直接在github里复制SSH的就行了，总共就两种协议，相信你懂的。\n\n### 2.4 执行配置命令\n\n```shell\nhexo deploy\n```\n\n然后再浏览器中输入`http://mitudegaoyang.github.io/`就行了，我的github的账户叫mitudegaoyang,把这个改成你github的账户名就行了\n\n### 2.5 部署步骤\n\n每次部署的步骤，可按以下三步来进行。\n\n```shell\nhexo clean\n\nhexo generate\n\nhexo deploy\n```\n\n### 2.6. 一些常用命令\n\n```shell\nhexo new \"postName\" #新建文章\n\nhexo new page \"pageName\" #新建页面\n\nhexo generate #生成静态页面至public目录\n\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\n\nhexo deploy #将.deploy目录部署到GitHub\n\nhexo help # 查看帮助\n\nhexo version #查看Hexo的版本\n```\n\n### 2.7 主题安装\n\n#### 安装\n\n```shell\ngit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n```\n\n#### 配置使用yilia\n\n```shell\n修改hexo根目录下的 _config.yml ： theme: yilia\n```\n\n#### 更新\n\n```shell\ncd themes/yilia\ngit pull\n```\n\n#### 配置yilia主题\n\n主题配置文件在主目录下的_config.yml，请根据自己需要修改使用\n\n* 注意：如果是已经修改了主题，并需要多电脑同步主题的话，则需要将主题打包发送至另一台电脑。\n因为主题本身是从github上clone下来的，因此存在.git管理文件。不可以和hexo一同上传至自己的仓库进行托管。\n如果只是较为简单的配置。可以将配置文件放置在`source/_data/`目录下进行代码管理。\n\n```yml\n# Header\n\nmenu:\n  主页: /\n  随笔: /tags/随笔/\n  相册: /tags/相册/\n  摄影: /摄影/\n\n# SubNav\nsubnav:\n  github: \"https://github.com/mitudegaoyang\"\n  #weibo: \"#\"\n  #rss: \"#\"\n  #zhihu: \"#\"\n  #qq: \"#\"\n  weixin: \"/img/timg.jpeg\"\n  #jianshu: \"#\"\n  #douban: \"#\"\n  #segmentfault: \"#\"\n  #bilibili: \"#\"\n  #acfun: \"#\"\n  mail: \"mailto:13683265113@163.com\"\n  facebook: \"https://www.gitbook.com/@mitudegaoyang\"\n  #google: \"#\"\n  #twitter: \"#\"\n  #linkedin: \"#\"\n\nrss: /atom.xml\n\n# 是否需要修改 root 路径\n# 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，\n# 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。\nroot:\n\n# Content\n\n# 文章太长，截断按钮文字\nexcerpt_link: more\n# 文章卡片右下角常驻链接，不需要请设置为false\nshow_all_link: '展开全文'\n# 数学公式\nmathjax: false\n# 是否在新窗口打开链接\nopen_in_new: false\n\n# 打赏\n# 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏\nreward_type: 2\n# 打赏wording\nreward_wording: '谢谢你请我吃糖果'\n# 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg\nalipay:\n# 微信二维码图片地址\nweixin:\n\n# 目录\n# 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录\ntoc: 1\n# 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为false\ntoc_hide_index: true\n# 目录为空时的提示\ntoc_empty_wording: '目录，不存在的…'\n\n# 是否有快速回到顶部的按钮\ntop: true\n\n# Miscellaneous\nbaidu_analytics: ''\ngoogle_analytics: ''\nfavicon: /favicon.ico\n\n#你的头像url\navatar: /img/timg.jpeg\n\n#是否开启分享\nshare_jia: true\n\n#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment\n#不需要使用某项，直接设置值为false，或注释掉\n#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/\n\n#1、多说\nduoshuo: false\n\n#2、网易云跟帖\nwangyiyun: false\n\n#3、畅言\nchangyan_appid: false\nchangyan_conf: false\n\n#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的\ndisqus: false\n\n#5、Gitment\ngitment_owner: false      #你的 GitHub ID\ngitment_repo: ''          #存储评论的 repo\ngitment_oauth:\n  client_id: ''           #client ID\n  client_secret: ''       #client secret\n\n# 样式定制 - 一般不需要修改，除非有很强的定制欲望…\nstyle:\n  # 头像上面的背景颜色\n  header: '#4d4d4d'\n  # 右滑板块背景\n  slider: 'linear-gradient(200deg,#a0cfe4,#e8c37e)'\n\n# slider的设置\nslider:\n  # 是否默认展开tags板块\n  showTags: false\n\n# 智能菜单\n# 如不需要，将该对应项置为false\n# 比如\n#smart_menu:\n#  friends: false\nsmart_menu:\n  innerArchive: '所有文章'\n  friends: '友链'\n  aboutme: '关于我'\n\nfriends:\n  github: https://github.com/mitudegaoyang\n  gitbook: https://www.gitbook.com/@mitudegaoyang\n  个人简历: https://me.gaotianyang.top/\n  个人博客: https://www.gaotianyang.top/\n  静博客: https://jss.gaotianyang.top/\n  网站demo: https://mitudegaoyang.github.io/kuaiyijian/\n\naboutme: 知言善行笃学慎思\n```\n\n## 3 其他\n\n### 3.1 常见主题\n\n这里有大量的[主题列表](https://github.com/hexojs/hexo/wiki/Themes)使用方法里面 都有详细的介绍，我就不多说了。\n我这里有几款个人认为不错的主题，免去你们，一个一个的选了，欢迎吐槽我的审美\n\n* Cover - A chic theme with facebook-like cover photo\n* Oishi - A white theme based on Landscape plus and Writing.\n* Sidebar - Another theme based on Light with a simple sidebar\n* TKL - A responsive design theme for Hexo. 一个设计优雅的响应式主题\n* Tinnypp - A clean, simple theme based on Tinny\n* Writing - A small and simple hexo theme based on Light\n* Yilia - Responsive and simple style 优雅简洁响应式主题，我用得就是这个。\n* Pacman voidy - A theme with dynamic tagcloud and dynamic snow\n\n### 3.2 hexo部署后，CNAME会被自动删除\n\n将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等\n\n![CHNAME](/assets/img/CNAME.png)\n\n### 3.3 hexo的多分支管理\n\n在实际使用的过程中，如果只有master分支进行blog管理会存在一些不便的问题。\n因为GitHub Pages默认是对master分支进行展示的，因此在我们执行`hexo deploy`的时候，\nhexo会将处理后的静态文件推至远端的master分支。\n\n当本地也在master分支进行博客的编写工作时，会导致Hexo项目里的Markdown文件和图片无法推送到master分支(因为文件冲突)。\n这时候选择多分支进行管理，就可以解决这个问题了。\n\n这不仅仅解决了Hexo项目里的Markdown文件和图片的版本控制，还可以使得我们同时在多个机器上编写博客。\n\nmitudegaoyang.github.io仓库中，博客的静态页面放在master分支上，而Markdown文件放在hexo分支上，\n两个分支互相之间不会进行合并。本机写博客的时候，就在hexo分支下写Markdown文件，\n使用Hexo生成静态页面后，部署到远程（GitHub上）的master分支。而博客源文件在hexo分支管理后，\n和远程的hexo分支进行同步。本地从来不处理master分支。这样两个分支就可以相安无事地共同呆在一个仓库里了。\n\n### 3.4 其他报错总结\n\n```shell\nERROR Deployer not found: git 或者 ERROR Deployer not found: github\n```\n\n解决方法\n\n```shell\nnpm install hexo-deployer-git --save\n```\n\n如发生报错： ERROR Process failed: layout/.DS_Store , 那么进入主题里面layout和_partial目录下，使用删除命令：\n\n```shell\nrm-rf.DS_Store\n```\n\n如发生报错： 微信分享二维码获取404\n\n这是因为原主题获取二维码的地址失效了，修改主题的`your-blog/themes/yilia/layout/_partial/post/share.ejs`文件\n\n```html\n<img src=\"<%- 'qrcode' in locals ? qrcode(sUrl) : 'http://api.qrserver.com/v1/create-qr-code/?size=150x150&data=' + sUrl  %>\" alt=\"微信分享二维码\">\n```\n\n* 注意：这里的`sUrl`获取的页面地址和hexo的配置文件`your-blog/_config.yml`中的`url:`是相关的。如果配置文件中的博客地址写错，会影响这里的请求。\n\n## 参考资料\n\n* [HEXO+Github,搭建属于自己的博客](http://www.jianshu.com/p/465830080ea9)\n* [The authenticity of host 'github.com...](https://blog.csdn.net/taoerchun/article/details/94349910)\n* [HEXO主题推荐](https://www.zhihu.com/question/24422335)\n* [hexo部署后，CNAME会被自动删除](https://www.zhihu.com/question/28814437)\n* [Hexo博客的多分支管理方法](http://nettee.github.io/posts/2016/Two-Branch-Managing-Blog/)\n* [Hexo使用theme/next主题部分无法推送github远程仓库](https://www.dazhuanlan.com/2019/12/31/5e0b2151a8260/)\n* [主题hexo-theme-yilia安装](https://github.com/litten/hexo-theme-yilia)\n* [文章分享微信二维码不显示](https://github.com/litten/hexo-theme-yilia/issues/776)\n","slug":"项目建立手册","published":1,"updated":"2021-03-02T13:16:32.314Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjyt00172an9cdoobgic","content":"<p><img src=\"https://s1.ax1x.com/2020/07/17/Us8yDO.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>本项目基于hexo+github结构创建</p>\n</blockquote>\n<h2 id=\"1-配置环境\"><a href=\"#1-配置环境\" class=\"headerlink\" title=\"1 配置环境\"></a>1 配置环境</h2><h3 id=\"1-1-Node\"><a href=\"#1-1-Node\" class=\"headerlink\" title=\"1.1 Node\"></a>1.1 Node</h3><p>用来生成静态页面的，到Node.js<a href=\"https://nodejs.org/en/\">官网</a>下载相应平台的最新版本，一路安装即可。</p>\n<h3 id=\"1-2-Git\"><a href=\"#1-2-Git\" class=\"headerlink\" title=\"1.2 Git\"></a>1.2 Git</h3><p>把本地的hexo内容提交到github上去。安装Xcode就自带有Git，我就不多说了。</p>\n<ul>\n<li>注意：这里如果是首次生成ssh的话可能有个小坑 下文2.2中会提到</li>\n</ul>\n<h3 id=\"1-3-申请GitHub\"><a href=\"#1-3-申请GitHub\" class=\"headerlink\" title=\"1.3 申请GitHub\"></a>1.3 申请GitHub</h3><p>是用来做博客的远程创库、域名、服务器之类的，怎么与本地hexo建立连接等下讲。<br>github账号我也不再啰嗦了,没有的话直接申请就行了，跟一般的注册账号差不多，<br>SSH Keys，看你自己了，可以不配制，不配置的话以后每次对自己的博客有改动提交的时候就要手动输入账号密码，<br>配置了就不需要了，怎么配置我就不多说了，网上有很多教程。</p>\n<h3 id=\"1-4-正式安装HEXO\"><a href=\"#1-4-正式安装HEXO\" class=\"headerlink\" title=\"1.4 正式安装HEXO\"></a>1.4 正式安装HEXO</h3><p>Node和Git都安装好后，可执行如下命令安装hexo：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install -g hexo</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-5-初始化hexo\"><a href=\"#1-5-初始化hexo\" class=\"headerlink\" title=\"1.5 初始化hexo\"></a>1.5 初始化hexo</h3><p>创建一个文件夹，如：Blog，cd到Blog里执行hexo init的。命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p>好啦，至此，全部安装工作已经完成！</p>\n<h3 id=\"1-6-生成静态页面\"><a href=\"#1-6-生成静态页面\" class=\"headerlink\" title=\"1.6 生成静态页面\"></a>1.6 生成静态页面</h3><p>继续再Blog目录下执行如下命令，生成静态页面</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate（hexo g也可以）</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-7-本地启动\"><a href=\"#1-7-本地启动\" class=\"headerlink\" title=\"1.7 本地启动\"></a>1.7 本地启动</h3><p>启动本地服务，进行文章预览调试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<p>浏览器输入<a href=\"http://localhost:4000\">http://localhost:4000</a> 这里可能遇到无法启动的问题，可能是环境未配置好</p>\n<h3 id=\"1-8-常见的HEXO配置错误\"><a href=\"#1-8-常见的HEXO配置错误\" class=\"headerlink\" title=\"1.8 常见的HEXO配置错误\"></a>1.8 常见的HEXO配置错误</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR Plugin load failed: hexo-server</span><br><span class=\"line\"></span><br><span class=\"line\">原因： Besides, utilities are separated into a standalone module. hexo.util is not reachable anymore.</span><br><span class=\"line\"></span><br><span class=\"line\">解决方法，执行命令：$ sudo npm install hexo-server</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">执行命令hexo server，提示：Usage: hexo&lt;Command&gt; ....</span><br><span class=\"line\"></span><br><span class=\"line\">原因：我认为是没有生成本地服务</span><br><span class=\"line\"></span><br><span class=\"line\">解决方法，执行命令：$ npm install hexo-server --save</span><br><span class=\"line\"></span><br><span class=\"line\">提示：hexo-server@0.1.2 node_modules/hexo-server</span><br><span class=\"line\">....</span><br><span class=\"line\"></span><br><span class=\"line\">表示成功了[参考](https://hexo.io/zh-cn/docs/server.html)</span><br></pre></td></tr></table></figure>\n<p>这个时候再执行：hexo-server</p>\n<p>得到: INFO Hexo is running at <code>http://0.0.0.0:4000/</code>. Press Ctrl+C to stop.</p>\n<p>这个时候再点击<code>http://0.0.0.0:4000</code>，正常情况下应该是最原始的画面，但是我看到的是：<br>白板和Cannot GET / 几个字 原因： 由于2.6以后就更新了，我们需要手动配置些东西，我们需要输入下面三行命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-renderer-ejs --save</span><br><span class=\"line\">npm install hexo-renderer-stylus --save</span><br><span class=\"line\">npm install hexo-renderer-marked --save</span><br></pre></td></tr></table></figure>\n<p>这个时候再重新生成静态文件，命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate （或hexo g）</span><br></pre></td></tr></table></figure>\n<p>启动本地服务器：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server （或hexo s）</span><br></pre></td></tr></table></figure>\n<p>再点击网址<code>http://0.0.0.0:4000</code> OK终于可以看到属于你自己的blog啦，虽然很简陋，但好歹有了一个属于自己的小窝了。<br><a href=\"https://www.gaotianyang.top/\">参考链接</a>，本地已经简单的设置好了，但是现在域名和服务器都是基于自己的电脑，接下来需要跟github进行关联。</p>\n<h2 id=\"2-配置Github\"><a href=\"#2-配置Github\" class=\"headerlink\" title=\"2 配置Github\"></a>2 配置Github</h2><h3 id=\"2-1-在github上创建仓库，并clone至本地\"><a href=\"#2-1-在github上创建仓库，并clone至本地\" class=\"headerlink\" title=\"2.1 在github上创建仓库，并clone至本地\"></a>2.1 在github上创建仓库，并clone至本地</h3><ul>\n<li>注意：建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】，固定写法<br>例如：【mitudegaoyang.github.io】</li>\n</ul>\n<h3 id=\"2-2-将Hexo全部内容复制进上一步创建的文件夹中，并提交仓库\"><a href=\"#2-2-将Hexo全部内容复制进上一步创建的文件夹中，并提交仓库\" class=\"headerlink\" title=\"2.2 将Hexo全部内容复制进上一步创建的文件夹中，并提交仓库\"></a>2.2 将Hexo全部内容复制进上一步创建的文件夹中，并提交仓库</h3><ul>\n<li>注意：这里如果是第一次提交至GitHub仓库 可能遇到如下的问题</li>\n</ul>\n<p>在初始化git之后（git init），同时在github建立好仓库之后，<br>本地也新增了ssh kye（ssh-keygen -t rsa -C ‘mail address’），<br>同时也在本地新增了远程仓库（git remote add origin github地址），<br>但是在git push的时候出现错误</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The authenticity of host ‘github.com (192.30.255.112)’ can’t be established.</span><br><span class=\"line\">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure>\n<p>这里你直接回车的话会出现验证失败</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host key verification failed.</span><br><span class=\"line\">fatal: Could not read from remote repository.</span><br></pre></td></tr></table></figure>\n<p>验证失败。谷歌了一下，原来是本地少了 know_host文件，只要在刚刚那个位置输入yes就可以了，而不是回车（回车惯了）</p>\n<h3 id=\"2-3-配置HEXO配置文件-关联仓库\"><a href=\"#2-3-配置HEXO配置文件-关联仓库\" class=\"headerlink\" title=\"2.3 配置HEXO配置文件 关联仓库\"></a>2.3 配置HEXO配置文件 关联仓库</h3><p>现在我们需要_config.yml文件，来建立关联</p>\n<p>翻到最下面，改成我这样子的</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\"></span><br><span class=\"line\">     type: git</span><br><span class=\"line\"></span><br><span class=\"line\">     repo: git@github.com:mitudegaoyang/mitudegaoyang.github.io.git</span><br><span class=\"line\"></span><br><span class=\"line\">     branch: master</span><br></pre></td></tr></table></figure>\n<p>然后执行命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>注意：网上会有很多说法，有的type是github, 还有repository最后面的后缀也不一样，<br>是github.com.git，我也踩了很多坑，我现在的版本是hexo: 3.1.1，执行命令hexo -vsersion就出来了,<br>貌似3.0后全部改成我上面这种格式了。</p>\n</li>\n<li><p>忘了说了，我没用SSH Keys如果你用了SSH Keys的话直接在github里复制SSH的就行了，总共就两种协议，相信你懂的。</p>\n</li>\n</ul>\n<h3 id=\"2-4-执行配置命令\"><a href=\"#2-4-执行配置命令\" class=\"headerlink\" title=\"2.4 执行配置命令\"></a>2.4 执行配置命令</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<p>然后再浏览器中输入<code>http://mitudegaoyang.github.io/</code>就行了，我的github的账户叫mitudegaoyang,把这个改成你github的账户名就行了</p>\n<h3 id=\"2-5-部署步骤\"><a href=\"#2-5-部署步骤\" class=\"headerlink\" title=\"2.5 部署步骤\"></a>2.5 部署步骤</h3><p>每次部署的步骤，可按以下三步来进行。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\"></span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-6-一些常用命令\"><a href=\"#2-6-一些常用命令\" class=\"headerlink\" title=\"2.6. 一些常用命令\"></a>2.6. 一些常用命令</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;postName&quot; #新建文章</span><br><span class=\"line\"></span><br><span class=\"line\">hexo new page &quot;pageName&quot; #新建页面</span><br><span class=\"line\"></span><br><span class=\"line\">hexo generate #生成静态页面至public目录</span><br><span class=\"line\"></span><br><span class=\"line\">hexo server #开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span><br><span class=\"line\"></span><br><span class=\"line\">hexo deploy #将.deploy目录部署到GitHub</span><br><span class=\"line\"></span><br><span class=\"line\">hexo help # 查看帮助</span><br><span class=\"line\"></span><br><span class=\"line\">hexo version #查看Hexo的版本</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-7-主题安装\"><a href=\"#2-7-主题安装\" class=\"headerlink\" title=\"2.7 主题安装\"></a>2.7 主题安装</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置使用yilia\"><a href=\"#配置使用yilia\" class=\"headerlink\" title=\"配置使用yilia\"></a>配置使用yilia</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改hexo根目录下的 _config.yml ： theme: yilia</span><br></pre></td></tr></table></figure>\n<h4 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/yilia</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置yilia主题\"><a href=\"#配置yilia主题\" class=\"headerlink\" title=\"配置yilia主题\"></a>配置yilia主题</h4><p>主题配置文件在主目录下的_config.yml，请根据自己需要修改使用</p>\n<ul>\n<li>注意：如果是已经修改了主题，并需要多电脑同步主题的话，则需要将主题打包发送至另一台电脑。<br>因为主题本身是从github上clone下来的，因此存在.git管理文件。不可以和hexo一同上传至自己的仓库进行托管。<br>如果只是较为简单的配置。可以将配置文件放置在<code>source/_data/</code>目录下进行代码管理。</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Header</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"string\">主页:</span> <span class=\"string\">/</span></span><br><span class=\"line\">  <span class=\"string\">随笔:</span> <span class=\"string\">/tags/随笔/</span></span><br><span class=\"line\">  <span class=\"string\">相册:</span> <span class=\"string\">/tags/相册/</span></span><br><span class=\"line\">  <span class=\"string\">摄影:</span> <span class=\"string\">/摄影/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># SubNav</span></span><br><span class=\"line\"><span class=\"attr\">subnav:</span></span><br><span class=\"line\">  <span class=\"attr\">github:</span> <span class=\"string\">&quot;https://github.com/mitudegaoyang&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#weibo: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#rss: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#zhihu: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#qq: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">weixin:</span> <span class=\"string\">&quot;/img/timg.jpeg&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#jianshu: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#douban: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#segmentfault: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#bilibili: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#acfun: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">mail:</span> <span class=\"string\">&quot;mailto:13683265113@163.com&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">facebook:</span> <span class=\"string\">&quot;https://www.gitbook.com/@mitudegaoyang&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#google: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#twitter: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#linkedin: &quot;#&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">rss:</span> <span class=\"string\">/atom.xml</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 是否需要修改 root 路径</span></span><br><span class=\"line\"><span class=\"comment\"># 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，</span></span><br><span class=\"line\"><span class=\"comment\"># 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。</span></span><br><span class=\"line\"><span class=\"attr\">root:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Content</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文章太长，截断按钮文字</span></span><br><span class=\"line\"><span class=\"attr\">excerpt_link:</span> <span class=\"string\">more</span></span><br><span class=\"line\"><span class=\"comment\"># 文章卡片右下角常驻链接，不需要请设置为false</span></span><br><span class=\"line\"><span class=\"attr\">show_all_link:</span> <span class=\"string\">&#x27;展开全文&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 数学公式</span></span><br><span class=\"line\"><span class=\"attr\">mathjax:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否在新窗口打开链接</span></span><br><span class=\"line\"><span class=\"attr\">open_in_new:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打赏</span></span><br><span class=\"line\"><span class=\"comment\"># 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span></span><br><span class=\"line\"><span class=\"attr\">reward_type:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"comment\"># 打赏wording</span></span><br><span class=\"line\"><span class=\"attr\">reward_wording:</span> <span class=\"string\">&#x27;谢谢你请我吃糖果&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg</span></span><br><span class=\"line\"><span class=\"attr\">alipay:</span></span><br><span class=\"line\"><span class=\"comment\"># 微信二维码图片地址</span></span><br><span class=\"line\"><span class=\"attr\">weixin:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 目录</span></span><br><span class=\"line\"><span class=\"comment\"># 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录</span></span><br><span class=\"line\"><span class=\"attr\">toc:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\"># 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为false</span></span><br><span class=\"line\"><span class=\"attr\">toc_hide_index:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 目录为空时的提示</span></span><br><span class=\"line\"><span class=\"attr\">toc_empty_wording:</span> <span class=\"string\">&#x27;目录，不存在的…&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 是否有快速回到顶部的按钮</span></span><br><span class=\"line\"><span class=\"attr\">top:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Miscellaneous</span></span><br><span class=\"line\"><span class=\"attr\">baidu_analytics:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">google_analytics:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">favicon:</span> <span class=\"string\">/favicon.ico</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#你的头像url</span></span><br><span class=\"line\"><span class=\"attr\">avatar:</span> <span class=\"string\">/img/timg.jpeg</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#是否开启分享</span></span><br><span class=\"line\"><span class=\"attr\">share_jia:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment</span></span><br><span class=\"line\"><span class=\"comment\">#不需要使用某项，直接设置值为false，或注释掉</span></span><br><span class=\"line\"><span class=\"comment\">#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#1、多说</span></span><br><span class=\"line\"><span class=\"attr\">duoshuo:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2、网易云跟帖</span></span><br><span class=\"line\"><span class=\"attr\">wangyiyun:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3、畅言</span></span><br><span class=\"line\"><span class=\"attr\">changyan_appid:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">changyan_conf:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的</span></span><br><span class=\"line\"><span class=\"attr\">disqus:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#5、Gitment</span></span><br><span class=\"line\"><span class=\"attr\">gitment_owner:</span> <span class=\"literal\">false</span>      <span class=\"comment\">#你的 GitHub ID</span></span><br><span class=\"line\"><span class=\"attr\">gitment_repo:</span> <span class=\"string\">&#x27;&#x27;</span>          <span class=\"comment\">#存储评论的 repo</span></span><br><span class=\"line\"><span class=\"attr\">gitment_oauth:</span></span><br><span class=\"line\">  <span class=\"attr\">client_id:</span> <span class=\"string\">&#x27;&#x27;</span>           <span class=\"comment\">#client ID</span></span><br><span class=\"line\">  <span class=\"attr\">client_secret:</span> <span class=\"string\">&#x27;&#x27;</span>       <span class=\"comment\">#client secret</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 样式定制 - 一般不需要修改，除非有很强的定制欲望…</span></span><br><span class=\"line\"><span class=\"attr\">style:</span></span><br><span class=\"line\">  <span class=\"comment\"># 头像上面的背景颜色</span></span><br><span class=\"line\">  <span class=\"attr\">header:</span> <span class=\"string\">&#x27;#4d4d4d&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\"># 右滑板块背景</span></span><br><span class=\"line\">  <span class=\"attr\">slider:</span> <span class=\"string\">&#x27;linear-gradient(200deg,#a0cfe4,#e8c37e)&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># slider的设置</span></span><br><span class=\"line\"><span class=\"attr\">slider:</span></span><br><span class=\"line\">  <span class=\"comment\"># 是否默认展开tags板块</span></span><br><span class=\"line\">  <span class=\"attr\">showTags:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 智能菜单</span></span><br><span class=\"line\"><span class=\"comment\"># 如不需要，将该对应项置为false</span></span><br><span class=\"line\"><span class=\"comment\"># 比如</span></span><br><span class=\"line\"><span class=\"comment\">#smart_menu:</span></span><br><span class=\"line\"><span class=\"comment\">#  friends: false</span></span><br><span class=\"line\"><span class=\"attr\">smart_menu:</span></span><br><span class=\"line\">  <span class=\"attr\">innerArchive:</span> <span class=\"string\">&#x27;所有文章&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">friends:</span> <span class=\"string\">&#x27;友链&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">aboutme:</span> <span class=\"string\">&#x27;关于我&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">friends:</span></span><br><span class=\"line\">  <span class=\"attr\">github:</span> <span class=\"string\">https://github.com/mitudegaoyang</span></span><br><span class=\"line\">  <span class=\"attr\">gitbook:</span> <span class=\"string\">https://www.gitbook.com/@mitudegaoyang</span></span><br><span class=\"line\">  <span class=\"string\">个人简历:</span> <span class=\"string\">https://me.gaotianyang.top/</span></span><br><span class=\"line\">  <span class=\"string\">个人博客:</span> <span class=\"string\">https://www.gaotianyang.top/</span></span><br><span class=\"line\">  <span class=\"string\">静博客:</span> <span class=\"string\">https://jss.gaotianyang.top/</span></span><br><span class=\"line\">  <span class=\"string\">网站demo:</span> <span class=\"string\">https://mitudegaoyang.github.io/kuaiyijian/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">aboutme:</span> <span class=\"string\">知言善行笃学慎思</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-其他\"><a href=\"#3-其他\" class=\"headerlink\" title=\"3 其他\"></a>3 其他</h2><h3 id=\"3-1-常见主题\"><a href=\"#3-1-常见主题\" class=\"headerlink\" title=\"3.1 常见主题\"></a>3.1 常见主题</h3><p>这里有大量的<a href=\"https://github.com/hexojs/hexo/wiki/Themes\">主题列表</a>使用方法里面 都有详细的介绍，我就不多说了。<br>我这里有几款个人认为不错的主题，免去你们，一个一个的选了，欢迎吐槽我的审美</p>\n<ul>\n<li>Cover - A chic theme with facebook-like cover photo</li>\n<li>Oishi - A white theme based on Landscape plus and Writing.</li>\n<li>Sidebar - Another theme based on Light with a simple sidebar</li>\n<li>TKL - A responsive design theme for Hexo. 一个设计优雅的响应式主题</li>\n<li>Tinnypp - A clean, simple theme based on Tinny</li>\n<li>Writing - A small and simple hexo theme based on Light</li>\n<li>Yilia - Responsive and simple style 优雅简洁响应式主题，我用得就是这个。</li>\n<li>Pacman voidy - A theme with dynamic tagcloud and dynamic snow</li>\n</ul>\n<h3 id=\"3-2-hexo部署后，CNAME会被自动删除\"><a href=\"#3-2-hexo部署后，CNAME会被自动删除\" class=\"headerlink\" title=\"3.2 hexo部署后，CNAME会被自动删除\"></a>3.2 hexo部署后，CNAME会被自动删除</h3><p>将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等</p>\n<p><img src=\"/assets/img/CNAME.png\" alt=\"CHNAME\"></p>\n<h3 id=\"3-3-hexo的多分支管理\"><a href=\"#3-3-hexo的多分支管理\" class=\"headerlink\" title=\"3.3 hexo的多分支管理\"></a>3.3 hexo的多分支管理</h3><p>在实际使用的过程中，如果只有master分支进行blog管理会存在一些不便的问题。<br>因为GitHub Pages默认是对master分支进行展示的，因此在我们执行<code>hexo deploy</code>的时候，<br>hexo会将处理后的静态文件推至远端的master分支。</p>\n<p>当本地也在master分支进行博客的编写工作时，会导致Hexo项目里的Markdown文件和图片无法推送到master分支(因为文件冲突)。<br>这时候选择多分支进行管理，就可以解决这个问题了。</p>\n<p>这不仅仅解决了Hexo项目里的Markdown文件和图片的版本控制，还可以使得我们同时在多个机器上编写博客。</p>\n<p>mitudegaoyang.github.io仓库中，博客的静态页面放在master分支上，而Markdown文件放在hexo分支上，<br>两个分支互相之间不会进行合并。本机写博客的时候，就在hexo分支下写Markdown文件，<br>使用Hexo生成静态页面后，部署到远程（GitHub上）的master分支。而博客源文件在hexo分支管理后，<br>和远程的hexo分支进行同步。本地从来不处理master分支。这样两个分支就可以相安无事地共同呆在一个仓库里了。</p>\n<h3 id=\"3-4-其他报错总结\"><a href=\"#3-4-其他报错总结\" class=\"headerlink\" title=\"3.4 其他报错总结\"></a>3.4 其他报错总结</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR Deployer not found: git 或者 ERROR Deployer not found: github</span><br></pre></td></tr></table></figure>\n<p>解决方法</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>如发生报错： ERROR Process failed: layout/.DS_Store , 那么进入主题里面layout和_partial目录下，使用删除命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm-rf.DS_Store</span><br></pre></td></tr></table></figure>\n<p>如发生报错： 微信分享二维码获取404</p>\n<p>这是因为原主题获取二维码的地址失效了，修改主题的<code>your-blog/themes/yilia/layout/_partial/post/share.ejs</code>文件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&lt;%- &#x27;qrcode&#x27; in locals ? qrcode(sUrl) : &#x27;http://api.qrserver.com/v1/create-qr-code/?size=150x150&amp;data=&#x27; + sUrl  %&gt;&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;微信分享二维码&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>注意：这里的<code>sUrl</code>获取的页面地址和hexo的配置文件<code>your-blog/_config.yml</code>中的<code>url:</code>是相关的。如果配置文件中的博客地址写错，会影响这里的请求。</li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"http://www.jianshu.com/p/465830080ea9\">HEXO+Github,搭建属于自己的博客</a></li>\n<li><a href=\"https://blog.csdn.net/taoerchun/article/details/94349910\">The authenticity of host ‘github.com…</a></li>\n<li><a href=\"https://www.zhihu.com/question/24422335\">HEXO主题推荐</a></li>\n<li><a href=\"https://www.zhihu.com/question/28814437\">hexo部署后，CNAME会被自动删除</a></li>\n<li><a href=\"http://nettee.github.io/posts/2016/Two-Branch-Managing-Blog/\">Hexo博客的多分支管理方法</a></li>\n<li><a href=\"https://www.dazhuanlan.com/2019/12/31/5e0b2151a8260/\">Hexo使用theme/next主题部分无法推送github远程仓库</a></li>\n<li><a href=\"https://github.com/litten/hexo-theme-yilia\">主题hexo-theme-yilia安装</a></li>\n<li><a href=\"https://github.com/litten/hexo-theme-yilia/issues/776\">文章分享微信二维码不显示</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/07/17/Us8yDO.jpg\" alt=\"首屏图\"></p>","more":"<blockquote>\n<p>本项目基于hexo+github结构创建</p>\n</blockquote>\n<h2 id=\"1-配置环境\"><a href=\"#1-配置环境\" class=\"headerlink\" title=\"1 配置环境\"></a>1 配置环境</h2><h3 id=\"1-1-Node\"><a href=\"#1-1-Node\" class=\"headerlink\" title=\"1.1 Node\"></a>1.1 Node</h3><p>用来生成静态页面的，到Node.js<a href=\"https://nodejs.org/en/\">官网</a>下载相应平台的最新版本，一路安装即可。</p>\n<h3 id=\"1-2-Git\"><a href=\"#1-2-Git\" class=\"headerlink\" title=\"1.2 Git\"></a>1.2 Git</h3><p>把本地的hexo内容提交到github上去。安装Xcode就自带有Git，我就不多说了。</p>\n<ul>\n<li>注意：这里如果是首次生成ssh的话可能有个小坑 下文2.2中会提到</li>\n</ul>\n<h3 id=\"1-3-申请GitHub\"><a href=\"#1-3-申请GitHub\" class=\"headerlink\" title=\"1.3 申请GitHub\"></a>1.3 申请GitHub</h3><p>是用来做博客的远程创库、域名、服务器之类的，怎么与本地hexo建立连接等下讲。<br>github账号我也不再啰嗦了,没有的话直接申请就行了，跟一般的注册账号差不多，<br>SSH Keys，看你自己了，可以不配制，不配置的话以后每次对自己的博客有改动提交的时候就要手动输入账号密码，<br>配置了就不需要了，怎么配置我就不多说了，网上有很多教程。</p>\n<h3 id=\"1-4-正式安装HEXO\"><a href=\"#1-4-正式安装HEXO\" class=\"headerlink\" title=\"1.4 正式安装HEXO\"></a>1.4 正式安装HEXO</h3><p>Node和Git都安装好后，可执行如下命令安装hexo：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install -g hexo</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-5-初始化hexo\"><a href=\"#1-5-初始化hexo\" class=\"headerlink\" title=\"1.5 初始化hexo\"></a>1.5 初始化hexo</h3><p>创建一个文件夹，如：Blog，cd到Blog里执行hexo init的。命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p>好啦，至此，全部安装工作已经完成！</p>\n<h3 id=\"1-6-生成静态页面\"><a href=\"#1-6-生成静态页面\" class=\"headerlink\" title=\"1.6 生成静态页面\"></a>1.6 生成静态页面</h3><p>继续再Blog目录下执行如下命令，生成静态页面</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate（hexo g也可以）</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-7-本地启动\"><a href=\"#1-7-本地启动\" class=\"headerlink\" title=\"1.7 本地启动\"></a>1.7 本地启动</h3><p>启动本地服务，进行文章预览调试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<p>浏览器输入<a href=\"http://localhost:4000\">http://localhost:4000</a> 这里可能遇到无法启动的问题，可能是环境未配置好</p>\n<h3 id=\"1-8-常见的HEXO配置错误\"><a href=\"#1-8-常见的HEXO配置错误\" class=\"headerlink\" title=\"1.8 常见的HEXO配置错误\"></a>1.8 常见的HEXO配置错误</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR Plugin load failed: hexo-server</span><br><span class=\"line\"></span><br><span class=\"line\">原因： Besides, utilities are separated into a standalone module. hexo.util is not reachable anymore.</span><br><span class=\"line\"></span><br><span class=\"line\">解决方法，执行命令：$ sudo npm install hexo-server</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">执行命令hexo server，提示：Usage: hexo&lt;Command&gt; ....</span><br><span class=\"line\"></span><br><span class=\"line\">原因：我认为是没有生成本地服务</span><br><span class=\"line\"></span><br><span class=\"line\">解决方法，执行命令：$ npm install hexo-server --save</span><br><span class=\"line\"></span><br><span class=\"line\">提示：hexo-server@0.1.2 node_modules/hexo-server</span><br><span class=\"line\">....</span><br><span class=\"line\"></span><br><span class=\"line\">表示成功了[参考](https://hexo.io/zh-cn/docs/server.html)</span><br></pre></td></tr></table></figure>\n<p>这个时候再执行：hexo-server</p>\n<p>得到: INFO Hexo is running at <code>http://0.0.0.0:4000/</code>. Press Ctrl+C to stop.</p>\n<p>这个时候再点击<code>http://0.0.0.0:4000</code>，正常情况下应该是最原始的画面，但是我看到的是：<br>白板和Cannot GET / 几个字 原因： 由于2.6以后就更新了，我们需要手动配置些东西，我们需要输入下面三行命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-renderer-ejs --save</span><br><span class=\"line\">npm install hexo-renderer-stylus --save</span><br><span class=\"line\">npm install hexo-renderer-marked --save</span><br></pre></td></tr></table></figure>\n<p>这个时候再重新生成静态文件，命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate （或hexo g）</span><br></pre></td></tr></table></figure>\n<p>启动本地服务器：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server （或hexo s）</span><br></pre></td></tr></table></figure>\n<p>再点击网址<code>http://0.0.0.0:4000</code> OK终于可以看到属于你自己的blog啦，虽然很简陋，但好歹有了一个属于自己的小窝了。<br><a href=\"https://www.gaotianyang.top/\">参考链接</a>，本地已经简单的设置好了，但是现在域名和服务器都是基于自己的电脑，接下来需要跟github进行关联。</p>\n<h2 id=\"2-配置Github\"><a href=\"#2-配置Github\" class=\"headerlink\" title=\"2 配置Github\"></a>2 配置Github</h2><h3 id=\"2-1-在github上创建仓库，并clone至本地\"><a href=\"#2-1-在github上创建仓库，并clone至本地\" class=\"headerlink\" title=\"2.1 在github上创建仓库，并clone至本地\"></a>2.1 在github上创建仓库，并clone至本地</h3><ul>\n<li>注意：建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】，固定写法<br>例如：【mitudegaoyang.github.io】</li>\n</ul>\n<h3 id=\"2-2-将Hexo全部内容复制进上一步创建的文件夹中，并提交仓库\"><a href=\"#2-2-将Hexo全部内容复制进上一步创建的文件夹中，并提交仓库\" class=\"headerlink\" title=\"2.2 将Hexo全部内容复制进上一步创建的文件夹中，并提交仓库\"></a>2.2 将Hexo全部内容复制进上一步创建的文件夹中，并提交仓库</h3><ul>\n<li>注意：这里如果是第一次提交至GitHub仓库 可能遇到如下的问题</li>\n</ul>\n<p>在初始化git之后（git init），同时在github建立好仓库之后，<br>本地也新增了ssh kye（ssh-keygen -t rsa -C ‘mail address’），<br>同时也在本地新增了远程仓库（git remote add origin github地址），<br>但是在git push的时候出现错误</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The authenticity of host ‘github.com (192.30.255.112)’ can’t be established.</span><br><span class=\"line\">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure>\n<p>这里你直接回车的话会出现验证失败</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host key verification failed.</span><br><span class=\"line\">fatal: Could not read from remote repository.</span><br></pre></td></tr></table></figure>\n<p>验证失败。谷歌了一下，原来是本地少了 know_host文件，只要在刚刚那个位置输入yes就可以了，而不是回车（回车惯了）</p>\n<h3 id=\"2-3-配置HEXO配置文件-关联仓库\"><a href=\"#2-3-配置HEXO配置文件-关联仓库\" class=\"headerlink\" title=\"2.3 配置HEXO配置文件 关联仓库\"></a>2.3 配置HEXO配置文件 关联仓库</h3><p>现在我们需要_config.yml文件，来建立关联</p>\n<p>翻到最下面，改成我这样子的</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\"></span><br><span class=\"line\">     type: git</span><br><span class=\"line\"></span><br><span class=\"line\">     repo: git@github.com:mitudegaoyang/mitudegaoyang.github.io.git</span><br><span class=\"line\"></span><br><span class=\"line\">     branch: master</span><br></pre></td></tr></table></figure>\n<p>然后执行命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>注意：网上会有很多说法，有的type是github, 还有repository最后面的后缀也不一样，<br>是github.com.git，我也踩了很多坑，我现在的版本是hexo: 3.1.1，执行命令hexo -vsersion就出来了,<br>貌似3.0后全部改成我上面这种格式了。</p>\n</li>\n<li><p>忘了说了，我没用SSH Keys如果你用了SSH Keys的话直接在github里复制SSH的就行了，总共就两种协议，相信你懂的。</p>\n</li>\n</ul>\n<h3 id=\"2-4-执行配置命令\"><a href=\"#2-4-执行配置命令\" class=\"headerlink\" title=\"2.4 执行配置命令\"></a>2.4 执行配置命令</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<p>然后再浏览器中输入<code>http://mitudegaoyang.github.io/</code>就行了，我的github的账户叫mitudegaoyang,把这个改成你github的账户名就行了</p>\n<h3 id=\"2-5-部署步骤\"><a href=\"#2-5-部署步骤\" class=\"headerlink\" title=\"2.5 部署步骤\"></a>2.5 部署步骤</h3><p>每次部署的步骤，可按以下三步来进行。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\"></span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-6-一些常用命令\"><a href=\"#2-6-一些常用命令\" class=\"headerlink\" title=\"2.6. 一些常用命令\"></a>2.6. 一些常用命令</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;postName&quot; #新建文章</span><br><span class=\"line\"></span><br><span class=\"line\">hexo new page &quot;pageName&quot; #新建页面</span><br><span class=\"line\"></span><br><span class=\"line\">hexo generate #生成静态页面至public目录</span><br><span class=\"line\"></span><br><span class=\"line\">hexo server #开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span><br><span class=\"line\"></span><br><span class=\"line\">hexo deploy #将.deploy目录部署到GitHub</span><br><span class=\"line\"></span><br><span class=\"line\">hexo help # 查看帮助</span><br><span class=\"line\"></span><br><span class=\"line\">hexo version #查看Hexo的版本</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-7-主题安装\"><a href=\"#2-7-主题安装\" class=\"headerlink\" title=\"2.7 主题安装\"></a>2.7 主题安装</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置使用yilia\"><a href=\"#配置使用yilia\" class=\"headerlink\" title=\"配置使用yilia\"></a>配置使用yilia</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改hexo根目录下的 _config.yml ： theme: yilia</span><br></pre></td></tr></table></figure>\n<h4 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/yilia</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置yilia主题\"><a href=\"#配置yilia主题\" class=\"headerlink\" title=\"配置yilia主题\"></a>配置yilia主题</h4><p>主题配置文件在主目录下的_config.yml，请根据自己需要修改使用</p>\n<ul>\n<li>注意：如果是已经修改了主题，并需要多电脑同步主题的话，则需要将主题打包发送至另一台电脑。<br>因为主题本身是从github上clone下来的，因此存在.git管理文件。不可以和hexo一同上传至自己的仓库进行托管。<br>如果只是较为简单的配置。可以将配置文件放置在<code>source/_data/</code>目录下进行代码管理。</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Header</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"string\">主页:</span> <span class=\"string\">/</span></span><br><span class=\"line\">  <span class=\"string\">随笔:</span> <span class=\"string\">/tags/随笔/</span></span><br><span class=\"line\">  <span class=\"string\">相册:</span> <span class=\"string\">/tags/相册/</span></span><br><span class=\"line\">  <span class=\"string\">摄影:</span> <span class=\"string\">/摄影/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># SubNav</span></span><br><span class=\"line\"><span class=\"attr\">subnav:</span></span><br><span class=\"line\">  <span class=\"attr\">github:</span> <span class=\"string\">&quot;https://github.com/mitudegaoyang&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#weibo: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#rss: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#zhihu: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#qq: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">weixin:</span> <span class=\"string\">&quot;/img/timg.jpeg&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#jianshu: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#douban: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#segmentfault: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#bilibili: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#acfun: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">mail:</span> <span class=\"string\">&quot;mailto:13683265113@163.com&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">facebook:</span> <span class=\"string\">&quot;https://www.gitbook.com/@mitudegaoyang&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#google: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#twitter: &quot;#&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#linkedin: &quot;#&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">rss:</span> <span class=\"string\">/atom.xml</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 是否需要修改 root 路径</span></span><br><span class=\"line\"><span class=\"comment\"># 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，</span></span><br><span class=\"line\"><span class=\"comment\"># 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。</span></span><br><span class=\"line\"><span class=\"attr\">root:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Content</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文章太长，截断按钮文字</span></span><br><span class=\"line\"><span class=\"attr\">excerpt_link:</span> <span class=\"string\">more</span></span><br><span class=\"line\"><span class=\"comment\"># 文章卡片右下角常驻链接，不需要请设置为false</span></span><br><span class=\"line\"><span class=\"attr\">show_all_link:</span> <span class=\"string\">&#x27;展开全文&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 数学公式</span></span><br><span class=\"line\"><span class=\"attr\">mathjax:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否在新窗口打开链接</span></span><br><span class=\"line\"><span class=\"attr\">open_in_new:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打赏</span></span><br><span class=\"line\"><span class=\"comment\"># 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span></span><br><span class=\"line\"><span class=\"attr\">reward_type:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"comment\"># 打赏wording</span></span><br><span class=\"line\"><span class=\"attr\">reward_wording:</span> <span class=\"string\">&#x27;谢谢你请我吃糖果&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg</span></span><br><span class=\"line\"><span class=\"attr\">alipay:</span></span><br><span class=\"line\"><span class=\"comment\"># 微信二维码图片地址</span></span><br><span class=\"line\"><span class=\"attr\">weixin:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 目录</span></span><br><span class=\"line\"><span class=\"comment\"># 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录</span></span><br><span class=\"line\"><span class=\"attr\">toc:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\"># 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为false</span></span><br><span class=\"line\"><span class=\"attr\">toc_hide_index:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 目录为空时的提示</span></span><br><span class=\"line\"><span class=\"attr\">toc_empty_wording:</span> <span class=\"string\">&#x27;目录，不存在的…&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 是否有快速回到顶部的按钮</span></span><br><span class=\"line\"><span class=\"attr\">top:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Miscellaneous</span></span><br><span class=\"line\"><span class=\"attr\">baidu_analytics:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">google_analytics:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">favicon:</span> <span class=\"string\">/favicon.ico</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#你的头像url</span></span><br><span class=\"line\"><span class=\"attr\">avatar:</span> <span class=\"string\">/img/timg.jpeg</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#是否开启分享</span></span><br><span class=\"line\"><span class=\"attr\">share_jia:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment</span></span><br><span class=\"line\"><span class=\"comment\">#不需要使用某项，直接设置值为false，或注释掉</span></span><br><span class=\"line\"><span class=\"comment\">#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#1、多说</span></span><br><span class=\"line\"><span class=\"attr\">duoshuo:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2、网易云跟帖</span></span><br><span class=\"line\"><span class=\"attr\">wangyiyun:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3、畅言</span></span><br><span class=\"line\"><span class=\"attr\">changyan_appid:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">changyan_conf:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的</span></span><br><span class=\"line\"><span class=\"attr\">disqus:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#5、Gitment</span></span><br><span class=\"line\"><span class=\"attr\">gitment_owner:</span> <span class=\"literal\">false</span>      <span class=\"comment\">#你的 GitHub ID</span></span><br><span class=\"line\"><span class=\"attr\">gitment_repo:</span> <span class=\"string\">&#x27;&#x27;</span>          <span class=\"comment\">#存储评论的 repo</span></span><br><span class=\"line\"><span class=\"attr\">gitment_oauth:</span></span><br><span class=\"line\">  <span class=\"attr\">client_id:</span> <span class=\"string\">&#x27;&#x27;</span>           <span class=\"comment\">#client ID</span></span><br><span class=\"line\">  <span class=\"attr\">client_secret:</span> <span class=\"string\">&#x27;&#x27;</span>       <span class=\"comment\">#client secret</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 样式定制 - 一般不需要修改，除非有很强的定制欲望…</span></span><br><span class=\"line\"><span class=\"attr\">style:</span></span><br><span class=\"line\">  <span class=\"comment\"># 头像上面的背景颜色</span></span><br><span class=\"line\">  <span class=\"attr\">header:</span> <span class=\"string\">&#x27;#4d4d4d&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\"># 右滑板块背景</span></span><br><span class=\"line\">  <span class=\"attr\">slider:</span> <span class=\"string\">&#x27;linear-gradient(200deg,#a0cfe4,#e8c37e)&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># slider的设置</span></span><br><span class=\"line\"><span class=\"attr\">slider:</span></span><br><span class=\"line\">  <span class=\"comment\"># 是否默认展开tags板块</span></span><br><span class=\"line\">  <span class=\"attr\">showTags:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 智能菜单</span></span><br><span class=\"line\"><span class=\"comment\"># 如不需要，将该对应项置为false</span></span><br><span class=\"line\"><span class=\"comment\"># 比如</span></span><br><span class=\"line\"><span class=\"comment\">#smart_menu:</span></span><br><span class=\"line\"><span class=\"comment\">#  friends: false</span></span><br><span class=\"line\"><span class=\"attr\">smart_menu:</span></span><br><span class=\"line\">  <span class=\"attr\">innerArchive:</span> <span class=\"string\">&#x27;所有文章&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">friends:</span> <span class=\"string\">&#x27;友链&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">aboutme:</span> <span class=\"string\">&#x27;关于我&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">friends:</span></span><br><span class=\"line\">  <span class=\"attr\">github:</span> <span class=\"string\">https://github.com/mitudegaoyang</span></span><br><span class=\"line\">  <span class=\"attr\">gitbook:</span> <span class=\"string\">https://www.gitbook.com/@mitudegaoyang</span></span><br><span class=\"line\">  <span class=\"string\">个人简历:</span> <span class=\"string\">https://me.gaotianyang.top/</span></span><br><span class=\"line\">  <span class=\"string\">个人博客:</span> <span class=\"string\">https://www.gaotianyang.top/</span></span><br><span class=\"line\">  <span class=\"string\">静博客:</span> <span class=\"string\">https://jss.gaotianyang.top/</span></span><br><span class=\"line\">  <span class=\"string\">网站demo:</span> <span class=\"string\">https://mitudegaoyang.github.io/kuaiyijian/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">aboutme:</span> <span class=\"string\">知言善行笃学慎思</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-其他\"><a href=\"#3-其他\" class=\"headerlink\" title=\"3 其他\"></a>3 其他</h2><h3 id=\"3-1-常见主题\"><a href=\"#3-1-常见主题\" class=\"headerlink\" title=\"3.1 常见主题\"></a>3.1 常见主题</h3><p>这里有大量的<a href=\"https://github.com/hexojs/hexo/wiki/Themes\">主题列表</a>使用方法里面 都有详细的介绍，我就不多说了。<br>我这里有几款个人认为不错的主题，免去你们，一个一个的选了，欢迎吐槽我的审美</p>\n<ul>\n<li>Cover - A chic theme with facebook-like cover photo</li>\n<li>Oishi - A white theme based on Landscape plus and Writing.</li>\n<li>Sidebar - Another theme based on Light with a simple sidebar</li>\n<li>TKL - A responsive design theme for Hexo. 一个设计优雅的响应式主题</li>\n<li>Tinnypp - A clean, simple theme based on Tinny</li>\n<li>Writing - A small and simple hexo theme based on Light</li>\n<li>Yilia - Responsive and simple style 优雅简洁响应式主题，我用得就是这个。</li>\n<li>Pacman voidy - A theme with dynamic tagcloud and dynamic snow</li>\n</ul>\n<h3 id=\"3-2-hexo部署后，CNAME会被自动删除\"><a href=\"#3-2-hexo部署后，CNAME会被自动删除\" class=\"headerlink\" title=\"3.2 hexo部署后，CNAME会被自动删除\"></a>3.2 hexo部署后，CNAME会被自动删除</h3><p>将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等</p>\n<p><img src=\"/assets/img/CNAME.png\" alt=\"CHNAME\"></p>\n<h3 id=\"3-3-hexo的多分支管理\"><a href=\"#3-3-hexo的多分支管理\" class=\"headerlink\" title=\"3.3 hexo的多分支管理\"></a>3.3 hexo的多分支管理</h3><p>在实际使用的过程中，如果只有master分支进行blog管理会存在一些不便的问题。<br>因为GitHub Pages默认是对master分支进行展示的，因此在我们执行<code>hexo deploy</code>的时候，<br>hexo会将处理后的静态文件推至远端的master分支。</p>\n<p>当本地也在master分支进行博客的编写工作时，会导致Hexo项目里的Markdown文件和图片无法推送到master分支(因为文件冲突)。<br>这时候选择多分支进行管理，就可以解决这个问题了。</p>\n<p>这不仅仅解决了Hexo项目里的Markdown文件和图片的版本控制，还可以使得我们同时在多个机器上编写博客。</p>\n<p>mitudegaoyang.github.io仓库中，博客的静态页面放在master分支上，而Markdown文件放在hexo分支上，<br>两个分支互相之间不会进行合并。本机写博客的时候，就在hexo分支下写Markdown文件，<br>使用Hexo生成静态页面后，部署到远程（GitHub上）的master分支。而博客源文件在hexo分支管理后，<br>和远程的hexo分支进行同步。本地从来不处理master分支。这样两个分支就可以相安无事地共同呆在一个仓库里了。</p>\n<h3 id=\"3-4-其他报错总结\"><a href=\"#3-4-其他报错总结\" class=\"headerlink\" title=\"3.4 其他报错总结\"></a>3.4 其他报错总结</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR Deployer not found: git 或者 ERROR Deployer not found: github</span><br></pre></td></tr></table></figure>\n<p>解决方法</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>如发生报错： ERROR Process failed: layout/.DS_Store , 那么进入主题里面layout和_partial目录下，使用删除命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm-rf.DS_Store</span><br></pre></td></tr></table></figure>\n<p>如发生报错： 微信分享二维码获取404</p>\n<p>这是因为原主题获取二维码的地址失效了，修改主题的<code>your-blog/themes/yilia/layout/_partial/post/share.ejs</code>文件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&lt;%- &#x27;qrcode&#x27; in locals ? qrcode(sUrl) : &#x27;http://api.qrserver.com/v1/create-qr-code/?size=150x150&amp;data=&#x27; + sUrl  %&gt;&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;微信分享二维码&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>注意：这里的<code>sUrl</code>获取的页面地址和hexo的配置文件<code>your-blog/_config.yml</code>中的<code>url:</code>是相关的。如果配置文件中的博客地址写错，会影响这里的请求。</li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"http://www.jianshu.com/p/465830080ea9\">HEXO+Github,搭建属于自己的博客</a></li>\n<li><a href=\"https://blog.csdn.net/taoerchun/article/details/94349910\">The authenticity of host ‘github.com…</a></li>\n<li><a href=\"https://www.zhihu.com/question/24422335\">HEXO主题推荐</a></li>\n<li><a href=\"https://www.zhihu.com/question/28814437\">hexo部署后，CNAME会被自动删除</a></li>\n<li><a href=\"http://nettee.github.io/posts/2016/Two-Branch-Managing-Blog/\">Hexo博客的多分支管理方法</a></li>\n<li><a href=\"https://www.dazhuanlan.com/2019/12/31/5e0b2151a8260/\">Hexo使用theme/next主题部分无法推送github远程仓库</a></li>\n<li><a href=\"https://github.com/litten/hexo-theme-yilia\">主题hexo-theme-yilia安装</a></li>\n<li><a href=\"https://github.com/litten/hexo-theme-yilia/issues/776\">文章分享微信二维码不显示</a></li>\n</ul>"},{"title":"Yilia主题如何添加评论功能","toc":true,"abbrlink":"7dfdd292","date":"2020-07-21T02:22:17.000Z","_content":"\n![首屏图](https://s1.ax1x.com/2020/07/21/U5XM4K.jpg)\n\n<!-- more -->\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#添加评论系统)\n\n## 常见的评论系统\n\n* Valine(评论不需要账号，数据托管于Leancloud数据库管理)\n* Gitalk(可以使用，评论需要登录GitHub账号)\n* 畅言(搜狐的评论系统,很强大,但需要有备案号)\n* Gitment(登录GitHub账号长时间loading)\n* 来必力(注册受阻，且是韩国服务器，评论系统响应变慢)\n* 友言(不需要备案号,功能也比较强大)\n* disqus(国内经常被墙)\n* 网易云跟帖(已经关闭系统)\n* 多说(功能强大，但是已经停止服务)\n\n### Valine\n\n先开始使用的Gitalk，但是这个评论必须拥有GitHub账号才可以，因此转而使用Valine试试。\n\n#### 配置Valine\n\n在`yilia/_config.yml`文件中配置代码：\n\n``` text\n#7、配置Valine\nvaline:\n enable: true #是否启用valine\n appid: #Leancloud应用的appId\n appkey: #Leancloud应用的appKey\n verify: false #验证码，verify和notify这两个最好就别动了\n notify: false #评论回复提醒\n avatar: mm #评论列表头像样式：''/mm/identicon/monsterid/wavatar/retro/hide\n placeholder: Just go go #评论框占位符\n```\n\n拷贝如下三个地址的`av-min.js`、`Valine.min.js`和`jquery.min.js`到`yilia/source/lib/valine`目录（没有的话新建文件）\n\n* [av-min.js](https://cdn1.lncld.net/static/js/3.0.4/av-min.js)\n* [Valine.min.js](https://unpkg.com/valine/dist/Valine.min.js)\n* [jquery.min.js](https://cdnjs.loli.net/ajax/libs/jquery/3.2.1/jquery.min.js)\n\n在`theme/yilia/layout/_partial/post`文件夹下新建文件`valine.ejs`，\n\n``` html\n<div id=\"vcomment\" class=\"comment\"></div>\n<script>\n    var notify = '<%= theme.valine.notify %>' == true ? true : false;\n    var verify = '<%= theme.valine.verify %>' == true ? true : false;\n    new Valine({\n        av: AV,\n        el: '#vcomment',\n        notify: notify,\n        app_id: \"<%= theme.valine.appid %>\",\n        app_key: \"<%= theme.valine.appkey %>\",\n        placeholder: \"<%= theme.valine.placeholder %>\",\n        avatar:\"<%= theme.valine.avatar %>\",\n    });\n</script>\n```\n\n在`layout/_partial/article.ejs`文件中的结尾添加如下代码(可以参考其他评论代码)：\n\n``` html\n<% if (!index && theme.valine && theme.valine.enable && theme.valine.appid && theme.valine.appkey){ %>\n<section id=\"comments\" class=\"comments\">\n  <style>\n    .comments {\n      margin: 30px;\n      padding: 10px;\n      background: #fff\n    }\n\n    @media screen and (max-width:800px) {\n      .comments {\n        margin: auto;\n        padding: 10px;\n        background: #fff\n      }\n    }\n  </style>\n  <%- partial('post/valine', {\n            key: post.slug,\n            title: post.title,\n            url: config.url+url_for(post.path)\n            }) %>\n</section>\n<% } %>\n```\n\n在`yilia/layout/_partial/head.ejs`文件中添加代码：\n\n``` text\n<% if (theme.valine && theme.valine.enable){ %>\n  <script src=\"/lib/valine/av-min.js\"></script>\n  <script src='/lib/valine/Valine.min.js'></script>\n  <script src=\"/lib/valine/jquery.min.js\"></script>\n<% } %>\n```\n\n#### 配置评论仓库\n\n接下来就要使用到[Leancloud](https://leancloud.app/)了，大概就是作为我们Valine评论系统的服务器，\n因为Valine首页就介绍了Valine是“一款快速、简洁且高效的无后端评论系统”，自行注册一个账号并登录。\n\n> **注**：这里未使用国内版因为某些不明原因导致国内版后续云域名绑定一直失败\n\n创建一个应用，应用名看个人喜好。\n\n![创建应用](https://s1.ax1x.com/2020/07/23/UOlITf.png)\n\n选择刚刚创建的**应用>设置>应用Key**，然后你就能看到你的App ID和App Key了，参考下图：\n\n![获取App ID和App Key](https://s1.ax1x.com/2020/07/23/UOl1e0.png)\n\n分别复制**App ID**和**App Key**粘贴到前面设置的主题根目录下的`_config.yml`里对应位置，注意“:”后面必须要有一个空格，如图：\n\n![配置_config.yml](https://s1.ax1x.com/2020/07/23/ULyOzR.png)\n\n为了数据安全，再填写一下安全域名，**应用>设置>安全设置**中的**Web 安全域名**，\n如果是Hexo一般填写自己博客主页的地址和`http://localhost:4000/`就可以了，如下图：\n\n![安全域名](https://s1.ax1x.com/2020/07/23/UO1Vn1.png)\n\n到这里，你的valine评论系统就已经可以工作了\n\n当然修改了相关代码需要重新部署博客，三步操作：\n\n```shell\nhexo clean\nhexo g\nhexo s #本地测试用http://localhost:4000/访问即可，也可以hexo d部署到云端\n```\n\n自己写条评论试试呢，评论的数据会保存到Leancloud你创建的应用里，\n具体可以登录Leancloud，选择**应用>存储>Comment**，评论的所有相关信息都可以在这儿看到：\n\n![数据库查看](https://s1.ax1x.com/2020/07/23/UO1R4U.png)\n\n到此如果没有更多的需求已经可以结束不折腾了，进一步的下面介绍实现邮件通知的功能\n\n#### 部署云引擎（邮件通知）\n\n这一部分主要参考这篇博客[Valine Admin 配置手册](https://deserts.io/valine-admin-document/)。\n\n##### 填写代码仓库\n\n登录[Leancloud](https://console.leancloud.app/login.html#/signin)国际版，选择**云引擎>部署>部署项目**：\n\n![部署项目](https://s1.ax1x.com/2020/07/23/ULqWrT.png)\n\n选择**Git部署**：\n\n![Git部署](https://s1.ax1x.com/2020/07/23/ULqgx0.png)\n\n选择**手动部署**：在Leancloud云引擎设置界面，填写代码库并保存：`https://github.com/DesertsP/Valine-Admin.git`\n\n* 注意：直接复制填上去就行，不是要自己建一个类似的代码仓库，另外注意这个链接是否有变动\n\n![手动部署](https://s1.ax1x.com/2020/07/23/ULqRMV.png)\n\n配置完毕并部署如下\n\n![部署完毕](https://s1.ax1x.com/2020/07/23/ULqc2q.png)\n\n##### 设置环境变量以及Web二级域名\n\n在设置页面，设置**环境变量**以及 **Web 二级域名**。先后顺序没什么影响，不过可以先设置 Web 二级域名，需要实名认证，自己认证一下。\n\n> **注**：这里如果是使用国内版本的话，二级域名配置一直失败。\n\nWeb 二级域名用于评论后台管理，如`https://gty.avosapps.us`\n\n![二级域名](https://s1.ax1x.com/2020/07/23/UO3wa6.png)\n\n环境变量必填参数务必正确设置：\n\n![环境变量](https://s1.ax1x.com/2020/07/23/UOtK4P.png)\n\n这里虽然部分是选填的，但是个人建议都填上吧，当然首先要填对，填错了那就没用了。\n\nSMTP_SERVICE建议用QQ，目前我用的QQ邮箱没有任何问题，163邮箱在我设置的过程中似乎有不能发送邮件的问题，\n应该是网易邮箱那边的限制所以无关你设置得对不对，Gmail似乎是因为被墙了会连接超时，其它我没试过。\n\n|环境变量|示例|说明|\n|---|---|---|\n|SITE_NAME|Deserts|[必填]博客名称|\n|SITE_URL|`https://www.gaotianyang.top/`|[必填]首页地址|\n|SMTP_SERVICE|QQ|[新版支持]邮件服务提供商，支持 QQ、163、126、Gmail 以及 [更多](https://nodemailer.com/smtp/well-known/#supported-services)|\n|SMTP_USER|xxxxxx@qq.com|[必填]SMTP登录用户|\n|SMTP_PASS|ccxxxxxxxxch|[必填]SMTP登录密码（QQ邮箱需要获取独立密码）|\n|SENDER_NAME|mxy|[必填]发件人|\n|SENDER_EMAIL|xxxxxx@qq.com|[必填]发件邮箱[建议]和SMTP_USER一致|\n|ADMIN_URL|`https://xxx.avosapps.us/`|[建议]Web主机二级域名，用于自动唤醒|\n|BLOGGER_EMAIL|xxxxxx@qq.com|[可选]博主通知收件地址，默认使用SENDER_EMAIL|\n\n> **注**：环境变量有任何更改都需要重启应用才能生效（云引擎>实例>设置>重启）\n\n![环境变量](https://s1.ax1x.com/2020/07/23/UOtuNt.png)\n\n##### 评论管理\n\n访问设置的二级域名`https://二级域名.avosapps.us/sign-up`，\n注册管理员登录信息，如：`https://gty.avosapps.us/sign-up`\n\n![注册](https://s1.ax1x.com/2020/07/23/UOtnAI.png)\n\n> **注**：使用原版Valine如果遇到注册页面不显示直接跳转至登录页的情况，请手动删除_User表中的全部数据。\n\n管理界面如下\n\n![管理](https://s1.ax1x.com/2020/07/23/UOteHA.png)\n\n##### 设置定时任务\n\n进入**云引擎>定时任务**，创建定时器，创建两个定时任务。\n\n* 半小时自动唤醒\n\n选择self-wake云函数，Cron表达式为`0 0/30 7-23 * * ?`，表示每天早7点到晚23点每隔30分钟访问云引擎，确定环境变量ADMIN_URL设置正确：\n\n![自动唤醒](https://s1.ax1x.com/2020/07/24/Ujm1oD.png)\n\n* 八点叫我发邮件\n\n选择resend-mails云函数，Cron表达式为`0 0 8 * * ?`，表示每天早8点检查过去24小时内漏发的通知邮件并补发：\n\n![定时检查](https://s1.ax1x.com/2020/07/24/Ujm8Fe.png)\n\n至此 `Valine Admin` 已经可以正常工作，更多以下是可选的进阶**配置**\n\n#### 邮件通知模板\n\n这一部分可选，懒得折腾可以到此为止！\n\n邮件通知模板在**云引擎环境变量**中设定，可自定义通知邮件标题及内容模板。\n\n邮件通知包含两种，分别是“**被@通知**”和“**博主通知**”，这两种模板都可以完全自定义。默认使用经典的蓝色风格模板（样式来源未知）。\n\n|环境变量|示例|说明|\n|---|---|---|\n|MAIL_TEMPLATE_ADMIN|`见下文`|[可选]**博主邮件通知**内容模板(别人在你博客评论后，邮箱通知显示的模板)|\n|MAIL_SUBJECT_ADMIN|${SITE_NAME}上有新评论了|[可选]**博主邮件通知**主题模板|\n|MAIL_TEMPLATE|`见下文`|[可选]**被@通知**邮件内容模板(别人回复评论后，邮箱显示的模板)|\n|MAIL_SUBJECT|您在{SITE_NAME}上的评论收到了回复|[可选]**被@通知**邮件主题（标题）模板|\n\n##### 默认**MAIL_TEMPLATE_ADMIN**\n\n* 默认**被@通知邮件内容模板**：\n\n```html\n<div style=\"border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;\"><h2 style=\"border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;\">您在<a style=\"text-decoration:none;color: #12ADDB;\" href=\"${SITE_URL}\" target=\"_blank\">${SITE_NAME}</a>上的评论有了新的回复</h2><div style=\"padding:0 12px 0 12px;margin-top:18px\"><p><strong>${NICK}</strong>回复说：</p><div style=\"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;\"> ${COMMENT}</div><p>您可以点击<a style=\"text-decoration:none; color:#12addb\" href=\"${POST_URL}\" target=\"_blank\">查看回复的完整內容</a>，欢迎再次光临<a style=\"text-decoration:none; color:#12addb\" href=\"${SITE_URL}\" target=\"_blank\">${SITE_NAME}</a>。<br></p></div></div>\n```\n\n##### 默认**MAIL_TEMPLATE**\n\n* 默认博主通知邮件内容模板：\n\n```html\n<div style=\"border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;\"><h2 style=\"border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;\">您在<a style=\"text-decoration:none;color: #12ADDB;\" href=\"${SITE_URL}\" target=\"_blank\">${SITE_NAME}</a>上的文章有了新的评论</h2><p><strong>${NICK}</strong>回复说：</p><div style=\"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;\"> ${COMMENT}</div><p>您可以点击<a style=\"text-decoration:none; color:#12addb\" href=\"${POST_URL}\" target=\"_blank\">查看回复的完整內容</a><br></p></div></div>\n```\n\n博主通知邮件模板中的可用变量与@通知中的基本一致，注意：`PARENT_NICK` 和 `PARENT_COMMENT` 变量不再可用。\n\n效果如图：\n\n![默认邮件](https://s1.ax1x.com/2020/07/24/UjgJhT.png)\n\n##### 彩虹风**MAIL_TEMPLATE**\n\n* 彩虹风格的通知邮件内容模板如下：\n\n```html\n<div style=\"border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);\"><div style=\"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;\"><p style=\"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;\">您在<a style=\"text-decoration:none;color: #ffffff;\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>上的留言有新回复啦！</p></div><div style=\"margin:40px auto;width:90%\"><p>${NICK} 给您的回复如下：</p><div style=\"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;\">${COMMENT}</div><p>您可以点击<a style=\"text-decoration:none; color:#12addb\" href=\"${POST_URL}#comments\">查看回复的完整內容</a>，欢迎再次光临<a style=\"text-decoration:none; color:#12addb\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>。</p><style type=\"text/css\">a:link{text-decoration:none}a:visited{text-decoration:none}a:hover{text-decoration:none}a:active{text-decoration:none}</style></div></div>\n```\n\n为方便修改我把上面的模板格式化了\n\n```html\n<div style=\"border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);\">\n    <div style=\"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;\">\n        <p style=\"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;\">您在<a style=\"text-decoration:none;color: #ffffff;\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>上的留言有新回复啦！</p>\n    </div>\n    <div style=\"margin:40px auto;width:90%\">\n        <p>${NICK} 给您的回复如下：</p>\n        <div style=\"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;\">${COMMENT}</div>\n        <p>您可以点击<a style=\"text-decoration:none; color:#12addb\" href=\"${POST_URL}#comments\">查看回复的完整內容</a>，欢迎再次光临<a style=\"text-decoration:none; color:#12addb\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>。</p>\n        <style type=\"text/css\">\n            a:link{text-decoration:none}\n            a:visited{text-decoration:none}\n            a:hover{text-decoration:none}\n            a:active{text-decoration:none}\n        </style>\n    </div>\n</div>\n```\n\n* 彩虹风格的通知邮件内容模板\n\n##### 彩虹风**MAIL_TEMPLATE_ADMIN**\n\n```html\n<div style=\"border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);\"><div style=\"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;\"><p style=\"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;\">您在<a style=\"text-decoration:none;color: #ffffff;\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>上的文章有了新的评论</p></div><div style=\"margin:40px auto;width:90%\"><p>${NICK} 给您的回复如下：</p><div style=\"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;\">${COMMENT}</div><p>您可以点击<a style=\"text-decoration:none; color:#12addb\" href=\"${POST_URL}\" target=\"_blank\">查看回复的完整內容</a>，欢迎再次光临<a style=\"text-decoration:none; color:#12addb\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>。</p><style type=\"text/css\">a:link{text-decoration:none}a:visited{text-decoration:none}a:hover{text-decoration:none}a:active{text-decoration:none}</style></div></div>\n```\n\n为方便修改我把上面的模板格式化了\n\n```html\n<div style=\"border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);\">\n    <div style=\"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;\">\n        <p style=\"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;\">您在<a style=\"text-decoration:none;color: #ffffff;\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>上的文章有了新的评论</p>\n    </div>\n    <div style=\"margin:40px auto;width:90%\">\n        <p>${NICK} 给您的回复如下：</p>\n        <div style=\"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;\">${COMMENT}</div>\n        <p>您可以点击<a style=\"text-decoration:none; color:#12addb\" href=\"${POST_URL}\" target=\"_blank\">查看回复的完整內容</a>，欢迎再次光临<a style=\"text-decoration:none; color:#12addb\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>。</p>\n        <style type=\"text/css\">\n            a:link{text-decoration:none}\n            a:visited{text-decoration:none}\n            a:hover{text-decoration:none}\n            a:active{text-decoration:none}\n        </style>\n    </div>\n</div>\n```\n\n效果如图：\n\n![彩虹邮件](https://s1.ax1x.com/2020/07/27/aiJs58.png)\n\n* 通知模板中的可用变量如下：\n\n> **注**：(这是邮件模板变量，虽然一眼望去感觉，变量名与云引擎环境变量名很接近但还是有区别的，请勿与云引擎环境变量混淆)\n\n|环境变量|说明|\n|---|---|\n|SITE_NAME|博客名称|\n|SITE_URL|博客首页地址|\n|POST_URL|文章地址（完整路径）|\n|PARENT_NICK|[不可用]收件人昵称（被@者，父级评论人）|\n|PARENT_COMMENT|[不可用]父级评论内容|\n|NICK|新评论者昵称|\n|COMMENT|新评论内容|\n\n有需求代码部分可以自定义，没有需求的话直接复制**博主邮件通知**代码到`MAIL_TEMPLATE_ADMIN`，\n复制**被@通知代码**到`MAIL_TEMPLATE`，保存即可。\n\n> **注**：修改了环境变量需要重启实例。\n\n至此 `Valine Admin`的邮箱提醒 已经可以正常工作\n\n### Gitalk\n\n可以选择gitment和gitalk评论功能，但是gitment没有弄出来，可能是停服了。\n\nGitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件\n\n参考[Demo](https://gitalk.github.io/)\n\n#### 注册Gitalk应用\n\n先要有一个自己的github账号，登录自己的github账户，点击头像>>Settings>>Developer settings>>New OAuth App，或点击[注册](https://github.com/settings/applications/new)\n\n![注册](https://s1.ax1x.com/2020/07/21/UIQg4x.png)\n\n* Application name：可以随意填写\n* Homepage URL：个人博客地址（域名）\n* Application description：可填可不填，不是关键，若填，可填个人博客的相关描述\n* Authorization callback URL：个人博客地址（域名）\n\n#### 获取Client ID跟Client Secret\n\n一切设置完成之后点击Register application，注册完成后，\n会出现两个关键信息（个人博客配置评论功能之关键，就不放图了）\n\nClient ID：\nClient Secret：\n\n#### 配置gitalk\n\n在`yilia/_config.yml`文件中配置代码：\n\n``` text\n#6、配置gitalk\ngitalk:\n  enable: true\n  client_id: OAuth application注册成功获得\n  client_secret: OAuth application注册成功获得\n  repo: 存储博客评论的仓库地址，可以是存储博客的仓库\n  owner: github账户名\n  admin: github账户名\n```\n\n下载gitalk项目，点这里\n\n拷贝`gitalk/dist/`目录下的`gitalk.css`和`gitalk.min.js`到`yilia/source/lib/gitalk`目录（没有的话新建文件）\n\n在`theme/yilia/layout/_partial/post`文件夹下新建文件`gitalk.ejs`，\n\n``` html\n<div class=\"gitalk\">\n    <div id=\"gitalk-container\"></div>\n    <script type=\"text/javascript\">\n        const gitalk = new Gitalk({\n            clientID: '<%=theme.gitalk.client_id%>',\n            clientSecret: '<%=theme.gitalk.client_secret%>',\n            repo: '<%=theme.gitalk.repo%>',\n            owner: '<%=theme.gitalk.owner%>',\n            admin: ['<%=theme.gitalk.admin%>'],\n            id: md5(location.pathname),      // Ensure uniqueness and length less than 50\n            distractionFreeMode: false  // Facebook-like distraction free mode\n        })\n        gitalk.render('gitalk-container')\n    </script>\n</div>\n```\n\n在`yilia/source-src/css/comment.scss`文件中添加代码：\n\n```scss\n#disqus_thread, .duoshuo, .cloud-tie-wrapper, #SOHUCS, #gitment-ctn, #gitalk-container {\n    padding: 0 30px !important;\n    min-height: 20px;\n}\n\n#SOHUCS {\n    #SOHU_MAIN .module-cmt-list .block-cont-gw {\n        border-bottom: 1px dashed #c8c8c8 !important;\n    }\n}\n```\n\n* 修改源文件重新build。上述资源对应源文件为 `yilia/source-src/css/comment.scss`，按照如下方式build\n\n```shell\ncd 到 yilia 目录下\nnpm install\nnpm run dev\nnpm run dist\n```\n\n在`yilia/layout/_partial/article.ejs`文件中添加代码：\n\n``` text\n<% if (!index && theme.gitalk.enable && post.comments){ %>\n<%- partial('post/gitalk', {\n    key: post.slug,\n    title: post.title,\n    url: config.url+url_for(post.path)\n  }) %>\n<% } %>\n```\n\n在`yilia/layout/_partial/head.ejs`文件中添加代码：\n\n``` text\n<% if (theme.gitalk.enable){ %>\n  <link rel=\"stylesheet\" href=\"/lib/gitalk/gitalk.css\">\n  <script src=\"/lib/gitalk/gitalk.min.js\"></script>\n  <script src=\"/lib/gitalk/md5.js\"></script>\n<% } %>\n```\n\n最终效果如下\n\n![评论](https://s1.ax1x.com/2020/07/21/UIqryd.png)\n\n### 畅言\n\n添加步骤\n\n#### 注册畅言账号\n\n前往 畅言官网 注册,注册成功后，按照官网提示，填好东西后，注意填写备案信息。\n\n#### 获取appid跟appkey\n\n登录畅言后台，获取自己的appid跟appkey\n\n#### 配置畅言\n\n修改`themes/yilia/_config.yml`,把你上述得到的appid跟appkey填写到如下位置:\n\n``` text\nwidgets:\n   - popular_posts\n\n#2、网易云跟帖\nwangyiyun: false\n\n#3、畅言\nchangyan_appid: ''        //appid添到这里\nchangyan_conf: ''         //appkey添到这里\n```\n\n这样就配置结束了，之后`hexo clean`,`hexo g`,`hexo d` 就ok了\n\n### 来必力\n\n#### 注册来必力账号\n\n打开来必力[官网](https://livere.com)\n\n按套路注册（有可能注册上面要花费点功夫）。（貌似需要科学上网？之前没科学上网好像登录界面显示不了）。\n\n#### 主题配置添加来必力\n\n修改 hexo 博客目录的 `theme/yilia/_config.yml` 文件，增加如下配置：\n\n``` text\n# livere 来必力。将 false 改为自己的uid则启用该评论系统。\nlivere_uid: false\n```\n\n#### 新增来必力评论代码文件\n\n```html\n<!-- 来必力City版安装代码 -->\n<div id=\"lv-container\" data-id=\"city\" data-uid=\"<%=theme.livere_uid%>\">\n<script type=\"text/javascript\">\n(function(d, s) {\n    var j, e = d.getElementsByTagName(s)[0];\n\n    if (typeof LivereTower === 'function') { return; }\n\n    j = d.createElement(s);\n    j.src = 'https://cdn-city.livere.com/js/embed.dist.js';\n    j.async = true;\n\n    e.parentNode.insertBefore(j, e);\n})(document, 'script');\n</script>\n<noscript> 为正常使用来必力评论功能请激活JavaScript</noscript>\n</div>\n<!-- City版安装代码已完成 -->\n```\n\n#### 修改 article.ejs\n\n修改 `yilia/layout/_partial/article.ejs` 文件，在 `<% if (!index && post.comments){ %>` 后的任意一个评论代码前或后插入如下代码：\n\n``` text\n<%if (theme.livere_uid) { %>\n    <%- partial('post/livere') %>\n<% } %>\n```\n\n如上三步，修改完成。如果要启用，修改主题的 `_config.yml` 文件，将 `livere_uid` 的值改为自己的来必力 `uid` 即可，注意冒号之后有空格。\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#添加评论系统)\n\n## 参考资料\n\n* [hexo+yilia+Valine添加评论系统](https://blog.csdn.net/qq_43827595/article/details/101450966)\n* [新增对Valine评论系统的支持 #646](https://github.com/litten/hexo-theme-yilia/pull/646)\n* [Valine Admin 配置手册](https://deserts.io/valine-admin-document/)\n* [Hexo+yilia+Valine添加评论系统、LeanCloud、创建应用、部署云引擎](https://blog.csdn.net/Lott0419/article/details/106311866)\n* [hexo+yilia+Gitalk添加评论系统](https://www.pianshen.com/article/6042218776/)\n* [hexo+yilia+Gitalk添加评论系统-样式调整](https://my.oschina.net/u/4383702/blog/3678467)\n* [hexo+yilia+畅言添加评论系统](https://blog.csdn.net/qq_40910541/article/details/80659127)\n* [hexo+yilia+来必力添加评论系统-注册](https://blog.csdn.net/qwerty200696/article/details/78836421)\n* [hexo+yilia+来必力添加评论系统](https://blog.csdn.net/maosidiaoxian/article/details/90902494)\n* [hexo+yilia+Gitment添加评论系统](https://www.cnblogs.com/liuurick/p/10713709.html)\n","source":"_posts/Yilia主题如何添加评论功能.md","raw":"---\ntitle: Yilia主题如何添加评论功能\ntags:\n  - 技术积累\n  - hexo\n  - yilia\ncategories:\n  - 技术积累\n  - hexo\n  - yilia\ntoc: true\nabbrlink: 7dfdd292\ndate: 2020-07-21 10:22:17\n---\n\n![首屏图](https://s1.ax1x.com/2020/07/21/U5XM4K.jpg)\n\n<!-- more -->\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#添加评论系统)\n\n## 常见的评论系统\n\n* Valine(评论不需要账号，数据托管于Leancloud数据库管理)\n* Gitalk(可以使用，评论需要登录GitHub账号)\n* 畅言(搜狐的评论系统,很强大,但需要有备案号)\n* Gitment(登录GitHub账号长时间loading)\n* 来必力(注册受阻，且是韩国服务器，评论系统响应变慢)\n* 友言(不需要备案号,功能也比较强大)\n* disqus(国内经常被墙)\n* 网易云跟帖(已经关闭系统)\n* 多说(功能强大，但是已经停止服务)\n\n### Valine\n\n先开始使用的Gitalk，但是这个评论必须拥有GitHub账号才可以，因此转而使用Valine试试。\n\n#### 配置Valine\n\n在`yilia/_config.yml`文件中配置代码：\n\n``` text\n#7、配置Valine\nvaline:\n enable: true #是否启用valine\n appid: #Leancloud应用的appId\n appkey: #Leancloud应用的appKey\n verify: false #验证码，verify和notify这两个最好就别动了\n notify: false #评论回复提醒\n avatar: mm #评论列表头像样式：''/mm/identicon/monsterid/wavatar/retro/hide\n placeholder: Just go go #评论框占位符\n```\n\n拷贝如下三个地址的`av-min.js`、`Valine.min.js`和`jquery.min.js`到`yilia/source/lib/valine`目录（没有的话新建文件）\n\n* [av-min.js](https://cdn1.lncld.net/static/js/3.0.4/av-min.js)\n* [Valine.min.js](https://unpkg.com/valine/dist/Valine.min.js)\n* [jquery.min.js](https://cdnjs.loli.net/ajax/libs/jquery/3.2.1/jquery.min.js)\n\n在`theme/yilia/layout/_partial/post`文件夹下新建文件`valine.ejs`，\n\n``` html\n<div id=\"vcomment\" class=\"comment\"></div>\n<script>\n    var notify = '<%= theme.valine.notify %>' == true ? true : false;\n    var verify = '<%= theme.valine.verify %>' == true ? true : false;\n    new Valine({\n        av: AV,\n        el: '#vcomment',\n        notify: notify,\n        app_id: \"<%= theme.valine.appid %>\",\n        app_key: \"<%= theme.valine.appkey %>\",\n        placeholder: \"<%= theme.valine.placeholder %>\",\n        avatar:\"<%= theme.valine.avatar %>\",\n    });\n</script>\n```\n\n在`layout/_partial/article.ejs`文件中的结尾添加如下代码(可以参考其他评论代码)：\n\n``` html\n<% if (!index && theme.valine && theme.valine.enable && theme.valine.appid && theme.valine.appkey){ %>\n<section id=\"comments\" class=\"comments\">\n  <style>\n    .comments {\n      margin: 30px;\n      padding: 10px;\n      background: #fff\n    }\n\n    @media screen and (max-width:800px) {\n      .comments {\n        margin: auto;\n        padding: 10px;\n        background: #fff\n      }\n    }\n  </style>\n  <%- partial('post/valine', {\n            key: post.slug,\n            title: post.title,\n            url: config.url+url_for(post.path)\n            }) %>\n</section>\n<% } %>\n```\n\n在`yilia/layout/_partial/head.ejs`文件中添加代码：\n\n``` text\n<% if (theme.valine && theme.valine.enable){ %>\n  <script src=\"/lib/valine/av-min.js\"></script>\n  <script src='/lib/valine/Valine.min.js'></script>\n  <script src=\"/lib/valine/jquery.min.js\"></script>\n<% } %>\n```\n\n#### 配置评论仓库\n\n接下来就要使用到[Leancloud](https://leancloud.app/)了，大概就是作为我们Valine评论系统的服务器，\n因为Valine首页就介绍了Valine是“一款快速、简洁且高效的无后端评论系统”，自行注册一个账号并登录。\n\n> **注**：这里未使用国内版因为某些不明原因导致国内版后续云域名绑定一直失败\n\n创建一个应用，应用名看个人喜好。\n\n![创建应用](https://s1.ax1x.com/2020/07/23/UOlITf.png)\n\n选择刚刚创建的**应用>设置>应用Key**，然后你就能看到你的App ID和App Key了，参考下图：\n\n![获取App ID和App Key](https://s1.ax1x.com/2020/07/23/UOl1e0.png)\n\n分别复制**App ID**和**App Key**粘贴到前面设置的主题根目录下的`_config.yml`里对应位置，注意“:”后面必须要有一个空格，如图：\n\n![配置_config.yml](https://s1.ax1x.com/2020/07/23/ULyOzR.png)\n\n为了数据安全，再填写一下安全域名，**应用>设置>安全设置**中的**Web 安全域名**，\n如果是Hexo一般填写自己博客主页的地址和`http://localhost:4000/`就可以了，如下图：\n\n![安全域名](https://s1.ax1x.com/2020/07/23/UO1Vn1.png)\n\n到这里，你的valine评论系统就已经可以工作了\n\n当然修改了相关代码需要重新部署博客，三步操作：\n\n```shell\nhexo clean\nhexo g\nhexo s #本地测试用http://localhost:4000/访问即可，也可以hexo d部署到云端\n```\n\n自己写条评论试试呢，评论的数据会保存到Leancloud你创建的应用里，\n具体可以登录Leancloud，选择**应用>存储>Comment**，评论的所有相关信息都可以在这儿看到：\n\n![数据库查看](https://s1.ax1x.com/2020/07/23/UO1R4U.png)\n\n到此如果没有更多的需求已经可以结束不折腾了，进一步的下面介绍实现邮件通知的功能\n\n#### 部署云引擎（邮件通知）\n\n这一部分主要参考这篇博客[Valine Admin 配置手册](https://deserts.io/valine-admin-document/)。\n\n##### 填写代码仓库\n\n登录[Leancloud](https://console.leancloud.app/login.html#/signin)国际版，选择**云引擎>部署>部署项目**：\n\n![部署项目](https://s1.ax1x.com/2020/07/23/ULqWrT.png)\n\n选择**Git部署**：\n\n![Git部署](https://s1.ax1x.com/2020/07/23/ULqgx0.png)\n\n选择**手动部署**：在Leancloud云引擎设置界面，填写代码库并保存：`https://github.com/DesertsP/Valine-Admin.git`\n\n* 注意：直接复制填上去就行，不是要自己建一个类似的代码仓库，另外注意这个链接是否有变动\n\n![手动部署](https://s1.ax1x.com/2020/07/23/ULqRMV.png)\n\n配置完毕并部署如下\n\n![部署完毕](https://s1.ax1x.com/2020/07/23/ULqc2q.png)\n\n##### 设置环境变量以及Web二级域名\n\n在设置页面，设置**环境变量**以及 **Web 二级域名**。先后顺序没什么影响，不过可以先设置 Web 二级域名，需要实名认证，自己认证一下。\n\n> **注**：这里如果是使用国内版本的话，二级域名配置一直失败。\n\nWeb 二级域名用于评论后台管理，如`https://gty.avosapps.us`\n\n![二级域名](https://s1.ax1x.com/2020/07/23/UO3wa6.png)\n\n环境变量必填参数务必正确设置：\n\n![环境变量](https://s1.ax1x.com/2020/07/23/UOtK4P.png)\n\n这里虽然部分是选填的，但是个人建议都填上吧，当然首先要填对，填错了那就没用了。\n\nSMTP_SERVICE建议用QQ，目前我用的QQ邮箱没有任何问题，163邮箱在我设置的过程中似乎有不能发送邮件的问题，\n应该是网易邮箱那边的限制所以无关你设置得对不对，Gmail似乎是因为被墙了会连接超时，其它我没试过。\n\n|环境变量|示例|说明|\n|---|---|---|\n|SITE_NAME|Deserts|[必填]博客名称|\n|SITE_URL|`https://www.gaotianyang.top/`|[必填]首页地址|\n|SMTP_SERVICE|QQ|[新版支持]邮件服务提供商，支持 QQ、163、126、Gmail 以及 [更多](https://nodemailer.com/smtp/well-known/#supported-services)|\n|SMTP_USER|xxxxxx@qq.com|[必填]SMTP登录用户|\n|SMTP_PASS|ccxxxxxxxxch|[必填]SMTP登录密码（QQ邮箱需要获取独立密码）|\n|SENDER_NAME|mxy|[必填]发件人|\n|SENDER_EMAIL|xxxxxx@qq.com|[必填]发件邮箱[建议]和SMTP_USER一致|\n|ADMIN_URL|`https://xxx.avosapps.us/`|[建议]Web主机二级域名，用于自动唤醒|\n|BLOGGER_EMAIL|xxxxxx@qq.com|[可选]博主通知收件地址，默认使用SENDER_EMAIL|\n\n> **注**：环境变量有任何更改都需要重启应用才能生效（云引擎>实例>设置>重启）\n\n![环境变量](https://s1.ax1x.com/2020/07/23/UOtuNt.png)\n\n##### 评论管理\n\n访问设置的二级域名`https://二级域名.avosapps.us/sign-up`，\n注册管理员登录信息，如：`https://gty.avosapps.us/sign-up`\n\n![注册](https://s1.ax1x.com/2020/07/23/UOtnAI.png)\n\n> **注**：使用原版Valine如果遇到注册页面不显示直接跳转至登录页的情况，请手动删除_User表中的全部数据。\n\n管理界面如下\n\n![管理](https://s1.ax1x.com/2020/07/23/UOteHA.png)\n\n##### 设置定时任务\n\n进入**云引擎>定时任务**，创建定时器，创建两个定时任务。\n\n* 半小时自动唤醒\n\n选择self-wake云函数，Cron表达式为`0 0/30 7-23 * * ?`，表示每天早7点到晚23点每隔30分钟访问云引擎，确定环境变量ADMIN_URL设置正确：\n\n![自动唤醒](https://s1.ax1x.com/2020/07/24/Ujm1oD.png)\n\n* 八点叫我发邮件\n\n选择resend-mails云函数，Cron表达式为`0 0 8 * * ?`，表示每天早8点检查过去24小时内漏发的通知邮件并补发：\n\n![定时检查](https://s1.ax1x.com/2020/07/24/Ujm8Fe.png)\n\n至此 `Valine Admin` 已经可以正常工作，更多以下是可选的进阶**配置**\n\n#### 邮件通知模板\n\n这一部分可选，懒得折腾可以到此为止！\n\n邮件通知模板在**云引擎环境变量**中设定，可自定义通知邮件标题及内容模板。\n\n邮件通知包含两种，分别是“**被@通知**”和“**博主通知**”，这两种模板都可以完全自定义。默认使用经典的蓝色风格模板（样式来源未知）。\n\n|环境变量|示例|说明|\n|---|---|---|\n|MAIL_TEMPLATE_ADMIN|`见下文`|[可选]**博主邮件通知**内容模板(别人在你博客评论后，邮箱通知显示的模板)|\n|MAIL_SUBJECT_ADMIN|${SITE_NAME}上有新评论了|[可选]**博主邮件通知**主题模板|\n|MAIL_TEMPLATE|`见下文`|[可选]**被@通知**邮件内容模板(别人回复评论后，邮箱显示的模板)|\n|MAIL_SUBJECT|您在{SITE_NAME}上的评论收到了回复|[可选]**被@通知**邮件主题（标题）模板|\n\n##### 默认**MAIL_TEMPLATE_ADMIN**\n\n* 默认**被@通知邮件内容模板**：\n\n```html\n<div style=\"border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;\"><h2 style=\"border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;\">您在<a style=\"text-decoration:none;color: #12ADDB;\" href=\"${SITE_URL}\" target=\"_blank\">${SITE_NAME}</a>上的评论有了新的回复</h2><div style=\"padding:0 12px 0 12px;margin-top:18px\"><p><strong>${NICK}</strong>回复说：</p><div style=\"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;\"> ${COMMENT}</div><p>您可以点击<a style=\"text-decoration:none; color:#12addb\" href=\"${POST_URL}\" target=\"_blank\">查看回复的完整內容</a>，欢迎再次光临<a style=\"text-decoration:none; color:#12addb\" href=\"${SITE_URL}\" target=\"_blank\">${SITE_NAME}</a>。<br></p></div></div>\n```\n\n##### 默认**MAIL_TEMPLATE**\n\n* 默认博主通知邮件内容模板：\n\n```html\n<div style=\"border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;\"><h2 style=\"border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;\">您在<a style=\"text-decoration:none;color: #12ADDB;\" href=\"${SITE_URL}\" target=\"_blank\">${SITE_NAME}</a>上的文章有了新的评论</h2><p><strong>${NICK}</strong>回复说：</p><div style=\"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;\"> ${COMMENT}</div><p>您可以点击<a style=\"text-decoration:none; color:#12addb\" href=\"${POST_URL}\" target=\"_blank\">查看回复的完整內容</a><br></p></div></div>\n```\n\n博主通知邮件模板中的可用变量与@通知中的基本一致，注意：`PARENT_NICK` 和 `PARENT_COMMENT` 变量不再可用。\n\n效果如图：\n\n![默认邮件](https://s1.ax1x.com/2020/07/24/UjgJhT.png)\n\n##### 彩虹风**MAIL_TEMPLATE**\n\n* 彩虹风格的通知邮件内容模板如下：\n\n```html\n<div style=\"border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);\"><div style=\"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;\"><p style=\"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;\">您在<a style=\"text-decoration:none;color: #ffffff;\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>上的留言有新回复啦！</p></div><div style=\"margin:40px auto;width:90%\"><p>${NICK} 给您的回复如下：</p><div style=\"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;\">${COMMENT}</div><p>您可以点击<a style=\"text-decoration:none; color:#12addb\" href=\"${POST_URL}#comments\">查看回复的完整內容</a>，欢迎再次光临<a style=\"text-decoration:none; color:#12addb\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>。</p><style type=\"text/css\">a:link{text-decoration:none}a:visited{text-decoration:none}a:hover{text-decoration:none}a:active{text-decoration:none}</style></div></div>\n```\n\n为方便修改我把上面的模板格式化了\n\n```html\n<div style=\"border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);\">\n    <div style=\"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;\">\n        <p style=\"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;\">您在<a style=\"text-decoration:none;color: #ffffff;\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>上的留言有新回复啦！</p>\n    </div>\n    <div style=\"margin:40px auto;width:90%\">\n        <p>${NICK} 给您的回复如下：</p>\n        <div style=\"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;\">${COMMENT}</div>\n        <p>您可以点击<a style=\"text-decoration:none; color:#12addb\" href=\"${POST_URL}#comments\">查看回复的完整內容</a>，欢迎再次光临<a style=\"text-decoration:none; color:#12addb\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>。</p>\n        <style type=\"text/css\">\n            a:link{text-decoration:none}\n            a:visited{text-decoration:none}\n            a:hover{text-decoration:none}\n            a:active{text-decoration:none}\n        </style>\n    </div>\n</div>\n```\n\n* 彩虹风格的通知邮件内容模板\n\n##### 彩虹风**MAIL_TEMPLATE_ADMIN**\n\n```html\n<div style=\"border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);\"><div style=\"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;\"><p style=\"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;\">您在<a style=\"text-decoration:none;color: #ffffff;\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>上的文章有了新的评论</p></div><div style=\"margin:40px auto;width:90%\"><p>${NICK} 给您的回复如下：</p><div style=\"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;\">${COMMENT}</div><p>您可以点击<a style=\"text-decoration:none; color:#12addb\" href=\"${POST_URL}\" target=\"_blank\">查看回复的完整內容</a>，欢迎再次光临<a style=\"text-decoration:none; color:#12addb\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>。</p><style type=\"text/css\">a:link{text-decoration:none}a:visited{text-decoration:none}a:hover{text-decoration:none}a:active{text-decoration:none}</style></div></div>\n```\n\n为方便修改我把上面的模板格式化了\n\n```html\n<div style=\"border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);\">\n    <div style=\"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;\">\n        <p style=\"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;\">您在<a style=\"text-decoration:none;color: #ffffff;\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>上的文章有了新的评论</p>\n    </div>\n    <div style=\"margin:40px auto;width:90%\">\n        <p>${NICK} 给您的回复如下：</p>\n        <div style=\"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;\">${COMMENT}</div>\n        <p>您可以点击<a style=\"text-decoration:none; color:#12addb\" href=\"${POST_URL}\" target=\"_blank\">查看回复的完整內容</a>，欢迎再次光临<a style=\"text-decoration:none; color:#12addb\" href=\"${SITE_URL}\"> ${SITE_NAME}</a>。</p>\n        <style type=\"text/css\">\n            a:link{text-decoration:none}\n            a:visited{text-decoration:none}\n            a:hover{text-decoration:none}\n            a:active{text-decoration:none}\n        </style>\n    </div>\n</div>\n```\n\n效果如图：\n\n![彩虹邮件](https://s1.ax1x.com/2020/07/27/aiJs58.png)\n\n* 通知模板中的可用变量如下：\n\n> **注**：(这是邮件模板变量，虽然一眼望去感觉，变量名与云引擎环境变量名很接近但还是有区别的，请勿与云引擎环境变量混淆)\n\n|环境变量|说明|\n|---|---|\n|SITE_NAME|博客名称|\n|SITE_URL|博客首页地址|\n|POST_URL|文章地址（完整路径）|\n|PARENT_NICK|[不可用]收件人昵称（被@者，父级评论人）|\n|PARENT_COMMENT|[不可用]父级评论内容|\n|NICK|新评论者昵称|\n|COMMENT|新评论内容|\n\n有需求代码部分可以自定义，没有需求的话直接复制**博主邮件通知**代码到`MAIL_TEMPLATE_ADMIN`，\n复制**被@通知代码**到`MAIL_TEMPLATE`，保存即可。\n\n> **注**：修改了环境变量需要重启实例。\n\n至此 `Valine Admin`的邮箱提醒 已经可以正常工作\n\n### Gitalk\n\n可以选择gitment和gitalk评论功能，但是gitment没有弄出来，可能是停服了。\n\nGitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件\n\n参考[Demo](https://gitalk.github.io/)\n\n#### 注册Gitalk应用\n\n先要有一个自己的github账号，登录自己的github账户，点击头像>>Settings>>Developer settings>>New OAuth App，或点击[注册](https://github.com/settings/applications/new)\n\n![注册](https://s1.ax1x.com/2020/07/21/UIQg4x.png)\n\n* Application name：可以随意填写\n* Homepage URL：个人博客地址（域名）\n* Application description：可填可不填，不是关键，若填，可填个人博客的相关描述\n* Authorization callback URL：个人博客地址（域名）\n\n#### 获取Client ID跟Client Secret\n\n一切设置完成之后点击Register application，注册完成后，\n会出现两个关键信息（个人博客配置评论功能之关键，就不放图了）\n\nClient ID：\nClient Secret：\n\n#### 配置gitalk\n\n在`yilia/_config.yml`文件中配置代码：\n\n``` text\n#6、配置gitalk\ngitalk:\n  enable: true\n  client_id: OAuth application注册成功获得\n  client_secret: OAuth application注册成功获得\n  repo: 存储博客评论的仓库地址，可以是存储博客的仓库\n  owner: github账户名\n  admin: github账户名\n```\n\n下载gitalk项目，点这里\n\n拷贝`gitalk/dist/`目录下的`gitalk.css`和`gitalk.min.js`到`yilia/source/lib/gitalk`目录（没有的话新建文件）\n\n在`theme/yilia/layout/_partial/post`文件夹下新建文件`gitalk.ejs`，\n\n``` html\n<div class=\"gitalk\">\n    <div id=\"gitalk-container\"></div>\n    <script type=\"text/javascript\">\n        const gitalk = new Gitalk({\n            clientID: '<%=theme.gitalk.client_id%>',\n            clientSecret: '<%=theme.gitalk.client_secret%>',\n            repo: '<%=theme.gitalk.repo%>',\n            owner: '<%=theme.gitalk.owner%>',\n            admin: ['<%=theme.gitalk.admin%>'],\n            id: md5(location.pathname),      // Ensure uniqueness and length less than 50\n            distractionFreeMode: false  // Facebook-like distraction free mode\n        })\n        gitalk.render('gitalk-container')\n    </script>\n</div>\n```\n\n在`yilia/source-src/css/comment.scss`文件中添加代码：\n\n```scss\n#disqus_thread, .duoshuo, .cloud-tie-wrapper, #SOHUCS, #gitment-ctn, #gitalk-container {\n    padding: 0 30px !important;\n    min-height: 20px;\n}\n\n#SOHUCS {\n    #SOHU_MAIN .module-cmt-list .block-cont-gw {\n        border-bottom: 1px dashed #c8c8c8 !important;\n    }\n}\n```\n\n* 修改源文件重新build。上述资源对应源文件为 `yilia/source-src/css/comment.scss`，按照如下方式build\n\n```shell\ncd 到 yilia 目录下\nnpm install\nnpm run dev\nnpm run dist\n```\n\n在`yilia/layout/_partial/article.ejs`文件中添加代码：\n\n``` text\n<% if (!index && theme.gitalk.enable && post.comments){ %>\n<%- partial('post/gitalk', {\n    key: post.slug,\n    title: post.title,\n    url: config.url+url_for(post.path)\n  }) %>\n<% } %>\n```\n\n在`yilia/layout/_partial/head.ejs`文件中添加代码：\n\n``` text\n<% if (theme.gitalk.enable){ %>\n  <link rel=\"stylesheet\" href=\"/lib/gitalk/gitalk.css\">\n  <script src=\"/lib/gitalk/gitalk.min.js\"></script>\n  <script src=\"/lib/gitalk/md5.js\"></script>\n<% } %>\n```\n\n最终效果如下\n\n![评论](https://s1.ax1x.com/2020/07/21/UIqryd.png)\n\n### 畅言\n\n添加步骤\n\n#### 注册畅言账号\n\n前往 畅言官网 注册,注册成功后，按照官网提示，填好东西后，注意填写备案信息。\n\n#### 获取appid跟appkey\n\n登录畅言后台，获取自己的appid跟appkey\n\n#### 配置畅言\n\n修改`themes/yilia/_config.yml`,把你上述得到的appid跟appkey填写到如下位置:\n\n``` text\nwidgets:\n   - popular_posts\n\n#2、网易云跟帖\nwangyiyun: false\n\n#3、畅言\nchangyan_appid: ''        //appid添到这里\nchangyan_conf: ''         //appkey添到这里\n```\n\n这样就配置结束了，之后`hexo clean`,`hexo g`,`hexo d` 就ok了\n\n### 来必力\n\n#### 注册来必力账号\n\n打开来必力[官网](https://livere.com)\n\n按套路注册（有可能注册上面要花费点功夫）。（貌似需要科学上网？之前没科学上网好像登录界面显示不了）。\n\n#### 主题配置添加来必力\n\n修改 hexo 博客目录的 `theme/yilia/_config.yml` 文件，增加如下配置：\n\n``` text\n# livere 来必力。将 false 改为自己的uid则启用该评论系统。\nlivere_uid: false\n```\n\n#### 新增来必力评论代码文件\n\n```html\n<!-- 来必力City版安装代码 -->\n<div id=\"lv-container\" data-id=\"city\" data-uid=\"<%=theme.livere_uid%>\">\n<script type=\"text/javascript\">\n(function(d, s) {\n    var j, e = d.getElementsByTagName(s)[0];\n\n    if (typeof LivereTower === 'function') { return; }\n\n    j = d.createElement(s);\n    j.src = 'https://cdn-city.livere.com/js/embed.dist.js';\n    j.async = true;\n\n    e.parentNode.insertBefore(j, e);\n})(document, 'script');\n</script>\n<noscript> 为正常使用来必力评论功能请激活JavaScript</noscript>\n</div>\n<!-- City版安装代码已完成 -->\n```\n\n#### 修改 article.ejs\n\n修改 `yilia/layout/_partial/article.ejs` 文件，在 `<% if (!index && post.comments){ %>` 后的任意一个评论代码前或后插入如下代码：\n\n``` text\n<%if (theme.livere_uid) { %>\n    <%- partial('post/livere') %>\n<% } %>\n```\n\n如上三步，修改完成。如果要启用，修改主题的 `_config.yml` 文件，将 `livere_uid` 的值改为自己的来必力 `uid` 即可，注意冒号之后有空格。\n\n[返回yilia主题进阶设置](/archives/20200717e10c0cde/#添加评论系统)\n\n## 参考资料\n\n* [hexo+yilia+Valine添加评论系统](https://blog.csdn.net/qq_43827595/article/details/101450966)\n* [新增对Valine评论系统的支持 #646](https://github.com/litten/hexo-theme-yilia/pull/646)\n* [Valine Admin 配置手册](https://deserts.io/valine-admin-document/)\n* [Hexo+yilia+Valine添加评论系统、LeanCloud、创建应用、部署云引擎](https://blog.csdn.net/Lott0419/article/details/106311866)\n* [hexo+yilia+Gitalk添加评论系统](https://www.pianshen.com/article/6042218776/)\n* [hexo+yilia+Gitalk添加评论系统-样式调整](https://my.oschina.net/u/4383702/blog/3678467)\n* [hexo+yilia+畅言添加评论系统](https://blog.csdn.net/qq_40910541/article/details/80659127)\n* [hexo+yilia+来必力添加评论系统-注册](https://blog.csdn.net/qwerty200696/article/details/78836421)\n* [hexo+yilia+来必力添加评论系统](https://blog.csdn.net/maosidiaoxian/article/details/90902494)\n* [hexo+yilia+Gitment添加评论系统](https://www.cnblogs.com/liuurick/p/10713709.html)\n","slug":"Yilia主题如何添加评论功能","published":1,"updated":"2020-08-12T01:57:58.409Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjz400192an9ewlperyy","content":"<p><img src=\"https://s1.ax1x.com/2020/07/21/U5XM4K.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<p><a href=\"/archives/20200717e10c0cde/#添加评论系统\">返回yilia主题进阶设置</a></p>\n<h2 id=\"常见的评论系统\"><a href=\"#常见的评论系统\" class=\"headerlink\" title=\"常见的评论系统\"></a>常见的评论系统</h2><ul>\n<li>Valine(评论不需要账号，数据托管于Leancloud数据库管理)</li>\n<li>Gitalk(可以使用，评论需要登录GitHub账号)</li>\n<li>畅言(搜狐的评论系统,很强大,但需要有备案号)</li>\n<li>Gitment(登录GitHub账号长时间loading)</li>\n<li>来必力(注册受阻，且是韩国服务器，评论系统响应变慢)</li>\n<li>友言(不需要备案号,功能也比较强大)</li>\n<li>disqus(国内经常被墙)</li>\n<li>网易云跟帖(已经关闭系统)</li>\n<li>多说(功能强大，但是已经停止服务)</li>\n</ul>\n<h3 id=\"Valine\"><a href=\"#Valine\" class=\"headerlink\" title=\"Valine\"></a>Valine</h3><p>先开始使用的Gitalk，但是这个评论必须拥有GitHub账号才可以，因此转而使用Valine试试。</p>\n<h4 id=\"配置Valine\"><a href=\"#配置Valine\" class=\"headerlink\" title=\"配置Valine\"></a>配置Valine</h4><p>在<code>yilia/_config.yml</code>文件中配置代码：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#7、配置Valine</span><br><span class=\"line\">valine:</span><br><span class=\"line\"> enable: true #是否启用valine</span><br><span class=\"line\"> appid: #Leancloud应用的appId</span><br><span class=\"line\"> appkey: #Leancloud应用的appKey</span><br><span class=\"line\"> verify: false #验证码，verify和notify这两个最好就别动了</span><br><span class=\"line\"> notify: false #评论回复提醒</span><br><span class=\"line\"> avatar: mm #评论列表头像样式：&#x27;&#x27;/mm/identicon/monsterid/wavatar/retro/hide</span><br><span class=\"line\"> placeholder: Just go go #评论框占位符</span><br></pre></td></tr></table></figure>\n<p>拷贝如下三个地址的<code>av-min.js</code>、<code>Valine.min.js</code>和<code>jquery.min.js</code>到<code>yilia/source/lib/valine</code>目录（没有的话新建文件）</p>\n<ul>\n<li><a href=\"https://cdn1.lncld.net/static/js/3.0.4/av-min.js\">av-min.js</a></li>\n<li><a href=\"https://unpkg.com/valine/dist/Valine.min.js\">Valine.min.js</a></li>\n<li><a href=\"https://cdnjs.loli.net/ajax/libs/jquery/3.2.1/jquery.min.js\">jquery.min.js</a></li>\n</ul>\n<p>在<code>theme/yilia/layout/_partial/post</code>文件夹下新建文件<code>valine.ejs</code>，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;vcomment&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;comment&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> notify = <span class=\"string\">&#x27;&lt;%= theme.valine.notify %&gt;&#x27;</span> == <span class=\"literal\">true</span> ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> verify = <span class=\"string\">&#x27;&lt;%= theme.valine.verify %&gt;&#x27;</span> == <span class=\"literal\">true</span> ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">new</span> Valine(&#123;</span></span><br><span class=\"line\">        av: AV,</span><br><span class=\"line\"><span class=\"javascript\">        el: <span class=\"string\">&#x27;#vcomment&#x27;</span>,</span></span><br><span class=\"line\">        notify: notify,</span><br><span class=\"line\"><span class=\"javascript\">        app_id: <span class=\"string\">&quot;&lt;%= theme.valine.appid %&gt;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">        app_key: <span class=\"string\">&quot;&lt;%= theme.valine.appkey %&gt;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">        placeholder: <span class=\"string\">&quot;&lt;%= theme.valine.placeholder %&gt;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">        avatar:<span class=\"string\">&quot;&lt;%= theme.valine.avatar %&gt;&quot;</span>,</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在<code>layout/_partial/article.ejs</code>文件中的结尾添加如下代码(可以参考其他评论代码)：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (!<span class=\"attr\">index</span> &amp;&amp; <span class=\"attr\">theme.valine</span> &amp;&amp; <span class=\"attr\">theme.valine.enable</span> &amp;&amp; <span class=\"attr\">theme.valine.appid</span> &amp;&amp; <span class=\"attr\">theme.valine.appkey</span>)&#123; %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;comments&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;comments&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.comments</span> &#123;</span></span><br><span class=\"line\">      margin: 30px;</span><br><span class=\"line\">      padding: 10px;</span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#fff</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"css\">    <span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">max-width:</span><span class=\"number\">800px</span>) &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.comments</span> &#123;</span></span><br><span class=\"line\">        margin: auto;</span><br><span class=\"line\">        padding: 10px;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#fff</span></span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>(&#x27;<span class=\"attr\">post</span>/<span class=\"attr\">valine</span>&#x27;, &#123;</span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">key:</span> <span class=\"attr\">post.slug</span>,</span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">title:</span> <span class=\"attr\">post.title</span>,</span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">url:</span> <span class=\"attr\">config.url</span>+<span class=\"attr\">url_for</span>(<span class=\"attr\">post.path</span>)</span></span><br><span class=\"line\"><span class=\"tag\">            &#125;) %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在<code>yilia/layout/_partial/head.ejs</code>文件中添加代码：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% if (theme.valine &amp;&amp; theme.valine.enable)&#123; %&gt;</span><br><span class=\"line\">  &lt;script src=&quot;/lib/valine/av-min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">  &lt;script src=&#x27;/lib/valine/Valine.min.js&#x27;&gt;&lt;/script&gt;</span><br><span class=\"line\">  &lt;script src=&quot;/lib/valine/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置评论仓库\"><a href=\"#配置评论仓库\" class=\"headerlink\" title=\"配置评论仓库\"></a>配置评论仓库</h4><p>接下来就要使用到<a href=\"https://leancloud.app/\">Leancloud</a>了，大概就是作为我们Valine评论系统的服务器，<br>因为Valine首页就介绍了Valine是“一款快速、简洁且高效的无后端评论系统”，自行注册一个账号并登录。</p>\n<blockquote>\n<p><strong>注</strong>：这里未使用国内版因为某些不明原因导致国内版后续云域名绑定一直失败</p>\n</blockquote>\n<p>创建一个应用，应用名看个人喜好。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UOlITf.png\" alt=\"创建应用\"></p>\n<p>选择刚刚创建的<strong>应用&gt;设置&gt;应用Key</strong>，然后你就能看到你的App ID和App Key了，参考下图：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UOl1e0.png\" alt=\"获取App ID和App Key\"></p>\n<p>分别复制<strong>App ID</strong>和<strong>App Key</strong>粘贴到前面设置的主题根目录下的<code>_config.yml</code>里对应位置，注意“:”后面必须要有一个空格，如图：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULyOzR.png\" alt=\"配置_config.yml\"></p>\n<p>为了数据安全，再填写一下安全域名，<strong>应用&gt;设置&gt;安全设置</strong>中的<strong>Web 安全域名</strong>，<br>如果是Hexo一般填写自己博客主页的地址和<code>http://localhost:4000/</code>就可以了，如下图：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UO1Vn1.png\" alt=\"安全域名\"></p>\n<p>到这里，你的valine评论系统就已经可以工作了</p>\n<p>当然修改了相关代码需要重新部署博客，三步操作：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s #本地测试用http://localhost:4000/访问即可，也可以hexo d部署到云端</span><br></pre></td></tr></table></figure>\n<p>自己写条评论试试呢，评论的数据会保存到Leancloud你创建的应用里，<br>具体可以登录Leancloud，选择<strong>应用&gt;存储&gt;Comment</strong>，评论的所有相关信息都可以在这儿看到：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UO1R4U.png\" alt=\"数据库查看\"></p>\n<p>到此如果没有更多的需求已经可以结束不折腾了，进一步的下面介绍实现邮件通知的功能</p>\n<h4 id=\"部署云引擎（邮件通知）\"><a href=\"#部署云引擎（邮件通知）\" class=\"headerlink\" title=\"部署云引擎（邮件通知）\"></a>部署云引擎（邮件通知）</h4><p>这一部分主要参考这篇博客<a href=\"https://deserts.io/valine-admin-document/\">Valine Admin 配置手册</a>。</p>\n<h5 id=\"填写代码仓库\"><a href=\"#填写代码仓库\" class=\"headerlink\" title=\"填写代码仓库\"></a>填写代码仓库</h5><p>登录<a href=\"https://console.leancloud.app/login.html#/signin\">Leancloud</a>国际版，选择<strong>云引擎&gt;部署&gt;部署项目</strong>：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULqWrT.png\" alt=\"部署项目\"></p>\n<p>选择<strong>Git部署</strong>：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULqgx0.png\" alt=\"Git部署\"></p>\n<p>选择<strong>手动部署</strong>：在Leancloud云引擎设置界面，填写代码库并保存：<code>https://github.com/DesertsP/Valine-Admin.git</code></p>\n<ul>\n<li>注意：直接复制填上去就行，不是要自己建一个类似的代码仓库，另外注意这个链接是否有变动</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULqRMV.png\" alt=\"手动部署\"></p>\n<p>配置完毕并部署如下</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULqc2q.png\" alt=\"部署完毕\"></p>\n<h5 id=\"设置环境变量以及Web二级域名\"><a href=\"#设置环境变量以及Web二级域名\" class=\"headerlink\" title=\"设置环境变量以及Web二级域名\"></a>设置环境变量以及Web二级域名</h5><p>在设置页面，设置<strong>环境变量</strong>以及 <strong>Web 二级域名</strong>。先后顺序没什么影响，不过可以先设置 Web 二级域名，需要实名认证，自己认证一下。</p>\n<blockquote>\n<p><strong>注</strong>：这里如果是使用国内版本的话，二级域名配置一直失败。</p>\n</blockquote>\n<p>Web 二级域名用于评论后台管理，如<code>https://gty.avosapps.us</code></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UO3wa6.png\" alt=\"二级域名\"></p>\n<p>环境变量必填参数务必正确设置：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UOtK4P.png\" alt=\"环境变量\"></p>\n<p>这里虽然部分是选填的，但是个人建议都填上吧，当然首先要填对，填错了那就没用了。</p>\n<p>SMTP_SERVICE建议用QQ，目前我用的QQ邮箱没有任何问题，163邮箱在我设置的过程中似乎有不能发送邮件的问题，<br>应该是网易邮箱那边的限制所以无关你设置得对不对，Gmail似乎是因为被墙了会连接超时，其它我没试过。</p>\n<table>\n<thead>\n<tr>\n<th>环境变量</th>\n<th>示例</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SITE_NAME</td>\n<td>Deserts</td>\n<td>[必填]博客名称</td>\n</tr>\n<tr>\n<td>SITE_URL</td>\n<td><code>https://www.gaotianyang.top/</code></td>\n<td>[必填]首页地址</td>\n</tr>\n<tr>\n<td>SMTP_SERVICE</td>\n<td>QQ</td>\n<td>[新版支持]邮件服务提供商，支持 QQ、163、126、Gmail 以及 <a href=\"https://nodemailer.com/smtp/well-known/#supported-services\">更多</a></td>\n</tr>\n<tr>\n<td>SMTP_USER</td>\n<td><a href=\"mailto:xxxxxx@qq.com\">xxxxxx@qq.com</a></td>\n<td>[必填]SMTP登录用户</td>\n</tr>\n<tr>\n<td>SMTP_PASS</td>\n<td>ccxxxxxxxxch</td>\n<td>[必填]SMTP登录密码（QQ邮箱需要获取独立密码）</td>\n</tr>\n<tr>\n<td>SENDER_NAME</td>\n<td>mxy</td>\n<td>[必填]发件人</td>\n</tr>\n<tr>\n<td>SENDER_EMAIL</td>\n<td><a href=\"mailto:xxxxxx@qq.com\">xxxxxx@qq.com</a></td>\n<td>[必填]发件邮箱[建议]和SMTP_USER一致</td>\n</tr>\n<tr>\n<td>ADMIN_URL</td>\n<td><code>https://xxx.avosapps.us/</code></td>\n<td>[建议]Web主机二级域名，用于自动唤醒</td>\n</tr>\n<tr>\n<td>BLOGGER_EMAIL</td>\n<td><a href=\"mailto:xxxxxx@qq.com\">xxxxxx@qq.com</a></td>\n<td>[可选]博主通知收件地址，默认使用SENDER_EMAIL</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>注</strong>：环境变量有任何更改都需要重启应用才能生效（云引擎&gt;实例&gt;设置&gt;重启）</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UOtuNt.png\" alt=\"环境变量\"></p>\n<h5 id=\"评论管理\"><a href=\"#评论管理\" class=\"headerlink\" title=\"评论管理\"></a>评论管理</h5><p>访问设置的二级域名<code>https://二级域名.avosapps.us/sign-up</code>，<br>注册管理员登录信息，如：<code>https://gty.avosapps.us/sign-up</code></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UOtnAI.png\" alt=\"注册\"></p>\n<blockquote>\n<p><strong>注</strong>：使用原版Valine如果遇到注册页面不显示直接跳转至登录页的情况，请手动删除_User表中的全部数据。</p>\n</blockquote>\n<p>管理界面如下</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UOteHA.png\" alt=\"管理\"></p>\n<h5 id=\"设置定时任务\"><a href=\"#设置定时任务\" class=\"headerlink\" title=\"设置定时任务\"></a>设置定时任务</h5><p>进入<strong>云引擎&gt;定时任务</strong>，创建定时器，创建两个定时任务。</p>\n<ul>\n<li>半小时自动唤醒</li>\n</ul>\n<p>选择self-wake云函数，Cron表达式为<code>0 0/30 7-23 * * ?</code>，表示每天早7点到晚23点每隔30分钟访问云引擎，确定环境变量ADMIN_URL设置正确：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/24/Ujm1oD.png\" alt=\"自动唤醒\"></p>\n<ul>\n<li>八点叫我发邮件</li>\n</ul>\n<p>选择resend-mails云函数，Cron表达式为<code>0 0 8 * * ?</code>，表示每天早8点检查过去24小时内漏发的通知邮件并补发：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/24/Ujm8Fe.png\" alt=\"定时检查\"></p>\n<p>至此 <code>Valine Admin</code> 已经可以正常工作，更多以下是可选的进阶<strong>配置</strong></p>\n<h4 id=\"邮件通知模板\"><a href=\"#邮件通知模板\" class=\"headerlink\" title=\"邮件通知模板\"></a>邮件通知模板</h4><p>这一部分可选，懒得折腾可以到此为止！</p>\n<p>邮件通知模板在<strong>云引擎环境变量</strong>中设定，可自定义通知邮件标题及内容模板。</p>\n<p>邮件通知包含两种，分别是“<strong>被@通知</strong>”和“<strong>博主通知</strong>”，这两种模板都可以完全自定义。默认使用经典的蓝色风格模板（样式来源未知）。</p>\n<table>\n<thead>\n<tr>\n<th>环境变量</th>\n<th>示例</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>MAIL_TEMPLATE_ADMIN</td>\n<td><code>见下文</code></td>\n<td>[可选]<strong>博主邮件通知</strong>内容模板(别人在你博客评论后，邮箱通知显示的模板)</td>\n</tr>\n<tr>\n<td>MAIL_SUBJECT_ADMIN</td>\n<td>${SITE_NAME}上有新评论了</td>\n<td>[可选]<strong>博主邮件通知</strong>主题模板</td>\n</tr>\n<tr>\n<td>MAIL_TEMPLATE</td>\n<td><code>见下文</code></td>\n<td>[可选]<strong>被@通知</strong>邮件内容模板(别人回复评论后，邮箱显示的模板)</td>\n</tr>\n<tr>\n<td>MAIL_SUBJECT</td>\n<td>您在{SITE_NAME}上的评论收到了回复</td>\n<td>[可选]<strong>被@通知</strong>邮件主题（标题）模板</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"默认MAIL-TEMPLATE-ADMIN\"><a href=\"#默认MAIL-TEMPLATE-ADMIN\" class=\"headerlink\" title=\"默认MAIL_TEMPLATE_ADMIN\"></a>默认<strong>MAIL_TEMPLATE_ADMIN</strong></h5><ul>\n<li>默认<strong>被@通知邮件内容模板</strong>：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;&quot;</span>&gt;</span>您在<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none;color: #12ADDB;&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>$&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>上的评论有了新的回复<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;padding:0 12px 0 12px;margin-top:18px&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>$&#123;NICK&#125;<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span>回复说：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;&quot;</span>&gt;</span> $&#123;COMMENT&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>您可以点击<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;POST_URL&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>查看回复的完整內容<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>，欢迎再次光临<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>$&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>。<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"默认MAIL-TEMPLATE\"><a href=\"#默认MAIL-TEMPLATE\" class=\"headerlink\" title=\"默认MAIL_TEMPLATE\"></a>默认<strong>MAIL_TEMPLATE</strong></h5><ul>\n<li>默认博主通知邮件内容模板：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;&quot;</span>&gt;</span>您在<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none;color: #12ADDB;&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>$&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>上的文章有了新的评论<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>$&#123;NICK&#125;<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span>回复说：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;&quot;</span>&gt;</span> $&#123;COMMENT&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>您可以点击<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;POST_URL&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>查看回复的完整內容<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>博主通知邮件模板中的可用变量与@通知中的基本一致，注意：<code>PARENT_NICK</code> 和 <code>PARENT_COMMENT</code> 变量不再可用。</p>\n<p>效果如图：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/24/UjgJhT.png\" alt=\"默认邮件\"></p>\n<h5 id=\"彩虹风MAIL-TEMPLATE\"><a href=\"#彩虹风MAIL-TEMPLATE\" class=\"headerlink\" title=\"彩虹风MAIL_TEMPLATE\"></a>彩虹风<strong>MAIL_TEMPLATE</strong></h5><ul>\n<li>彩虹风格的通知邮件内容模板如下：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:&#x27;Century Gothic&#x27;,&#x27;Trebuchet MS&#x27;,&#x27;Hiragino Sans GB&#x27;,微软雅黑,&#x27;Microsoft Yahei&#x27;,Tahoma,Helvetica,Arial,&#x27;SimSun&#x27;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;</span>&gt;</span>您在<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none;color: #ffffff;&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>上的留言有新回复啦！<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin:40px auto;width:90%&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>$&#123;NICK&#125; 给您的回复如下：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;</span>&gt;</span>$&#123;COMMENT&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>您可以点击<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;POST_URL&#125;#comments&quot;</span>&gt;</span>查看回复的完整內容<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>，欢迎再次光临<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"css\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:link</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;<span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:visited</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;<span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;<span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:active</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>为方便修改我把上面的模板格式化了</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:&#x27;Century Gothic&#x27;,&#x27;Trebuchet MS&#x27;,&#x27;Hiragino Sans GB&#x27;,微软雅黑,&#x27;Microsoft Yahei&#x27;,Tahoma,Helvetica,Arial,&#x27;SimSun&#x27;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;</span>&gt;</span>您在<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none;color: #ffffff;&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>上的留言有新回复啦！<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin:40px auto;width:90%&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>$&#123;NICK&#125; 给您的回复如下：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;</span>&gt;</span>$&#123;COMMENT&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>您可以点击<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;POST_URL&#125;#comments&quot;</span>&gt;</span>查看回复的完整內容<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>，欢迎再次光临<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:link</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:visited</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:active</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>彩虹风格的通知邮件内容模板</li>\n</ul>\n<h5 id=\"彩虹风MAIL-TEMPLATE-ADMIN\"><a href=\"#彩虹风MAIL-TEMPLATE-ADMIN\" class=\"headerlink\" title=\"彩虹风MAIL_TEMPLATE_ADMIN\"></a>彩虹风<strong>MAIL_TEMPLATE_ADMIN</strong></h5><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:&#x27;Century Gothic&#x27;,&#x27;Trebuchet MS&#x27;,&#x27;Hiragino Sans GB&#x27;,微软雅黑,&#x27;Microsoft Yahei&#x27;,Tahoma,Helvetica,Arial,&#x27;SimSun&#x27;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;</span>&gt;</span>您在<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none;color: #ffffff;&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>上的文章有了新的评论<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin:40px auto;width:90%&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>$&#123;NICK&#125; 给您的回复如下：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;</span>&gt;</span>$&#123;COMMENT&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>您可以点击<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;POST_URL&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>查看回复的完整內容<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>，欢迎再次光临<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"css\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:link</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;<span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:visited</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;<span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;<span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:active</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>为方便修改我把上面的模板格式化了</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:&#x27;Century Gothic&#x27;,&#x27;Trebuchet MS&#x27;,&#x27;Hiragino Sans GB&#x27;,微软雅黑,&#x27;Microsoft Yahei&#x27;,Tahoma,Helvetica,Arial,&#x27;SimSun&#x27;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;</span>&gt;</span>您在<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none;color: #ffffff;&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>上的文章有了新的评论<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin:40px auto;width:90%&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>$&#123;NICK&#125; 给您的回复如下：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;</span>&gt;</span>$&#123;COMMENT&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>您可以点击<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;POST_URL&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>查看回复的完整內容<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>，欢迎再次光临<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:link</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:visited</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:active</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>效果如图：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/27/aiJs58.png\" alt=\"彩虹邮件\"></p>\n<ul>\n<li>通知模板中的可用变量如下：</li>\n</ul>\n<blockquote>\n<p><strong>注</strong>：(这是邮件模板变量，虽然一眼望去感觉，变量名与云引擎环境变量名很接近但还是有区别的，请勿与云引擎环境变量混淆)</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>环境变量</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SITE_NAME</td>\n<td>博客名称</td>\n</tr>\n<tr>\n<td>SITE_URL</td>\n<td>博客首页地址</td>\n</tr>\n<tr>\n<td>POST_URL</td>\n<td>文章地址（完整路径）</td>\n</tr>\n<tr>\n<td>PARENT_NICK</td>\n<td>[不可用]收件人昵称（被@者，父级评论人）</td>\n</tr>\n<tr>\n<td>PARENT_COMMENT</td>\n<td>[不可用]父级评论内容</td>\n</tr>\n<tr>\n<td>NICK</td>\n<td>新评论者昵称</td>\n</tr>\n<tr>\n<td>COMMENT</td>\n<td>新评论内容</td>\n</tr>\n</tbody>\n</table>\n<p>有需求代码部分可以自定义，没有需求的话直接复制<strong>博主邮件通知</strong>代码到<code>MAIL_TEMPLATE_ADMIN</code>，<br>复制<strong>被@通知代码</strong>到<code>MAIL_TEMPLATE</code>，保存即可。</p>\n<blockquote>\n<p><strong>注</strong>：修改了环境变量需要重启实例。</p>\n</blockquote>\n<p>至此 <code>Valine Admin</code>的邮箱提醒 已经可以正常工作</p>\n<h3 id=\"Gitalk\"><a href=\"#Gitalk\" class=\"headerlink\" title=\"Gitalk\"></a>Gitalk</h3><p>可以选择gitment和gitalk评论功能，但是gitment没有弄出来，可能是停服了。</p>\n<p>Gitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件</p>\n<p>参考<a href=\"https://gitalk.github.io/\">Demo</a></p>\n<h4 id=\"注册Gitalk应用\"><a href=\"#注册Gitalk应用\" class=\"headerlink\" title=\"注册Gitalk应用\"></a>注册Gitalk应用</h4><p>先要有一个自己的github账号，登录自己的github账户，点击头像&gt;&gt;Settings&gt;&gt;Developer settings&gt;&gt;New OAuth App，或点击<a href=\"https://github.com/settings/applications/new\">注册</a></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/21/UIQg4x.png\" alt=\"注册\"></p>\n<ul>\n<li>Application name：可以随意填写</li>\n<li>Homepage URL：个人博客地址（域名）</li>\n<li>Application description：可填可不填，不是关键，若填，可填个人博客的相关描述</li>\n<li>Authorization callback URL：个人博客地址（域名）</li>\n</ul>\n<h4 id=\"获取Client-ID跟Client-Secret\"><a href=\"#获取Client-ID跟Client-Secret\" class=\"headerlink\" title=\"获取Client ID跟Client Secret\"></a>获取Client ID跟Client Secret</h4><p>一切设置完成之后点击Register application，注册完成后，<br>会出现两个关键信息（个人博客配置评论功能之关键，就不放图了）</p>\n<p>Client ID：<br>Client Secret：</p>\n<h4 id=\"配置gitalk\"><a href=\"#配置gitalk\" class=\"headerlink\" title=\"配置gitalk\"></a>配置gitalk</h4><p>在<code>yilia/_config.yml</code>文件中配置代码：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#6、配置gitalk</span><br><span class=\"line\">gitalk:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  client_id: OAuth application注册成功获得</span><br><span class=\"line\">  client_secret: OAuth application注册成功获得</span><br><span class=\"line\">  repo: 存储博客评论的仓库地址，可以是存储博客的仓库</span><br><span class=\"line\">  owner: github账户名</span><br><span class=\"line\">  admin: github账户名</span><br></pre></td></tr></table></figure>\n<p>下载gitalk项目，点这里</p>\n<p>拷贝<code>gitalk/dist/</code>目录下的<code>gitalk.css</code>和<code>gitalk.min.js</code>到<code>yilia/source/lib/gitalk</code>目录（没有的话新建文件）</p>\n<p>在<code>theme/yilia/layout/_partial/post</code>文件夹下新建文件<code>gitalk.ejs</code>，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;gitalk&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;gitalk-container&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> gitalk = <span class=\"keyword\">new</span> Gitalk(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            clientID: <span class=\"string\">&#x27;&lt;%=theme.gitalk.client_id%&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            clientSecret: <span class=\"string\">&#x27;&lt;%=theme.gitalk.client_secret%&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            repo: <span class=\"string\">&#x27;&lt;%=theme.gitalk.repo%&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            owner: <span class=\"string\">&#x27;&lt;%=theme.gitalk.owner%&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            admin: [<span class=\"string\">&#x27;&lt;%=theme.gitalk.admin%&gt;&#x27;</span>],</span></span><br><span class=\"line\"><span class=\"javascript\">            id: md5(location.pathname),      <span class=\"comment\">// Ensure uniqueness and length less than 50</span></span></span><br><span class=\"line\"><span class=\"javascript\">            distractionFreeMode: <span class=\"literal\">false</span>  <span class=\"comment\">// Facebook-like distraction free mode</span></span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        gitalk.render(<span class=\"string\">&#x27;gitalk-container&#x27;</span>)</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在<code>yilia/source-src/css/comment.scss</code>文件中添加代码：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#disqus_thread</span>, <span class=\"selector-class\">.duoshuo</span>, <span class=\"selector-class\">.cloud-tie-wrapper</span>, <span class=\"selector-id\">#SOHUCS</span>, <span class=\"selector-id\">#gitment-ctn</span>, <span class=\"selector-id\">#gitalk-container</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">30px</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">    <span class=\"attribute\">min-height</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#SOHUCS</span> &#123;</span><br><span class=\"line\">    <span class=\"selector-id\">#SOHU_MAIN</span> <span class=\"selector-class\">.module-cmt-list</span> <span class=\"selector-class\">.block-cont-gw</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> dashed <span class=\"number\">#c8c8c8</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改源文件重新build。上述资源对应源文件为 <code>yilia/source-src/css/comment.scss</code>，按照如下方式build</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd 到 yilia 目录下</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run dev</span><br><span class=\"line\">npm run dist</span><br></pre></td></tr></table></figure>\n<p>在<code>yilia/layout/_partial/article.ejs</code>文件中添加代码：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% if (!index &amp;&amp; theme.gitalk.enable &amp;&amp; post.comments)&#123; %&gt;</span><br><span class=\"line\">&lt;%- partial(&#x27;post/gitalk&#x27;, &#123;</span><br><span class=\"line\">    key: post.slug,</span><br><span class=\"line\">    title: post.title,</span><br><span class=\"line\">    url: config.url+url_for(post.path)</span><br><span class=\"line\">  &#125;) %&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<p>在<code>yilia/layout/_partial/head.ejs</code>文件中添加代码：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% if (theme.gitalk.enable)&#123; %&gt;</span><br><span class=\"line\">  &lt;link rel=&quot;stylesheet&quot; href=&quot;/lib/gitalk/gitalk.css&quot;&gt;</span><br><span class=\"line\">  &lt;script src=&quot;/lib/gitalk/gitalk.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">  &lt;script src=&quot;/lib/gitalk/md5.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<p>最终效果如下</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/21/UIqryd.png\" alt=\"评论\"></p>\n<h3 id=\"畅言\"><a href=\"#畅言\" class=\"headerlink\" title=\"畅言\"></a>畅言</h3><p>添加步骤</p>\n<h4 id=\"注册畅言账号\"><a href=\"#注册畅言账号\" class=\"headerlink\" title=\"注册畅言账号\"></a>注册畅言账号</h4><p>前往 畅言官网 注册,注册成功后，按照官网提示，填好东西后，注意填写备案信息。</p>\n<h4 id=\"获取appid跟appkey\"><a href=\"#获取appid跟appkey\" class=\"headerlink\" title=\"获取appid跟appkey\"></a>获取appid跟appkey</h4><p>登录畅言后台，获取自己的appid跟appkey</p>\n<h4 id=\"配置畅言\"><a href=\"#配置畅言\" class=\"headerlink\" title=\"配置畅言\"></a>配置畅言</h4><p>修改<code>themes/yilia/_config.yml</code>,把你上述得到的appid跟appkey填写到如下位置:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">widgets:</span><br><span class=\"line\">   - popular_posts</span><br><span class=\"line\"></span><br><span class=\"line\">#2、网易云跟帖</span><br><span class=\"line\">wangyiyun: false</span><br><span class=\"line\"></span><br><span class=\"line\">#3、畅言</span><br><span class=\"line\">changyan_appid: &#x27;&#x27;        //appid添到这里</span><br><span class=\"line\">changyan_conf: &#x27;&#x27;         //appkey添到这里</span><br></pre></td></tr></table></figure>\n<p>这样就配置结束了，之后<code>hexo clean</code>,<code>hexo g</code>,<code>hexo d</code> 就ok了</p>\n<h3 id=\"来必力\"><a href=\"#来必力\" class=\"headerlink\" title=\"来必力\"></a>来必力</h3><h4 id=\"注册来必力账号\"><a href=\"#注册来必力账号\" class=\"headerlink\" title=\"注册来必力账号\"></a>注册来必力账号</h4><p>打开来必力<a href=\"https://livere.com\">官网</a></p>\n<p>按套路注册（有可能注册上面要花费点功夫）。（貌似需要科学上网？之前没科学上网好像登录界面显示不了）。</p>\n<h4 id=\"主题配置添加来必力\"><a href=\"#主题配置添加来必力\" class=\"headerlink\" title=\"主题配置添加来必力\"></a>主题配置添加来必力</h4><p>修改 hexo 博客目录的 <code>theme/yilia/_config.yml</code> 文件，增加如下配置：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># livere 来必力。将 false 改为自己的uid则启用该评论系统。</span><br><span class=\"line\">livere_uid: false</span><br></pre></td></tr></table></figure>\n<h4 id=\"新增来必力评论代码文件\"><a href=\"#新增来必力评论代码文件\" class=\"headerlink\" title=\"新增来必力评论代码文件\"></a>新增来必力评论代码文件</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 来必力City版安装代码 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;lv-container&quot;</span> <span class=\"attr\">data-id</span>=<span class=\"string\">&quot;city&quot;</span> <span class=\"attr\">data-uid</span>=<span class=\"string\">&quot;&lt;%=theme.livere_uid%&gt;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d, s</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> j, e = d.getElementsByTagName(s)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> LivereTower === <span class=\"string\">&#x27;function&#x27;</span>) &#123; <span class=\"keyword\">return</span>; &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    j = d.createElement(s);</span><br><span class=\"line\"><span class=\"javascript\">    j.src = <span class=\"string\">&#x27;https://cdn-city.livere.com/js/embed.dist.js&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    j.async = <span class=\"literal\">true</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    e.parentNode.insertBefore(j, e);</span><br><span class=\"line\"><span class=\"javascript\">&#125;)(<span class=\"built_in\">document</span>, <span class=\"string\">&#x27;script&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">noscript</span>&gt;</span> 为正常使用来必力评论功能请激活JavaScript<span class=\"tag\">&lt;/<span class=\"name\">noscript</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- City版安装代码已完成 --&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"修改-article-ejs\"><a href=\"#修改-article-ejs\" class=\"headerlink\" title=\"修改 article.ejs\"></a>修改 article.ejs</h4><p>修改 <code>yilia/layout/_partial/article.ejs</code> 文件，在 <code>&lt;% if (!index &amp;&amp; post.comments)&#123; %&gt;</code> 后的任意一个评论代码前或后插入如下代码：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%if (theme.livere_uid) &#123; %&gt;</span><br><span class=\"line\">    &lt;%- partial(&#x27;post/livere&#x27;) %&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<p>如上三步，修改完成。如果要启用，修改主题的 <code>_config.yml</code> 文件，将 <code>livere_uid</code> 的值改为自己的来必力 <code>uid</code> 即可，注意冒号之后有空格。</p>\n<p><a href=\"/archives/20200717e10c0cde/#添加评论系统\">返回yilia主题进阶设置</a></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://blog.csdn.net/qq_43827595/article/details/101450966\">hexo+yilia+Valine添加评论系统</a></li>\n<li><a href=\"https://github.com/litten/hexo-theme-yilia/pull/646\">新增对Valine评论系统的支持 #646</a></li>\n<li><a href=\"https://deserts.io/valine-admin-document/\">Valine Admin 配置手册</a></li>\n<li><a href=\"https://blog.csdn.net/Lott0419/article/details/106311866\">Hexo+yilia+Valine添加评论系统、LeanCloud、创建应用、部署云引擎</a></li>\n<li><a href=\"https://www.pianshen.com/article/6042218776/\">hexo+yilia+Gitalk添加评论系统</a></li>\n<li><a href=\"https://my.oschina.net/u/4383702/blog/3678467\">hexo+yilia+Gitalk添加评论系统-样式调整</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40910541/article/details/80659127\">hexo+yilia+畅言添加评论系统</a></li>\n<li><a href=\"https://blog.csdn.net/qwerty200696/article/details/78836421\">hexo+yilia+来必力添加评论系统-注册</a></li>\n<li><a href=\"https://blog.csdn.net/maosidiaoxian/article/details/90902494\">hexo+yilia+来必力添加评论系统</a></li>\n<li><a href=\"https://www.cnblogs.com/liuurick/p/10713709.html\">hexo+yilia+Gitment添加评论系统</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s1.ax1x.com/2020/07/21/U5XM4K.jpg\" alt=\"首屏图\"></p>","more":"<p><a href=\"/archives/20200717e10c0cde/#添加评论系统\">返回yilia主题进阶设置</a></p>\n<h2 id=\"常见的评论系统\"><a href=\"#常见的评论系统\" class=\"headerlink\" title=\"常见的评论系统\"></a>常见的评论系统</h2><ul>\n<li>Valine(评论不需要账号，数据托管于Leancloud数据库管理)</li>\n<li>Gitalk(可以使用，评论需要登录GitHub账号)</li>\n<li>畅言(搜狐的评论系统,很强大,但需要有备案号)</li>\n<li>Gitment(登录GitHub账号长时间loading)</li>\n<li>来必力(注册受阻，且是韩国服务器，评论系统响应变慢)</li>\n<li>友言(不需要备案号,功能也比较强大)</li>\n<li>disqus(国内经常被墙)</li>\n<li>网易云跟帖(已经关闭系统)</li>\n<li>多说(功能强大，但是已经停止服务)</li>\n</ul>\n<h3 id=\"Valine\"><a href=\"#Valine\" class=\"headerlink\" title=\"Valine\"></a>Valine</h3><p>先开始使用的Gitalk，但是这个评论必须拥有GitHub账号才可以，因此转而使用Valine试试。</p>\n<h4 id=\"配置Valine\"><a href=\"#配置Valine\" class=\"headerlink\" title=\"配置Valine\"></a>配置Valine</h4><p>在<code>yilia/_config.yml</code>文件中配置代码：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#7、配置Valine</span><br><span class=\"line\">valine:</span><br><span class=\"line\"> enable: true #是否启用valine</span><br><span class=\"line\"> appid: #Leancloud应用的appId</span><br><span class=\"line\"> appkey: #Leancloud应用的appKey</span><br><span class=\"line\"> verify: false #验证码，verify和notify这两个最好就别动了</span><br><span class=\"line\"> notify: false #评论回复提醒</span><br><span class=\"line\"> avatar: mm #评论列表头像样式：&#x27;&#x27;/mm/identicon/monsterid/wavatar/retro/hide</span><br><span class=\"line\"> placeholder: Just go go #评论框占位符</span><br></pre></td></tr></table></figure>\n<p>拷贝如下三个地址的<code>av-min.js</code>、<code>Valine.min.js</code>和<code>jquery.min.js</code>到<code>yilia/source/lib/valine</code>目录（没有的话新建文件）</p>\n<ul>\n<li><a href=\"https://cdn1.lncld.net/static/js/3.0.4/av-min.js\">av-min.js</a></li>\n<li><a href=\"https://unpkg.com/valine/dist/Valine.min.js\">Valine.min.js</a></li>\n<li><a href=\"https://cdnjs.loli.net/ajax/libs/jquery/3.2.1/jquery.min.js\">jquery.min.js</a></li>\n</ul>\n<p>在<code>theme/yilia/layout/_partial/post</code>文件夹下新建文件<code>valine.ejs</code>，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;vcomment&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;comment&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> notify = <span class=\"string\">&#x27;&lt;%= theme.valine.notify %&gt;&#x27;</span> == <span class=\"literal\">true</span> ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> verify = <span class=\"string\">&#x27;&lt;%= theme.valine.verify %&gt;&#x27;</span> == <span class=\"literal\">true</span> ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">new</span> Valine(&#123;</span></span><br><span class=\"line\">        av: AV,</span><br><span class=\"line\"><span class=\"javascript\">        el: <span class=\"string\">&#x27;#vcomment&#x27;</span>,</span></span><br><span class=\"line\">        notify: notify,</span><br><span class=\"line\"><span class=\"javascript\">        app_id: <span class=\"string\">&quot;&lt;%= theme.valine.appid %&gt;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">        app_key: <span class=\"string\">&quot;&lt;%= theme.valine.appkey %&gt;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">        placeholder: <span class=\"string\">&quot;&lt;%= theme.valine.placeholder %&gt;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">        avatar:<span class=\"string\">&quot;&lt;%= theme.valine.avatar %&gt;&quot;</span>,</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在<code>layout/_partial/article.ejs</code>文件中的结尾添加如下代码(可以参考其他评论代码)：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (!<span class=\"attr\">index</span> &amp;&amp; <span class=\"attr\">theme.valine</span> &amp;&amp; <span class=\"attr\">theme.valine.enable</span> &amp;&amp; <span class=\"attr\">theme.valine.appid</span> &amp;&amp; <span class=\"attr\">theme.valine.appkey</span>)&#123; %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;comments&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;comments&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.comments</span> &#123;</span></span><br><span class=\"line\">      margin: 30px;</span><br><span class=\"line\">      padding: 10px;</span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#fff</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"css\">    <span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">max-width:</span><span class=\"number\">800px</span>) &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.comments</span> &#123;</span></span><br><span class=\"line\">        margin: auto;</span><br><span class=\"line\">        padding: 10px;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#fff</span></span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>(&#x27;<span class=\"attr\">post</span>/<span class=\"attr\">valine</span>&#x27;, &#123;</span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">key:</span> <span class=\"attr\">post.slug</span>,</span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">title:</span> <span class=\"attr\">post.title</span>,</span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">url:</span> <span class=\"attr\">config.url</span>+<span class=\"attr\">url_for</span>(<span class=\"attr\">post.path</span>)</span></span><br><span class=\"line\"><span class=\"tag\">            &#125;) %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在<code>yilia/layout/_partial/head.ejs</code>文件中添加代码：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% if (theme.valine &amp;&amp; theme.valine.enable)&#123; %&gt;</span><br><span class=\"line\">  &lt;script src=&quot;/lib/valine/av-min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">  &lt;script src=&#x27;/lib/valine/Valine.min.js&#x27;&gt;&lt;/script&gt;</span><br><span class=\"line\">  &lt;script src=&quot;/lib/valine/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置评论仓库\"><a href=\"#配置评论仓库\" class=\"headerlink\" title=\"配置评论仓库\"></a>配置评论仓库</h4><p>接下来就要使用到<a href=\"https://leancloud.app/\">Leancloud</a>了，大概就是作为我们Valine评论系统的服务器，<br>因为Valine首页就介绍了Valine是“一款快速、简洁且高效的无后端评论系统”，自行注册一个账号并登录。</p>\n<blockquote>\n<p><strong>注</strong>：这里未使用国内版因为某些不明原因导致国内版后续云域名绑定一直失败</p>\n</blockquote>\n<p>创建一个应用，应用名看个人喜好。</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UOlITf.png\" alt=\"创建应用\"></p>\n<p>选择刚刚创建的<strong>应用&gt;设置&gt;应用Key</strong>，然后你就能看到你的App ID和App Key了，参考下图：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UOl1e0.png\" alt=\"获取App ID和App Key\"></p>\n<p>分别复制<strong>App ID</strong>和<strong>App Key</strong>粘贴到前面设置的主题根目录下的<code>_config.yml</code>里对应位置，注意“:”后面必须要有一个空格，如图：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULyOzR.png\" alt=\"配置_config.yml\"></p>\n<p>为了数据安全，再填写一下安全域名，<strong>应用&gt;设置&gt;安全设置</strong>中的<strong>Web 安全域名</strong>，<br>如果是Hexo一般填写自己博客主页的地址和<code>http://localhost:4000/</code>就可以了，如下图：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UO1Vn1.png\" alt=\"安全域名\"></p>\n<p>到这里，你的valine评论系统就已经可以工作了</p>\n<p>当然修改了相关代码需要重新部署博客，三步操作：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s #本地测试用http://localhost:4000/访问即可，也可以hexo d部署到云端</span><br></pre></td></tr></table></figure>\n<p>自己写条评论试试呢，评论的数据会保存到Leancloud你创建的应用里，<br>具体可以登录Leancloud，选择<strong>应用&gt;存储&gt;Comment</strong>，评论的所有相关信息都可以在这儿看到：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UO1R4U.png\" alt=\"数据库查看\"></p>\n<p>到此如果没有更多的需求已经可以结束不折腾了，进一步的下面介绍实现邮件通知的功能</p>\n<h4 id=\"部署云引擎（邮件通知）\"><a href=\"#部署云引擎（邮件通知）\" class=\"headerlink\" title=\"部署云引擎（邮件通知）\"></a>部署云引擎（邮件通知）</h4><p>这一部分主要参考这篇博客<a href=\"https://deserts.io/valine-admin-document/\">Valine Admin 配置手册</a>。</p>\n<h5 id=\"填写代码仓库\"><a href=\"#填写代码仓库\" class=\"headerlink\" title=\"填写代码仓库\"></a>填写代码仓库</h5><p>登录<a href=\"https://console.leancloud.app/login.html#/signin\">Leancloud</a>国际版，选择<strong>云引擎&gt;部署&gt;部署项目</strong>：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULqWrT.png\" alt=\"部署项目\"></p>\n<p>选择<strong>Git部署</strong>：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULqgx0.png\" alt=\"Git部署\"></p>\n<p>选择<strong>手动部署</strong>：在Leancloud云引擎设置界面，填写代码库并保存：<code>https://github.com/DesertsP/Valine-Admin.git</code></p>\n<ul>\n<li>注意：直接复制填上去就行，不是要自己建一个类似的代码仓库，另外注意这个链接是否有变动</li>\n</ul>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULqRMV.png\" alt=\"手动部署\"></p>\n<p>配置完毕并部署如下</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/ULqc2q.png\" alt=\"部署完毕\"></p>\n<h5 id=\"设置环境变量以及Web二级域名\"><a href=\"#设置环境变量以及Web二级域名\" class=\"headerlink\" title=\"设置环境变量以及Web二级域名\"></a>设置环境变量以及Web二级域名</h5><p>在设置页面，设置<strong>环境变量</strong>以及 <strong>Web 二级域名</strong>。先后顺序没什么影响，不过可以先设置 Web 二级域名，需要实名认证，自己认证一下。</p>\n<blockquote>\n<p><strong>注</strong>：这里如果是使用国内版本的话，二级域名配置一直失败。</p>\n</blockquote>\n<p>Web 二级域名用于评论后台管理，如<code>https://gty.avosapps.us</code></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UO3wa6.png\" alt=\"二级域名\"></p>\n<p>环境变量必填参数务必正确设置：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UOtK4P.png\" alt=\"环境变量\"></p>\n<p>这里虽然部分是选填的，但是个人建议都填上吧，当然首先要填对，填错了那就没用了。</p>\n<p>SMTP_SERVICE建议用QQ，目前我用的QQ邮箱没有任何问题，163邮箱在我设置的过程中似乎有不能发送邮件的问题，<br>应该是网易邮箱那边的限制所以无关你设置得对不对，Gmail似乎是因为被墙了会连接超时，其它我没试过。</p>\n<table>\n<thead>\n<tr>\n<th>环境变量</th>\n<th>示例</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SITE_NAME</td>\n<td>Deserts</td>\n<td>[必填]博客名称</td>\n</tr>\n<tr>\n<td>SITE_URL</td>\n<td><code>https://www.gaotianyang.top/</code></td>\n<td>[必填]首页地址</td>\n</tr>\n<tr>\n<td>SMTP_SERVICE</td>\n<td>QQ</td>\n<td>[新版支持]邮件服务提供商，支持 QQ、163、126、Gmail 以及 <a href=\"https://nodemailer.com/smtp/well-known/#supported-services\">更多</a></td>\n</tr>\n<tr>\n<td>SMTP_USER</td>\n<td><a href=\"mailto:xxxxxx@qq.com\">xxxxxx@qq.com</a></td>\n<td>[必填]SMTP登录用户</td>\n</tr>\n<tr>\n<td>SMTP_PASS</td>\n<td>ccxxxxxxxxch</td>\n<td>[必填]SMTP登录密码（QQ邮箱需要获取独立密码）</td>\n</tr>\n<tr>\n<td>SENDER_NAME</td>\n<td>mxy</td>\n<td>[必填]发件人</td>\n</tr>\n<tr>\n<td>SENDER_EMAIL</td>\n<td><a href=\"mailto:xxxxxx@qq.com\">xxxxxx@qq.com</a></td>\n<td>[必填]发件邮箱[建议]和SMTP_USER一致</td>\n</tr>\n<tr>\n<td>ADMIN_URL</td>\n<td><code>https://xxx.avosapps.us/</code></td>\n<td>[建议]Web主机二级域名，用于自动唤醒</td>\n</tr>\n<tr>\n<td>BLOGGER_EMAIL</td>\n<td><a href=\"mailto:xxxxxx@qq.com\">xxxxxx@qq.com</a></td>\n<td>[可选]博主通知收件地址，默认使用SENDER_EMAIL</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>注</strong>：环境变量有任何更改都需要重启应用才能生效（云引擎&gt;实例&gt;设置&gt;重启）</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UOtuNt.png\" alt=\"环境变量\"></p>\n<h5 id=\"评论管理\"><a href=\"#评论管理\" class=\"headerlink\" title=\"评论管理\"></a>评论管理</h5><p>访问设置的二级域名<code>https://二级域名.avosapps.us/sign-up</code>，<br>注册管理员登录信息，如：<code>https://gty.avosapps.us/sign-up</code></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UOtnAI.png\" alt=\"注册\"></p>\n<blockquote>\n<p><strong>注</strong>：使用原版Valine如果遇到注册页面不显示直接跳转至登录页的情况，请手动删除_User表中的全部数据。</p>\n</blockquote>\n<p>管理界面如下</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/23/UOteHA.png\" alt=\"管理\"></p>\n<h5 id=\"设置定时任务\"><a href=\"#设置定时任务\" class=\"headerlink\" title=\"设置定时任务\"></a>设置定时任务</h5><p>进入<strong>云引擎&gt;定时任务</strong>，创建定时器，创建两个定时任务。</p>\n<ul>\n<li>半小时自动唤醒</li>\n</ul>\n<p>选择self-wake云函数，Cron表达式为<code>0 0/30 7-23 * * ?</code>，表示每天早7点到晚23点每隔30分钟访问云引擎，确定环境变量ADMIN_URL设置正确：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/24/Ujm1oD.png\" alt=\"自动唤醒\"></p>\n<ul>\n<li>八点叫我发邮件</li>\n</ul>\n<p>选择resend-mails云函数，Cron表达式为<code>0 0 8 * * ?</code>，表示每天早8点检查过去24小时内漏发的通知邮件并补发：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/24/Ujm8Fe.png\" alt=\"定时检查\"></p>\n<p>至此 <code>Valine Admin</code> 已经可以正常工作，更多以下是可选的进阶<strong>配置</strong></p>\n<h4 id=\"邮件通知模板\"><a href=\"#邮件通知模板\" class=\"headerlink\" title=\"邮件通知模板\"></a>邮件通知模板</h4><p>这一部分可选，懒得折腾可以到此为止！</p>\n<p>邮件通知模板在<strong>云引擎环境变量</strong>中设定，可自定义通知邮件标题及内容模板。</p>\n<p>邮件通知包含两种，分别是“<strong>被@通知</strong>”和“<strong>博主通知</strong>”，这两种模板都可以完全自定义。默认使用经典的蓝色风格模板（样式来源未知）。</p>\n<table>\n<thead>\n<tr>\n<th>环境变量</th>\n<th>示例</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>MAIL_TEMPLATE_ADMIN</td>\n<td><code>见下文</code></td>\n<td>[可选]<strong>博主邮件通知</strong>内容模板(别人在你博客评论后，邮箱通知显示的模板)</td>\n</tr>\n<tr>\n<td>MAIL_SUBJECT_ADMIN</td>\n<td>${SITE_NAME}上有新评论了</td>\n<td>[可选]<strong>博主邮件通知</strong>主题模板</td>\n</tr>\n<tr>\n<td>MAIL_TEMPLATE</td>\n<td><code>见下文</code></td>\n<td>[可选]<strong>被@通知</strong>邮件内容模板(别人回复评论后，邮箱显示的模板)</td>\n</tr>\n<tr>\n<td>MAIL_SUBJECT</td>\n<td>您在{SITE_NAME}上的评论收到了回复</td>\n<td>[可选]<strong>被@通知</strong>邮件主题（标题）模板</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"默认MAIL-TEMPLATE-ADMIN\"><a href=\"#默认MAIL-TEMPLATE-ADMIN\" class=\"headerlink\" title=\"默认MAIL_TEMPLATE_ADMIN\"></a>默认<strong>MAIL_TEMPLATE_ADMIN</strong></h5><ul>\n<li>默认<strong>被@通知邮件内容模板</strong>：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;&quot;</span>&gt;</span>您在<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none;color: #12ADDB;&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>$&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>上的评论有了新的回复<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;padding:0 12px 0 12px;margin-top:18px&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>$&#123;NICK&#125;<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span>回复说：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;&quot;</span>&gt;</span> $&#123;COMMENT&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>您可以点击<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;POST_URL&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>查看回复的完整內容<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>，欢迎再次光临<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>$&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>。<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"默认MAIL-TEMPLATE\"><a href=\"#默认MAIL-TEMPLATE\" class=\"headerlink\" title=\"默认MAIL_TEMPLATE\"></a>默认<strong>MAIL_TEMPLATE</strong></h5><ul>\n<li>默认博主通知邮件内容模板：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;&quot;</span>&gt;</span>您在<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none;color: #12ADDB;&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>$&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>上的文章有了新的评论<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>$&#123;NICK&#125;<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span>回复说：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;&quot;</span>&gt;</span> $&#123;COMMENT&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>您可以点击<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;POST_URL&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>查看回复的完整內容<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>博主通知邮件模板中的可用变量与@通知中的基本一致，注意：<code>PARENT_NICK</code> 和 <code>PARENT_COMMENT</code> 变量不再可用。</p>\n<p>效果如图：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/24/UjgJhT.png\" alt=\"默认邮件\"></p>\n<h5 id=\"彩虹风MAIL-TEMPLATE\"><a href=\"#彩虹风MAIL-TEMPLATE\" class=\"headerlink\" title=\"彩虹风MAIL_TEMPLATE\"></a>彩虹风<strong>MAIL_TEMPLATE</strong></h5><ul>\n<li>彩虹风格的通知邮件内容模板如下：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:&#x27;Century Gothic&#x27;,&#x27;Trebuchet MS&#x27;,&#x27;Hiragino Sans GB&#x27;,微软雅黑,&#x27;Microsoft Yahei&#x27;,Tahoma,Helvetica,Arial,&#x27;SimSun&#x27;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;</span>&gt;</span>您在<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none;color: #ffffff;&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>上的留言有新回复啦！<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin:40px auto;width:90%&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>$&#123;NICK&#125; 给您的回复如下：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;</span>&gt;</span>$&#123;COMMENT&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>您可以点击<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;POST_URL&#125;#comments&quot;</span>&gt;</span>查看回复的完整內容<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>，欢迎再次光临<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"css\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:link</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;<span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:visited</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;<span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;<span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:active</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>为方便修改我把上面的模板格式化了</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:&#x27;Century Gothic&#x27;,&#x27;Trebuchet MS&#x27;,&#x27;Hiragino Sans GB&#x27;,微软雅黑,&#x27;Microsoft Yahei&#x27;,Tahoma,Helvetica,Arial,&#x27;SimSun&#x27;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;</span>&gt;</span>您在<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none;color: #ffffff;&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>上的留言有新回复啦！<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin:40px auto;width:90%&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>$&#123;NICK&#125; 给您的回复如下：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;</span>&gt;</span>$&#123;COMMENT&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>您可以点击<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;POST_URL&#125;#comments&quot;</span>&gt;</span>查看回复的完整內容<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>，欢迎再次光临<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:link</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:visited</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:active</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>彩虹风格的通知邮件内容模板</li>\n</ul>\n<h5 id=\"彩虹风MAIL-TEMPLATE-ADMIN\"><a href=\"#彩虹风MAIL-TEMPLATE-ADMIN\" class=\"headerlink\" title=\"彩虹风MAIL_TEMPLATE_ADMIN\"></a>彩虹风<strong>MAIL_TEMPLATE_ADMIN</strong></h5><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:&#x27;Century Gothic&#x27;,&#x27;Trebuchet MS&#x27;,&#x27;Hiragino Sans GB&#x27;,微软雅黑,&#x27;Microsoft Yahei&#x27;,Tahoma,Helvetica,Arial,&#x27;SimSun&#x27;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;</span>&gt;</span>您在<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none;color: #ffffff;&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>上的文章有了新的评论<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin:40px auto;width:90%&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>$&#123;NICK&#125; 给您的回复如下：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;</span>&gt;</span>$&#123;COMMENT&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>您可以点击<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;POST_URL&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>查看回复的完整內容<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>，欢迎再次光临<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"css\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:link</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;<span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:visited</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;<span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;<span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:active</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>为方便修改我把上面的模板格式化了</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:&#x27;Century Gothic&#x27;,&#x27;Trebuchet MS&#x27;,&#x27;Hiragino Sans GB&#x27;,微软雅黑,&#x27;Microsoft Yahei&#x27;,Tahoma,Helvetica,Arial,&#x27;SimSun&#x27;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;</span>&gt;</span>您在<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none;color: #ffffff;&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>上的文章有了新的评论<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin:40px auto;width:90%&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>$&#123;NICK&#125; 给您的回复如下：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;</span>&gt;</span>$&#123;COMMENT&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>您可以点击<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;POST_URL&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>查看回复的完整內容<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>，欢迎再次光临<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration:none; color:#12addb&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:link</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:visited</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:active</span>&#123;<span class=\"attribute\">text-decoration</span>:none&#125;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>效果如图：</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/27/aiJs58.png\" alt=\"彩虹邮件\"></p>\n<ul>\n<li>通知模板中的可用变量如下：</li>\n</ul>\n<blockquote>\n<p><strong>注</strong>：(这是邮件模板变量，虽然一眼望去感觉，变量名与云引擎环境变量名很接近但还是有区别的，请勿与云引擎环境变量混淆)</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>环境变量</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SITE_NAME</td>\n<td>博客名称</td>\n</tr>\n<tr>\n<td>SITE_URL</td>\n<td>博客首页地址</td>\n</tr>\n<tr>\n<td>POST_URL</td>\n<td>文章地址（完整路径）</td>\n</tr>\n<tr>\n<td>PARENT_NICK</td>\n<td>[不可用]收件人昵称（被@者，父级评论人）</td>\n</tr>\n<tr>\n<td>PARENT_COMMENT</td>\n<td>[不可用]父级评论内容</td>\n</tr>\n<tr>\n<td>NICK</td>\n<td>新评论者昵称</td>\n</tr>\n<tr>\n<td>COMMENT</td>\n<td>新评论内容</td>\n</tr>\n</tbody>\n</table>\n<p>有需求代码部分可以自定义，没有需求的话直接复制<strong>博主邮件通知</strong>代码到<code>MAIL_TEMPLATE_ADMIN</code>，<br>复制<strong>被@通知代码</strong>到<code>MAIL_TEMPLATE</code>，保存即可。</p>\n<blockquote>\n<p><strong>注</strong>：修改了环境变量需要重启实例。</p>\n</blockquote>\n<p>至此 <code>Valine Admin</code>的邮箱提醒 已经可以正常工作</p>\n<h3 id=\"Gitalk\"><a href=\"#Gitalk\" class=\"headerlink\" title=\"Gitalk\"></a>Gitalk</h3><p>可以选择gitment和gitalk评论功能，但是gitment没有弄出来，可能是停服了。</p>\n<p>Gitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件</p>\n<p>参考<a href=\"https://gitalk.github.io/\">Demo</a></p>\n<h4 id=\"注册Gitalk应用\"><a href=\"#注册Gitalk应用\" class=\"headerlink\" title=\"注册Gitalk应用\"></a>注册Gitalk应用</h4><p>先要有一个自己的github账号，登录自己的github账户，点击头像&gt;&gt;Settings&gt;&gt;Developer settings&gt;&gt;New OAuth App，或点击<a href=\"https://github.com/settings/applications/new\">注册</a></p>\n<p><img src=\"https://s1.ax1x.com/2020/07/21/UIQg4x.png\" alt=\"注册\"></p>\n<ul>\n<li>Application name：可以随意填写</li>\n<li>Homepage URL：个人博客地址（域名）</li>\n<li>Application description：可填可不填，不是关键，若填，可填个人博客的相关描述</li>\n<li>Authorization callback URL：个人博客地址（域名）</li>\n</ul>\n<h4 id=\"获取Client-ID跟Client-Secret\"><a href=\"#获取Client-ID跟Client-Secret\" class=\"headerlink\" title=\"获取Client ID跟Client Secret\"></a>获取Client ID跟Client Secret</h4><p>一切设置完成之后点击Register application，注册完成后，<br>会出现两个关键信息（个人博客配置评论功能之关键，就不放图了）</p>\n<p>Client ID：<br>Client Secret：</p>\n<h4 id=\"配置gitalk\"><a href=\"#配置gitalk\" class=\"headerlink\" title=\"配置gitalk\"></a>配置gitalk</h4><p>在<code>yilia/_config.yml</code>文件中配置代码：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#6、配置gitalk</span><br><span class=\"line\">gitalk:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  client_id: OAuth application注册成功获得</span><br><span class=\"line\">  client_secret: OAuth application注册成功获得</span><br><span class=\"line\">  repo: 存储博客评论的仓库地址，可以是存储博客的仓库</span><br><span class=\"line\">  owner: github账户名</span><br><span class=\"line\">  admin: github账户名</span><br></pre></td></tr></table></figure>\n<p>下载gitalk项目，点这里</p>\n<p>拷贝<code>gitalk/dist/</code>目录下的<code>gitalk.css</code>和<code>gitalk.min.js</code>到<code>yilia/source/lib/gitalk</code>目录（没有的话新建文件）</p>\n<p>在<code>theme/yilia/layout/_partial/post</code>文件夹下新建文件<code>gitalk.ejs</code>，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;gitalk&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;gitalk-container&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> gitalk = <span class=\"keyword\">new</span> Gitalk(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            clientID: <span class=\"string\">&#x27;&lt;%=theme.gitalk.client_id%&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            clientSecret: <span class=\"string\">&#x27;&lt;%=theme.gitalk.client_secret%&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            repo: <span class=\"string\">&#x27;&lt;%=theme.gitalk.repo%&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            owner: <span class=\"string\">&#x27;&lt;%=theme.gitalk.owner%&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            admin: [<span class=\"string\">&#x27;&lt;%=theme.gitalk.admin%&gt;&#x27;</span>],</span></span><br><span class=\"line\"><span class=\"javascript\">            id: md5(location.pathname),      <span class=\"comment\">// Ensure uniqueness and length less than 50</span></span></span><br><span class=\"line\"><span class=\"javascript\">            distractionFreeMode: <span class=\"literal\">false</span>  <span class=\"comment\">// Facebook-like distraction free mode</span></span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        gitalk.render(<span class=\"string\">&#x27;gitalk-container&#x27;</span>)</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在<code>yilia/source-src/css/comment.scss</code>文件中添加代码：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#disqus_thread</span>, <span class=\"selector-class\">.duoshuo</span>, <span class=\"selector-class\">.cloud-tie-wrapper</span>, <span class=\"selector-id\">#SOHUCS</span>, <span class=\"selector-id\">#gitment-ctn</span>, <span class=\"selector-id\">#gitalk-container</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">30px</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">    <span class=\"attribute\">min-height</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#SOHUCS</span> &#123;</span><br><span class=\"line\">    <span class=\"selector-id\">#SOHU_MAIN</span> <span class=\"selector-class\">.module-cmt-list</span> <span class=\"selector-class\">.block-cont-gw</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> dashed <span class=\"number\">#c8c8c8</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改源文件重新build。上述资源对应源文件为 <code>yilia/source-src/css/comment.scss</code>，按照如下方式build</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd 到 yilia 目录下</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run dev</span><br><span class=\"line\">npm run dist</span><br></pre></td></tr></table></figure>\n<p>在<code>yilia/layout/_partial/article.ejs</code>文件中添加代码：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% if (!index &amp;&amp; theme.gitalk.enable &amp;&amp; post.comments)&#123; %&gt;</span><br><span class=\"line\">&lt;%- partial(&#x27;post/gitalk&#x27;, &#123;</span><br><span class=\"line\">    key: post.slug,</span><br><span class=\"line\">    title: post.title,</span><br><span class=\"line\">    url: config.url+url_for(post.path)</span><br><span class=\"line\">  &#125;) %&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<p>在<code>yilia/layout/_partial/head.ejs</code>文件中添加代码：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% if (theme.gitalk.enable)&#123; %&gt;</span><br><span class=\"line\">  &lt;link rel=&quot;stylesheet&quot; href=&quot;/lib/gitalk/gitalk.css&quot;&gt;</span><br><span class=\"line\">  &lt;script src=&quot;/lib/gitalk/gitalk.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">  &lt;script src=&quot;/lib/gitalk/md5.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<p>最终效果如下</p>\n<p><img src=\"https://s1.ax1x.com/2020/07/21/UIqryd.png\" alt=\"评论\"></p>\n<h3 id=\"畅言\"><a href=\"#畅言\" class=\"headerlink\" title=\"畅言\"></a>畅言</h3><p>添加步骤</p>\n<h4 id=\"注册畅言账号\"><a href=\"#注册畅言账号\" class=\"headerlink\" title=\"注册畅言账号\"></a>注册畅言账号</h4><p>前往 畅言官网 注册,注册成功后，按照官网提示，填好东西后，注意填写备案信息。</p>\n<h4 id=\"获取appid跟appkey\"><a href=\"#获取appid跟appkey\" class=\"headerlink\" title=\"获取appid跟appkey\"></a>获取appid跟appkey</h4><p>登录畅言后台，获取自己的appid跟appkey</p>\n<h4 id=\"配置畅言\"><a href=\"#配置畅言\" class=\"headerlink\" title=\"配置畅言\"></a>配置畅言</h4><p>修改<code>themes/yilia/_config.yml</code>,把你上述得到的appid跟appkey填写到如下位置:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">widgets:</span><br><span class=\"line\">   - popular_posts</span><br><span class=\"line\"></span><br><span class=\"line\">#2、网易云跟帖</span><br><span class=\"line\">wangyiyun: false</span><br><span class=\"line\"></span><br><span class=\"line\">#3、畅言</span><br><span class=\"line\">changyan_appid: &#x27;&#x27;        //appid添到这里</span><br><span class=\"line\">changyan_conf: &#x27;&#x27;         //appkey添到这里</span><br></pre></td></tr></table></figure>\n<p>这样就配置结束了，之后<code>hexo clean</code>,<code>hexo g</code>,<code>hexo d</code> 就ok了</p>\n<h3 id=\"来必力\"><a href=\"#来必力\" class=\"headerlink\" title=\"来必力\"></a>来必力</h3><h4 id=\"注册来必力账号\"><a href=\"#注册来必力账号\" class=\"headerlink\" title=\"注册来必力账号\"></a>注册来必力账号</h4><p>打开来必力<a href=\"https://livere.com\">官网</a></p>\n<p>按套路注册（有可能注册上面要花费点功夫）。（貌似需要科学上网？之前没科学上网好像登录界面显示不了）。</p>\n<h4 id=\"主题配置添加来必力\"><a href=\"#主题配置添加来必力\" class=\"headerlink\" title=\"主题配置添加来必力\"></a>主题配置添加来必力</h4><p>修改 hexo 博客目录的 <code>theme/yilia/_config.yml</code> 文件，增加如下配置：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># livere 来必力。将 false 改为自己的uid则启用该评论系统。</span><br><span class=\"line\">livere_uid: false</span><br></pre></td></tr></table></figure>\n<h4 id=\"新增来必力评论代码文件\"><a href=\"#新增来必力评论代码文件\" class=\"headerlink\" title=\"新增来必力评论代码文件\"></a>新增来必力评论代码文件</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 来必力City版安装代码 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;lv-container&quot;</span> <span class=\"attr\">data-id</span>=<span class=\"string\">&quot;city&quot;</span> <span class=\"attr\">data-uid</span>=<span class=\"string\">&quot;&lt;%=theme.livere_uid%&gt;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d, s</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> j, e = d.getElementsByTagName(s)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> LivereTower === <span class=\"string\">&#x27;function&#x27;</span>) &#123; <span class=\"keyword\">return</span>; &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    j = d.createElement(s);</span><br><span class=\"line\"><span class=\"javascript\">    j.src = <span class=\"string\">&#x27;https://cdn-city.livere.com/js/embed.dist.js&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    j.async = <span class=\"literal\">true</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    e.parentNode.insertBefore(j, e);</span><br><span class=\"line\"><span class=\"javascript\">&#125;)(<span class=\"built_in\">document</span>, <span class=\"string\">&#x27;script&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">noscript</span>&gt;</span> 为正常使用来必力评论功能请激活JavaScript<span class=\"tag\">&lt;/<span class=\"name\">noscript</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- City版安装代码已完成 --&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"修改-article-ejs\"><a href=\"#修改-article-ejs\" class=\"headerlink\" title=\"修改 article.ejs\"></a>修改 article.ejs</h4><p>修改 <code>yilia/layout/_partial/article.ejs</code> 文件，在 <code>&lt;% if (!index &amp;&amp; post.comments)&#123; %&gt;</code> 后的任意一个评论代码前或后插入如下代码：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%if (theme.livere_uid) &#123; %&gt;</span><br><span class=\"line\">    &lt;%- partial(&#x27;post/livere&#x27;) %&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<p>如上三步，修改完成。如果要启用，修改主题的 <code>_config.yml</code> 文件，将 <code>livere_uid</code> 的值改为自己的来必力 <code>uid</code> 即可，注意冒号之后有空格。</p>\n<p><a href=\"/archives/20200717e10c0cde/#添加评论系统\">返回yilia主题进阶设置</a></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://blog.csdn.net/qq_43827595/article/details/101450966\">hexo+yilia+Valine添加评论系统</a></li>\n<li><a href=\"https://github.com/litten/hexo-theme-yilia/pull/646\">新增对Valine评论系统的支持 #646</a></li>\n<li><a href=\"https://deserts.io/valine-admin-document/\">Valine Admin 配置手册</a></li>\n<li><a href=\"https://blog.csdn.net/Lott0419/article/details/106311866\">Hexo+yilia+Valine添加评论系统、LeanCloud、创建应用、部署云引擎</a></li>\n<li><a href=\"https://www.pianshen.com/article/6042218776/\">hexo+yilia+Gitalk添加评论系统</a></li>\n<li><a href=\"https://my.oschina.net/u/4383702/blog/3678467\">hexo+yilia+Gitalk添加评论系统-样式调整</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40910541/article/details/80659127\">hexo+yilia+畅言添加评论系统</a></li>\n<li><a href=\"https://blog.csdn.net/qwerty200696/article/details/78836421\">hexo+yilia+来必力添加评论系统-注册</a></li>\n<li><a href=\"https://blog.csdn.net/maosidiaoxian/article/details/90902494\">hexo+yilia+来必力添加评论系统</a></li>\n<li><a href=\"https://www.cnblogs.com/liuurick/p/10713709.html\">hexo+yilia+Gitment添加评论系统</a></li>\n</ul>"},{"title":"icestark的最佳实践","abbrlink":"5b56e29a","date":"2021-01-11T09:44:43.000Z","toc":true,"_content":"\n![首屏图](https://s3.ax1x.com/2021/01/12/sG4eTP.jpg)\n\n<!-- more -->\n\n本文演示如何快速创建微前端的应用及改造已有应用接入微前端，基座创建使用的是 icejs，微应用是使用的 icejs、create-react-app分别创建。\n\n> [项目demo仓库地址](https://github.com/mitudegaoyang/icestark-demo)\n> [项目demo预览地址](https://www.gaotianyang.top/icestark-demo)\n\n## 环境搭建\n\n创建项目，并拉取到本地。在根目录分别创建package.json、和packages文件夹。\n\n初始化package.json将项目对应名称填写完整\n\n```json\n{\n    \"name\": \"icestark-demo\",\n    \"private\": true,\n    \"workspaces\": [\n        \"packages/icestark-layout\",\n        \"packages/icestark-child-icejs\",\n        \"packages/icestark-child-react\",\n        \"packages/icestark-child-vue\"\n    ]\n}\n```\n\n进入项目目录`packages`\n\n```shell\ncd packages/\n```\n\n## 初始化主应用\n\n```shell\n# 基于 React 的主应用\n$ npm init ice icestark-layout @icedesign/stark-layout-scaffold\n# 或者基于 Vue 的主应用\n$ npm init ice icestark-layout @vue-materials/icestark-layout-app\n```\n\n> 注意需要将主应用中`package.json`的name改为`icestark-layout`\n\n## 安装依赖\n\n回到根目录执行yarn命令\n\n```shell\n# 安装依赖\n$ yarn\n# 预览主应用\n$ yarn workspaces icestark-layout start\n```\n\n即可通过浏览器预览整个应用：\n\n![主应用预览](https://s3.ax1x.com/2021/01/28/ypQBDK.gif)\n\n打开主应用 `src/app.tsx` 即可看到默认注册的几个微应用。\n\n![默认注册微应用](https://s3.ax1x.com/2021/01/28/yp1rfH.png)\n\n## 初始化微应用\n\n### 基于icejs初始化微应用\n\n进入项目目录`packages`\n\n```shell\n# 基于 React 的微应用\n$ npm init ice icestark-child-icejs @icedesign/stark-child-scaffold\n# 基于 Vue 的微应用\n$ npm init ice icestark-child-icejs @vue-materials/icestark-child-app\n\n# 回到根目录安装icejs微应用依赖 ./icestark-demo/\n\n# 安装依赖\n$ yarn\n# 预览微应用\n$ yarn workspaces icestark-child-icejs start\n```\n\n> 注意这里也需要将微应用中`package.json`的name改为`icestark-child-icejs`\n\n可以在主应用的 `src/app.tsx` 中增加对应的微应用配置。\n\n如果不需要改造现有项目，可直接跳过基于create-react-app改造微应用和基于vue cli改造微应用。\n直接查看[微应用本地调试](/archives/202101115b56e29a/#微应用本地调试)。\n\n### 基于create-react-app改造微应用\n\n#### create-react-app创建react应用\n\n进入项目目录`packages`\n\n```shell\n# 使用npm初始化app\n$ npm create-react-app icestark-child-react --template typescript\n$ # 或者使用yarn初始化\n$ yarn create react-app icestark-child-react --template typescript\n\n# 在icestark-child-react引入ice/stark-app\n# ./icestark-demo/icestark-child-react/\n$ yarn add @ice/stark-app\n\n# 回到根目录安装react微应用依赖\n# ./icestark-demo/\n# 安装依赖\n$ yarn\n# 预览微应用\n$ yarn workspaces icestark-child-react start\n```\n\n> 更改微应用name为`icestark-child-react`\n\n此时会出现缺少babel-loader的报错提示\n\n![缺少babel-loader@8.1.0](https://s3.ax1x.com/2021/01/28/y9Ya4K.png)\n\n```shell\n# 在icestark-child-react引入babel-loader\n# ./icestark-demo/icestark-child-react/\n$ yarn add babel-loader@8.1.0\n```\n\n再次启动提示eslint版本不正确\n\n![缺少eslint^7.11.0](https://s3.ax1x.com/2021/01/28/y9N4mj.png)\n\n```shell\n# 在icestark-child-react引入eslint\n# ./icestark-demo/icestark-child-react/\n$ yarn add eslint --dev\n```\n\n由于workspaces的依赖判断问题，导致运行icestark-child-react时，没有使用子项目中的eslint版本，此时需要将高版本的eslint存储到外层的公共node_modules中。\n\n修改根目录的package.json后再次执行yarn\n\n```json\n{\n    \"name\": \"icestark-demo\",\n    \"private\": true,\n    \"workspaces\": [\n        \"packages/icestark-layout\",\n        \"packages/icestark-child-icejs\",\n        \"packages/icestark-child-react\",\n        \"packages/icestark-child-vue\"\n    ],\n    \"devDependencies\": {\n        \"eslint\": \"^7.11.0\"\n    }\n}\n```\n\n#### 应用入口适配\n\n将 React 应用改造为微应用，仅仅只需要导出对应的生命周期即可：\n\n修改微应用 `src/index.tsx` 的微应用入口\n\n```js\nimport ReactDOM from 'react-dom';\nimport { isInIcestark } from '@ice/stark-app';\nimport App from './App';\n\nexport function mount(props) {\n  const { container, customProps } = props;\n  ReactDOM.render(<App {...customProps} />, container);\n}\n\nexport function unmount(props) {\n  const { container } = props;\n  ReactDOM.unmountComponentAtNode(container);\n}\n\nif (isInIcestark()) {\n  console.log('app is running in framework app');\n} else {\n  ReactDOM.render(<App />, document.getElementById('ice-container'));\n}\n```\n\n### 基于vue cli改造微应用\n\n## 微应用本地调试\n\n### 本地调试icejs微应用\n\n单独微应用开发时只能看到自身的内容，无法关注到在主应用下的表现，这时候本地如果需要再启动一个主应用，\n开发起来就很繁琐。针对这种情况，我们推荐通过主应用的日常/线上环境调试本地微应用。\n\n查看微应用的js、css资源路径。\n\n![查看微应用js路径](https://s3.ax1x.com/2021/01/11/s8dUlF.png)\n![查看微应用css路径](https://s3.ax1x.com/2021/01/11/s8dhmd.png)\n\n在主应用的 `src/app.tsx` 中覆盖对应的微应用配置的路径\n\n![覆盖微应用路径](https://s3.ax1x.com/2021/01/11/s8djmj.png)\n\n此时打开主应用的对应微应用模块，会发现微应用没有正常显示，原因是微应用没有获取正确的basename。\n\n![微应用不显示](https://s3.ax1x.com/2021/01/11/s8Ba6S.png)\n\n参考[运行时配置](https://ice.work/docs/guide/basic/router#%E8%BF%90%E8%A1%8C%E6%97%B6%E9%85%8D%E7%BD%AE)\n\n在微应用 `src/app.ts` 中，我们可以配置路由的类型和基础路径等信息，具体配置如下：\n\n```js\nimport { runApp, IAppConfig } from 'ice';\n\nconst appConfig: IAppConfig = {\n  router: {\n    type: 'browser',\n    basename: '/seller',\n    fallback: `<div>loading...</div>`,\n    modifyRoutes: (routes) => {\n      return routes;\n    }\n  },\n  icestark: {\n    type: 'child',\n  },\n};\n\nrunApp(appConfig);\n```\n\n### 本地调试react微应用\n\n#### 定义基准路由\n\n正常情况下，注册微应用时会为每个微应用分配一个基准路由比如 `/waiter`，\n当前微应用的所有路由需要定义在基准路由之下，社区常见的路由库都可以通过参数非常简单的实现该功能。\n微应用可以通过 getBasename() API 获取自身的基准路由。\n\nReact 项目中使用 react-router-dom：\n\n```shell\n# 引入react-router-dom\n$ yarn add react-router-dom\n```\n\n修改icestark-child-react/src/App.tsx\n\n```js\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { getBasename, renderNotFound } from '@ice/stark-app';\nimport Home from './routes/Home'\nimport List from './routes/List'\nimport Detail from './routes/Detail'\nimport './App.css';\n\n// #原有代码\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// #因tslint规定<Route>的component必须是JSX而添加的改动\nfunction notFound(props: any) {\n  return (\n    <>\n      {renderNotFound()}\n    </>\n  )\n}\n\nfunction App(props: any) {\n  return (\n    <Router basename={getBasename()}>\n      <Switch>\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route exact path=\"/list\" component={List}></Route>\n        <Route exact path=\"/list/detail/:contractId\" component={Detail} />\n        <Route\n          component={notFound}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n```\n\n查看微应用的端口地址\n\n![查看微应用端口地址](https://s3.ax1x.com/2021/02/01/yZvbk9.png)\n\n在主应用的 src/app.tsx 中覆盖对应的微应用配置的路径\n\n![覆盖微应用路径](https://s3.ax1x.com/2021/02/01/yZx3pq.png)\n\n> 这里无法使用src获取到react微应用，需要使用entry来自动匹配微应用资源。\n\n## 路由跳转\n\n### 微应用内跳转\n\n#### 使用Link组件\n\n通过 `<Link />` 标签组件可实现路由跳转，使用方式：\n\n```js\nimport { Link } from 'ice';\n\nfunction Demo() {\n  return (\n    <div>\n      <Link to='/courses?sort=name' />\n\n      {/* 可以携带额外的数据 `state` 到路由中。 */}\n      <Link\n        to={{\n          pathname: '/courses',\n          search: '?sort=name',\n          hash: '#the-hash',\n          state: { fromDashboard: true },\n        }}\n      />\n    </div>\n  )\n}\n```\n\n> 在示例项目中使用如下\n\n##### 修改详情页路由\n\n修改微应用 `src/routes.tsx` 的详情页路由\n\n```js\nimport { renderNotFound, isInIcestark } from '@ice/stark-app';\nimport BasicLayout from '@/layouts/BasicLayout';\nimport Detail from '@/pages/Detail';\nimport Home from '@/pages/Home';\nimport List from '@/pages/List';\nimport NotFound from '@/components/NotFound';\n\nconst routerConfig = [\n  {\n    path: '/',\n    component: BasicLayout,\n    children: [\n      {\n        path: '/',\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/list',\n        exact: true,\n        component: List,\n      },\n      {\n        path: '/list/detail/:contractId',\n        component: Detail,\n      },\n      {\n        // 微应用独立运行 404 路由渲染 NotFound 组件\n        component: isInIcestark() ? () => renderNotFound() : NotFound,\n      },\n    ],\n  },\n];\n\nexport default routerConfig;\n```\n\n##### 修改Link组件传参\n\n修改微应用 `src/list/index.tsx` 的列表页Link组件，添加传参\n\n```js\n<Table.Column\n  title=\"操作\"\n  dataIndex=\"detail\"\n  key=\"detail\"\n  width={200}\n  cell={(value, index, record) => (\n    <div>\n      <a className={styles.link} onClick={() => Message.success('暂不支持修改合同')}>\n        修改\n      </a>\n      <span className={styles.separator} />\n      <Link className={styles.link} to={`/list/detail/${data[index].id}`}>\n        查看\n      </Link>\n    </div>\n  )}\n/>\n```\n\n##### 详情页接收参数\n\n引入`useRouteMatch`并获取`contractId`\n\n![详情页接收参数](https://s3.ax1x.com/2021/01/12/sGzbE8.png)\n\n#### 使用 useHistory API\n\nuseHistory hook 用于获取 history 实例。\n\n```js\nimport { useHistory } from 'ice';\n\nfunction HomeButton() {\n  const history = useHistory();\n\n  function handleClick() {\n    history.push('/home');\n  }\n\n  return (\n    <button type='button' onClick={handleClick}>\n      Go home\n    </button>\n  );\n}\n```\n\n> 在示例项目中使用如下\n\n##### 详情页添加返回按钮\n\n在微应用的`src/detail/index.tsx`引入`useHistory`方法，声明返回方法并调用`useHistory`，将返回按钮传入`PageTitle`组件。\n\n![详情页添加返回按钮](https://s3.ax1x.com/2021/01/12/sJyR8s.png)\n\n改造微应用的`/src/components/PageTitle/index.tsx`文件，扩展`PageTitle`组件接收subTitle参数。\n\n```js\nimport React from 'react';\nimport styles from './index.module.scss';\n\n// 原组件\n// export default ({ title, subTitle }) => {\n//     <h5 className={styles.title}>\n//         <span>{title}</span>\n//         <span>{subTitle}</span>\n//     </h5>\n// };\n\nexport interface PageTitleProps {\n    title?: any;\n    subTitle?: any;\n}\n\nexport default function PageTitle(props: PageTitleProps) {\n    let { title, subTitle } = props;\n    return (\n        <h5 className={styles.title}>\n            <span>{title}</span>\n            <span className={styles.subTitle}>{subTitle}</span>\n        </h5>\n    );\n}\n```\n\n#### 使用 history API\n\n在微应用的`src/detail/index.tsx`引入`history`方法，声明返回方法并调用`history`，将返回按钮传入`PageTitle`组件。\n\n![详情页使用history跳转](https://s3.ax1x.com/2021/01/12/sYCU0I.png)\n\n### 微应用间跳转\n\n#### 使用 appHistory\n\n在 A 微应用里需要跳转到 B 微应用时，如果使用 react-router/vue-router 提供的 Link 组件，\n一般会强行在 path 上追加 basename，因此推荐使用 appHistory/AppLink 来跳转：\n\n注意：AppLink 仅支持在基于 React 的微应用中使用，appHistory 不限制微应用的框架类型\n\n```js\nimport React from 'react';\nimport { appHistory, AppLink } from '@ice/stark-app';\n\nexport default function FrameworkLayout() {\n  return (\n    <>\n      <span\n        onClick={() => {\n          appHistory.push('/seller/list');\n        }}\n      >\n        seller\n      </span>\n      <AppLink to=\"/waiter/list\">waiter</AppLink>\n    </>\n  );\n}\n```\n\n> 在示例项目中使用如下\n\n![微应用间跳转](https://s3.ax1x.com/2021/02/01/yeA8IK.png)\n\n![微应用间跳转](https://s3.ax1x.com/2021/02/01/yeEpFK.gif)\n\n#### 使用 AppLink\n\n> ~~直接使用ice中的AppLink会报错，需要自己封装个AppLink来跳转。~~\n\n示例在上个章节已介绍。\n\n##### 封装 AppLink\n\n在`src/utils/AppLink.tsx`封装\n\n```js\nimport * as React from \"react\";\n\nexport type AppLinkProps = {\n    to: string;\n    message?: string;\n    children?: React.ReactNode;\n} & React.AnchorHTMLAttributes<any>;\n\n// tslint:disable-next-line:variable-name\nconst AppLink: React.SFC<AppLinkProps> = (props: AppLinkProps) => {\n    const { to, message, children, ...rest } = props;\n    return (\n        <a\n            {...rest}\n            href={to}\n            onClick={(e) => {\n                e.preventDefault();\n                if (message && window.confirm(message) === false) {\n                    return false;\n                }\n\n                window.history.pushState(\n                    {\n                        forceRender: true\n                    },\n                    \"\",\n                    to\n                );\n            }}\n        >\n            {children}\n        </a>\n    );\n};\n\nexport default AppLink;\n```\n\n在`src/utils/index.tsx`声明`AppLink`\n\n```js\nexport { default as AppLink } from \"./AppLink\";\n```\n\n##### 调用 AppLink\n\n![详情页使用AppLink跳转](https://s3.ax1x.com/2021/01/12/sYF6je.png)\n\n## 微应用打包部署\n\n项目结构如下\n\n```text\nicestark-demo\n├─node_modules                 # 公共依赖文件\n├─docs                         # 项目部署后静态资源地址\n|    ├─subapp                  # 子项目静态资源包\n|    |   ├icestark-child-icejs # icejs子项目静态资源包\n|    |   ├icestark-child-react # creat-react-app子项目静态资源包\n|    |   ├icestark-child-vue   # vue cli子项目静态资源包\n|    ├─index.html              # 基座打包后入口文件\n├─.gitignore                   # 忽略文件\n├─README.md                    # 项目介绍\n├─package.json                 # 项目依赖\n├─packages                     # 项目文件\n|    ├─icestark-layout         # 基座\n|    |    ├─node_modules       # 子项目依赖文件\n|    ├─icestark-child-icejs    # icejs创建子项目\n|    ├─icestark-child-react    # creat-react-app创建子项目\n|    ├─icestark-child-vue      # vue cli创建子项目\n```\n\n### 微应用打包\n\n#### icejs微应用打包\n\n在项目根目录执行build命令\n\n```shell\n# 执行打包命令\n$ yarn workspace icestark-child-icejs build\n```\n\n执行完毕后，微应用目录下生成build文件夹。\n\n将其拷贝至根目录docs/subapp/icestark-child-icejs文件下\n\n#### react微应用打包\n\n在项目根目录执行build命令\n\n```shell\n# 执行打包命令\n$ yarn workspace icestark-child-react build\n```\n\n执行完毕后，微应用目录下生成build文件夹。\n\n将其拷贝至根目录docs/subapp/icestark-child-react文件下\n\n### 主应用连接部署后的微应用\n\n将项目推送至远端\n\n此时还无法获取到微应用资源，需将github仓库进行github page修改\n\n如下图所示\n\n![微应用部署](https://s3.ax1x.com/2021/02/02/ymf3ZV.gif)\n\n修改后`http://www.gaotianyang.top/icestark-demo/`地址就指向了项目根目录的docs文件夹\n\n修改主应用的 src/app.tsx 中覆盖对应的微应用配置的路径\n\n![微应用路径配置](https://s3.ax1x.com/2021/02/02/ymhOhD.png)\n\n## 主应用打包部署\n\n在项目根目录执行build命令\n\n```shell\n# 执行打包命令\n$ yarn workspace icestark-layout build\n```\n\n将build文件复制到项目docs根目录\n\n可访问[https://www.gaotianyang.top/icestark-demo/](https://www.gaotianyang.top/icestark-demo/)进行查看\n\n> 注意这里打包需要解决资源获取路径为相对路径的问题。修改主应用的build.json的publicPath，将资源路径改为相对路径即可。\n\n```json\n{\n  \"publicPath\": \".\",\n  \"plugins\": [\n    [\n      \"build-plugin-icestark\",\n      {\n        \"uniqueName\": \"frameworkJsonp\"\n      }\n    ],\n    [\n      \"build-plugin-fusion\",\n      {\n        \"themePackage\": \"@alifd/theme-design-pro\",\n        \"themeConfig\": {\n          \"nextPrefix\": \"next-icestark-\"\n        }\n      }\n    ],\n    [\n      \"build-plugin-moment-locales\",\n      {\n        \"locales\": [\n          \"zh-cn\"\n        ]\n      }\n    ]\n  ]\n}\n```\n\n### 主应用配置二级路由\n\n因为项目部署在github page中，项目地址为二级域名`https://www.gaotianyang.top/icestark-demo`\n因此项目中的路由配置及跳转信息需要额外配置`icestark-demo`方可正常显示。\n\n解决方案如下\n\n#### 获取应用状态并存储二级路由\n\n在主应用获取当前应用是处于预览还是打包，并将路由存储在localStorage中。\n\n在`icestark-demo/packages/icestark-layout/src/app.tsx`修改微应用path\n\n```js\nlocalStorage.setItem(\"baseUrl\", process.env.NODE_ENV === \"development\" ? \"\" : \"/icestark-demo\")\n\nconst baseUrl = localStorage.baseUrl\n```\n\n![微应用path配置二级路由](https://s3.ax1x.com/2021/02/02/ynLxhR.png)\n\n#### 修改主应用路由\n\n在`icestark-demo/packages/icestark-layout/src/routes.ts`修改主应用路由\n\n![主应用路由配置二级路由](https://s3.ax1x.com/2021/02/02/ynOLxP.png)\n\n#### 修改主应用菜单\n\n在`icestark-demo/packages/icestark-layout/src/layouts/BasicLayout/menuConfig.ts`修改主应用菜单\n\n![主应用菜单配置二级路由](https://s3.ax1x.com/2021/02/02/ynOLxP.png)\n\n#### 修改微应用跳转\n\n![微应用跳转路径](https://s3.ax1x.com/2021/02/02/ynXRij.png)\n\n## 问题汇总\n\n### GitHub-page 刷新找不到二级域名下的路由地址\n\n因为GitHub-page只能存放静态资源。并且不支持.htaccess，\n所以用webpack构建出来的单页应用，\n直接将dist文件推送到GitHub-page分支，\n在切换路由之后，手动刷新是会出现404的。\n\n![找不到项目](https://s3.ax1x.com/2021/02/05/yGrZZR.png)\n\n处理方法\n\n* 给站点根目录添加404.html\n\n一般也就是dist目录下（GitHub-page找不到的路径会自动访问这个404.html）\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <script>\n      sessionStorage.redirect = location.href;\n    </script>\n    <meta http-equiv=\"refresh\" content=\"0;URL='/icestark-demo/'\">\n  </head>\n  <body>\n      \n  </body>\n</html>\n```\n\n> 这里使用的知识点是`<meta http-equiv=\"refresh\" content=\"0;URL='/icestark-demo/'\">`\n\n常见的几种使用场景\n\n```html\n<!-- 这个表示当前页面每5秒钟刷一下，刷一下~ -->\n<meta http-equiv=\"refresh\" content=\"5\">\n\n<!-- 这个表示当前页面2秒后跳到首页 -->\n<meta http-equiv=\"refresh\" content=\"2; url='/'\">\n\n<!-- 页面直接跳转到腾讯网 -->\n<meta http-equiv=\"refresh\" content=\"0; url='http://www.qq.com/'\">\n```\n\n* 给index.html添加重定向逻辑\n\n```html\n<script>\n  // 这段代码要放在其他js的前面\n  (function(){\n    var redirect = sessionStorage.redirect;\n    delete sessionStorage.redirect;\n    if (redirect && redirect != location.href) {\n      history.replaceState(null, null, redirect);\n    }\n  })();\n</script>\n```\n\n### @ice/stark^2.0.0版本问题\n\n当项目安装的@ice/stark是2.1.0时，会出现entry的地址获取js、css路径不正确。\n此时需将版本降至2.0.2即可修复。可通过复制并整体替换处理。\n\n处理方法\n\n* 先正常yarn项目\n* 打开根目录的node_modules/@ice/stark\n* 将2.0.2版本的ice-stark整体替换至改目录下即可\n\n## 参考资料\n\n* [icestark快速上手](https://ice.work/docs/icestark/start)\n* [路由运行时配置](https://ice.work/docs/guide/basic/router#%E8%BF%90%E8%A1%8C%E6%97%B6%E9%85%8D%E7%BD%AE)\n* [Link](https://ice.work/docs/guide/basic/api#Link)\n* [useHistory](https://ice.work/docs/guide/basic/api#useHistory)\n* [history](https://ice.work/docs/guide/basic/api#history)\n* [微应用间跳转](https://ice.work/docs/icestark/guide/child-app#%E5%BE%AE%E5%BA%94%E7%94%A8%E9%97%B4%E8%B7%B3%E8%BD%AC)\n* [主应用打包后资源改为相对路径](https://ice.work/docs/guide/basic/build#publicPath)\n* [框架API-环境变量](https://ice.work/docs/guide/basic/api#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F)\n* [单页应用在gh-pages动态路由刷新后404解决方案](https://segmentfault.com/a/1190000012951274)\n* [使用meta实现页面的定时刷新或跳转](https://www.zhangxinxu.com/wordpress/2015/03/meta-http-equiv-refresh-content/)\n","source":"_posts/icestark的最佳实践.md","raw":"---\ntitle: icestark的最佳实践\nabbrlink: 5b56e29a\ndate: 2021-01-11 17:44:43\ntags:\n  - 技术积累\n  - 前端\n  - 微服务\ncategories:\n  - 技术积累\n  - 前端\n  - 微服务\ntoc: true\n---\n\n![首屏图](https://s3.ax1x.com/2021/01/12/sG4eTP.jpg)\n\n<!-- more -->\n\n本文演示如何快速创建微前端的应用及改造已有应用接入微前端，基座创建使用的是 icejs，微应用是使用的 icejs、create-react-app分别创建。\n\n> [项目demo仓库地址](https://github.com/mitudegaoyang/icestark-demo)\n> [项目demo预览地址](https://www.gaotianyang.top/icestark-demo)\n\n## 环境搭建\n\n创建项目，并拉取到本地。在根目录分别创建package.json、和packages文件夹。\n\n初始化package.json将项目对应名称填写完整\n\n```json\n{\n    \"name\": \"icestark-demo\",\n    \"private\": true,\n    \"workspaces\": [\n        \"packages/icestark-layout\",\n        \"packages/icestark-child-icejs\",\n        \"packages/icestark-child-react\",\n        \"packages/icestark-child-vue\"\n    ]\n}\n```\n\n进入项目目录`packages`\n\n```shell\ncd packages/\n```\n\n## 初始化主应用\n\n```shell\n# 基于 React 的主应用\n$ npm init ice icestark-layout @icedesign/stark-layout-scaffold\n# 或者基于 Vue 的主应用\n$ npm init ice icestark-layout @vue-materials/icestark-layout-app\n```\n\n> 注意需要将主应用中`package.json`的name改为`icestark-layout`\n\n## 安装依赖\n\n回到根目录执行yarn命令\n\n```shell\n# 安装依赖\n$ yarn\n# 预览主应用\n$ yarn workspaces icestark-layout start\n```\n\n即可通过浏览器预览整个应用：\n\n![主应用预览](https://s3.ax1x.com/2021/01/28/ypQBDK.gif)\n\n打开主应用 `src/app.tsx` 即可看到默认注册的几个微应用。\n\n![默认注册微应用](https://s3.ax1x.com/2021/01/28/yp1rfH.png)\n\n## 初始化微应用\n\n### 基于icejs初始化微应用\n\n进入项目目录`packages`\n\n```shell\n# 基于 React 的微应用\n$ npm init ice icestark-child-icejs @icedesign/stark-child-scaffold\n# 基于 Vue 的微应用\n$ npm init ice icestark-child-icejs @vue-materials/icestark-child-app\n\n# 回到根目录安装icejs微应用依赖 ./icestark-demo/\n\n# 安装依赖\n$ yarn\n# 预览微应用\n$ yarn workspaces icestark-child-icejs start\n```\n\n> 注意这里也需要将微应用中`package.json`的name改为`icestark-child-icejs`\n\n可以在主应用的 `src/app.tsx` 中增加对应的微应用配置。\n\n如果不需要改造现有项目，可直接跳过基于create-react-app改造微应用和基于vue cli改造微应用。\n直接查看[微应用本地调试](/archives/202101115b56e29a/#微应用本地调试)。\n\n### 基于create-react-app改造微应用\n\n#### create-react-app创建react应用\n\n进入项目目录`packages`\n\n```shell\n# 使用npm初始化app\n$ npm create-react-app icestark-child-react --template typescript\n$ # 或者使用yarn初始化\n$ yarn create react-app icestark-child-react --template typescript\n\n# 在icestark-child-react引入ice/stark-app\n# ./icestark-demo/icestark-child-react/\n$ yarn add @ice/stark-app\n\n# 回到根目录安装react微应用依赖\n# ./icestark-demo/\n# 安装依赖\n$ yarn\n# 预览微应用\n$ yarn workspaces icestark-child-react start\n```\n\n> 更改微应用name为`icestark-child-react`\n\n此时会出现缺少babel-loader的报错提示\n\n![缺少babel-loader@8.1.0](https://s3.ax1x.com/2021/01/28/y9Ya4K.png)\n\n```shell\n# 在icestark-child-react引入babel-loader\n# ./icestark-demo/icestark-child-react/\n$ yarn add babel-loader@8.1.0\n```\n\n再次启动提示eslint版本不正确\n\n![缺少eslint^7.11.0](https://s3.ax1x.com/2021/01/28/y9N4mj.png)\n\n```shell\n# 在icestark-child-react引入eslint\n# ./icestark-demo/icestark-child-react/\n$ yarn add eslint --dev\n```\n\n由于workspaces的依赖判断问题，导致运行icestark-child-react时，没有使用子项目中的eslint版本，此时需要将高版本的eslint存储到外层的公共node_modules中。\n\n修改根目录的package.json后再次执行yarn\n\n```json\n{\n    \"name\": \"icestark-demo\",\n    \"private\": true,\n    \"workspaces\": [\n        \"packages/icestark-layout\",\n        \"packages/icestark-child-icejs\",\n        \"packages/icestark-child-react\",\n        \"packages/icestark-child-vue\"\n    ],\n    \"devDependencies\": {\n        \"eslint\": \"^7.11.0\"\n    }\n}\n```\n\n#### 应用入口适配\n\n将 React 应用改造为微应用，仅仅只需要导出对应的生命周期即可：\n\n修改微应用 `src/index.tsx` 的微应用入口\n\n```js\nimport ReactDOM from 'react-dom';\nimport { isInIcestark } from '@ice/stark-app';\nimport App from './App';\n\nexport function mount(props) {\n  const { container, customProps } = props;\n  ReactDOM.render(<App {...customProps} />, container);\n}\n\nexport function unmount(props) {\n  const { container } = props;\n  ReactDOM.unmountComponentAtNode(container);\n}\n\nif (isInIcestark()) {\n  console.log('app is running in framework app');\n} else {\n  ReactDOM.render(<App />, document.getElementById('ice-container'));\n}\n```\n\n### 基于vue cli改造微应用\n\n## 微应用本地调试\n\n### 本地调试icejs微应用\n\n单独微应用开发时只能看到自身的内容，无法关注到在主应用下的表现，这时候本地如果需要再启动一个主应用，\n开发起来就很繁琐。针对这种情况，我们推荐通过主应用的日常/线上环境调试本地微应用。\n\n查看微应用的js、css资源路径。\n\n![查看微应用js路径](https://s3.ax1x.com/2021/01/11/s8dUlF.png)\n![查看微应用css路径](https://s3.ax1x.com/2021/01/11/s8dhmd.png)\n\n在主应用的 `src/app.tsx` 中覆盖对应的微应用配置的路径\n\n![覆盖微应用路径](https://s3.ax1x.com/2021/01/11/s8djmj.png)\n\n此时打开主应用的对应微应用模块，会发现微应用没有正常显示，原因是微应用没有获取正确的basename。\n\n![微应用不显示](https://s3.ax1x.com/2021/01/11/s8Ba6S.png)\n\n参考[运行时配置](https://ice.work/docs/guide/basic/router#%E8%BF%90%E8%A1%8C%E6%97%B6%E9%85%8D%E7%BD%AE)\n\n在微应用 `src/app.ts` 中，我们可以配置路由的类型和基础路径等信息，具体配置如下：\n\n```js\nimport { runApp, IAppConfig } from 'ice';\n\nconst appConfig: IAppConfig = {\n  router: {\n    type: 'browser',\n    basename: '/seller',\n    fallback: `<div>loading...</div>`,\n    modifyRoutes: (routes) => {\n      return routes;\n    }\n  },\n  icestark: {\n    type: 'child',\n  },\n};\n\nrunApp(appConfig);\n```\n\n### 本地调试react微应用\n\n#### 定义基准路由\n\n正常情况下，注册微应用时会为每个微应用分配一个基准路由比如 `/waiter`，\n当前微应用的所有路由需要定义在基准路由之下，社区常见的路由库都可以通过参数非常简单的实现该功能。\n微应用可以通过 getBasename() API 获取自身的基准路由。\n\nReact 项目中使用 react-router-dom：\n\n```shell\n# 引入react-router-dom\n$ yarn add react-router-dom\n```\n\n修改icestark-child-react/src/App.tsx\n\n```js\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { getBasename, renderNotFound } from '@ice/stark-app';\nimport Home from './routes/Home'\nimport List from './routes/List'\nimport Detail from './routes/Detail'\nimport './App.css';\n\n// #原有代码\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// #因tslint规定<Route>的component必须是JSX而添加的改动\nfunction notFound(props: any) {\n  return (\n    <>\n      {renderNotFound()}\n    </>\n  )\n}\n\nfunction App(props: any) {\n  return (\n    <Router basename={getBasename()}>\n      <Switch>\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route exact path=\"/list\" component={List}></Route>\n        <Route exact path=\"/list/detail/:contractId\" component={Detail} />\n        <Route\n          component={notFound}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n```\n\n查看微应用的端口地址\n\n![查看微应用端口地址](https://s3.ax1x.com/2021/02/01/yZvbk9.png)\n\n在主应用的 src/app.tsx 中覆盖对应的微应用配置的路径\n\n![覆盖微应用路径](https://s3.ax1x.com/2021/02/01/yZx3pq.png)\n\n> 这里无法使用src获取到react微应用，需要使用entry来自动匹配微应用资源。\n\n## 路由跳转\n\n### 微应用内跳转\n\n#### 使用Link组件\n\n通过 `<Link />` 标签组件可实现路由跳转，使用方式：\n\n```js\nimport { Link } from 'ice';\n\nfunction Demo() {\n  return (\n    <div>\n      <Link to='/courses?sort=name' />\n\n      {/* 可以携带额外的数据 `state` 到路由中。 */}\n      <Link\n        to={{\n          pathname: '/courses',\n          search: '?sort=name',\n          hash: '#the-hash',\n          state: { fromDashboard: true },\n        }}\n      />\n    </div>\n  )\n}\n```\n\n> 在示例项目中使用如下\n\n##### 修改详情页路由\n\n修改微应用 `src/routes.tsx` 的详情页路由\n\n```js\nimport { renderNotFound, isInIcestark } from '@ice/stark-app';\nimport BasicLayout from '@/layouts/BasicLayout';\nimport Detail from '@/pages/Detail';\nimport Home from '@/pages/Home';\nimport List from '@/pages/List';\nimport NotFound from '@/components/NotFound';\n\nconst routerConfig = [\n  {\n    path: '/',\n    component: BasicLayout,\n    children: [\n      {\n        path: '/',\n        exact: true,\n        component: Home,\n      },\n      {\n        path: '/list',\n        exact: true,\n        component: List,\n      },\n      {\n        path: '/list/detail/:contractId',\n        component: Detail,\n      },\n      {\n        // 微应用独立运行 404 路由渲染 NotFound 组件\n        component: isInIcestark() ? () => renderNotFound() : NotFound,\n      },\n    ],\n  },\n];\n\nexport default routerConfig;\n```\n\n##### 修改Link组件传参\n\n修改微应用 `src/list/index.tsx` 的列表页Link组件，添加传参\n\n```js\n<Table.Column\n  title=\"操作\"\n  dataIndex=\"detail\"\n  key=\"detail\"\n  width={200}\n  cell={(value, index, record) => (\n    <div>\n      <a className={styles.link} onClick={() => Message.success('暂不支持修改合同')}>\n        修改\n      </a>\n      <span className={styles.separator} />\n      <Link className={styles.link} to={`/list/detail/${data[index].id}`}>\n        查看\n      </Link>\n    </div>\n  )}\n/>\n```\n\n##### 详情页接收参数\n\n引入`useRouteMatch`并获取`contractId`\n\n![详情页接收参数](https://s3.ax1x.com/2021/01/12/sGzbE8.png)\n\n#### 使用 useHistory API\n\nuseHistory hook 用于获取 history 实例。\n\n```js\nimport { useHistory } from 'ice';\n\nfunction HomeButton() {\n  const history = useHistory();\n\n  function handleClick() {\n    history.push('/home');\n  }\n\n  return (\n    <button type='button' onClick={handleClick}>\n      Go home\n    </button>\n  );\n}\n```\n\n> 在示例项目中使用如下\n\n##### 详情页添加返回按钮\n\n在微应用的`src/detail/index.tsx`引入`useHistory`方法，声明返回方法并调用`useHistory`，将返回按钮传入`PageTitle`组件。\n\n![详情页添加返回按钮](https://s3.ax1x.com/2021/01/12/sJyR8s.png)\n\n改造微应用的`/src/components/PageTitle/index.tsx`文件，扩展`PageTitle`组件接收subTitle参数。\n\n```js\nimport React from 'react';\nimport styles from './index.module.scss';\n\n// 原组件\n// export default ({ title, subTitle }) => {\n//     <h5 className={styles.title}>\n//         <span>{title}</span>\n//         <span>{subTitle}</span>\n//     </h5>\n// };\n\nexport interface PageTitleProps {\n    title?: any;\n    subTitle?: any;\n}\n\nexport default function PageTitle(props: PageTitleProps) {\n    let { title, subTitle } = props;\n    return (\n        <h5 className={styles.title}>\n            <span>{title}</span>\n            <span className={styles.subTitle}>{subTitle}</span>\n        </h5>\n    );\n}\n```\n\n#### 使用 history API\n\n在微应用的`src/detail/index.tsx`引入`history`方法，声明返回方法并调用`history`，将返回按钮传入`PageTitle`组件。\n\n![详情页使用history跳转](https://s3.ax1x.com/2021/01/12/sYCU0I.png)\n\n### 微应用间跳转\n\n#### 使用 appHistory\n\n在 A 微应用里需要跳转到 B 微应用时，如果使用 react-router/vue-router 提供的 Link 组件，\n一般会强行在 path 上追加 basename，因此推荐使用 appHistory/AppLink 来跳转：\n\n注意：AppLink 仅支持在基于 React 的微应用中使用，appHistory 不限制微应用的框架类型\n\n```js\nimport React from 'react';\nimport { appHistory, AppLink } from '@ice/stark-app';\n\nexport default function FrameworkLayout() {\n  return (\n    <>\n      <span\n        onClick={() => {\n          appHistory.push('/seller/list');\n        }}\n      >\n        seller\n      </span>\n      <AppLink to=\"/waiter/list\">waiter</AppLink>\n    </>\n  );\n}\n```\n\n> 在示例项目中使用如下\n\n![微应用间跳转](https://s3.ax1x.com/2021/02/01/yeA8IK.png)\n\n![微应用间跳转](https://s3.ax1x.com/2021/02/01/yeEpFK.gif)\n\n#### 使用 AppLink\n\n> ~~直接使用ice中的AppLink会报错，需要自己封装个AppLink来跳转。~~\n\n示例在上个章节已介绍。\n\n##### 封装 AppLink\n\n在`src/utils/AppLink.tsx`封装\n\n```js\nimport * as React from \"react\";\n\nexport type AppLinkProps = {\n    to: string;\n    message?: string;\n    children?: React.ReactNode;\n} & React.AnchorHTMLAttributes<any>;\n\n// tslint:disable-next-line:variable-name\nconst AppLink: React.SFC<AppLinkProps> = (props: AppLinkProps) => {\n    const { to, message, children, ...rest } = props;\n    return (\n        <a\n            {...rest}\n            href={to}\n            onClick={(e) => {\n                e.preventDefault();\n                if (message && window.confirm(message) === false) {\n                    return false;\n                }\n\n                window.history.pushState(\n                    {\n                        forceRender: true\n                    },\n                    \"\",\n                    to\n                );\n            }}\n        >\n            {children}\n        </a>\n    );\n};\n\nexport default AppLink;\n```\n\n在`src/utils/index.tsx`声明`AppLink`\n\n```js\nexport { default as AppLink } from \"./AppLink\";\n```\n\n##### 调用 AppLink\n\n![详情页使用AppLink跳转](https://s3.ax1x.com/2021/01/12/sYF6je.png)\n\n## 微应用打包部署\n\n项目结构如下\n\n```text\nicestark-demo\n├─node_modules                 # 公共依赖文件\n├─docs                         # 项目部署后静态资源地址\n|    ├─subapp                  # 子项目静态资源包\n|    |   ├icestark-child-icejs # icejs子项目静态资源包\n|    |   ├icestark-child-react # creat-react-app子项目静态资源包\n|    |   ├icestark-child-vue   # vue cli子项目静态资源包\n|    ├─index.html              # 基座打包后入口文件\n├─.gitignore                   # 忽略文件\n├─README.md                    # 项目介绍\n├─package.json                 # 项目依赖\n├─packages                     # 项目文件\n|    ├─icestark-layout         # 基座\n|    |    ├─node_modules       # 子项目依赖文件\n|    ├─icestark-child-icejs    # icejs创建子项目\n|    ├─icestark-child-react    # creat-react-app创建子项目\n|    ├─icestark-child-vue      # vue cli创建子项目\n```\n\n### 微应用打包\n\n#### icejs微应用打包\n\n在项目根目录执行build命令\n\n```shell\n# 执行打包命令\n$ yarn workspace icestark-child-icejs build\n```\n\n执行完毕后，微应用目录下生成build文件夹。\n\n将其拷贝至根目录docs/subapp/icestark-child-icejs文件下\n\n#### react微应用打包\n\n在项目根目录执行build命令\n\n```shell\n# 执行打包命令\n$ yarn workspace icestark-child-react build\n```\n\n执行完毕后，微应用目录下生成build文件夹。\n\n将其拷贝至根目录docs/subapp/icestark-child-react文件下\n\n### 主应用连接部署后的微应用\n\n将项目推送至远端\n\n此时还无法获取到微应用资源，需将github仓库进行github page修改\n\n如下图所示\n\n![微应用部署](https://s3.ax1x.com/2021/02/02/ymf3ZV.gif)\n\n修改后`http://www.gaotianyang.top/icestark-demo/`地址就指向了项目根目录的docs文件夹\n\n修改主应用的 src/app.tsx 中覆盖对应的微应用配置的路径\n\n![微应用路径配置](https://s3.ax1x.com/2021/02/02/ymhOhD.png)\n\n## 主应用打包部署\n\n在项目根目录执行build命令\n\n```shell\n# 执行打包命令\n$ yarn workspace icestark-layout build\n```\n\n将build文件复制到项目docs根目录\n\n可访问[https://www.gaotianyang.top/icestark-demo/](https://www.gaotianyang.top/icestark-demo/)进行查看\n\n> 注意这里打包需要解决资源获取路径为相对路径的问题。修改主应用的build.json的publicPath，将资源路径改为相对路径即可。\n\n```json\n{\n  \"publicPath\": \".\",\n  \"plugins\": [\n    [\n      \"build-plugin-icestark\",\n      {\n        \"uniqueName\": \"frameworkJsonp\"\n      }\n    ],\n    [\n      \"build-plugin-fusion\",\n      {\n        \"themePackage\": \"@alifd/theme-design-pro\",\n        \"themeConfig\": {\n          \"nextPrefix\": \"next-icestark-\"\n        }\n      }\n    ],\n    [\n      \"build-plugin-moment-locales\",\n      {\n        \"locales\": [\n          \"zh-cn\"\n        ]\n      }\n    ]\n  ]\n}\n```\n\n### 主应用配置二级路由\n\n因为项目部署在github page中，项目地址为二级域名`https://www.gaotianyang.top/icestark-demo`\n因此项目中的路由配置及跳转信息需要额外配置`icestark-demo`方可正常显示。\n\n解决方案如下\n\n#### 获取应用状态并存储二级路由\n\n在主应用获取当前应用是处于预览还是打包，并将路由存储在localStorage中。\n\n在`icestark-demo/packages/icestark-layout/src/app.tsx`修改微应用path\n\n```js\nlocalStorage.setItem(\"baseUrl\", process.env.NODE_ENV === \"development\" ? \"\" : \"/icestark-demo\")\n\nconst baseUrl = localStorage.baseUrl\n```\n\n![微应用path配置二级路由](https://s3.ax1x.com/2021/02/02/ynLxhR.png)\n\n#### 修改主应用路由\n\n在`icestark-demo/packages/icestark-layout/src/routes.ts`修改主应用路由\n\n![主应用路由配置二级路由](https://s3.ax1x.com/2021/02/02/ynOLxP.png)\n\n#### 修改主应用菜单\n\n在`icestark-demo/packages/icestark-layout/src/layouts/BasicLayout/menuConfig.ts`修改主应用菜单\n\n![主应用菜单配置二级路由](https://s3.ax1x.com/2021/02/02/ynOLxP.png)\n\n#### 修改微应用跳转\n\n![微应用跳转路径](https://s3.ax1x.com/2021/02/02/ynXRij.png)\n\n## 问题汇总\n\n### GitHub-page 刷新找不到二级域名下的路由地址\n\n因为GitHub-page只能存放静态资源。并且不支持.htaccess，\n所以用webpack构建出来的单页应用，\n直接将dist文件推送到GitHub-page分支，\n在切换路由之后，手动刷新是会出现404的。\n\n![找不到项目](https://s3.ax1x.com/2021/02/05/yGrZZR.png)\n\n处理方法\n\n* 给站点根目录添加404.html\n\n一般也就是dist目录下（GitHub-page找不到的路径会自动访问这个404.html）\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <script>\n      sessionStorage.redirect = location.href;\n    </script>\n    <meta http-equiv=\"refresh\" content=\"0;URL='/icestark-demo/'\">\n  </head>\n  <body>\n      \n  </body>\n</html>\n```\n\n> 这里使用的知识点是`<meta http-equiv=\"refresh\" content=\"0;URL='/icestark-demo/'\">`\n\n常见的几种使用场景\n\n```html\n<!-- 这个表示当前页面每5秒钟刷一下，刷一下~ -->\n<meta http-equiv=\"refresh\" content=\"5\">\n\n<!-- 这个表示当前页面2秒后跳到首页 -->\n<meta http-equiv=\"refresh\" content=\"2; url='/'\">\n\n<!-- 页面直接跳转到腾讯网 -->\n<meta http-equiv=\"refresh\" content=\"0; url='http://www.qq.com/'\">\n```\n\n* 给index.html添加重定向逻辑\n\n```html\n<script>\n  // 这段代码要放在其他js的前面\n  (function(){\n    var redirect = sessionStorage.redirect;\n    delete sessionStorage.redirect;\n    if (redirect && redirect != location.href) {\n      history.replaceState(null, null, redirect);\n    }\n  })();\n</script>\n```\n\n### @ice/stark^2.0.0版本问题\n\n当项目安装的@ice/stark是2.1.0时，会出现entry的地址获取js、css路径不正确。\n此时需将版本降至2.0.2即可修复。可通过复制并整体替换处理。\n\n处理方法\n\n* 先正常yarn项目\n* 打开根目录的node_modules/@ice/stark\n* 将2.0.2版本的ice-stark整体替换至改目录下即可\n\n## 参考资料\n\n* [icestark快速上手](https://ice.work/docs/icestark/start)\n* [路由运行时配置](https://ice.work/docs/guide/basic/router#%E8%BF%90%E8%A1%8C%E6%97%B6%E9%85%8D%E7%BD%AE)\n* [Link](https://ice.work/docs/guide/basic/api#Link)\n* [useHistory](https://ice.work/docs/guide/basic/api#useHistory)\n* [history](https://ice.work/docs/guide/basic/api#history)\n* [微应用间跳转](https://ice.work/docs/icestark/guide/child-app#%E5%BE%AE%E5%BA%94%E7%94%A8%E9%97%B4%E8%B7%B3%E8%BD%AC)\n* [主应用打包后资源改为相对路径](https://ice.work/docs/guide/basic/build#publicPath)\n* [框架API-环境变量](https://ice.work/docs/guide/basic/api#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F)\n* [单页应用在gh-pages动态路由刷新后404解决方案](https://segmentfault.com/a/1190000012951274)\n* [使用meta实现页面的定时刷新或跳转](https://www.zhangxinxu.com/wordpress/2015/03/meta-http-equiv-refresh-content/)\n","slug":"icestark的最佳实践","published":1,"updated":"2021-03-02T13:16:32.311Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqjza001c2an9a3zi30ki","content":"<p><img src=\"https://s3.ax1x.com/2021/01/12/sG4eTP.jpg\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<p>本文演示如何快速创建微前端的应用及改造已有应用接入微前端，基座创建使用的是 icejs，微应用是使用的 icejs、create-react-app分别创建。</p>\n<blockquote>\n<p><a href=\"https://github.com/mitudegaoyang/icestark-demo\">项目demo仓库地址</a><br><a href=\"https://www.gaotianyang.top/icestark-demo\">项目demo预览地址</a></p>\n</blockquote>\n<h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><p>创建项目，并拉取到本地。在根目录分别创建package.json、和packages文件夹。</p>\n<p>初始化package.json将项目对应名称填写完整</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;icestark-demo&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;private&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;workspaces&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-layout&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-child-icejs&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-child-react&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-child-vue&quot;</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>进入项目目录<code>packages</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd packages/</span><br></pre></td></tr></table></figure>\n<h2 id=\"初始化主应用\"><a href=\"#初始化主应用\" class=\"headerlink\" title=\"初始化主应用\"></a>初始化主应用</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 基于 React 的主应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm init ice icestark-layout @icedesign/stark-layout-scaffold</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 或者基于 Vue 的主应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm init ice icestark-layout @vue-materials/icestark-layout-app</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意需要将主应用中<code>package.json</code>的name改为<code>icestark-layout</code></p>\n</blockquote>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><p>回到根目录执行yarn命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装依赖</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 预览主应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn workspaces icestark-layout start</span></span><br></pre></td></tr></table></figure>\n<p>即可通过浏览器预览整个应用：</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/28/ypQBDK.gif\" alt=\"主应用预览\"></p>\n<p>打开主应用 <code>src/app.tsx</code> 即可看到默认注册的几个微应用。</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/28/yp1rfH.png\" alt=\"默认注册微应用\"></p>\n<h2 id=\"初始化微应用\"><a href=\"#初始化微应用\" class=\"headerlink\" title=\"初始化微应用\"></a>初始化微应用</h2><h3 id=\"基于icejs初始化微应用\"><a href=\"#基于icejs初始化微应用\" class=\"headerlink\" title=\"基于icejs初始化微应用\"></a>基于icejs初始化微应用</h3><p>进入项目目录<code>packages</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 基于 React 的微应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm init ice icestark-child-icejs @icedesign/stark-child-scaffold</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 基于 Vue 的微应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm init ice icestark-child-icejs @vue-materials/icestark-child-app</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 回到根目录安装icejs微应用依赖 ./icestark-demo/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装依赖</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 预览微应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn workspaces icestark-child-icejs start</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意这里也需要将微应用中<code>package.json</code>的name改为<code>icestark-child-icejs</code></p>\n</blockquote>\n<p>可以在主应用的 <code>src/app.tsx</code> 中增加对应的微应用配置。</p>\n<p>如果不需要改造现有项目，可直接跳过基于create-react-app改造微应用和基于vue cli改造微应用。<br>直接查看<a href=\"/archives/202101115b56e29a/#微应用本地调试\">微应用本地调试</a>。</p>\n<h3 id=\"基于create-react-app改造微应用\"><a href=\"#基于create-react-app改造微应用\" class=\"headerlink\" title=\"基于create-react-app改造微应用\"></a>基于create-react-app改造微应用</h3><h4 id=\"create-react-app创建react应用\"><a href=\"#create-react-app创建react应用\" class=\"headerlink\" title=\"create-react-app创建react应用\"></a>create-react-app创建react应用</h4><p>进入项目目录<code>packages</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 使用npm初始化app</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm create-react-app icestark-child-react --template typescript</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"comment\"># 或者使用yarn初始化</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn create react-app icestark-child-react --template typescript</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 在icestark-child-react引入ice/stark-app</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ./icestark-demo/icestark-child-react/</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn add @ice/stark-app</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 回到根目录安装react微应用依赖</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ./icestark-demo/</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装依赖</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 预览微应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn workspaces icestark-child-react start</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>更改微应用name为<code>icestark-child-react</code></p>\n</blockquote>\n<p>此时会出现缺少babel-loader的报错提示</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/28/y9Ya4K.png\" alt=\"缺少babel-loader@8.1.0\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 在icestark-child-react引入babel-loader</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ./icestark-demo/icestark-child-react/</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn add babel-loader@8.1.0</span></span><br></pre></td></tr></table></figure>\n<p>再次启动提示eslint版本不正确</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/28/y9N4mj.png\" alt=\"缺少eslint^7.11.0\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 在icestark-child-react引入eslint</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ./icestark-demo/icestark-child-react/</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn add eslint --dev</span></span><br></pre></td></tr></table></figure>\n<p>由于workspaces的依赖判断问题，导致运行icestark-child-react时，没有使用子项目中的eslint版本，此时需要将高版本的eslint存储到外层的公共node_modules中。</p>\n<p>修改根目录的package.json后再次执行yarn</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;icestark-demo&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;private&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;workspaces&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-layout&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-child-icejs&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-child-react&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-child-vue&quot;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">&quot;devDependencies&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;eslint&quot;</span>: <span class=\"string\">&quot;^7.11.0&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"应用入口适配\"><a href=\"#应用入口适配\" class=\"headerlink\" title=\"应用入口适配\"></a>应用入口适配</h4><p>将 React 应用改造为微应用，仅仅只需要导出对应的生命周期即可：</p>\n<p>修改微应用 <code>src/index.tsx</code> 的微应用入口</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> ReactDOM <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dom&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; isInIcestark &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark-app&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mount</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; container, customProps &#125; = props;</span><br><span class=\"line\">  ReactDOM.render(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span> &#123;<span class=\"attr\">...customProps</span>&#125; /&gt;</span></span>, container);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unmount</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; container &#125; = props;</span><br><span class=\"line\">  ReactDOM.unmountComponentAtNode(container);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (isInIcestark()) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;app is running in framework app&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  ReactDOM.render(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span> /&gt;</span></span>, <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;ice-container&#x27;</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"基于vue-cli改造微应用\"><a href=\"#基于vue-cli改造微应用\" class=\"headerlink\" title=\"基于vue cli改造微应用\"></a>基于vue cli改造微应用</h3><h2 id=\"微应用本地调试\"><a href=\"#微应用本地调试\" class=\"headerlink\" title=\"微应用本地调试\"></a>微应用本地调试</h2><h3 id=\"本地调试icejs微应用\"><a href=\"#本地调试icejs微应用\" class=\"headerlink\" title=\"本地调试icejs微应用\"></a>本地调试icejs微应用</h3><p>单独微应用开发时只能看到自身的内容，无法关注到在主应用下的表现，这时候本地如果需要再启动一个主应用，<br>开发起来就很繁琐。针对这种情况，我们推荐通过主应用的日常/线上环境调试本地微应用。</p>\n<p>查看微应用的js、css资源路径。</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/11/s8dUlF.png\" alt=\"查看微应用js路径\"><br><img src=\"https://s3.ax1x.com/2021/01/11/s8dhmd.png\" alt=\"查看微应用css路径\"></p>\n<p>在主应用的 <code>src/app.tsx</code> 中覆盖对应的微应用配置的路径</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/11/s8djmj.png\" alt=\"覆盖微应用路径\"></p>\n<p>此时打开主应用的对应微应用模块，会发现微应用没有正常显示，原因是微应用没有获取正确的basename。</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/11/s8Ba6S.png\" alt=\"微应用不显示\"></p>\n<p>参考<a href=\"https://ice.work/docs/guide/basic/router#%E8%BF%90%E8%A1%8C%E6%97%B6%E9%85%8D%E7%BD%AE\">运行时配置</a></p>\n<p>在微应用 <code>src/app.ts</code> 中，我们可以配置路由的类型和基础路径等信息，具体配置如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; runApp, IAppConfig &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;ice&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> appConfig: IAppConfig = &#123;</span><br><span class=\"line\">  router: &#123;</span><br><span class=\"line\">    type: <span class=\"string\">&#x27;browser&#x27;</span>,</span><br><span class=\"line\">    basename: <span class=\"string\">&#x27;/seller&#x27;</span>,</span><br><span class=\"line\">    fallback: <span class=\"string\">`&lt;div&gt;loading...&lt;/div&gt;`</span>,</span><br><span class=\"line\">    modifyRoutes: <span class=\"function\">(<span class=\"params\">routes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> routes;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  icestark: &#123;</span><br><span class=\"line\">    type: <span class=\"string\">&#x27;child&#x27;</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">runApp(appConfig);</span><br></pre></td></tr></table></figure>\n<h3 id=\"本地调试react微应用\"><a href=\"#本地调试react微应用\" class=\"headerlink\" title=\"本地调试react微应用\"></a>本地调试react微应用</h3><h4 id=\"定义基准路由\"><a href=\"#定义基准路由\" class=\"headerlink\" title=\"定义基准路由\"></a>定义基准路由</h4><p>正常情况下，注册微应用时会为每个微应用分配一个基准路由比如 <code>/waiter</code>，<br>当前微应用的所有路由需要定义在基准路由之下，社区常见的路由库都可以通过参数非常简单的实现该功能。<br>微应用可以通过 getBasename() API 获取自身的基准路由。</p>\n<p>React 项目中使用 react-router-dom：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 引入react-router-dom</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn add react-router-dom</span></span><br></pre></td></tr></table></figure>\n<p>修改icestark-child-react/src/App.tsx</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; BrowserRouter <span class=\"keyword\">as</span> Router, Route, Switch &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router-dom&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; getBasename, renderNotFound &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark-app&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Home <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./routes/Home&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> List <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./routes/List&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Detail <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./routes/Detail&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;./App.css&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// #原有代码</span></span><br><span class=\"line\"><span class=\"comment\">// function App() &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   return (</span></span><br><span class=\"line\"><span class=\"comment\">//     &lt;div className=&quot;App&quot;&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//       &lt;header className=&quot;App-header&quot;&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//         &lt;img src=&#123;logo&#125; className=&quot;App-logo&quot; alt=&quot;logo&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//         &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//           Edit &lt;code&gt;src/App.tsx&lt;/code&gt; and save to reload.</span></span><br><span class=\"line\"><span class=\"comment\">//         &lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//         &lt;a</span></span><br><span class=\"line\"><span class=\"comment\">//           className=&quot;App-link&quot;</span></span><br><span class=\"line\"><span class=\"comment\">//           href=&quot;https://reactjs.org&quot;</span></span><br><span class=\"line\"><span class=\"comment\">//           target=&quot;_blank&quot;</span></span><br><span class=\"line\"><span class=\"comment\">//           rel=&quot;noopener noreferrer&quot;</span></span><br><span class=\"line\"><span class=\"comment\">//         &gt;</span></span><br><span class=\"line\"><span class=\"comment\">//           Learn React</span></span><br><span class=\"line\"><span class=\"comment\">//         &lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//       &lt;/header&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//     &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//   );</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// #因tslint规定&lt;Route&gt;的component必须是JSX而添加的改动</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">notFound</span>(<span class=\"params\">props: any</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;&gt;</span><br><span class=\"line\">      &#123;renderNotFound()&#125;</span><br><span class=\"line\">    &lt;/&gt;</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">App</span>(<span class=\"params\">props: any</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;Router basename=&#123;getBasename()&#125;&gt;</span><br><span class=\"line\">      &lt;Switch&gt;</span><br><span class=\"line\">        &lt;Route exact path=<span class=\"string\">&quot;/&quot;</span> component=&#123;Home&#125;&gt;&lt;/Route&gt;</span><br><span class=\"line\">        &lt;Route exact path=<span class=\"string\">&quot;/list&quot;</span> component=&#123;List&#125;&gt;&lt;/Route&gt;</span><br><span class=\"line\">        &lt;Route exact path=<span class=\"string\">&quot;/list/detail/:contractId&quot;</span> component=&#123;Detail&#125; /&gt;</span><br><span class=\"line\">        &lt;Route</span><br><span class=\"line\">          component=&#123;notFound&#125;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">      &lt;/Switch&gt;</span><br><span class=\"line\">    &lt;/Router&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> App;</span><br></pre></td></tr></table></figure>\n<p>查看微应用的端口地址</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/01/yZvbk9.png\" alt=\"查看微应用端口地址\"></p>\n<p>在主应用的 src/app.tsx 中覆盖对应的微应用配置的路径</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/01/yZx3pq.png\" alt=\"覆盖微应用路径\"></p>\n<blockquote>\n<p>这里无法使用src获取到react微应用，需要使用entry来自动匹配微应用资源。</p>\n</blockquote>\n<h2 id=\"路由跳转\"><a href=\"#路由跳转\" class=\"headerlink\" title=\"路由跳转\"></a>路由跳转</h2><h3 id=\"微应用内跳转\"><a href=\"#微应用内跳转\" class=\"headerlink\" title=\"微应用内跳转\"></a>微应用内跳转</h3><h4 id=\"使用Link组件\"><a href=\"#使用Link组件\" class=\"headerlink\" title=\"使用Link组件\"></a>使用Link组件</h4><p>通过 <code>&lt;Link /&gt;</code> 标签组件可实现路由跳转，使用方式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Link &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;ice&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Demo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">      &lt;Link to=<span class=\"string\">&#x27;/courses?sort=name&#x27;</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#123;<span class=\"comment\">/* 可以携带额外的数据 `state` 到路由中。 */</span>&#125;</span><br><span class=\"line\">      &lt;Link</span><br><span class=\"line\">        to=&#123;&#123;</span><br><span class=\"line\">          pathname: <span class=\"string\">&#x27;/courses&#x27;</span>,</span><br><span class=\"line\">          search: <span class=\"string\">&#x27;?sort=name&#x27;</span>,</span><br><span class=\"line\">          hash: <span class=\"string\">&#x27;#the-hash&#x27;</span>,</span><br><span class=\"line\">          state: &#123; <span class=\"attr\">fromDashboard</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">        &#125;&#125;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在示例项目中使用如下</p>\n</blockquote>\n<h5 id=\"修改详情页路由\"><a href=\"#修改详情页路由\" class=\"headerlink\" title=\"修改详情页路由\"></a>修改详情页路由</h5><p>修改微应用 <code>src/routes.tsx</code> 的详情页路由</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; renderNotFound, isInIcestark &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark-app&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> BasicLayout <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/layouts/BasicLayout&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Detail <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/pages/Detail&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Home <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/pages/Home&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> List <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/pages/List&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> NotFound <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/NotFound&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> routerConfig = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">    component: BasicLayout,</span><br><span class=\"line\">    children: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        path: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">        exact: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        component: Home,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        path: <span class=\"string\">&#x27;/list&#x27;</span>,</span><br><span class=\"line\">        exact: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        component: List,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        path: <span class=\"string\">&#x27;/list/detail/:contractId&#x27;</span>,</span><br><span class=\"line\">        component: Detail,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 微应用独立运行 404 路由渲染 NotFound 组件</span></span><br><span class=\"line\">        component: isInIcestark() ? <span class=\"function\">() =&gt;</span> renderNotFound() : NotFound,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> routerConfig;</span><br></pre></td></tr></table></figure>\n<h5 id=\"修改Link组件传参\"><a href=\"#修改Link组件传参\" class=\"headerlink\" title=\"修改Link组件传参\"></a>修改Link组件传参</h5><p>修改微应用 <code>src/list/index.tsx</code> 的列表页Link组件，添加传参</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Table.Column</span><br><span class=\"line\">  title=<span class=\"string\">&quot;操作&quot;</span></span><br><span class=\"line\">  dataIndex=<span class=\"string\">&quot;detail&quot;</span></span><br><span class=\"line\">  key=<span class=\"string\">&quot;detail&quot;</span></span><br><span class=\"line\">  width=&#123;<span class=\"number\">200</span>&#125;</span><br><span class=\"line\">  cell=&#123;<span class=\"function\">(<span class=\"params\">value, index, record</span>) =&gt;</span> (</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">      &lt;a className=&#123;styles.link&#125; onClick=&#123;<span class=\"function\">() =&gt;</span> Message.success(<span class=\"string\">&#x27;暂不支持修改合同&#x27;</span>)&#125;&gt;</span><br><span class=\"line\">        修改</span><br><span class=\"line\">      &lt;/a&gt;</span><br><span class=\"line\">      &lt;span className=&#123;styles.separator&#125; /&gt;</span><br><span class=\"line\">      &lt;Link className=&#123;styles.link&#125; to=&#123;<span class=\"string\">`/list/detail/<span class=\"subst\">$&#123;data[index].id&#125;</span>`</span>&#125;&gt;</span><br><span class=\"line\">        查看</span><br><span class=\"line\">      &lt;/Link&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  )&#125;</span><br><span class=\"line\">/&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"详情页接收参数\"><a href=\"#详情页接收参数\" class=\"headerlink\" title=\"详情页接收参数\"></a>详情页接收参数</h5><p>引入<code>useRouteMatch</code>并获取<code>contractId</code></p>\n<p><img src=\"https://s3.ax1x.com/2021/01/12/sGzbE8.png\" alt=\"详情页接收参数\"></p>\n<h4 id=\"使用-useHistory-API\"><a href=\"#使用-useHistory-API\" class=\"headerlink\" title=\"使用 useHistory API\"></a>使用 useHistory API</h4><p>useHistory hook 用于获取 history 实例。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;ice&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">HomeButton</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> history = useHistory();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleClick</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    history.push(<span class=\"string\">&#x27;/home&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;button type=<span class=\"string\">&#x27;button&#x27;</span> onClick=&#123;handleClick&#125;&gt;</span><br><span class=\"line\">      Go home</span><br><span class=\"line\">    &lt;/button&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在示例项目中使用如下</p>\n</blockquote>\n<h5 id=\"详情页添加返回按钮\"><a href=\"#详情页添加返回按钮\" class=\"headerlink\" title=\"详情页添加返回按钮\"></a>详情页添加返回按钮</h5><p>在微应用的<code>src/detail/index.tsx</code>引入<code>useHistory</code>方法，声明返回方法并调用<code>useHistory</code>，将返回按钮传入<code>PageTitle</code>组件。</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/12/sJyR8s.png\" alt=\"详情页添加返回按钮\"></p>\n<p>改造微应用的<code>/src/components/PageTitle/index.tsx</code>文件，扩展<code>PageTitle</code>组件接收subTitle参数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> styles <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./index.module.scss&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 原组件</span></span><br><span class=\"line\"><span class=\"comment\">// export default (&#123; title, subTitle &#125;) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     &lt;h5 className=&#123;styles.title&#125;&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//         &lt;span&gt;&#123;title&#125;&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//         &lt;span&gt;&#123;subTitle&#125;&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//     &lt;/h5&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> interface PageTitleProps &#123;</span><br><span class=\"line\">    title?: any;</span><br><span class=\"line\">    subTitle?: any;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">PageTitle</span>(<span class=\"params\">props: PageTitleProps</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> &#123; title, subTitle &#125; = props;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        &lt;h5 className=&#123;styles.title&#125;&gt;</span><br><span class=\"line\">            &lt;span&gt;&#123;title&#125;&lt;/span&gt;</span><br><span class=\"line\">            &lt;span className=&#123;styles.subTitle&#125;&gt;&#123;subTitle&#125;&lt;/span&gt;</span><br><span class=\"line\">        &lt;/h5&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用-history-API\"><a href=\"#使用-history-API\" class=\"headerlink\" title=\"使用 history API\"></a>使用 history API</h4><p>在微应用的<code>src/detail/index.tsx</code>引入<code>history</code>方法，声明返回方法并调用<code>history</code>，将返回按钮传入<code>PageTitle</code>组件。</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/12/sYCU0I.png\" alt=\"详情页使用history跳转\"></p>\n<h3 id=\"微应用间跳转\"><a href=\"#微应用间跳转\" class=\"headerlink\" title=\"微应用间跳转\"></a>微应用间跳转</h3><h4 id=\"使用-appHistory\"><a href=\"#使用-appHistory\" class=\"headerlink\" title=\"使用 appHistory\"></a>使用 appHistory</h4><p>在 A 微应用里需要跳转到 B 微应用时，如果使用 react-router/vue-router 提供的 Link 组件，<br>一般会强行在 path 上追加 basename，因此推荐使用 appHistory/AppLink 来跳转：</p>\n<p>注意：AppLink 仅支持在基于 React 的微应用中使用，appHistory 不限制微应用的框架类型</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; appHistory, AppLink &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark-app&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">FrameworkLayout</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;&gt;</span><br><span class=\"line\">      &lt;span</span><br><span class=\"line\">        onClick=&#123;<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">          appHistory.push(<span class=\"string\">&#x27;/seller/list&#x27;</span>);</span><br><span class=\"line\">        &#125;&#125;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">        seller</span><br><span class=\"line\">      &lt;/span&gt;</span><br><span class=\"line\">      &lt;AppLink to=<span class=\"string\">&quot;/waiter/list&quot;</span>&gt;waiter&lt;/AppLink&gt;</span><br><span class=\"line\">    &lt;/&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在示例项目中使用如下</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/02/01/yeA8IK.png\" alt=\"微应用间跳转\"></p>\n<p><img src=\"https://s3.ax1x.com/2021/02/01/yeEpFK.gif\" alt=\"微应用间跳转\"></p>\n<h4 id=\"使用-AppLink\"><a href=\"#使用-AppLink\" class=\"headerlink\" title=\"使用 AppLink\"></a>使用 AppLink</h4><blockquote>\n<p><del>直接使用ice中的AppLink会报错，需要自己封装个AppLink来跳转。</del></p>\n</blockquote>\n<p>示例在上个章节已介绍。</p>\n<h5 id=\"封装-AppLink\"><a href=\"#封装-AppLink\" class=\"headerlink\" title=\"封装 AppLink\"></a>封装 AppLink</h5><p>在<code>src/utils/AppLink.tsx</code>封装</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> React <span class=\"keyword\">from</span> <span class=\"string\">&quot;react&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> type AppLinkProps = &#123;</span><br><span class=\"line\">    to: string;</span><br><span class=\"line\">    message?: string;</span><br><span class=\"line\">    children?: React.ReactNode;</span><br><span class=\"line\">&#125; &amp; React.AnchorHTMLAttributes&lt;any&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// tslint:disable-next-line:variable-name</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> AppLink: React.SFC&lt;AppLinkProps&gt; = <span class=\"function\">(<span class=\"params\">props: AppLinkProps</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; to, message, children, ...rest &#125; = props;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        &lt;a</span><br><span class=\"line\">            &#123;...rest&#125;</span><br><span class=\"line\">            href=&#123;to&#125;</span><br><span class=\"line\">            onClick=&#123;<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                e.preventDefault();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (message &amp;&amp; <span class=\"built_in\">window</span>.confirm(message) === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"built_in\">window</span>.history.pushState(</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        forceRender: <span class=\"literal\">true</span></span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                    <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">                    to</span><br><span class=\"line\">                );</span><br><span class=\"line\">            &#125;&#125;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">            &#123;children&#125;</span><br><span class=\"line\">        &lt;/a&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> AppLink;</span><br></pre></td></tr></table></figure>\n<p>在<code>src/utils/index.tsx</code>声明<code>AppLink</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> &#123; <span class=\"keyword\">default</span> <span class=\"keyword\">as</span> AppLink &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AppLink&quot;</span>;</span><br></pre></td></tr></table></figure>\n<h5 id=\"调用-AppLink\"><a href=\"#调用-AppLink\" class=\"headerlink\" title=\"调用 AppLink\"></a>调用 AppLink</h5><p><img src=\"https://s3.ax1x.com/2021/01/12/sYF6je.png\" alt=\"详情页使用AppLink跳转\"></p>\n<h2 id=\"微应用打包部署\"><a href=\"#微应用打包部署\" class=\"headerlink\" title=\"微应用打包部署\"></a>微应用打包部署</h2><p>项目结构如下</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">icestark-demo</span><br><span class=\"line\">├─node_modules                 # 公共依赖文件</span><br><span class=\"line\">├─docs                         # 项目部署后静态资源地址</span><br><span class=\"line\">|    ├─subapp                  # 子项目静态资源包</span><br><span class=\"line\">|    |   ├icestark-child-icejs # icejs子项目静态资源包</span><br><span class=\"line\">|    |   ├icestark-child-react # creat-react-app子项目静态资源包</span><br><span class=\"line\">|    |   ├icestark-child-vue   # vue cli子项目静态资源包</span><br><span class=\"line\">|    ├─index.html              # 基座打包后入口文件</span><br><span class=\"line\">├─.gitignore                   # 忽略文件</span><br><span class=\"line\">├─README.md                    # 项目介绍</span><br><span class=\"line\">├─package.json                 # 项目依赖</span><br><span class=\"line\">├─packages                     # 项目文件</span><br><span class=\"line\">|    ├─icestark-layout         # 基座</span><br><span class=\"line\">|    |    ├─node_modules       # 子项目依赖文件</span><br><span class=\"line\">|    ├─icestark-child-icejs    # icejs创建子项目</span><br><span class=\"line\">|    ├─icestark-child-react    # creat-react-app创建子项目</span><br><span class=\"line\">|    ├─icestark-child-vue      # vue cli创建子项目</span><br></pre></td></tr></table></figure>\n<h3 id=\"微应用打包\"><a href=\"#微应用打包\" class=\"headerlink\" title=\"微应用打包\"></a>微应用打包</h3><h4 id=\"icejs微应用打包\"><a href=\"#icejs微应用打包\" class=\"headerlink\" title=\"icejs微应用打包\"></a>icejs微应用打包</h4><p>在项目根目录执行build命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 执行打包命令</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn workspace icestark-child-icejs build</span></span><br></pre></td></tr></table></figure>\n<p>执行完毕后，微应用目录下生成build文件夹。</p>\n<p>将其拷贝至根目录docs/subapp/icestark-child-icejs文件下</p>\n<h4 id=\"react微应用打包\"><a href=\"#react微应用打包\" class=\"headerlink\" title=\"react微应用打包\"></a>react微应用打包</h4><p>在项目根目录执行build命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 执行打包命令</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn workspace icestark-child-react build</span></span><br></pre></td></tr></table></figure>\n<p>执行完毕后，微应用目录下生成build文件夹。</p>\n<p>将其拷贝至根目录docs/subapp/icestark-child-react文件下</p>\n<h3 id=\"主应用连接部署后的微应用\"><a href=\"#主应用连接部署后的微应用\" class=\"headerlink\" title=\"主应用连接部署后的微应用\"></a>主应用连接部署后的微应用</h3><p>将项目推送至远端</p>\n<p>此时还无法获取到微应用资源，需将github仓库进行github page修改</p>\n<p>如下图所示</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/02/ymf3ZV.gif\" alt=\"微应用部署\"></p>\n<p>修改后<code>http://www.gaotianyang.top/icestark-demo/</code>地址就指向了项目根目录的docs文件夹</p>\n<p>修改主应用的 src/app.tsx 中覆盖对应的微应用配置的路径</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/02/ymhOhD.png\" alt=\"微应用路径配置\"></p>\n<h2 id=\"主应用打包部署\"><a href=\"#主应用打包部署\" class=\"headerlink\" title=\"主应用打包部署\"></a>主应用打包部署</h2><p>在项目根目录执行build命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 执行打包命令</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn workspace icestark-layout build</span></span><br></pre></td></tr></table></figure>\n<p>将build文件复制到项目docs根目录</p>\n<p>可访问<a href=\"https://www.gaotianyang.top/icestark-demo/\">https://www.gaotianyang.top/icestark-demo/</a>进行查看</p>\n<blockquote>\n<p>注意这里打包需要解决资源获取路径为相对路径的问题。修改主应用的build.json的publicPath，将资源路径改为相对路径即可。</p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;publicPath&quot;</span>: <span class=\"string\">&quot;.&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;plugins&quot;</span>: [</span><br><span class=\"line\">    [</span><br><span class=\"line\">      <span class=\"string\">&quot;build-plugin-icestark&quot;</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;uniqueName&quot;</span>: <span class=\"string\">&quot;frameworkJsonp&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    [</span><br><span class=\"line\">      <span class=\"string\">&quot;build-plugin-fusion&quot;</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;themePackage&quot;</span>: <span class=\"string\">&quot;@alifd/theme-design-pro&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;themeConfig&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">&quot;nextPrefix&quot;</span>: <span class=\"string\">&quot;next-icestark-&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    [</span><br><span class=\"line\">      <span class=\"string\">&quot;build-plugin-moment-locales&quot;</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;locales&quot;</span>: [</span><br><span class=\"line\">          <span class=\"string\">&quot;zh-cn&quot;</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"主应用配置二级路由\"><a href=\"#主应用配置二级路由\" class=\"headerlink\" title=\"主应用配置二级路由\"></a>主应用配置二级路由</h3><p>因为项目部署在github page中，项目地址为二级域名<code>https://www.gaotianyang.top/icestark-demo</code><br>因此项目中的路由配置及跳转信息需要额外配置<code>icestark-demo</code>方可正常显示。</p>\n<p>解决方案如下</p>\n<h4 id=\"获取应用状态并存储二级路由\"><a href=\"#获取应用状态并存储二级路由\" class=\"headerlink\" title=\"获取应用状态并存储二级路由\"></a>获取应用状态并存储二级路由</h4><p>在主应用获取当前应用是处于预览还是打包，并将路由存储在localStorage中。</p>\n<p>在<code>icestark-demo/packages/icestark-layout/src/app.tsx</code>修改微应用path</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">localStorage</span>.setItem(<span class=\"string\">&quot;baseUrl&quot;</span>, process.env.NODE_ENV === <span class=\"string\">&quot;development&quot;</span> ? <span class=\"string\">&quot;&quot;</span> : <span class=\"string\">&quot;/icestark-demo&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> baseUrl = <span class=\"built_in\">localStorage</span>.baseUrl</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.ax1x.com/2021/02/02/ynLxhR.png\" alt=\"微应用path配置二级路由\"></p>\n<h4 id=\"修改主应用路由\"><a href=\"#修改主应用路由\" class=\"headerlink\" title=\"修改主应用路由\"></a>修改主应用路由</h4><p>在<code>icestark-demo/packages/icestark-layout/src/routes.ts</code>修改主应用路由</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/02/ynOLxP.png\" alt=\"主应用路由配置二级路由\"></p>\n<h4 id=\"修改主应用菜单\"><a href=\"#修改主应用菜单\" class=\"headerlink\" title=\"修改主应用菜单\"></a>修改主应用菜单</h4><p>在<code>icestark-demo/packages/icestark-layout/src/layouts/BasicLayout/menuConfig.ts</code>修改主应用菜单</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/02/ynOLxP.png\" alt=\"主应用菜单配置二级路由\"></p>\n<h4 id=\"修改微应用跳转\"><a href=\"#修改微应用跳转\" class=\"headerlink\" title=\"修改微应用跳转\"></a>修改微应用跳转</h4><p><img src=\"https://s3.ax1x.com/2021/02/02/ynXRij.png\" alt=\"微应用跳转路径\"></p>\n<h2 id=\"问题汇总\"><a href=\"#问题汇总\" class=\"headerlink\" title=\"问题汇总\"></a>问题汇总</h2><h3 id=\"GitHub-page-刷新找不到二级域名下的路由地址\"><a href=\"#GitHub-page-刷新找不到二级域名下的路由地址\" class=\"headerlink\" title=\"GitHub-page 刷新找不到二级域名下的路由地址\"></a>GitHub-page 刷新找不到二级域名下的路由地址</h3><p>因为GitHub-page只能存放静态资源。并且不支持.htaccess，<br>所以用webpack构建出来的单页应用，<br>直接将dist文件推送到GitHub-page分支，<br>在切换路由之后，手动刷新是会出现404的。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/05/yGrZZR.png\" alt=\"找不到项目\"></p>\n<p>处理方法</p>\n<ul>\n<li>给站点根目录添加404.html</li>\n</ul>\n<p>一般也就是dist目录下（GitHub-page找不到的路径会自动访问这个404.html）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">      sessionStorage.redirect = location.href;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;refresh&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;0;URL=&#x27;/icestark-demo/&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">      </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这里使用的知识点是<code>&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;URL=&#39;/icestark-demo/&#39;&quot;&gt;</code></p>\n</blockquote>\n<p>常见的几种使用场景</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 这个表示当前页面每5秒钟刷一下，刷一下~ --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;refresh&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;5&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 这个表示当前页面2秒后跳到首页 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;refresh&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;2; url=&#x27;/&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 页面直接跳转到腾讯网 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;refresh&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;0; url=&#x27;http://www.qq.com/&#x27;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>给index.html添加重定向逻辑</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">// 这段代码要放在其他js的前面</span></span></span><br><span class=\"line\"><span class=\"javascript\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> redirect = sessionStorage.redirect;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">delete</span> sessionStorage.redirect;</span></span><br><span class=\"line\">    if (redirect &amp;&amp; redirect != location.href) &#123;</span><br><span class=\"line\"><span class=\"javascript\">      history.replaceState(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>, redirect);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"ice-stark-2-0-0版本问题\"><a href=\"#ice-stark-2-0-0版本问题\" class=\"headerlink\" title=\"@ice/stark^2.0.0版本问题\"></a>@ice/stark^2.0.0版本问题</h3><p>当项目安装的@ice/stark是2.1.0时，会出现entry的地址获取js、css路径不正确。<br>此时需将版本降至2.0.2即可修复。可通过复制并整体替换处理。</p>\n<p>处理方法</p>\n<ul>\n<li>先正常yarn项目</li>\n<li>打开根目录的node_modules/@ice/stark</li>\n<li>将2.0.2版本的ice-stark整体替换至改目录下即可</li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://ice.work/docs/icestark/start\">icestark快速上手</a></li>\n<li><a href=\"https://ice.work/docs/guide/basic/router#%E8%BF%90%E8%A1%8C%E6%97%B6%E9%85%8D%E7%BD%AE\">路由运行时配置</a></li>\n<li><a href=\"https://ice.work/docs/guide/basic/api#Link\">Link</a></li>\n<li><a href=\"https://ice.work/docs/guide/basic/api#useHistory\">useHistory</a></li>\n<li><a href=\"https://ice.work/docs/guide/basic/api#history\">history</a></li>\n<li><a href=\"https://ice.work/docs/icestark/guide/child-app#%E5%BE%AE%E5%BA%94%E7%94%A8%E9%97%B4%E8%B7%B3%E8%BD%AC\">微应用间跳转</a></li>\n<li><a href=\"https://ice.work/docs/guide/basic/build#publicPath\">主应用打包后资源改为相对路径</a></li>\n<li><a href=\"https://ice.work/docs/guide/basic/api#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\">框架API-环境变量</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000012951274\">单页应用在gh-pages动态路由刷新后404解决方案</a></li>\n<li><a href=\"https://www.zhangxinxu.com/wordpress/2015/03/meta-http-equiv-refresh-content/\">使用meta实现页面的定时刷新或跳转</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s3.ax1x.com/2021/01/12/sG4eTP.jpg\" alt=\"首屏图\"></p>","more":"<p>本文演示如何快速创建微前端的应用及改造已有应用接入微前端，基座创建使用的是 icejs，微应用是使用的 icejs、create-react-app分别创建。</p>\n<blockquote>\n<p><a href=\"https://github.com/mitudegaoyang/icestark-demo\">项目demo仓库地址</a><br><a href=\"https://www.gaotianyang.top/icestark-demo\">项目demo预览地址</a></p>\n</blockquote>\n<h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><p>创建项目，并拉取到本地。在根目录分别创建package.json、和packages文件夹。</p>\n<p>初始化package.json将项目对应名称填写完整</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;icestark-demo&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;private&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;workspaces&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-layout&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-child-icejs&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-child-react&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-child-vue&quot;</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>进入项目目录<code>packages</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd packages/</span><br></pre></td></tr></table></figure>\n<h2 id=\"初始化主应用\"><a href=\"#初始化主应用\" class=\"headerlink\" title=\"初始化主应用\"></a>初始化主应用</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 基于 React 的主应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm init ice icestark-layout @icedesign/stark-layout-scaffold</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 或者基于 Vue 的主应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm init ice icestark-layout @vue-materials/icestark-layout-app</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意需要将主应用中<code>package.json</code>的name改为<code>icestark-layout</code></p>\n</blockquote>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><p>回到根目录执行yarn命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装依赖</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 预览主应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn workspaces icestark-layout start</span></span><br></pre></td></tr></table></figure>\n<p>即可通过浏览器预览整个应用：</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/28/ypQBDK.gif\" alt=\"主应用预览\"></p>\n<p>打开主应用 <code>src/app.tsx</code> 即可看到默认注册的几个微应用。</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/28/yp1rfH.png\" alt=\"默认注册微应用\"></p>\n<h2 id=\"初始化微应用\"><a href=\"#初始化微应用\" class=\"headerlink\" title=\"初始化微应用\"></a>初始化微应用</h2><h3 id=\"基于icejs初始化微应用\"><a href=\"#基于icejs初始化微应用\" class=\"headerlink\" title=\"基于icejs初始化微应用\"></a>基于icejs初始化微应用</h3><p>进入项目目录<code>packages</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 基于 React 的微应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm init ice icestark-child-icejs @icedesign/stark-child-scaffold</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 基于 Vue 的微应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm init ice icestark-child-icejs @vue-materials/icestark-child-app</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 回到根目录安装icejs微应用依赖 ./icestark-demo/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装依赖</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 预览微应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn workspaces icestark-child-icejs start</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意这里也需要将微应用中<code>package.json</code>的name改为<code>icestark-child-icejs</code></p>\n</blockquote>\n<p>可以在主应用的 <code>src/app.tsx</code> 中增加对应的微应用配置。</p>\n<p>如果不需要改造现有项目，可直接跳过基于create-react-app改造微应用和基于vue cli改造微应用。<br>直接查看<a href=\"/archives/202101115b56e29a/#微应用本地调试\">微应用本地调试</a>。</p>\n<h3 id=\"基于create-react-app改造微应用\"><a href=\"#基于create-react-app改造微应用\" class=\"headerlink\" title=\"基于create-react-app改造微应用\"></a>基于create-react-app改造微应用</h3><h4 id=\"create-react-app创建react应用\"><a href=\"#create-react-app创建react应用\" class=\"headerlink\" title=\"create-react-app创建react应用\"></a>create-react-app创建react应用</h4><p>进入项目目录<code>packages</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 使用npm初始化app</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm create-react-app icestark-child-react --template typescript</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"comment\"># 或者使用yarn初始化</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn create react-app icestark-child-react --template typescript</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 在icestark-child-react引入ice/stark-app</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ./icestark-demo/icestark-child-react/</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn add @ice/stark-app</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 回到根目录安装react微应用依赖</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ./icestark-demo/</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装依赖</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 预览微应用</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn workspaces icestark-child-react start</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>更改微应用name为<code>icestark-child-react</code></p>\n</blockquote>\n<p>此时会出现缺少babel-loader的报错提示</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/28/y9Ya4K.png\" alt=\"缺少babel-loader@8.1.0\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 在icestark-child-react引入babel-loader</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ./icestark-demo/icestark-child-react/</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn add babel-loader@8.1.0</span></span><br></pre></td></tr></table></figure>\n<p>再次启动提示eslint版本不正确</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/28/y9N4mj.png\" alt=\"缺少eslint^7.11.0\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 在icestark-child-react引入eslint</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ./icestark-demo/icestark-child-react/</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn add eslint --dev</span></span><br></pre></td></tr></table></figure>\n<p>由于workspaces的依赖判断问题，导致运行icestark-child-react时，没有使用子项目中的eslint版本，此时需要将高版本的eslint存储到外层的公共node_modules中。</p>\n<p>修改根目录的package.json后再次执行yarn</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;icestark-demo&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;private&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;workspaces&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-layout&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-child-icejs&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-child-react&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;packages/icestark-child-vue&quot;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">&quot;devDependencies&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;eslint&quot;</span>: <span class=\"string\">&quot;^7.11.0&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"应用入口适配\"><a href=\"#应用入口适配\" class=\"headerlink\" title=\"应用入口适配\"></a>应用入口适配</h4><p>将 React 应用改造为微应用，仅仅只需要导出对应的生命周期即可：</p>\n<p>修改微应用 <code>src/index.tsx</code> 的微应用入口</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> ReactDOM <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dom&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; isInIcestark &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark-app&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mount</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; container, customProps &#125; = props;</span><br><span class=\"line\">  ReactDOM.render(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span> &#123;<span class=\"attr\">...customProps</span>&#125; /&gt;</span></span>, container);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unmount</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; container &#125; = props;</span><br><span class=\"line\">  ReactDOM.unmountComponentAtNode(container);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (isInIcestark()) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;app is running in framework app&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  ReactDOM.render(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span> /&gt;</span></span>, <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;ice-container&#x27;</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"基于vue-cli改造微应用\"><a href=\"#基于vue-cli改造微应用\" class=\"headerlink\" title=\"基于vue cli改造微应用\"></a>基于vue cli改造微应用</h3><h2 id=\"微应用本地调试\"><a href=\"#微应用本地调试\" class=\"headerlink\" title=\"微应用本地调试\"></a>微应用本地调试</h2><h3 id=\"本地调试icejs微应用\"><a href=\"#本地调试icejs微应用\" class=\"headerlink\" title=\"本地调试icejs微应用\"></a>本地调试icejs微应用</h3><p>单独微应用开发时只能看到自身的内容，无法关注到在主应用下的表现，这时候本地如果需要再启动一个主应用，<br>开发起来就很繁琐。针对这种情况，我们推荐通过主应用的日常/线上环境调试本地微应用。</p>\n<p>查看微应用的js、css资源路径。</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/11/s8dUlF.png\" alt=\"查看微应用js路径\"><br><img src=\"https://s3.ax1x.com/2021/01/11/s8dhmd.png\" alt=\"查看微应用css路径\"></p>\n<p>在主应用的 <code>src/app.tsx</code> 中覆盖对应的微应用配置的路径</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/11/s8djmj.png\" alt=\"覆盖微应用路径\"></p>\n<p>此时打开主应用的对应微应用模块，会发现微应用没有正常显示，原因是微应用没有获取正确的basename。</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/11/s8Ba6S.png\" alt=\"微应用不显示\"></p>\n<p>参考<a href=\"https://ice.work/docs/guide/basic/router#%E8%BF%90%E8%A1%8C%E6%97%B6%E9%85%8D%E7%BD%AE\">运行时配置</a></p>\n<p>在微应用 <code>src/app.ts</code> 中，我们可以配置路由的类型和基础路径等信息，具体配置如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; runApp, IAppConfig &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;ice&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> appConfig: IAppConfig = &#123;</span><br><span class=\"line\">  router: &#123;</span><br><span class=\"line\">    type: <span class=\"string\">&#x27;browser&#x27;</span>,</span><br><span class=\"line\">    basename: <span class=\"string\">&#x27;/seller&#x27;</span>,</span><br><span class=\"line\">    fallback: <span class=\"string\">`&lt;div&gt;loading...&lt;/div&gt;`</span>,</span><br><span class=\"line\">    modifyRoutes: <span class=\"function\">(<span class=\"params\">routes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> routes;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  icestark: &#123;</span><br><span class=\"line\">    type: <span class=\"string\">&#x27;child&#x27;</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">runApp(appConfig);</span><br></pre></td></tr></table></figure>\n<h3 id=\"本地调试react微应用\"><a href=\"#本地调试react微应用\" class=\"headerlink\" title=\"本地调试react微应用\"></a>本地调试react微应用</h3><h4 id=\"定义基准路由\"><a href=\"#定义基准路由\" class=\"headerlink\" title=\"定义基准路由\"></a>定义基准路由</h4><p>正常情况下，注册微应用时会为每个微应用分配一个基准路由比如 <code>/waiter</code>，<br>当前微应用的所有路由需要定义在基准路由之下，社区常见的路由库都可以通过参数非常简单的实现该功能。<br>微应用可以通过 getBasename() API 获取自身的基准路由。</p>\n<p>React 项目中使用 react-router-dom：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 引入react-router-dom</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn add react-router-dom</span></span><br></pre></td></tr></table></figure>\n<p>修改icestark-child-react/src/App.tsx</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; BrowserRouter <span class=\"keyword\">as</span> Router, Route, Switch &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router-dom&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; getBasename, renderNotFound &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark-app&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Home <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./routes/Home&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> List <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./routes/List&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Detail <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./routes/Detail&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;./App.css&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// #原有代码</span></span><br><span class=\"line\"><span class=\"comment\">// function App() &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   return (</span></span><br><span class=\"line\"><span class=\"comment\">//     &lt;div className=&quot;App&quot;&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//       &lt;header className=&quot;App-header&quot;&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//         &lt;img src=&#123;logo&#125; className=&quot;App-logo&quot; alt=&quot;logo&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//         &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//           Edit &lt;code&gt;src/App.tsx&lt;/code&gt; and save to reload.</span></span><br><span class=\"line\"><span class=\"comment\">//         &lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//         &lt;a</span></span><br><span class=\"line\"><span class=\"comment\">//           className=&quot;App-link&quot;</span></span><br><span class=\"line\"><span class=\"comment\">//           href=&quot;https://reactjs.org&quot;</span></span><br><span class=\"line\"><span class=\"comment\">//           target=&quot;_blank&quot;</span></span><br><span class=\"line\"><span class=\"comment\">//           rel=&quot;noopener noreferrer&quot;</span></span><br><span class=\"line\"><span class=\"comment\">//         &gt;</span></span><br><span class=\"line\"><span class=\"comment\">//           Learn React</span></span><br><span class=\"line\"><span class=\"comment\">//         &lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//       &lt;/header&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//     &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//   );</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// #因tslint规定&lt;Route&gt;的component必须是JSX而添加的改动</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">notFound</span>(<span class=\"params\">props: any</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;&gt;</span><br><span class=\"line\">      &#123;renderNotFound()&#125;</span><br><span class=\"line\">    &lt;/&gt;</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">App</span>(<span class=\"params\">props: any</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;Router basename=&#123;getBasename()&#125;&gt;</span><br><span class=\"line\">      &lt;Switch&gt;</span><br><span class=\"line\">        &lt;Route exact path=<span class=\"string\">&quot;/&quot;</span> component=&#123;Home&#125;&gt;&lt;/Route&gt;</span><br><span class=\"line\">        &lt;Route exact path=<span class=\"string\">&quot;/list&quot;</span> component=&#123;List&#125;&gt;&lt;/Route&gt;</span><br><span class=\"line\">        &lt;Route exact path=<span class=\"string\">&quot;/list/detail/:contractId&quot;</span> component=&#123;Detail&#125; /&gt;</span><br><span class=\"line\">        &lt;Route</span><br><span class=\"line\">          component=&#123;notFound&#125;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">      &lt;/Switch&gt;</span><br><span class=\"line\">    &lt;/Router&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> App;</span><br></pre></td></tr></table></figure>\n<p>查看微应用的端口地址</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/01/yZvbk9.png\" alt=\"查看微应用端口地址\"></p>\n<p>在主应用的 src/app.tsx 中覆盖对应的微应用配置的路径</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/01/yZx3pq.png\" alt=\"覆盖微应用路径\"></p>\n<blockquote>\n<p>这里无法使用src获取到react微应用，需要使用entry来自动匹配微应用资源。</p>\n</blockquote>\n<h2 id=\"路由跳转\"><a href=\"#路由跳转\" class=\"headerlink\" title=\"路由跳转\"></a>路由跳转</h2><h3 id=\"微应用内跳转\"><a href=\"#微应用内跳转\" class=\"headerlink\" title=\"微应用内跳转\"></a>微应用内跳转</h3><h4 id=\"使用Link组件\"><a href=\"#使用Link组件\" class=\"headerlink\" title=\"使用Link组件\"></a>使用Link组件</h4><p>通过 <code>&lt;Link /&gt;</code> 标签组件可实现路由跳转，使用方式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Link &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;ice&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Demo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">      &lt;Link to=<span class=\"string\">&#x27;/courses?sort=name&#x27;</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#123;<span class=\"comment\">/* 可以携带额外的数据 `state` 到路由中。 */</span>&#125;</span><br><span class=\"line\">      &lt;Link</span><br><span class=\"line\">        to=&#123;&#123;</span><br><span class=\"line\">          pathname: <span class=\"string\">&#x27;/courses&#x27;</span>,</span><br><span class=\"line\">          search: <span class=\"string\">&#x27;?sort=name&#x27;</span>,</span><br><span class=\"line\">          hash: <span class=\"string\">&#x27;#the-hash&#x27;</span>,</span><br><span class=\"line\">          state: &#123; <span class=\"attr\">fromDashboard</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">        &#125;&#125;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在示例项目中使用如下</p>\n</blockquote>\n<h5 id=\"修改详情页路由\"><a href=\"#修改详情页路由\" class=\"headerlink\" title=\"修改详情页路由\"></a>修改详情页路由</h5><p>修改微应用 <code>src/routes.tsx</code> 的详情页路由</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; renderNotFound, isInIcestark &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark-app&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> BasicLayout <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/layouts/BasicLayout&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Detail <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/pages/Detail&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Home <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/pages/Home&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> List <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/pages/List&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> NotFound <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/NotFound&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> routerConfig = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">    component: BasicLayout,</span><br><span class=\"line\">    children: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        path: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">        exact: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        component: Home,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        path: <span class=\"string\">&#x27;/list&#x27;</span>,</span><br><span class=\"line\">        exact: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        component: List,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        path: <span class=\"string\">&#x27;/list/detail/:contractId&#x27;</span>,</span><br><span class=\"line\">        component: Detail,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 微应用独立运行 404 路由渲染 NotFound 组件</span></span><br><span class=\"line\">        component: isInIcestark() ? <span class=\"function\">() =&gt;</span> renderNotFound() : NotFound,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> routerConfig;</span><br></pre></td></tr></table></figure>\n<h5 id=\"修改Link组件传参\"><a href=\"#修改Link组件传参\" class=\"headerlink\" title=\"修改Link组件传参\"></a>修改Link组件传参</h5><p>修改微应用 <code>src/list/index.tsx</code> 的列表页Link组件，添加传参</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Table.Column</span><br><span class=\"line\">  title=<span class=\"string\">&quot;操作&quot;</span></span><br><span class=\"line\">  dataIndex=<span class=\"string\">&quot;detail&quot;</span></span><br><span class=\"line\">  key=<span class=\"string\">&quot;detail&quot;</span></span><br><span class=\"line\">  width=&#123;<span class=\"number\">200</span>&#125;</span><br><span class=\"line\">  cell=&#123;<span class=\"function\">(<span class=\"params\">value, index, record</span>) =&gt;</span> (</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">      &lt;a className=&#123;styles.link&#125; onClick=&#123;<span class=\"function\">() =&gt;</span> Message.success(<span class=\"string\">&#x27;暂不支持修改合同&#x27;</span>)&#125;&gt;</span><br><span class=\"line\">        修改</span><br><span class=\"line\">      &lt;/a&gt;</span><br><span class=\"line\">      &lt;span className=&#123;styles.separator&#125; /&gt;</span><br><span class=\"line\">      &lt;Link className=&#123;styles.link&#125; to=&#123;<span class=\"string\">`/list/detail/<span class=\"subst\">$&#123;data[index].id&#125;</span>`</span>&#125;&gt;</span><br><span class=\"line\">        查看</span><br><span class=\"line\">      &lt;/Link&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  )&#125;</span><br><span class=\"line\">/&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"详情页接收参数\"><a href=\"#详情页接收参数\" class=\"headerlink\" title=\"详情页接收参数\"></a>详情页接收参数</h5><p>引入<code>useRouteMatch</code>并获取<code>contractId</code></p>\n<p><img src=\"https://s3.ax1x.com/2021/01/12/sGzbE8.png\" alt=\"详情页接收参数\"></p>\n<h4 id=\"使用-useHistory-API\"><a href=\"#使用-useHistory-API\" class=\"headerlink\" title=\"使用 useHistory API\"></a>使用 useHistory API</h4><p>useHistory hook 用于获取 history 实例。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;ice&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">HomeButton</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> history = useHistory();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleClick</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    history.push(<span class=\"string\">&#x27;/home&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;button type=<span class=\"string\">&#x27;button&#x27;</span> onClick=&#123;handleClick&#125;&gt;</span><br><span class=\"line\">      Go home</span><br><span class=\"line\">    &lt;/button&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在示例项目中使用如下</p>\n</blockquote>\n<h5 id=\"详情页添加返回按钮\"><a href=\"#详情页添加返回按钮\" class=\"headerlink\" title=\"详情页添加返回按钮\"></a>详情页添加返回按钮</h5><p>在微应用的<code>src/detail/index.tsx</code>引入<code>useHistory</code>方法，声明返回方法并调用<code>useHistory</code>，将返回按钮传入<code>PageTitle</code>组件。</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/12/sJyR8s.png\" alt=\"详情页添加返回按钮\"></p>\n<p>改造微应用的<code>/src/components/PageTitle/index.tsx</code>文件，扩展<code>PageTitle</code>组件接收subTitle参数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> styles <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./index.module.scss&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 原组件</span></span><br><span class=\"line\"><span class=\"comment\">// export default (&#123; title, subTitle &#125;) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     &lt;h5 className=&#123;styles.title&#125;&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//         &lt;span&gt;&#123;title&#125;&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//         &lt;span&gt;&#123;subTitle&#125;&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//     &lt;/h5&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> interface PageTitleProps &#123;</span><br><span class=\"line\">    title?: any;</span><br><span class=\"line\">    subTitle?: any;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">PageTitle</span>(<span class=\"params\">props: PageTitleProps</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> &#123; title, subTitle &#125; = props;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        &lt;h5 className=&#123;styles.title&#125;&gt;</span><br><span class=\"line\">            &lt;span&gt;&#123;title&#125;&lt;/span&gt;</span><br><span class=\"line\">            &lt;span className=&#123;styles.subTitle&#125;&gt;&#123;subTitle&#125;&lt;/span&gt;</span><br><span class=\"line\">        &lt;/h5&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用-history-API\"><a href=\"#使用-history-API\" class=\"headerlink\" title=\"使用 history API\"></a>使用 history API</h4><p>在微应用的<code>src/detail/index.tsx</code>引入<code>history</code>方法，声明返回方法并调用<code>history</code>，将返回按钮传入<code>PageTitle</code>组件。</p>\n<p><img src=\"https://s3.ax1x.com/2021/01/12/sYCU0I.png\" alt=\"详情页使用history跳转\"></p>\n<h3 id=\"微应用间跳转\"><a href=\"#微应用间跳转\" class=\"headerlink\" title=\"微应用间跳转\"></a>微应用间跳转</h3><h4 id=\"使用-appHistory\"><a href=\"#使用-appHistory\" class=\"headerlink\" title=\"使用 appHistory\"></a>使用 appHistory</h4><p>在 A 微应用里需要跳转到 B 微应用时，如果使用 react-router/vue-router 提供的 Link 组件，<br>一般会强行在 path 上追加 basename，因此推荐使用 appHistory/AppLink 来跳转：</p>\n<p>注意：AppLink 仅支持在基于 React 的微应用中使用，appHistory 不限制微应用的框架类型</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; appHistory, AppLink &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@ice/stark-app&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">FrameworkLayout</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;&gt;</span><br><span class=\"line\">      &lt;span</span><br><span class=\"line\">        onClick=&#123;<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">          appHistory.push(<span class=\"string\">&#x27;/seller/list&#x27;</span>);</span><br><span class=\"line\">        &#125;&#125;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">        seller</span><br><span class=\"line\">      &lt;/span&gt;</span><br><span class=\"line\">      &lt;AppLink to=<span class=\"string\">&quot;/waiter/list&quot;</span>&gt;waiter&lt;/AppLink&gt;</span><br><span class=\"line\">    &lt;/&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在示例项目中使用如下</p>\n</blockquote>\n<p><img src=\"https://s3.ax1x.com/2021/02/01/yeA8IK.png\" alt=\"微应用间跳转\"></p>\n<p><img src=\"https://s3.ax1x.com/2021/02/01/yeEpFK.gif\" alt=\"微应用间跳转\"></p>\n<h4 id=\"使用-AppLink\"><a href=\"#使用-AppLink\" class=\"headerlink\" title=\"使用 AppLink\"></a>使用 AppLink</h4><blockquote>\n<p><del>直接使用ice中的AppLink会报错，需要自己封装个AppLink来跳转。</del></p>\n</blockquote>\n<p>示例在上个章节已介绍。</p>\n<h5 id=\"封装-AppLink\"><a href=\"#封装-AppLink\" class=\"headerlink\" title=\"封装 AppLink\"></a>封装 AppLink</h5><p>在<code>src/utils/AppLink.tsx</code>封装</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> React <span class=\"keyword\">from</span> <span class=\"string\">&quot;react&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> type AppLinkProps = &#123;</span><br><span class=\"line\">    to: string;</span><br><span class=\"line\">    message?: string;</span><br><span class=\"line\">    children?: React.ReactNode;</span><br><span class=\"line\">&#125; &amp; React.AnchorHTMLAttributes&lt;any&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// tslint:disable-next-line:variable-name</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> AppLink: React.SFC&lt;AppLinkProps&gt; = <span class=\"function\">(<span class=\"params\">props: AppLinkProps</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; to, message, children, ...rest &#125; = props;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        &lt;a</span><br><span class=\"line\">            &#123;...rest&#125;</span><br><span class=\"line\">            href=&#123;to&#125;</span><br><span class=\"line\">            onClick=&#123;<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                e.preventDefault();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (message &amp;&amp; <span class=\"built_in\">window</span>.confirm(message) === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"built_in\">window</span>.history.pushState(</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        forceRender: <span class=\"literal\">true</span></span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                    <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">                    to</span><br><span class=\"line\">                );</span><br><span class=\"line\">            &#125;&#125;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">            &#123;children&#125;</span><br><span class=\"line\">        &lt;/a&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> AppLink;</span><br></pre></td></tr></table></figure>\n<p>在<code>src/utils/index.tsx</code>声明<code>AppLink</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> &#123; <span class=\"keyword\">default</span> <span class=\"keyword\">as</span> AppLink &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AppLink&quot;</span>;</span><br></pre></td></tr></table></figure>\n<h5 id=\"调用-AppLink\"><a href=\"#调用-AppLink\" class=\"headerlink\" title=\"调用 AppLink\"></a>调用 AppLink</h5><p><img src=\"https://s3.ax1x.com/2021/01/12/sYF6je.png\" alt=\"详情页使用AppLink跳转\"></p>\n<h2 id=\"微应用打包部署\"><a href=\"#微应用打包部署\" class=\"headerlink\" title=\"微应用打包部署\"></a>微应用打包部署</h2><p>项目结构如下</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">icestark-demo</span><br><span class=\"line\">├─node_modules                 # 公共依赖文件</span><br><span class=\"line\">├─docs                         # 项目部署后静态资源地址</span><br><span class=\"line\">|    ├─subapp                  # 子项目静态资源包</span><br><span class=\"line\">|    |   ├icestark-child-icejs # icejs子项目静态资源包</span><br><span class=\"line\">|    |   ├icestark-child-react # creat-react-app子项目静态资源包</span><br><span class=\"line\">|    |   ├icestark-child-vue   # vue cli子项目静态资源包</span><br><span class=\"line\">|    ├─index.html              # 基座打包后入口文件</span><br><span class=\"line\">├─.gitignore                   # 忽略文件</span><br><span class=\"line\">├─README.md                    # 项目介绍</span><br><span class=\"line\">├─package.json                 # 项目依赖</span><br><span class=\"line\">├─packages                     # 项目文件</span><br><span class=\"line\">|    ├─icestark-layout         # 基座</span><br><span class=\"line\">|    |    ├─node_modules       # 子项目依赖文件</span><br><span class=\"line\">|    ├─icestark-child-icejs    # icejs创建子项目</span><br><span class=\"line\">|    ├─icestark-child-react    # creat-react-app创建子项目</span><br><span class=\"line\">|    ├─icestark-child-vue      # vue cli创建子项目</span><br></pre></td></tr></table></figure>\n<h3 id=\"微应用打包\"><a href=\"#微应用打包\" class=\"headerlink\" title=\"微应用打包\"></a>微应用打包</h3><h4 id=\"icejs微应用打包\"><a href=\"#icejs微应用打包\" class=\"headerlink\" title=\"icejs微应用打包\"></a>icejs微应用打包</h4><p>在项目根目录执行build命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 执行打包命令</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn workspace icestark-child-icejs build</span></span><br></pre></td></tr></table></figure>\n<p>执行完毕后，微应用目录下生成build文件夹。</p>\n<p>将其拷贝至根目录docs/subapp/icestark-child-icejs文件下</p>\n<h4 id=\"react微应用打包\"><a href=\"#react微应用打包\" class=\"headerlink\" title=\"react微应用打包\"></a>react微应用打包</h4><p>在项目根目录执行build命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 执行打包命令</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn workspace icestark-child-react build</span></span><br></pre></td></tr></table></figure>\n<p>执行完毕后，微应用目录下生成build文件夹。</p>\n<p>将其拷贝至根目录docs/subapp/icestark-child-react文件下</p>\n<h3 id=\"主应用连接部署后的微应用\"><a href=\"#主应用连接部署后的微应用\" class=\"headerlink\" title=\"主应用连接部署后的微应用\"></a>主应用连接部署后的微应用</h3><p>将项目推送至远端</p>\n<p>此时还无法获取到微应用资源，需将github仓库进行github page修改</p>\n<p>如下图所示</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/02/ymf3ZV.gif\" alt=\"微应用部署\"></p>\n<p>修改后<code>http://www.gaotianyang.top/icestark-demo/</code>地址就指向了项目根目录的docs文件夹</p>\n<p>修改主应用的 src/app.tsx 中覆盖对应的微应用配置的路径</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/02/ymhOhD.png\" alt=\"微应用路径配置\"></p>\n<h2 id=\"主应用打包部署\"><a href=\"#主应用打包部署\" class=\"headerlink\" title=\"主应用打包部署\"></a>主应用打包部署</h2><p>在项目根目录执行build命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 执行打包命令</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn workspace icestark-layout build</span></span><br></pre></td></tr></table></figure>\n<p>将build文件复制到项目docs根目录</p>\n<p>可访问<a href=\"https://www.gaotianyang.top/icestark-demo/\">https://www.gaotianyang.top/icestark-demo/</a>进行查看</p>\n<blockquote>\n<p>注意这里打包需要解决资源获取路径为相对路径的问题。修改主应用的build.json的publicPath，将资源路径改为相对路径即可。</p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;publicPath&quot;</span>: <span class=\"string\">&quot;.&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;plugins&quot;</span>: [</span><br><span class=\"line\">    [</span><br><span class=\"line\">      <span class=\"string\">&quot;build-plugin-icestark&quot;</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;uniqueName&quot;</span>: <span class=\"string\">&quot;frameworkJsonp&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    [</span><br><span class=\"line\">      <span class=\"string\">&quot;build-plugin-fusion&quot;</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;themePackage&quot;</span>: <span class=\"string\">&quot;@alifd/theme-design-pro&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;themeConfig&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">&quot;nextPrefix&quot;</span>: <span class=\"string\">&quot;next-icestark-&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    [</span><br><span class=\"line\">      <span class=\"string\">&quot;build-plugin-moment-locales&quot;</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;locales&quot;</span>: [</span><br><span class=\"line\">          <span class=\"string\">&quot;zh-cn&quot;</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"主应用配置二级路由\"><a href=\"#主应用配置二级路由\" class=\"headerlink\" title=\"主应用配置二级路由\"></a>主应用配置二级路由</h3><p>因为项目部署在github page中，项目地址为二级域名<code>https://www.gaotianyang.top/icestark-demo</code><br>因此项目中的路由配置及跳转信息需要额外配置<code>icestark-demo</code>方可正常显示。</p>\n<p>解决方案如下</p>\n<h4 id=\"获取应用状态并存储二级路由\"><a href=\"#获取应用状态并存储二级路由\" class=\"headerlink\" title=\"获取应用状态并存储二级路由\"></a>获取应用状态并存储二级路由</h4><p>在主应用获取当前应用是处于预览还是打包，并将路由存储在localStorage中。</p>\n<p>在<code>icestark-demo/packages/icestark-layout/src/app.tsx</code>修改微应用path</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">localStorage</span>.setItem(<span class=\"string\">&quot;baseUrl&quot;</span>, process.env.NODE_ENV === <span class=\"string\">&quot;development&quot;</span> ? <span class=\"string\">&quot;&quot;</span> : <span class=\"string\">&quot;/icestark-demo&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> baseUrl = <span class=\"built_in\">localStorage</span>.baseUrl</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.ax1x.com/2021/02/02/ynLxhR.png\" alt=\"微应用path配置二级路由\"></p>\n<h4 id=\"修改主应用路由\"><a href=\"#修改主应用路由\" class=\"headerlink\" title=\"修改主应用路由\"></a>修改主应用路由</h4><p>在<code>icestark-demo/packages/icestark-layout/src/routes.ts</code>修改主应用路由</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/02/ynOLxP.png\" alt=\"主应用路由配置二级路由\"></p>\n<h4 id=\"修改主应用菜单\"><a href=\"#修改主应用菜单\" class=\"headerlink\" title=\"修改主应用菜单\"></a>修改主应用菜单</h4><p>在<code>icestark-demo/packages/icestark-layout/src/layouts/BasicLayout/menuConfig.ts</code>修改主应用菜单</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/02/ynOLxP.png\" alt=\"主应用菜单配置二级路由\"></p>\n<h4 id=\"修改微应用跳转\"><a href=\"#修改微应用跳转\" class=\"headerlink\" title=\"修改微应用跳转\"></a>修改微应用跳转</h4><p><img src=\"https://s3.ax1x.com/2021/02/02/ynXRij.png\" alt=\"微应用跳转路径\"></p>\n<h2 id=\"问题汇总\"><a href=\"#问题汇总\" class=\"headerlink\" title=\"问题汇总\"></a>问题汇总</h2><h3 id=\"GitHub-page-刷新找不到二级域名下的路由地址\"><a href=\"#GitHub-page-刷新找不到二级域名下的路由地址\" class=\"headerlink\" title=\"GitHub-page 刷新找不到二级域名下的路由地址\"></a>GitHub-page 刷新找不到二级域名下的路由地址</h3><p>因为GitHub-page只能存放静态资源。并且不支持.htaccess，<br>所以用webpack构建出来的单页应用，<br>直接将dist文件推送到GitHub-page分支，<br>在切换路由之后，手动刷新是会出现404的。</p>\n<p><img src=\"https://s3.ax1x.com/2021/02/05/yGrZZR.png\" alt=\"找不到项目\"></p>\n<p>处理方法</p>\n<ul>\n<li>给站点根目录添加404.html</li>\n</ul>\n<p>一般也就是dist目录下（GitHub-page找不到的路径会自动访问这个404.html）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">      sessionStorage.redirect = location.href;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;refresh&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;0;URL=&#x27;/icestark-demo/&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">      </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这里使用的知识点是<code>&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;URL=&#39;/icestark-demo/&#39;&quot;&gt;</code></p>\n</blockquote>\n<p>常见的几种使用场景</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 这个表示当前页面每5秒钟刷一下，刷一下~ --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;refresh&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;5&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 这个表示当前页面2秒后跳到首页 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;refresh&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;2; url=&#x27;/&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 页面直接跳转到腾讯网 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;refresh&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;0; url=&#x27;http://www.qq.com/&#x27;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>给index.html添加重定向逻辑</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">// 这段代码要放在其他js的前面</span></span></span><br><span class=\"line\"><span class=\"javascript\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> redirect = sessionStorage.redirect;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">delete</span> sessionStorage.redirect;</span></span><br><span class=\"line\">    if (redirect &amp;&amp; redirect != location.href) &#123;</span><br><span class=\"line\"><span class=\"javascript\">      history.replaceState(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>, redirect);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"ice-stark-2-0-0版本问题\"><a href=\"#ice-stark-2-0-0版本问题\" class=\"headerlink\" title=\"@ice/stark^2.0.0版本问题\"></a>@ice/stark^2.0.0版本问题</h3><p>当项目安装的@ice/stark是2.1.0时，会出现entry的地址获取js、css路径不正确。<br>此时需将版本降至2.0.2即可修复。可通过复制并整体替换处理。</p>\n<p>处理方法</p>\n<ul>\n<li>先正常yarn项目</li>\n<li>打开根目录的node_modules/@ice/stark</li>\n<li>将2.0.2版本的ice-stark整体替换至改目录下即可</li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://ice.work/docs/icestark/start\">icestark快速上手</a></li>\n<li><a href=\"https://ice.work/docs/guide/basic/router#%E8%BF%90%E8%A1%8C%E6%97%B6%E9%85%8D%E7%BD%AE\">路由运行时配置</a></li>\n<li><a href=\"https://ice.work/docs/guide/basic/api#Link\">Link</a></li>\n<li><a href=\"https://ice.work/docs/guide/basic/api#useHistory\">useHistory</a></li>\n<li><a href=\"https://ice.work/docs/guide/basic/api#history\">history</a></li>\n<li><a href=\"https://ice.work/docs/icestark/guide/child-app#%E5%BE%AE%E5%BA%94%E7%94%A8%E9%97%B4%E8%B7%B3%E8%BD%AC\">微应用间跳转</a></li>\n<li><a href=\"https://ice.work/docs/guide/basic/build#publicPath\">主应用打包后资源改为相对路径</a></li>\n<li><a href=\"https://ice.work/docs/guide/basic/api#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\">框架API-环境变量</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000012951274\">单页应用在gh-pages动态路由刷新后404解决方案</a></li>\n<li><a href=\"https://www.zhangxinxu.com/wordpress/2015/03/meta-http-equiv-refresh-content/\">使用meta实现页面的定时刷新或跳转</a></li>\n</ul>"},{"title":"Dart教程","abbrlink":"9c01b81e","date":"2021-02-22T06:37:13.000Z","toc":true,"_content":"\n![首屏图](https://s3.ax1x.com/2021/03/01/6iYQbt.png)\n\n<!-- more -->\n\n## Dart介绍\n\nDart是由谷歌开发的计算机编程语言，它可以用于web、服务器、移动应用和物联网等领域的开发。\n\nDart 诞生于2011年，号称起到javaScript/但是过去的几年中一直不温不火。知道Flutter的出现人们重新重视。\n\n要学习Flutter的话我们必须首先得会[Dart](https://dart.dev)。\n\n## Dart环境搭建\n\n### Windows系统安装Dart\n\n* 命令行安装\n\n```shell\n# 安装dart-sdk\n$  choco install dart-sdk\n# 更新dart-sdk\n$  choco upgrade dart-sdk\n```\n\n* 软件安装SDK(推荐)\n\n[下载dart的SDK软件](https://gekorm.com/dart-windows/)\n\n### Mac系统安装Dart\n\n```shell\n# 跟新追踪brew的包管理信息，扩展可安装软件的选择\n$ brew tap dart-lang/dart\n# 使用brew安装dart\n$ brew install dart\n```\n\n[dart官网下载地址](https://dart.dev/get-dart)\n\n> 注： 如果没有安装brew工具，需先[安装Homebrew](https://brew.sh/)\n\n## Dart开发工具\n\nDark常见的开发工具有：IntelliJ IDEA、Webstorm、Atom、Vscode等\n\n* Dart的提示插件\n\n![Dart的VScode插件](https://s3.ax1x.com/2021/02/22/y7xdBD.png)\n\n* Dart的运行插件code runner\n\n![code-runner](https://s3.ax1x.com/2021/02/22/y7zOzt.png)\n\n## Dart的初次编写\n\n```dart\nmain() {\n  print(\"hello dart\");\n}\n```\n\n![运行首个Dart文件](https://s3.ax1x.com/2021/02/22/yHSo60.png)\n\n## Dart方法介绍\n\n### Dart入口方法\n\n所有需要被执行的方法需放置在main方法中\n\n共有两种main的写法，分别是基本用法和无返回值的用法\n\n```dart\n<!-- 基本用法 -->\nmain() {\n  print(\"hello dart\");\n}\n\n<!-- 无返回值的main方法 -->\nvoid main() {\n  print(\"hello dart\");\n}\n```\n\n### Dart打印\n\n上面的例子中使用到了打印方法\n\n```dart\n<!-- 打印\"hello dart\" -->\nmain() {\n  print(\"hello dart\");\n}\n```\n\n### Dart注释\n\n```dart\n// main() {\n//   print(\"hello dart1\");\n// }\n\n/**\nmain() {\n  print(\"hello dart2\");\n}\n * */\n\n/// main() {\n///   print(\"hello dart3\");\n/// }\n\nmain() {\n  print(\"hello dart4\");\n}\n```\n\n### Dart变量\n\ndart是一个强大的脚本类语言，可以不预先定义变量类型，自动会类型推断\n\ndart中定义变量可以通过var关键字或类型关键字来申明变量\n\n* 字符串类型：String\n* 数字类型：int\n\n```dart\n    var str = 'this is var';\n    print(str);\n    var mynum = 123;\n    print(mynum);\n    String string = 'this is String';\n    print(string);\n    int mynum2 = 456;\n    print(mynum2);\n```\n\n> 注：var不要和类型关键字一起使用\n\ndart中存在类型校验 下面三种情况均会报错\n\n```dart\n    var str = '';\n    str = 123;\n    print(str);\n\n    String mynum = 123;\n    print(mynum);\n\n    int mynum2 = '456';\n    print(mynum2);\n```\n\n此时赋值操作会出现报错提示，因为声明时推断str为字符串类型\n\n### Dart常量\n\n常量只能进行一次赋值操作\n\n* const常量\n\n```dart\n    const PI = 3.14159;\n    print(PI);\n\n    final PI2 = 3.14159;\n    print(PI2);\n\n    final now = new DateTime.now();\n    print(now);\n```\n\n* final常量\n\n区别：final不仅有const的编译时常量的特性，最重要的是它是运行时常量，并且final是惰性初始化，即在运行时第一次使用前才初始化\n\n### Dart命名规则\n\n1. 变量名称必须由数字、字母、下划线和$符组成\n1. 注意：标识符开头不能是数字\n1. 标识符不能是保留字和关键字\n1. 变量的名字是区分大小写的：如age和Age是不同的变量。在实际的运用中，也建议不要用一个\n1. 标识符(变量名称)一定要见名思意：变量名称建议用名词，方法名称建议用动词\n\n## 数据类型\n\n### 常用数据类型\n\n* Number(数值)\n  * int\n  * double\n* Strings(字符串)\n  * String\n* Booleans(布尔)\n  * bool\n* List(数组)\n  * 在Dart中，数组是列表对象，所以大多数人只是称它们为列表\n* Maps(字典)\n  * 通常来说，Map是一个键值对相关的对象。键和值可以是任何类型的对象。每个键只出现一次，而一个值则可以出现多次。映射是动态集合。换句话说，Maps可以在运行时增长和缩小。dart:core库中的Map类提供了相同的支持。\n\n#### 字符串类型\n\n```dart\nvoid main(){\n  // 1、字符串定义的几种方式\n  var str = 'this is str';\n\n  var str2 = \"this is str2\";\n\n  print(str);\n  print(str2);\n\n  String str3 = 'this is str3';\n\n  String str4 = 'this is str4';\n\n  print(str3);\n  print(str4);\n\n  String str5 = '''this is str5''';\n  print(str5);\n\n  String str6 = '''this is str6\n  this is str6\n  this is str6\n  ''';\n  print(str6);\n\n  String str7 = \"\"\"this is str7\n  this is str7\n  this is str7\n  \"\"\";\n  print(str7);\n  // 2、字符串的拼接\n  String str8 = 'this is';\n  String str9 = 'str9';\n  print(str8 + \" \" + str9);\n  print(\"$str8 $str9\");\n}\n```\n\n#### 数值类型\n\n```dart\nvoid main(){\n  // 1.int 必须是整型\n  int a = 123;\n  // a = 45.5; 不可以赋浮点型\n  a = 12;\n  print(a);\n  // 2.double 既可以是整型 也可是浮点型\n  double b = 23.5;\n  b = 24;\n  print(b);\n  // 3.运算符\n  // + - * / %\n  var c = a + b;\n  print(c); // 12 + 24.0 = 36.0\n  int d = 12;\n  var e = a + d;\n  print(e); // 12 + 12 = 24\n  // e = 12.5; // 错误 e现前计算时为整型不可再次赋值浮点型\n}\n```\n\n#### 布尔类型\n\n```dart\n/*\nbool 值true/false\n*/\nvoid main(){\n  // 1.bool\n  bool flag = true;\n  print(flag);\n  bool flag2 = false;\n  print(flag2);\n  // bool flag3 = 123; // 不能赋非布尔的值\n\n  // 2.条件判断语句\n  if (flag) {\n    print(\"真\");\n  } else {\n    print(\"假\");\n  }\n\n  var a = 123;\n  var b = 456;\n  if (a == b) {\n    print(\"a==b\");\n  } else {\n    print(\"a!=b\");\n  }\n  // a!=b\n\n  var c = '123';\n  if (a == c) {\n    print(\"a==c\");\n  } else {\n    print(\"a!=c\");\n  }\n  // a!=c\n\n  var d = 123;\n  if (a == d) {\n    print(\"a==d\");\n  } else {\n    print(\"a!=d\");\n  }\n  // a==d\n\n  double e = 123.0;\n  if (a == e) {\n    print(\"a==e\");\n  } else {\n    print(\"a!=e\");\n  }\n  // a==e\n}\n```\n\n#### 数组/集合类型\n\n```dart\nvoid main(){\n  // 1.第一种定义List的方式\n  var list = ['1', '2', '3', '4', '5'];\n  print(list);\n  print(list.length);\n  print(list[2]);\n\n  // 2.第二种定义List的方式\n  var list2 = new List();\n  list2.add('a');\n  list2.add('b');\n  list2.add('c');\n  print(list2);\n  print(list2.length);\n  print(list2[1]);\n\n  // 3.定义List指定类型\n   var list3 = new List<String>();\n  list3.add('张三');\n  // list3.add(123); // 不能添加非字符串类型\n  print(list3);\n}\n```\n\n#### Map类型\n\n```dart\nvoid main(){\n  //第一种定义 Maps的方式\n  var person = {\n    \"name\": \"John\",\n    \"age\": 21,\n    \"works\": [\"程序猿\", \"测试员\"],\n    \"married\": false\n  };\n  print(person);\n  print(person[\"name\"]);\n  print(person[\"age\"]);\n  print(person[\"works\"]);\n  print(person[\"married\"]);\n\n  //第二种定义 Maps的方式\n  var person2 = new Map();\n  person2[\"name\"] = \"Bob\";\n  person2[\"age\"] = 26;\n  person2[\"works\"] = [\"UI设计\", \"测试员\"];\n  person2[\"married\"] = true;\n  print(person2);\n  print(person2[\"name\"]);\n  print(person2[\"age\"]);\n  print(person2[\"works\"]);\n  print(person2[\"married\"]);\n}\n```\n\n### 不常用数据类型\n\n* Runes\n  * Runes是指UTF-32编码的字符串。它可以通过文字转换成符号表情或者代表特定的文字。\n\n```dart\nmain() {\n  var clapping = '\\u{1f44f}';\n  print(clapping);\n  print(clapping.codeUnits);\n  print(clapping.runes.toList());\n\n  Runes input = new Runes(\n      '\\u2665  \\u{1f605}  \\u{1f60e}  \\u{1f47b}  \\u{1f596}  \\u{1f44d}');\n  print(new String.fromCharCodes(input));\n}\n```\n\n* Symbols\n  * Symbols对象表示在Dart程序中声明运算符或标识符。您可能永远不需要使用符号，但它们对于按名称引用标识符的API非常有用，因为缩小会更改标识符名称而不会更改标识符符号。要获取标识符的符号，请使用符号文字，它只是＃后跟标识符。\n\n> 在 Dart 中符号用 # 开头来表示，入门阶段不需要了解这东西，可能永远也用不上。\n\n### 类型判断\n\n```dart\nmain() {\n/*\n  is 关键词来判断类型\n*/\n  var str = 'str';\n\n  if (str is String) {\n    print(\"$str 是字符串类型\");\n  } else if (str is num) {\n    print(\"$str 是数字类型\");\n  } else {\n    print(\"$str 是其他类型\");\n  }\n\n  var number = 123;\n\n  if (number is String) {\n    print(\"$number 是字符串类型\");\n  } else if (number is num) {\n    print(\"$number 是数字类型\");\n  } else {\n    print(\"$number 是其他类型\");\n  }\n\n  var doubleNum = 123.5;\n\n  if (doubleNum is String) {\n    print(\"$doubleNum 是字符串类型\");\n  } else if (doubleNum is int) {\n    print(\"$doubleNum 是整数类型\");\n  } else if (doubleNum is double) {\n    print(\"$doubleNum 是浮点数类型\");\n  } else {\n    print(\"$doubleNum 是其他类型\");\n  }\n}\n```\n\n## 条件判断\n\n### 算数运算符\n\n```dart\nvoid main(){\n  // +    -    *    /     ~/ (取整)     %（取余）\n  int a=13;\n  int b=5;\n\n  print(a+b);   //加\n  print(a-b);   //减\n  print(a*b);   //乘\n  print(a/b);   //除\n  print(a%b);   //其余\n  print(a~/b);  //取整\n\n  var c=a*b;\n  print('--------');\n  print(c);\n  \n}\n```\n\n### 关系运算符\n\n```dart\nvoid main(){\n  //  ==    !=   >    <    >=    <=\n\n  int a=5;\n  int b=3;\n\n  print(a==b);   //判断是否相等\n  print(a!=b);   //判断是否不等\n  print(a>b);   //判断是否大于\n  print(a<b);   //判断是否小于\n  print(a>=b);   //判断是否大于等于\n  print(a<=b);   //判断是否小于等于\n\n  if(a>b){\n    print('a大于b');\n  }else{\n    print('a小于b');\n  }\n\n}\n```\n\n### 逻辑运算符\n\n```dart\nvoid main(){\n  /* ! 取反 */ \n  bool flag=false;\n  print(!flag);   //取反\n\n  /* &&并且:全部为true的话值为true 否则值为false */ \n  bool a = true;\n  bool b = false;\n  print(a && b);\n  \n  /* ||或者：全为false的话值为false 否则值为true */ \n  bool c = false;\n  bool d = false;\n  print(c || d);\n\n  // 如果一个人的年龄是20 并且 sex是女的话我们打印这个人\n  int age = 20;\n  String sex = \"女\";\n  if (age == 20 && sex == \"女\") {\n    print(\"$age --- $sex\");\n  } else {\n    print(\"不打印\");\n  }\n\n  int age2 = 30;\n  String sex2 = \"女\";\n  if (age2 == 20 && sex2 == \"女\") {\n    print(\"$age2 --- $sex2\");\n  } else {\n    print(\"不打印\");\n  }\n\n  //如果一个人的年龄是20 或者 sex是女的话我们打印这个人\n\n  int age3 = 30;\n  String sex3 = \"女\";\n  if (age3 == 20 || sex3 == \"女\") {\n    print(\"$age3 --- $sex3\");\n  } else {\n    print(\"不打印\");\n  }\n}\n```\n\n### 赋值运算符\n\n```dart\nvoid main(){\n  //  1、基础赋值运算符   =   ??=\n  int a = 10;\n  int b = 3;\n  print(a);\n  int c = a + b; //从右向左\n  \n  // b ??= 23;  表示如果b为空的话把 23赋值给b\n  int d = 10;\n  d ??= 23;\n  print(d);\n\n  int e;\n  e ??= 23;\n  print(e);\n\n  // 2、复合赋值运算符   +=  -=  *=   /=   %=  ~/=\n  var f = 12;\n  f = f + 10;\n  print(f);\n\n  var g = 13;\n  g += 10; //g=g+10\n  print(g);\n\n  var h = 4;\n  h *= 3; //h=h*3;\n  print(h);\n\n  var i = 7;\n  i %= 3; //i=i%3;\n  print(i);\n\n  var j = 7;\n  j ~/= 3; //j=(j~/3);\n  print(j);\n}\n```\n\n### 自增自减运算\n\n```dart\nvoid main(){\n  /*\n    ++  --   表示自增 自减 1\n    在赋值运算里面 如果++ -- 写在前面 这时候先运算 再赋值，如果++ --写在后面 先赋值后运行运算\n  */\n  var a = 10;\n  a++; //a=a+1;\n  print(a);\n\n  var b = 10;\n  b--; //b=b-1;\n  print(b);\n\n  var c = 10;\n  var d = a++;\n  print(c); //11\n  print(d); //10\n\n  var e = 10;\n  var f = ++a;\n  print(e); //11\n  print(f); //11\n\n  var g = 10;\n  var h = --a;\n  print(g); //9\n  print(h); //9\n\n  var i = 10;\n  var j = a--;\n  print(i); //9\n  print(j); //10\n\n  var k = 10;\n  ++k;\n  print(k);\n}\n```\n\n### 条件表达式\n\n```dart\nvoid main(){\n  // 1、if  else   switch case\n  bool flag = true;\n  if (flag) {\n    print('true');\n  } else {\n    print('false');\n  }\n  \n  // 判断一个人的成绩 如果大于60 显示及格   如果大于 70显示良好  如果大于90显示优秀\n  var score = 41;\n  if (score > 90) {\n    print('优秀');\n  } else if (score > 70) {\n    print('良好');\n  } else if (score >= 60) {\n    print('及格');\n  } else {\n    print('不及格');\n  }\n\n  var sex = \"女\";\n  switch (sex) {\n    case \"男\":\n      print('性别是男');\n      break;\n    case \"女\":\n      print('性别是女');\n      print('性别是女2');\n      break;\n    default:\n      print('传入参数错误');\n      break;\n  }\n\n  // 2、三目运算符\n  var falg = true;\n  var a;\n  if (falg) {\n    a = '我是true';\n  } else {\n    a = \"我是false\";\n  }\n  print(a);\n\n  bool flag2 = false;\n  String b = flag2 ? '我是true' : '我是false';\n  print(b);\n\n  //3  ??运算符\n  var c;\n  var d = c ?? 10;\n  print(d); // 10\n\n  var e = 22;\n  var f = e ?? 10;\n  print(f); // 22\n}\n```\n\n### Dart类型转换\n\n```dart\nvoid main(){\n  // 1、Number与String类型之间的转换\n  // Number类型转换成String类型 toString()\n  // String类型转成Number类型  int.parse()\n  String str = '123';\n  var myNum = int.parse(str);\n  print(myNum is int);\n  \n  String str2 = '123.1';\n  var myNum2 = double.parse(str2);\n  print(myNum2 is double);\n\n  // 价格从字符串转数字时推荐使用浮点型避免报错\n  String price = '12'; // String price = '12.5'\n  var myNum3 = double.parse(price);\n  print(myNum3);\n  print(myNum3 is double);\n\n  // 报错\n  String price2 = '';\n  var myNum4 = double.parse(price2);\n  print(myNum4);\n  print(myNum4 is double);\n\n  // try  ... catch\n  String price3 = '';\n  try {\n    var myNum = double.parse(price3);\n    print(myNum);\n  } catch (err) {\n    print(0);\n  }\n\n  // 空值预处理\n  String price4 = '';\n  price4 = (price4 == '') ? '0' : price4;\n  var myNum5 = double.parse(price4);\n  print(myNum5);\n  print(myNum5 is double);\n\n  var myNum5 = 12;\n  var str3 = myNum5.toString();\n  print(str3 is String);\n\n\n  // 2、其他类型转换成Booleans类型\n  // isEmpty:判断字符串是否为空\n  var str4 = '';\n  if (str4.isEmpty) {\n    print('str4空');\n  } else {\n    print('str4不为空');\n  }\n\n  var myNum6 = 123;\n  if (myNum6 == 0) {\n    print('0');\n  } else {\n    print('非0');\n  }\n\n  var myNum7;\n  if (myNum7 == 0) {\n    print('0');\n  } else {\n    print('非0');\n  }\n\n  var myNum8;\n  if (myNum8 == null) {\n    print('空');\n  } else {\n    print('非空');\n  }\n\n  var myNum9 = 0 / 0;\n  print(myNum9);\n  if (myNum9.isNaN) {\n    print('myNum9是NaN');\n  }\n}\n```\n\n## 循环语句\n\n### for循环语句\n\n```dart\nvoid main(){\n  /*\n    // for基本语法\n    for (int i = 1; i<=100; i++) {   \n      print(i);\n    }\n\n    //第一步，声明变量int i = 1;\n    //第二步，判断i <=100\n    //第三步，print(i);\n    //第四步，i++\n    //第五步 从第二步再来，直到判断为false\n  */\n\n  for (int i = 1; i <= 10; i++) {\n    print(i);\n  }\n\n  // 1、打印0-50所有的偶数\n  for (int i = 0; i <= 50; i++) {\n    if (i % 2 == 0) {\n      print(i);\n    }\n  }\n\n  // 2、求 1+2+3+4 +...100的和\n  var sum = 0;\n  for (var i = 1; i <= 100; i++) {\n    sum += i;\n  }\n  print(sum);\n\n  // 3、计算5的阶乘   (1*2*3*4*5    n的阶乘1*2……*n)\n  var sum2 = 1;\n  for (var i = 1; i <= 5; i++) {\n    sum2 *= i;\n  }\n  print(sum2);\n\n  // 4、打印List  ['张三','李四','王五'] 里面的内容\n  List list = ['张三', '李四', '王五'];\n  print(list[1]);\n  for (var i = 0; i < list.length; i++) {\n    print(list[i]);\n  }\n\n  // 5、打印List中item的title\n  List list2 = [\n    {\"title\": \"新闻111\"},\n    {\"title\": \"新闻222\"},\n    {\"title\": \"新闻333\"}\n  ];\n  print(list2[1]);\n  for (var i = 0; i < list.length; i++) {\n    print(list[i]['title']);\n  }\n\n  // 6、定义一个二维数组 打印里面的内容\n  List list3 = [\n    {\n      \"cate\": '国内',\n      \"news\": [\n        {\"title\": \"国内新闻1\"},\n        {\"title\": \"国内新闻2\"},\n        {\"title\": \"国内新闻3\"}\n      ]\n    },\n    {\n      \"cate\": '国际',\n      \"news\": [\n        {\"title\": \"国际新闻1\"},\n        {\"title\": \"国际新闻2\"},\n        {\"title\": \"国际新闻3\"}\n      ]\n    }\n  ];\n   /*\n    国内\n    -------------\n    国内新闻1\n    国内新闻2\n    国内新闻3\n    国际\n    -------------\n    国际新闻1\n    国际新闻2\n    国际新闻3\n  */\n  for (var i = 0; i < list3.length; i++) {\n    print(list3[i][\"cate\"]);\n    print('-------------');\n    for (var j = 0; j < list3[i][\"news\"].length; j++) {\n      print(list3[i][\"news\"][j][\"title\"]);\n    }\n  }\n}\n```\n\n### while do...while循环语句\n\n```dart\nvoid main(){\n/*\n语法格式:\n\n  while(表达式/循环条件){\n\n  }\n\n  do{\n    语句/循环体\n  }while(表达式/循环条件);\n\n  注意： 1、最后的分号不要忘记\n        2、循环条件中使用的变量需要经过初始化\n        3、循环体中，应有结束循环的条件，否则会造成死循环。\n*/\n\n/*\n  int i=1;\n  while(i<=10){\n\n      print(i);\n  }\n  //死循环\n */\n\n  int i = 1;\n  while (i <= 10) {\n    print(i);\n    i++;\n  }\n\n  // 1、求1+2+3+4 ...+100的和\n  int j = 1;\n  var sum = 0;\n  while (j <= 100) {\n    sum += j;\n    j++;\n  }\n  print(sum);\n\n  int k = 1;\n  var sum2 = 0;\n  do {\n    sum += k;\n    k++;\n  } while (k <= 100);\n  print(sum2);\n\n  //  while 和 do while的区别   第一次循环条件不成立的情况下\n  int l = 10;\n  while (l < 2) {\n    print('执行代码');\n  }\n\n  var m = 10;\n  do {\n    print('执行代码');\n  } while (m < 2);\n}\n```\n\n### break和continue关键词\n\n```dart\nvoid main(){\n  for (var i = 1; i <= 10; i++) {\n    print(i);\n  }\n  \n  // 1、如果i等于4的话跳过\n  for (var i = 1; i <= 10; i++) {\n    if (i == 4) {\n      continue; /*跳过当前循环体 然后循环还会继续执行*/\n    }\n    print(i);\n  }\n\n  // 2、如果 i等于4的话跳出循环\n  for (var i = 1; i <= 10; i++) {\n    if (i == 4) {\n      break; /*跳出循环体*/\n    }\n    print(i);\n  }\n\n  // 3、break语句只能向外跳出一层\n  for (var i = 0; i < 5; i++) {\n    print('外层---$i');\n    for (var j = 0; j < 3; j++) {\n      if (j == 1) {\n        break;\n      }\n      print('里层$j');\n    }\n  }\n\n  // 4、while循环 break跳出循环\n  var i = 1;\n  while (i <= 10) {\n    if (i == 4) {\n      break;\n    }\n    print(i);\n    i++;\n  }\n\n  var sex = \"男\";\n  switch (sex) {\n    case \"男\":\n      print('男');\n      break;\n    case \"女\":\n      print('男');\n      break;\n    default:\n  }\n}\n```\n\n## 集合类型\n\n### List\n\n> List里面常用的属性和方法：\n\n* 常用属性：\n  * length          长度\n  * reversed        翻转\n  * isEmpty         是否为空\n  * isNotEmpty      是否不为空\n* 常用方法：  \n  * add         增加\n  * addAll      拼接数组\n  * contains    查找  传入具体值  返回true/false\n  * indexOf     查找  传入具体值\n  * remove      删除  传入具体值\n  * removeAt    删除  传入索引值\n  * fillRange(start,end,value)   修改\n  * insert(index,value);            指定位置插入\n  * insertAll(index,list)           指定位置插入List\n  * toList()    其他类型转换成List  \n  * join()      List转换成字符串\n  * split()     字符串转化成List\n  * forEach\n  * map\n  * where\n  * any\n  * every\n\n```dart\nvoid main(){\n  // 声明List的两种方式\n  List myList = ['香蕉', '苹果', '西瓜'];\n  print(myList[1]);\n\n  var list = new List();\n  list.add('111');\n  list.add('222');\n  print(list);\n\n  // List里面的属性：\n  List myList2 = ['香蕉', '苹果', '西瓜'];\n  print(myList2); //List\n  print(myList2.length); //长度\n  print(myList2.isEmpty); // 判断为空\n  print(myList2.isNotEmpty); // 判断非空\n  print(myList2.reversed); // 对列表倒序排序 输出对象是元组 ('西瓜', '苹果', '香蕉')\n  var newMyList = myList2.reversed.toList();\n  print(newMyList);\n\n  // List里面的方法：\n\n  // 添加\n  List myList3 = ['香蕉', '苹果', '西瓜'];\n  myList3.add('桃子'); //增加数据  增加一个\n  print(myList3);\n  // 拼接\n  myList3.addAll(['李子', '葡萄']); //拼接数组\n  print(myList3);\n\n  // 查找\n  print(myList3.indexOf('苹果')); //indexOf查找数据 查找不到返回-1  查找到返回索引值\n  print(myList3.indexOf('苹x果')); //indexOf查找数据 查找不到返回-1  查找到返回索引值\n\n  // 移除某个值\n  myList3.remove('西瓜');\n  print(myList3);\n\n  // 移除某个索引值\n  myList3.removeAt(1);\n  print(myList3);\n\n  // 修改 插入\n  List myList4 = ['香蕉', '苹果', '西瓜'];\n\n  myList4.fillRange(1, 2, 'aaa'); // 修改\n  myList4.fillRange(1, 3, 'aaa');\n\n  myList4.insert(1, 'aaa'); //插入  一个\n  myList4.insertAll(1, ['aaa', 'bbb']); //插入 多个\n\n  // 数组转换成字符串\n  List myList5 = ['香蕉', '苹果', '西瓜'];\n  var str = myList5.join('-'); //list转换成字符串\n  print(str);\n  print(str is String); //true\n\n  // 字符串按-切割成数组\n  var str2 = '香蕉-苹果-西瓜';\n  var myList6 = str2.split('-');\n  print(myList6);\n  print(myList6 is List);\n}\n```\n\n### Set\n\n```dart\nvoid main(){\n  //用它最主要的功能就是去除数组重复内容\n  //Set是没有顺序且不能重复的集合，所以不能通过索引去获取值\n  var s = new Set();\n  s.add('香蕉');\n  s.add('苹果');\n  s.add('苹果');\n  print(s); // {香蕉, 苹果}\n  print(s.toList()); // [香蕉, 苹果]\n\n  // 将数组去重\n  List myList = ['香蕉', '苹果', '西瓜', '香蕉', '苹果', '香蕉', '苹果'];\n  var s1 = new Set();\n  s1.addAll(myList);\n  print(s1); // {香蕉, 苹果, 西瓜}\n  print(s1.toList()); // [香蕉, 苹果, 西瓜]\n}\n```\n\n### Map\n\n> 映射(Maps)是无序的键值对：\n\n* 常用属性：\n  * keys            获取所有的key值\n  * values          获取所有的value值\n  * isEmpty         是否为空\n  * isNotEmpty      是否不为空\n* 常用方法:\n  * remove(key)     删除指定key的数据\n  * addAll({...})   合并映射  给映射内增加属性\n  * containsValue   查看映射内的值  返回true/false\n  * forEach\n  * map\n  * where\n  * any\n  * every\n\n```dart\nvoid main(){\n  Map person = {\n    \"name\": \"张三\",\n    \"age\": 20\n  };\n  var m = new Map();\n  m[\"name\"] = \"李四\";\n  print(person);\n  print(m);\n\n  \n  //常用属性：\n  Map person2 = {\"name\": \"张三\", \"age\": 20, \"sex\": \"男\"};\n  print(person2.keys.toList());\n  print(person2.values.toList());\n  print(person2.isEmpty);\n  print(person2.isNotEmpty);\n\n  //常用方法：\n  Map person3 = {\"name\": \"张三\", \"age\": 20, \"sex\": \"男\"};\n  person3.addAll({\n    \"work\": ['敲代码', '送外卖'],\n    \"height\": 160\n  });\n  print(person3);\n  person3.remove(\"sex\");\n  print(person3);\n  print(person3.containsValue('张三')); // 查看映射内的值\n}\n```\n\n### 通用方法\n\n> forEach map where any every\n\n#### List中使用\n\n```dart\nvoid main(){\n  // 循环输出myList\n  List myList = ['香蕉', '苹果', '西瓜'];\n  for (var i = 0; i < myList.length; i++) {\n    print(myList[i]);\n  }\n  for (var item in myList) {\n    print(item);\n  }\n  myList.forEach((value) {\n    print(\"$value\");\n  });\n\n  // 修改myList2每一项\n  List myList2 = [1, 3, 5];\n  // List newList = [];\n  List newList = new List();\n  for (var i = 0; i < myList2.length; i++) {\n    newList.add(myList2[i] * 2);\n  }\n  print(newList);\n\n  var newList2 = myList.map((value) {\n    return value * 2;\n  });\n  print(newList2.toList());\n\n  // 查找符合条件的值\n  List myList3 = [1, 3, 4, 5, 7, 8, 9];\n  var newList3 = myList3.where((value) {\n    return value > 5;\n  });\n  print(newList3.toList());\n\n  // 判断是否存在符合条件的值 true/false\n  List myList4 = [1, 3, 4, 5, 7, 8, 9];\n  var f = myList4.any((value) {\n    //只要集合里面有满足条件的就返回true\n    return value > 5;\n  });\n  print(f);\n\n  // 判断是否存都是符合条件的值 true/false\n  List myList5 = [1, 3, 4, 5, 7, 8, 9];\n  var f2 = myList5.every((value) {\n    //每一个都满足条件返回true  否则返回false\n    return value > 5;\n  });\n  print(f2);\n}\n```\n\n#### Set中使用\n\n```dart\nvoid main(){\n  // 循环输出Set的值\n  var s = new Set();\n  s.addAll([1, 222, 333]);\n  s.forEach((value) => print(value));\n}\n```\n\n#### Map中使用\n\n```dart\nvoid main(){\n  Map person = {\"name\": \"张三\", \"age\": 20};\n  person.forEach((key, value) {\n    print(\"$key---$value\");\n  });\n}\n```\n\n## 函数\n\n* 内置方法/函数：\n  * print();\n* 自定义方法：\n  * 自定义方法的基本格式：\n\n```text\n返回类型 方法名称（参数1，参数2,...）{\n  方法体\n  return 返回值;\n}\n```\n\n### 函数的定义、变量及作用域\n\n```dart\nvoid printInfo() {\n  print('我是一个自定义方法');\n}\n\nint getNum() {\n  var myNum = 123;\n  return myNum;\n}\n\nString printUserInfo() {\n  return 'this is str';\n}\n\nList getList() {\n  return ['111', '2222', '333'];\n}\n\nvoid main(){\n  print('调用系统内置的方法');\n\n  printInfo();\n\n  var n = getNum();\n  print(n);\n\n  print(printUserInfo());\n\n  print(getList());\n\n  // print(getList());\n\n  //演示方法的作用域\n  void xxx() {\n    aaa() {\n      print(getList());\n      print('aaa');\n    }\n    aaa();\n  }\n  // aaa();  // 错误写法\n  xxx(); // 调用方法\n}\n```\n\n### 函数的传参、默认参数及可选参数\n\n```dart\nvoid main(){\n  // 1、定义一个方法 求1到这个数的所有数的和 60 1+2+3+。。。+60\n  int sumNum(int n) {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n      sum += i;\n    }\n    return sum;\n  }\n\n  var n1 = sumNum(5);\n  print(n1);\n  var n2 = sumNum(100);\n  print(n2);\n\n  // 2、定义一个方法然后打印用户信息\n  String printUserInfo(String username, int age) { // 形参\n    return \"姓名:$username---年龄:$age\";\n  }\n  print(printUserInfo('张三', 20)); // 实参\n\n  // 3、定义一个带可选参数的方法\n  String printUserInfo2(String username, [int age]) {\n    //行参\n    if (age != null) {\n      return \"姓名:$username---年龄:$age\";\n    }\n    return \"姓名:$username---年龄保密\";\n  }\n  print(printUserInfo2('张三', 21)); //实参\n  print(printUserInfo2('张三'));\n\n  // 4、定义一个带默认参数的方法\n  String printUserInfo3(String username, [String sex = '男', int age]) {\n    //行参\n    if (age != null) {\n      return \"姓名:$username---性别:$sex--年龄:$age\";\n    }\n    return \"姓名:$username---性别:$sex--年龄保密\";\n  }\n  print(printUserInfo3('张三'));\n  print(printUserInfo3('小李', '女'));\n  print(printUserInfo3('小李', '女', 30));\n\n  // 5、定义一个命名参数的方法\n  String printUserInfo4(String username, {int age, String sex = '男'}) {\n    //行参\n    if (age != null) {\n      return \"姓名:$username---性别:$sex--年龄:$age\";\n    }\n    return \"姓名:$username---性别:$sex--年龄保密\";\n  }\n  // 命名参数同时也是可选参数\n  print(printUserInfo4('小李', sex: '未知'));\n  print(printUserInfo4('张三', age: 20, sex: '未知'));\n\n  // 6、实现一个 把方法当做参数的方法\n  var fn = () {\n    print('我是一个匿名方法');\n  };\n  fn();\n  // 方法1\n  fn1() {\n    print('fn1');\n  }\n  // 方法2\n  fn2(fn) {\n    fn();\n  }\n  // 调用fn2这个方法 把fn1这个方法当做参数传入\n  fn2(fn1);\n}\n```\n\n### 箭头函数\n\n```dart\nvoid main(){\n  // 1. 需求：使用forEach打印下面List里面的数据\n  List list = ['苹果', '香蕉', '西瓜'];\n  list.forEach((value) {\n    print(value);\n  });\n  list.forEach((value) => print(value));\n  list.forEach((value) => {\n    print(value)\n  });\n\n  // 2. 需求：修改下面List里面的数据，让数组中大于2的值乘以2\n  List list2 = [4, 1, 2, 3, 4];\n  var newList = list2.map((value) {\n    if (value > 2) {\n      return value * 2;\n    }\n    return value;\n  });\n  print(newList.toList());\n\n  var newList2 = list.map((value) => value > 2 ? value * 2 : value);\n  print(newList2.toList());\n\n  /*\n  需求： 1、定义一个方法isEvenNumber来判断一个数是否是偶数  \n        2、定义一个方法打印1-n以内的所有偶数\n  */\n\n  // 定义一个方法isEvenNumber来判断一个数是否是偶数\n  bool isEvenNumber(int n) {\n    if (n % 2 == 0) {\n      return true;\n    }\n    return false;\n  }\n\n  // 定义一个方法打印1-n以内的所有偶数\n  printNum(int n) {\n    for (var i = 1; i <= n; i++) {\n      if (isEvenNumber(i)) {\n        print(i);\n      }\n    }\n  }\n  printNum(10);\n}\n```\n\n### 匿名函数\n\n```dart\nint getNum(int n) {\n  return n;\n}\nvoid main(){\n  print(getNum(12));\n\n  // 匿名函数\n  var printNum = () {\n    print(123);\n  };\n  printNum();\n\n  var printNum2 = (int n) {\n    print(n + 2);\n  };\n  printNum2(12);\n}\n```\n\n### 自执行函数\n\n```dart\nvoid main(){\n  (() {\n    print('我是自执行方法');\n  })();\n\n  // 传参\n  ((int n) {\n    print(n);\n    print('我是自执行方法');\n  })(12);\n}\n```\n\n### 方法的递归\n\n```dart\nvoid main(){\n  var sum = 1;\n  fn(n) {\n    sum *= n;\n    if (n == 1) {\n      return;\n    }\n    fn(n - 1);\n  }\n\n  fn(5);\n  print(sum);\n\n  // 通过方法的递归 求1-100的和\n  var sum1 = 0;\n  fn1(int n) {\n    sum1 += n;\n    if (n == 0) {\n      return;\n    }\n    fn1(n - 1);\n  }\n\n  fn1(100);\n  print(sum1);\n}\n```\n\n### 闭包\n\n变量的特点\n\n1. 全局变量特点: 全局变量常驻内存、全局变量污染全局\n2. 局部变量的特点: 不常驻内存会被垃圾机制回收、不会污染全局  \n\n想实现的功能：\n\n1. 常驻内存\n2. 不污染全局\n\n> 产生了闭包,闭包可以解决这个问题.....  \n> 闭包: 函数嵌套函数, 内部函数会调用外部函数的变量或参数, 变量或参数不会被系统回收(不会释放内存)\n> 闭包的写法: 函数嵌套函数，并`return`里面的函数，这样就形成了闭包。\n\n```dart\n/*全局变量*/\nvar a=123;\n\nvoid main(){\n  print(a);  // 123\n  fn() {\n    a++;\n    print(a);\n  }\n  fn();  // 124\n  fn();  // 125\n  fn();  // 126\n\n  // 局部变量\n  printInfo() {\n    var myNum = 123;\n    myNum++;\n    print(myNum);\n  }\n  printInfo();  // 124\n  printInfo();  // 124\n  printInfo();  // 124\n\n  // 闭包\n  fn2() {\n    var a = 123; /*不会污染全局 常驻内存*/\n    return () {\n      a++;\n      print(a);\n    };\n  }\n  var b = fn2();\n  b();  // 124\n  b();  // 125\n  b();  // 126\n}\n```\n\n## 对象-类\n\n### 面向对象概念\n\n面向对象编程(OOP)的三个基本特征是：封装、继承、多态\n\n* 封装：封装是对象和类概念的主要特性。封装，把客观事物封装成抽象的类，并且把自己的部分属性和方法提供给其他对象调用, 而一部分属性和方法则隐藏。\n* 继承：面向对象编程 (OOP) 语言的一个主要功能就是“继承”。继承是指这样一种能力：它可以使用现有类的功能，并在无需重新编写原来的类的情况下对这些功能进行扩展。\n* 多态：允许将子类类型的指针赋值给父类类型的指针, 同一个函数调用会有不同的执行效果 。\n\nDart所有的东西都是对象，所有的对象都继承自Object类。\n\nDart是一门使用类和单继承的面向对象语言，所有的对象都是类的实例，并且所有的类都是Object的子类\n\n一个类通常由属性和方法组成。\n\n```dart\n// dart内置的类\nvoid main(){\n  // List\n  List list=new List();\n  list.isEmpty;\n  list.add('香蕉');\n  list.add('香蕉1');\n\n  // Map\n  Map m=new Map();\n  m[\"username\"]=\"张三\";\n  m.addAll({\"age\":20});\n  m.isEmpty;\n\n  // Object\n  Object a=123;\n  Object v=true;\n  print(a);\n  print(v);\n}\n```\n\n### 定义类\n\n> Dart是一门使用类和单继承的面向对象语言，所有的对象都是类的实例，并且所有的类都是Object的子类\n\n```dart\nclass Person {\n  String name = \"张三\";\n  int age = 23;\n  void getInfo() {\n    // print(\"$name----$age\");\n    print(\"${this.name}----${this.age}\");\n  }\n\n  void setInfo(int age) {\n    this.age = age;\n  }\n}\nvoid main(){\n  // 实例化\n  var p1 = new Person();\n  print(p1.name);\n  p1.getInfo();\n\n  // 实例化类的类型\n  Person p2 = new Person();\n  print(p2.name);\n  \n  // 调用类里的方法\n  p2.setInfo(28);\n  p2.getInfo();\n}\n```\n\n### 构造函数\n\n### 默认构造函数\n\n> 构造函数的写法\n\n```dart\nclass Person {\n  String name = '张三';\n  int age = 20;\n  // 默认构造函数\n  Person() {\n    print('这是构造函数里面的内容 这个方法在实例化的时候触发');\n  }\n  void printInfo() {\n    print(\"${this.name}----${this.age}\");\n  }\n}\n\nvoid main(){\n  var p1 = new Person();\n}\n```\n\n> 使用构造函数初始化类的属性\n\n```dart\nclass Person {\n  String name;\n  int age;\n  //默认构造函数\n  Person(String name, int age) {\n    this.name = name;\n    this.age = age;\n  }\n  void printInfo() {\n    print(\"${this.name}----${this.age}\");\n  }\n}\n\nvoid main(){\n  Person p1 = new Person('张三', 20);\n  p1.printInfo();\n  \n  Person p2 = new Person('李四', 25);\n  p2.printInfo();\n}\n```\n\n> 默认构造函数的简写\n\n```dart\nclass Person {\n  String name;\n  int age;\n  //默认构造函数的简写\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}----${this.age}\");\n  }\n}\n\nvoid main(){\n  Person p1 = new Person('张三', 20);\n  p1.printInfo();\n  \n  Person p2 = new Person('李四', 25);\n  p2.printInfo();\n}\n```\n\n### 命名构造函数\n\ndart里面命名构造函数可以写多个\n\n```dart\nclass Person {\n  String name;\n  int age;\n  //默认构造函数的简写\n  Person(this.name, this.age);\n\n  Person.now() {\n    print('我是命名构造函数');\n  }\n\n  Person.setInfo(String name, int age) {\n    this.name = name;\n    this.age = age;\n  }\n\n  void printInfo() {\n    print(\"${this.name}----${this.age}\");\n  }\n}\n\nvoid main() {\n  var d = new DateTime.now(); // 实例化DateTime调用它的命名构造函数\n  print(d);\n\n  Person p1 = new Person('张三', 20); // 默认实例化类的时候调用的是 默认构造函数\n  p1.printInfo();\n\n  Person p2 = new Person.now(); // 调用命名构造函数\n\n  Person p3 = new Person.setInfo('李四', 30);\n  p3.printInfo();\n}\n```\n\n### 将类抽离成一个模块\n\n`index.dart`\n\n```dart\nimport 'lib/Person.dart';\n\nvoid main(){\n  Person p1=new Person.setInfo('李四1',30);\n  p1.printInfo(); \n}\n```\n\n`lib/Person.dart`\n\n```dart\nclass Person{\n  String name;\n  int age; \n  //默认构造函数的简写\n  Person(this.name,this.age);\n  \n  Person.now(){\n    print('我是命名构造函数');\n  }\n\n  Person.setInfo(String name,int age){\n    this.name=name;\n    this.age=age;\n  }\n\n  void printInfo(){   \n    print(\"${this.name}----${this.age}\");\n  }\n}\n```\n\n### 类的私有属性和方法\n\nDart和其他面向对象语言不一样，Data中没有`public` `private` `protected`这些访问修饰符合\n\n但是我们可以使用`_`把一个属性或者方法定义成私有(类必须在单独的文件中，才能将属性或方法私有)。\n\n`index.dart`\n\n```dart\nimport 'lib/Animal.dart';\n\nvoid main(){\n  Animal a = new Animal('小狗', 3);\n  print(a.age); // 间接的获取私有属性\n  print(a.getName()); // 间接的获取私有属性\n  a.execRun(); // 间接的调用私有方法\n}\n```\n\n`lib/Animal.dart`\n\n```dart\nclass Animal {\n  String _name; // 私有属性\n  int age;\n  // 默认构造函数的简写\n  Animal(this._name, this.age);\n\n  void printInfo() {\n    print(\"${this._name}----${this.age}\");\n  }\n\n  String getName() {\n    return this._name;\n  }\n\n  void _run() {\n    print('这是一个私有方法');\n  }\n\n  execRun() {\n    this._run(); // 类里面方法的相互调用\n  }\n}\n```\n\n### 类的getter和setter\n\n获取矩形的面积\n\n* 使用方法获取\n\n```dart\nclass Rect {\n  num height;\n  num width;\n\n  Rect(this.height, this.width);\n  area() {\n    return this.height * this.width;\n  }\n}\n\nvoid main() {\n  Rect r = new Rect(10, 4);\n  print(\"面积:${r.area()}\");\n}\n```\n\n* 使用get获取(计算属性)\n\n```dart\nclass Rect {\n  num height;\n  num width;\n  Rect(this.height, this.width);\n  get area {\n    return this.height * this.width;\n  }\n}\n\nvoid main() {\n  Rect r = new Rect(10, 2);\n  print(\"面积:${r.area}\"); // 注意调用直接通过访问属性的方式访问area\n}\n```\n\n* 使用set存储\n\n```dart\nclass Rect {\n  num height;\n  num width;\n\n  Rect(this.height, this.width);\n  get area {\n    return this.height * this.width;\n  }\n\n  set areaHeight(value) {\n    this.height = value;\n  }\n}\n\nvoid main() {\n  Rect r = new Rect(10, 4);\n  r.areaHeight = 6;\n  print(\"面积:${r.area}\"); // 注意调用直接通过访问属性的方式访问area\n}\n```\n\n### 类的初始化列表\n\nDart中我们也可以在构造函数体运行之前初始化实例变量\n\n```dart\nclass Rect{\n  int height;\n  int width;\n  Rect():height=2,width=10{\n    print(\"${this.height}---${this.width}\");\n  }\n  getArea(){\n    return this.height*this.width;\n  } \n}\n\nvoid main(){\n  Rect r=new Rect();\n  print(r.getArea()); \n}\n```\n\n### 静态成员\n\n1. 使用static 关键字来实现类级别的变量和函数\n2. 静态方法不能访问非静态成员，非静态方法可以访问静态成员\n\n```dart\nclass Person {\n  static String name = '张三';\n  static void show() {\n    print(name);\n  }\n}\n\nvoid main() {\n  print(Person.name);\n  Person.show();\n}\n```\n\n#### 非静态方法访问静态成员和非静态成员\n\n```dart\nclass Person {\n  static String name = '张三';\n  int age = 20;\n\n  static void show() {\n    print(name);\n  }\n\n  void printInfo() {\n    /*非静态方法可以访问静态成员以及非静态成员*/\n\n    print(name); // 访问静态属性\n    print(this.age); // 访问非静态属性\n\n    show(); // 调用静态方法\n  }\n}\nvoid main(){\n  Person p = new Person();\n  p.printInfo();\n}\n```\n\n#### 静态方法只能访问静态成员\n\n```dart\nclass Person {\n  static String name = '张三';\n  int age = 20;\n\n  static void show() {\n    print(name);\n  }\n\n  static void printUserInfo() {\n    // 静态方法\n    print(name); // 静态属性\n    show(); // 静态方法\n\n    // print(age); // 静态方法没法访问非静态的属性\n    // print(this.age); // 静态方法没法访问非静态的属性\n    // this.printInfo(); // 静态方法没法访问非静态的方法\n    // printInfo(); // 静态方法没法访问非静态的方法\n  }\n}\nvoid main(){\n  Person.printUserInfo();\n}\n```\n\n### 操作符\n\n* ?     条件运算符 （了解）\n* as    类型转换\n* is    类型判断\n* ..    级联操作 （连缀）  (记住)\n\n#### 条件运算符\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\n\nvoid main(){\n  Person p;\n  p?.printInfo();\n\n  Person p2 = new Person('张三', 20);\n  p2?.printInfo();\n}\n```\n\n#### 操作符-类型判断\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\n\nvoid main(){\n  Person p = new Person('张三', 20);\n\n  if (p is Person) {\n    p.name = \"李四\";\n  }\n  p.printInfo(); // 李四---20\n  print(p is Object); // true\n}\n```\n\n#### 类型转换\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\nvoid main(){\n  var p1;\n  p1 = '';\n  p1 = new Person('张三1', 20);\n\n  p1.printInfo(); // 老版本报错 不知道p1是字符串还是Person类\n  (p1 as Person).printInfo(); // 强制转换为Person类\n}\n```\n\n#### 级联操作\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\nvoid main(){\n  Person p1 = new Person('张三', 20);\n\n  p1.printInfo(); // 张三---20\n\n  p1.name = '李四';\n  p1.age = 40;\n  p1.printInfo(); // 李四---40\n\n  // 使用连缀简化为\n  p1..name = '王五'\n    ..age = 60\n    ..printInfo(); // 王五---60\n}\n```\n\n### 类的继承\n\n#### 简单继承\n\n1. 子类使用extends关键词来继承父类\n2. 子类会继承父类里面可见的属性和方法 但是不会继承构造函数\n3. 子类能复写父类的方法 getter和setter\n\n```dart\nclass Person {\n  String name = '张三';\n  num age = 20;\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\n\nclass Web extends Person {\n\n}\n\nmain() {\n  Web w = new Web();\n  print(w.name);\n  w.printInfo();\n}\n```\n\n#### super关键词的使用\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\n\nclass Web extends Person {\n  Web(String name, num age) : super(name, age) {\n\n  }\n}\n\nvoid main(){\n  Person p = new Person('李四', 20);\n  p.printInfo();\n\n  Person p1 = new Person('张三', 20);\n  p1.printInfo();\n\n  Web w = new Web('王五', 12);\n  w.printInfo();\n}\n```\n\n> 继承类的属性扩展\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\n\nclass Web extends Person {\n  String sex;\n  Web(String name, num age, String sex) : super(name, age) {\n    this.sex = sex;\n  }\n  \n  run() {\n    print(\"${this.name}---${this.age}--${this.sex}\");\n  }\n}\n\nvoid main(){\n  Person p = new Person('李四', 20);\n  p.printInfo();\n\n  Person p1 = new Person('张三', 20);\n  p1.printInfo();\n\n  Web w = new Web('王五', 12);\n  w.printInfo();\n  w.run();\n}\n```\n\n> super给命名构造函数传参\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person.setInfo(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\n\nclass Web extends Person {\n  String sex;\n  Web(String name, num age, this.sex) : super.setInfo(name, age) {}\n  run() {\n    print(\"${this.name}---${this.age}--${this.sex}\");\n  }\n}\n\nmain() {\n  Web w = new Web('张三', 12, \"男\");\n  w.printInfo();\n  w.run();\n}\n```\n\n#### 复写父类的方法\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n\n  work() {\n    print(\"${this.name}在工作...\");\n  }\n}\n\nclass Web extends Person {\n  Web(String name, num age) : super(name, age);\n\n  run() {\n    print('run');\n  }\n\n  // 覆写父类的方法\n  @override //可以写也可以不写 建议在覆写父类方法的时候加上 @override\n  void printInfo() {\n    print(\"姓名：${this.name}---年龄：${this.age}\");\n  }\n\n  @override\n  work() {\n    print(\"${this.name}的工作是写代码\");\n  }\n}\n\nvoid main(){\n  Web w = new Web('李四', 20);\n  w.printInfo();\n  w.work();\n}\n```\n\n#### 子类调用父类的方法\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n\n  work() {\n    print(\"${this.name}在工作...\");\n  }\n}\n\nclass Web extends Person {\n  Web(String name, num age) : super(name, age);\n\n  run() {\n    print('run');\n    super.work(); //自类调用父类的方法\n  }\n\n  //覆写父类的方法\n  @override //可以写也可以不写  建议在覆写父类方法的时候加上 @override\n  void printInfo() {\n    print(\"姓名：${this.name}---年龄：${this.age}\");\n  }\n}\n\nmain() {\n  Web w = new Web('李四', 20);\n  w.run();\n}\n```\n\n## 抽象类\n\n### 创建抽象类\n\nDart抽象类主要用于定义标准，子类可以继承抽象类，也可以实现抽象类接口。\n\n1. 抽象类通过abstract 关键字来定义\n2. Dart中的抽象方法不能用abstract声明，Dart中没有方法体的方法我们称为抽象方法。\n3. 如果子类继承抽象类必须得实现里面的抽象方法\n4. 如果把抽象类当做接口实现的话必须得实现抽象类里面定义的所有属性和方法。\n5. 抽象类不能被实例化，只有继承它的子类可以\n\nextends抽象类 和 implements的区别：\n\n1. 如果要复用抽象类里面的方法，并且要用抽象方法约束自类的话我们就用extends继承抽象类\n2. 如果只是把抽象类当做标准的话我们就用implements实现抽象类\n\n```dart\n// 案例：定义一个Animal 类要求它的子类必须包含eat方法\nabstract class Animal {\n  eat(); //抽象方法\n  run(); //抽象方法\n  \n  printInfo() {\n    print('我是一个抽象类里面的普通方法');\n  }\n}\n\nclass Dog extends Animal {\n  @override\n  eat() {\n    print('小狗在吃骨头');\n  }\n  \n  @override\n  run() {\n    // TODO: implement run\n    print('小狗在跑');\n  }\n}\n\nclass Cat extends Animal {\n  @override\n  eat() {\n    // TODO: implement eat\n    print('小猫在吃老鼠');\n  }\n  \n  @override\n  run() {\n    // TODO: implement run\n    print('小猫在走');\n  }\n}\n\nvoid main(){\n  Dog d = new Dog();\n  d.eat();\n  d.printInfo();\n\n  Cat c = new Cat();\n  c.eat();\n  c.printInfo();\n\n  // Animal a = new Animal(); //抽象类没法直接被实例化\n}\n```\n\n### 多态\n\n多态：允许将子类类型的指针赋值给父类类型的指针, 同一个函数调用会有不同的执行效果。\n\n子类的实例赋值给父类的引用。\n\n多态就是父类定义一个方法不去实现，让继承他的子类去实现，每个子类有不同的表现。\n\n```dart\nabstract class Animal{\n  eat();   //抽象方法 \n}\n\nclass Dog extends Animal{\n  @override\n  eat() {\n     print('小狗在吃骨头');\n  }\n  run(){\n    print('run');\n  }\n}\nclass Cat extends Animal{\n  @override\n  eat() {   \n    print('小猫在吃老鼠');\n  }\n  run(){\n    print('run');\n  }\n}\n\nmain() {\n  // 类型定义为父类 可以访问run方法\n  Dog d = new Dog();\n  d.eat();\n  d.run();\n\n  Cat c = new Cat();\n  c.eat();\n  c.run();\n\n  // 类型定义为父类 不可以访问run方法\n  Animal d1 = new Dog();\n  d1.eat();\n\n  Animal c1 = new Cat();\n  c1.eat();\n}\n```\n\n### 接口\n\n`dart`和`Java`一样，`dart`也有接口，但是和`Java`还是有区别的。\n首先，`dart`的接口没有`interface`关键字定义接口，而是普通类或抽象类都可以作为接口被实现。\n同样使用`implements`关键字进行实现。\n\n但是`dart`的接口有点奇怪，如果实现的类是普通类，会将普通类和抽象中的属性的方法全部需要覆写一遍。\n而因为抽象类可以定义抽象方法，普通类不可以，所以一般如果要实现像Java接口那样的方式，一般会使用抽象类。\n建议使用抽象类定义接口。\n\n```dart\n/*\n  定义一个DB库 支持 mysql  mssql  mongodb\n  mysql  mssql  mongodb三个类里面都有同样的方法\n*/\nabstract class Db {\n  //当做接口   接口：就是约定 、规范\n  String uri; //数据库的链接地址\n  add(String data);\n  save();\n  delete();\n}\n\nclass Mysql implements Db {\n  @override\n  String uri;\n\n  Mysql(this.uri);\n\n  @override\n  add(data) {\n    // TODO: implement add\n    print('这是mysql的add方法' + data);\n  }\n\n  @override\n  delete() {\n    // TODO: implement delete\n    return null;\n  }\n\n  @override\n  save() {\n    // TODO: implement save\n    return null;\n  }\n\n  remove() {}\n}\n\nclass MsSql implements Db {\n  @override\n  String uri;\n  @override\n  add(String data) {\n    print('这是mssql的add方法' + data);\n  }\n\n  @override\n  delete() {\n    // TODO: implement delete\n    return null;\n  }\n\n  @override\n  save() {\n    // TODO: implement save\n    return null;\n  }\n}\nvoid main() {\n  Mysql mysql = new Mysql('xxxxxx');\n  mysql.add('1243214');\n}\n```\n\n### 接口文件分离\n\n`lib/Db.dart`\n\n```dart\nabstract class Db{   //当做接口   接口：就是约定 、规范\n    String uri;      //数据库的链接地址\n    add(String data);\n    save();\n    delete();\n}\n```\n\n`lib/MySql.dart`\n\n```dart\nimport 'Db.dart';\n\nclass Mysql implements Db{\n  \n  @override\n  String uri;\n\n  Mysql(this.uri);\n\n  @override\n  add(data) {   \n    print('这是mysql的add方法'+data);\n  }\n\n  @override\n  delete() {   \n    return null;\n  }\n\n  @override\n  save() {   \n    return null;\n  }\n\n}\n```\n\n`lib/MsSql.dart`\n\n```dart\nimport 'Db.dart';\n\nclass MsSql implements Db{\n  @override\n  String uri;\n  @override\n  add(String data) {\n    print('这是mssql的add方法'+data);\n  }\n\n  @override\n  delete() {\n    return null;\n  }\n\n  @override\n  save() {\n    return null;\n  }\n\n}\n```\n\n`index.dart`\n\n```dart\nimport 'lib/MsSql.dart';\nimport 'lib/MySql.dart';\n\nmain() {\n  Mysql mysql = new Mysql('xxxxxx');\n  mysql.add('1243214');\n\n  MsSql mssql = new MsSql();\n  mssql.uri = '127.0.0.1';\n  mssql.add('增加的数据');\n}\n```\n\n## 一个类实现多个接口\n\n```dart\nabstract class A {\n  String name;\n  printA();\n}\n\nabstract class B {\n  printB();\n}\n\nclass C implements A, B {\n  @override\n  String name;\n  @override\n  printA() {\n    print('printA');\n  }\n\n  @override\n  printB() {\n    // TODO: implement printB\n    return null;\n  }\n}\n\nvoid main(){\n  C c = new C();\n  c.printA();\n}\n```\n\n## 类的混入\n\n`mixins`的中文意思是混入，就是在类中混入其他功能。在`Dart`中可以使用`mixins`实现类似多继承的功能。\n\n因为`mixins`使用的条件，随着`Dart`版本一直在变，这里讲的是`Dart2.x`中使用`mixins`的条件：\n\n1. 作为mixins的类只能继承自Object，不能继承其他类\n2. 作为mixins的类不能有构造函数\n3. 一个类可以mixins多个mixins类\n4. mixins绝不是继承，也不是接口，而是一种全新的特性\n\n### 类仅混入\n\n```dart\nclass A {\n  String info = \"this is A\";\n  void printA() {\n    print(\"A\");\n  }\n}\n\nclass B {\n  void printB() {\n    print(\"B\");\n  }\n}\n\nclass C with A, B {}\n\nvoid main() {\n  var c = new C();\n  c.printA();\n  c.printB();\n  print(c.info);\n}\n```\n\n### 类继承的同时混入\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  printInfo() {\n    print('${this.name}----${this.age}');\n  }\n  void run() {\n    print(\"Person Run\");\n  }\n}\n\nclass A {\n  String info = \"this is A\";\n  void printA() {\n    print(\"A\");\n  }\n  void run() {\n    print(\"A Run\");\n  }\n}\n\nclass B {\n  void printB() {\n    print(\"B\");\n  }\n  void run() {\n    print(\"B Run\");\n  }\n}\n\nclass C extends Person with B, A {\n  C(String name, num age) : super(name, age);\n}\n\nvoid main() {\n  var c = new C('张三', 20);\n  c.printInfo();    // 张三----20\n  c.printB();       // B\n  print(c.info);    // this is A\n  c.run();          // A Run\n}\n```\n\n> 当混入的类存在相同的方法的时候，后混入的类会覆盖前混入的类。当继承和混入存在相同方法的时候，混入会覆盖继承的方法。\n\n### 类混入的实例类型\n\n很简单，`mixins`混入的类型就是其超类的子类型。\n\n```dart\nclass A {\n  String info = \"this is A\";\n  void printA() {\n    print(\"A\");\n  }\n}\n\nclass B {\n  void printB() {\n    print(\"B\");\n  }\n}\n\nclass C with A, B {}\n\nvoid main() {\n  var c = new C();\n\n  print(c is C); //true\n  print(c is A); //true\n  print(c is B); //true\n\n  var a = new A();\n  print(a is Object); //true a也是Object的子类型，因为所有的类都继承于Object类\n}\n```\n\n## 泛型\n\n通俗理解：泛型就是解决 类 接口 方法的复用性、以及对不特定数据类型的支持(类型校验)\n\n### 泛型方法\n\n> 期望方法传入什么类型返回什么类型\n\n* 传入string返回string\n\n```dart\n// 只能返回string类型的数据\nString getData(String value) {\n  return value;\n}\n```\n\n* 定义多个方法，A传入string返回string，B传入int返回int\n\n```dart\n// 同时支持返回 string类型 和int类型  （代码冗余）\nString getData1(String value) {\n  return value;\n}\n\nint getData2(int value) {\n  return value;\n}\n```\n\n* 不指定类型\n\n```dart\n// 同时返回 string类型 和number类型 不指定类型可以解决这个问题 但放弃了类型校验\ngetData3(value) {\n  return value;\n}\n\n```\n\n* 泛型使用\n\n不指定类型放弃了类型检查。我们现在想实现的是传入什么 返回什么。\n比如:传入`number`类型必须返回`number`类型，传入`string`类型必须返回`string`类型。\n\n```dart\nT getData4<T>(T value) {\n  return value;\n}\n\nvoid main(){\n  print(getData4(21));\n  print(getData4('xxx'));\n  print(getData4<String>('你好')); // 指定类型\n  print(getData4<int>(123));      // 指定类型\n}\n```\n\n### 泛型类\n\n```dart\nvoid main(){\n  // 不指定类的类型\n  List list = new List();\n  list.add(12);\n  list.add(\"你好\");\n  print(list);\n\n  // 指定类的类型为String\n  List list2 = new List<String>();\n  // list2.add(12); //错误的写法\n  list2.add('你好');\n  list2.add('你好1');\n  print(list2);\n\n  // 指定类的类型为int\n  List list3 = new List<int>();\n  // list3.add(\"你好\"); //错误写法\n  list3.add(12);\n  print(list3);\n}\n```\n\n案例：把下面类转换成泛型类，要求List里面可以增加int类型的数据，也可以增加String类型的数据。但是每次调用增加的类型要统一\n\n```dart\nclass PrintClass {\n  List list = new List<int>();\n  void add(int value) {\n    this.list.add(value);\n  }\n\n  void printInfo() {\n    for (var i = 0; i < this.list.length; i++) {\n      print(this.list[i]);\n    }\n  }\n}\n\nvoid main(){\n  PrintClass p = new PrintClass();\n  p.add(1);\n  p.add(12);\n  p.add(5);\n  p.printInfo();\n}\n```\n\n* 修改泛型类后\n\n```dart\nclass PrintClass<T> {\n  List list = new List<T>();\n  void add(T value) {\n    this.list.add(value);\n  }\n\n  void printInfo() {\n    for (var i = 0; i < this.list.length; i++) {\n      print(this.list[i]);\n    }\n  }\n}\n\nvoid main(){\n  PrintClass p = new PrintClass();\n  p.add(11);\n  p.add('xxx');\n  p.add(22);\n  p.printInfo();\n\n  PrintClass p1 = new PrintClass<int>();\n  p1.add(1);\n  p1.add(2);\n  p1.add(3);\n  p1.printInfo();\n\n  PrintClass p2 = new PrintClass<String>();\n  p2.add('你好');\n  p2.add('泛型');\n  p2.add('类');\n  p2.printInfo();\n}\n```\n\n### 泛型接口\n\n官方示例：可将`ObjectCache`和`StringCache`通过泛型接口实现为`Cache`\n\n```dart\nabstract class ObjectCache {\n  getByKey(String key);\n  void setByKey(String key, Object value);\n}\n\nabstract class StringCache {\n  getByKey(String key);\n  void setByKey(String key, String value);\n}\n\nabstract class Cache<T> {\n  getByKey(String key);\n  void setByKey(String key, T value);\n}\n```\n\n实现数据缓存的功能：有文件缓存、和内存缓存。内存缓存和文件缓存按照接口约束实现。\n\n1. 定义一个泛型接口 约束实现它的子类必须有getByKey(key) 和 setByKey(key,value)\n2. 要求setByKey的时候的value的类型和实例化子类的时候指定的类型一致\n\n```dart\nabstract class Cache<T> {\n  getByKey(String key);\n  void setByKey(String key, T value);\n}\n\nclass FileCache<T> extends Cache<T> {\n  @override\n  getByKey(String key) {\n    throw UnimplementedError();\n  }\n\n  @override\n  void setByKey(String key, T value) {\n    print('this is FileCache key=${key} value=${value}');\n  }\n}\n\nclass MemoryCache<T> extends Cache<T> {\n  @override\n  getByKey(String key) {\n    throw UnimplementedError();\n  }\n\n  @override\n  void setByKey(String key, T value) {\n    print('this is MemoryCache key=${key} value=${value}');\n  }\n}\n\nvoid main() {\n  MemoryCache m = new MemoryCache<String>();\n  m.setByKey('index', '首页数据');\n\n  MemoryCache m1 = new MemoryCache<Map>();\n  m1.setByKey('index', {\"name\": \"张三\", \"age\": 20});\n}\n```\n\n## 库\n\n前面介绍`Dart`基础知识的时候基本上都是在一个文件里面编写`Dart`代码的，但实际开发中不可能这么写，模块化很重要，所以这就需要使用到库的概念。\n\n在`Dart`中，库的使用时通过`import`关键字引入的。\n\n`library`指令可以创建一个库，每个`Dart`文件都是一个库，即使没有使用`library`指令来指定。\n\nDart中的库主要有三种：\n\n* 我们自定义的库\n\n```dart\nimport 'lib/xxx.dart';\n```\n\n* 系统内置库\n\n```dart\nimport 'dart:math';\nimport 'dart:io';\nimport 'dart:convert';\n```\n\n* Pub包管理系统中的库  \n  `https://pub.dev/packages`\n  `https://pub.flutter-io.cn/packages`\n  `https://pub.dartlang.org/flutter/`\n  * 需要在自己想项目根目录新建一个pubspec.yaml\n  * 在pubspec.yaml文件 然后配置名称 、描述、依赖等信息\n  * 然后运行 pub get 获取包下载到本地  \n  * 项目中引入库 import 'package:http/http.dart' as http; 看文档使用\n\n### 自定义库\n\n`./index.dart`\n\n```dart\nimport 'lib/Animal.dart';\n\nmain() {\n  var a = new Animal('小黑狗', 20);\n  print(a.getName());\n}\n```\n\n`lib/Animal.dart`\n\n```dart\nclass Animal {\n  String _name; //私有属性\n  int age;\n  //默认构造函数的简写\n  Animal(this._name, this.age);\n\n  void printInfo() {\n    print(\"${this._name}----${this.age}\");\n  }\n\n  String getName() {\n    return this._name;\n  }\n\n  void _run() {\n    print('这是一个私有方法');\n  }\n\n  execRun() {\n    this._run(); //类里面方法的相互调用\n  }\n}\n```\n\n### 系统内置库\n\n#### 系统内置math库\n\n```dart\n// import 'dart:io';\nimport \"dart:math\";\nmain() {\n  print(min(12,23));\n  print(max(12,25));\n}\n```\n\n#### 系统内置io库\n\n```dart\nimport 'dart:io';       // 请求相关\nimport 'dart:convert';  // 转换编码格式\n\n//api接口： http://news-at.zhihu.com/api/3/stories/latest\ngetDataFromZhihuAPI() async{\n  //1、创建HttpClient对象\n  var httpClient = new HttpClient();  \n  //2、创建Uri对象\n  var uri = new Uri.http('news-at.zhihu.com','/api/3/stories/latest');\n  //3、发起请求，等待请求\n  var request = await httpClient.getUrl(uri);\n  //4、关闭请求，等待响应\n  var response = await request.close();\n  //5、解码响应的内容\n  return await response.transform(utf8.decoder).join();\n}\n\nvoid main() async{\n  var result = await getDataFromZhihuAPI();\n  print(result);\n}\n```\n\n### async和await\n\n这两个关键字的使用只需要记住两点：\n\n* 只有async方法才能使用await关键字调用方法\n* 如果调用别的async方法必须使用await关键字\n\n> async是让方法变成异步。await是等待异步方法执行完成。\n\n原方法\n\n```dart\ntestAsync() {\n  return 'Hello async';\n}\n\nvoid main(){\n  var result = testAsync();\n  print(result);\n}\n```\n\n改为异步\n\n```dart\ntestAsync() async{\n  return 'Hello async';\n}\n\nvoid main() async{\n  var result = await testAsync();\n  print(result);\n}\n```\n\n### 引入第三方模块\n\ndart的三方库都是用pub包管理系统进行管理的。\n\n1、**从下面网址找到要用的库**\n\n  `https://pub.dev/packages`\n  `https://pub.flutter-io.cn/packages`\n  `https://pub.dartlang.org/flutter/`\n\n2、**创建一个pubspec.yaml文件，内容如下**\n\n```yaml\nname: xxx\ndescription: A new flutter module project.\ndependencies:  \n  http: ^0.12.0+2\n  date_format: ^1.0.6\n```\n\n3、**配置dependencies**\n4、**运行pub get 获取远程库**\n5、**看文档引入库使用**\n\n```dart\nimport 'dart:convert' as convert;\nimport 'package:http/http.dart' as http;\nimport 'package:date_format/date_format.dart';\nmain() async {\n  var url =\n      \"http://www.phonegap100.com/appapi.php?a=getPortalList&catid=20&page=1\";\n\n  // Await the http get response, then decode the json-formatted responce.\n  var response = await http.get(url);\n  if (response.statusCode == 200) {\n    var jsonResponse = convert.jsonDecode(response.body);\n\n    print(jsonResponse);\n  } else {\n    print(\"Request failed with status: ${response.statusCode}.\");\n  }\n\n  print(formatDate(DateTime(1989, 2, 21), [yyyy, '*', mm, '*', dd]));\n}\n```\n\n### 库的重命名\n\n冲突解决：当引入两个库中有相同名称标识符的时候，\n如果是java通常我们通过写上完整的包名路径来指定使用的具体标识符，\n甚至不用import都可以，但是Dart里面是必须import的。\n当冲突的时候，可以使用as关键字来指定库的前缀。如下例子所示：\n\n`./index.dart`\n\n```dart\nimport 'package:lib/Person1.dart';\nimport 'package:lib/Person2.dart' as lib2;\n\nPerson p1 = new Person();           // Uses Person from Person1.\nlib2.Person p2 = new lib2.Person(); // Uses Person from Person2.\n```\n\n`lib/Person1.dart`\n\n```dart\nclass Person{\n  String name;\n  int age; \n  //默认构造函数的简写\n  Person(this.name,this.age);  \n\n  Person.setInfo(String name,int age){\n    this.name=name;\n    this.age=age;\n  }\n\n  void printInfo(){   \n    print(\"Person1:${this.name}----${this.age}\");\n  }\n}\n```\n\n`lib/Person2.dart`\n\n```dart\nclass Person{\n  String name;\n  int age; \n  //默认构造函数的简写\n  Person(this.name,this.age);  \n\n  Person.setInfo(String name,int age){\n    this.name=name;\n    this.age=age;\n  }\n\n  void printInfo(){   \n    print(\"Person1:${this.name}----${this.age}\");\n  }\n}\n```\n\n### 部分导入\n\n如果只需要导入库的一部分，有两种模式：\n\n* 模式一：只导入需要的部分，使用show关键字，如下例子所示：\n  `import 'package:lib1/lib1.dart' show foo;`\n\n* 模式二：隐藏不需要的部分，使用hide关键字，如下例子所示：\n  `import 'package:lib2/lib2.dart' hide foo;`\n\n#### 默认导入\n\n`./index.dart`\n\n```dart\nimport 'lib/myMath.dart'\n\nvoid main(){\n  getName();\n  getAge();\n}\n```\n\n`lib/myMath.dart`\n\n```dart\nvoid getName(){\n  print('张三');\n}\nvoid getAge(){\n  print(20);\n}\nvoid getSex(){\n  print('男');\n}\n```\n\n#### 部分导入\n\n`./index.dart`\n\n```dart\nimport 'lib/myMath.dart' show getName;\n\nvoid main(){\n  getName();\n}\n```\n\n`lib/myMath.dart`\n\n```dart\nvoid getName(){\n  print('张三');\n}\nvoid getAge(){\n  print(20);\n}\nvoid getSex(){\n  print('男');\n}\n```\n\n#### 隐藏部分\n\n`./index.dart`\n\n```dart\nimport 'lib/myMath.dart' hide getName;\n\nvoid main(){\n  // getName(); // 报错\n  getAge();\n}\n```\n\n`lib/myMath.dart`\n\n```dart\nvoid getName(){\n  print('张三');\n}\nvoid getAge(){\n  print(20);\n}\nvoid getSex(){\n  print('男');\n}\n```\n\n### 延迟加载\n\n也称为懒加载，可以在需要的时候再进行加载。\n懒加载的最大好处是可以减少APP的启动时间。\n\n懒加载使用deferred as关键字来指定，如下例子所示：\n\n`import 'package:deferred/hello.dart' deferred as hello;`\n\n当需要使用的时候，需要使用loadLibrary()方法来加载：\n\n```dart\nimport 'package:deferred/hello.dart' deferred as hello;\ngreet() async {\n  await hello.loadLibrary();\n  hello.printGreeting();\n}\n```\n\n## 参考资料\n\n* [B站-Dart Flutter教程_Dart Flutter入门实战视频教程-2020年新出-第14讲以后是Flutter教程](https://www.bilibili.com/video/BV1S4411E7LY?from=search&seid=18237173814777031437)\n","source":"_posts/Dart教程.md","raw":"---\ntitle: Dart教程\nabbrlink: 9c01b81e\ndate: 2021-02-22 14:37:13\ntags:\n  - 技术积累\n  - dart\n  - flutter\ncategories:\n  - 技术积累\n  - dart\n  - flutter\ntoc: true\n---\n\n![首屏图](https://s3.ax1x.com/2021/03/01/6iYQbt.png)\n\n<!-- more -->\n\n## Dart介绍\n\nDart是由谷歌开发的计算机编程语言，它可以用于web、服务器、移动应用和物联网等领域的开发。\n\nDart 诞生于2011年，号称起到javaScript/但是过去的几年中一直不温不火。知道Flutter的出现人们重新重视。\n\n要学习Flutter的话我们必须首先得会[Dart](https://dart.dev)。\n\n## Dart环境搭建\n\n### Windows系统安装Dart\n\n* 命令行安装\n\n```shell\n# 安装dart-sdk\n$  choco install dart-sdk\n# 更新dart-sdk\n$  choco upgrade dart-sdk\n```\n\n* 软件安装SDK(推荐)\n\n[下载dart的SDK软件](https://gekorm.com/dart-windows/)\n\n### Mac系统安装Dart\n\n```shell\n# 跟新追踪brew的包管理信息，扩展可安装软件的选择\n$ brew tap dart-lang/dart\n# 使用brew安装dart\n$ brew install dart\n```\n\n[dart官网下载地址](https://dart.dev/get-dart)\n\n> 注： 如果没有安装brew工具，需先[安装Homebrew](https://brew.sh/)\n\n## Dart开发工具\n\nDark常见的开发工具有：IntelliJ IDEA、Webstorm、Atom、Vscode等\n\n* Dart的提示插件\n\n![Dart的VScode插件](https://s3.ax1x.com/2021/02/22/y7xdBD.png)\n\n* Dart的运行插件code runner\n\n![code-runner](https://s3.ax1x.com/2021/02/22/y7zOzt.png)\n\n## Dart的初次编写\n\n```dart\nmain() {\n  print(\"hello dart\");\n}\n```\n\n![运行首个Dart文件](https://s3.ax1x.com/2021/02/22/yHSo60.png)\n\n## Dart方法介绍\n\n### Dart入口方法\n\n所有需要被执行的方法需放置在main方法中\n\n共有两种main的写法，分别是基本用法和无返回值的用法\n\n```dart\n<!-- 基本用法 -->\nmain() {\n  print(\"hello dart\");\n}\n\n<!-- 无返回值的main方法 -->\nvoid main() {\n  print(\"hello dart\");\n}\n```\n\n### Dart打印\n\n上面的例子中使用到了打印方法\n\n```dart\n<!-- 打印\"hello dart\" -->\nmain() {\n  print(\"hello dart\");\n}\n```\n\n### Dart注释\n\n```dart\n// main() {\n//   print(\"hello dart1\");\n// }\n\n/**\nmain() {\n  print(\"hello dart2\");\n}\n * */\n\n/// main() {\n///   print(\"hello dart3\");\n/// }\n\nmain() {\n  print(\"hello dart4\");\n}\n```\n\n### Dart变量\n\ndart是一个强大的脚本类语言，可以不预先定义变量类型，自动会类型推断\n\ndart中定义变量可以通过var关键字或类型关键字来申明变量\n\n* 字符串类型：String\n* 数字类型：int\n\n```dart\n    var str = 'this is var';\n    print(str);\n    var mynum = 123;\n    print(mynum);\n    String string = 'this is String';\n    print(string);\n    int mynum2 = 456;\n    print(mynum2);\n```\n\n> 注：var不要和类型关键字一起使用\n\ndart中存在类型校验 下面三种情况均会报错\n\n```dart\n    var str = '';\n    str = 123;\n    print(str);\n\n    String mynum = 123;\n    print(mynum);\n\n    int mynum2 = '456';\n    print(mynum2);\n```\n\n此时赋值操作会出现报错提示，因为声明时推断str为字符串类型\n\n### Dart常量\n\n常量只能进行一次赋值操作\n\n* const常量\n\n```dart\n    const PI = 3.14159;\n    print(PI);\n\n    final PI2 = 3.14159;\n    print(PI2);\n\n    final now = new DateTime.now();\n    print(now);\n```\n\n* final常量\n\n区别：final不仅有const的编译时常量的特性，最重要的是它是运行时常量，并且final是惰性初始化，即在运行时第一次使用前才初始化\n\n### Dart命名规则\n\n1. 变量名称必须由数字、字母、下划线和$符组成\n1. 注意：标识符开头不能是数字\n1. 标识符不能是保留字和关键字\n1. 变量的名字是区分大小写的：如age和Age是不同的变量。在实际的运用中，也建议不要用一个\n1. 标识符(变量名称)一定要见名思意：变量名称建议用名词，方法名称建议用动词\n\n## 数据类型\n\n### 常用数据类型\n\n* Number(数值)\n  * int\n  * double\n* Strings(字符串)\n  * String\n* Booleans(布尔)\n  * bool\n* List(数组)\n  * 在Dart中，数组是列表对象，所以大多数人只是称它们为列表\n* Maps(字典)\n  * 通常来说，Map是一个键值对相关的对象。键和值可以是任何类型的对象。每个键只出现一次，而一个值则可以出现多次。映射是动态集合。换句话说，Maps可以在运行时增长和缩小。dart:core库中的Map类提供了相同的支持。\n\n#### 字符串类型\n\n```dart\nvoid main(){\n  // 1、字符串定义的几种方式\n  var str = 'this is str';\n\n  var str2 = \"this is str2\";\n\n  print(str);\n  print(str2);\n\n  String str3 = 'this is str3';\n\n  String str4 = 'this is str4';\n\n  print(str3);\n  print(str4);\n\n  String str5 = '''this is str5''';\n  print(str5);\n\n  String str6 = '''this is str6\n  this is str6\n  this is str6\n  ''';\n  print(str6);\n\n  String str7 = \"\"\"this is str7\n  this is str7\n  this is str7\n  \"\"\";\n  print(str7);\n  // 2、字符串的拼接\n  String str8 = 'this is';\n  String str9 = 'str9';\n  print(str8 + \" \" + str9);\n  print(\"$str8 $str9\");\n}\n```\n\n#### 数值类型\n\n```dart\nvoid main(){\n  // 1.int 必须是整型\n  int a = 123;\n  // a = 45.5; 不可以赋浮点型\n  a = 12;\n  print(a);\n  // 2.double 既可以是整型 也可是浮点型\n  double b = 23.5;\n  b = 24;\n  print(b);\n  // 3.运算符\n  // + - * / %\n  var c = a + b;\n  print(c); // 12 + 24.0 = 36.0\n  int d = 12;\n  var e = a + d;\n  print(e); // 12 + 12 = 24\n  // e = 12.5; // 错误 e现前计算时为整型不可再次赋值浮点型\n}\n```\n\n#### 布尔类型\n\n```dart\n/*\nbool 值true/false\n*/\nvoid main(){\n  // 1.bool\n  bool flag = true;\n  print(flag);\n  bool flag2 = false;\n  print(flag2);\n  // bool flag3 = 123; // 不能赋非布尔的值\n\n  // 2.条件判断语句\n  if (flag) {\n    print(\"真\");\n  } else {\n    print(\"假\");\n  }\n\n  var a = 123;\n  var b = 456;\n  if (a == b) {\n    print(\"a==b\");\n  } else {\n    print(\"a!=b\");\n  }\n  // a!=b\n\n  var c = '123';\n  if (a == c) {\n    print(\"a==c\");\n  } else {\n    print(\"a!=c\");\n  }\n  // a!=c\n\n  var d = 123;\n  if (a == d) {\n    print(\"a==d\");\n  } else {\n    print(\"a!=d\");\n  }\n  // a==d\n\n  double e = 123.0;\n  if (a == e) {\n    print(\"a==e\");\n  } else {\n    print(\"a!=e\");\n  }\n  // a==e\n}\n```\n\n#### 数组/集合类型\n\n```dart\nvoid main(){\n  // 1.第一种定义List的方式\n  var list = ['1', '2', '3', '4', '5'];\n  print(list);\n  print(list.length);\n  print(list[2]);\n\n  // 2.第二种定义List的方式\n  var list2 = new List();\n  list2.add('a');\n  list2.add('b');\n  list2.add('c');\n  print(list2);\n  print(list2.length);\n  print(list2[1]);\n\n  // 3.定义List指定类型\n   var list3 = new List<String>();\n  list3.add('张三');\n  // list3.add(123); // 不能添加非字符串类型\n  print(list3);\n}\n```\n\n#### Map类型\n\n```dart\nvoid main(){\n  //第一种定义 Maps的方式\n  var person = {\n    \"name\": \"John\",\n    \"age\": 21,\n    \"works\": [\"程序猿\", \"测试员\"],\n    \"married\": false\n  };\n  print(person);\n  print(person[\"name\"]);\n  print(person[\"age\"]);\n  print(person[\"works\"]);\n  print(person[\"married\"]);\n\n  //第二种定义 Maps的方式\n  var person2 = new Map();\n  person2[\"name\"] = \"Bob\";\n  person2[\"age\"] = 26;\n  person2[\"works\"] = [\"UI设计\", \"测试员\"];\n  person2[\"married\"] = true;\n  print(person2);\n  print(person2[\"name\"]);\n  print(person2[\"age\"]);\n  print(person2[\"works\"]);\n  print(person2[\"married\"]);\n}\n```\n\n### 不常用数据类型\n\n* Runes\n  * Runes是指UTF-32编码的字符串。它可以通过文字转换成符号表情或者代表特定的文字。\n\n```dart\nmain() {\n  var clapping = '\\u{1f44f}';\n  print(clapping);\n  print(clapping.codeUnits);\n  print(clapping.runes.toList());\n\n  Runes input = new Runes(\n      '\\u2665  \\u{1f605}  \\u{1f60e}  \\u{1f47b}  \\u{1f596}  \\u{1f44d}');\n  print(new String.fromCharCodes(input));\n}\n```\n\n* Symbols\n  * Symbols对象表示在Dart程序中声明运算符或标识符。您可能永远不需要使用符号，但它们对于按名称引用标识符的API非常有用，因为缩小会更改标识符名称而不会更改标识符符号。要获取标识符的符号，请使用符号文字，它只是＃后跟标识符。\n\n> 在 Dart 中符号用 # 开头来表示，入门阶段不需要了解这东西，可能永远也用不上。\n\n### 类型判断\n\n```dart\nmain() {\n/*\n  is 关键词来判断类型\n*/\n  var str = 'str';\n\n  if (str is String) {\n    print(\"$str 是字符串类型\");\n  } else if (str is num) {\n    print(\"$str 是数字类型\");\n  } else {\n    print(\"$str 是其他类型\");\n  }\n\n  var number = 123;\n\n  if (number is String) {\n    print(\"$number 是字符串类型\");\n  } else if (number is num) {\n    print(\"$number 是数字类型\");\n  } else {\n    print(\"$number 是其他类型\");\n  }\n\n  var doubleNum = 123.5;\n\n  if (doubleNum is String) {\n    print(\"$doubleNum 是字符串类型\");\n  } else if (doubleNum is int) {\n    print(\"$doubleNum 是整数类型\");\n  } else if (doubleNum is double) {\n    print(\"$doubleNum 是浮点数类型\");\n  } else {\n    print(\"$doubleNum 是其他类型\");\n  }\n}\n```\n\n## 条件判断\n\n### 算数运算符\n\n```dart\nvoid main(){\n  // +    -    *    /     ~/ (取整)     %（取余）\n  int a=13;\n  int b=5;\n\n  print(a+b);   //加\n  print(a-b);   //减\n  print(a*b);   //乘\n  print(a/b);   //除\n  print(a%b);   //其余\n  print(a~/b);  //取整\n\n  var c=a*b;\n  print('--------');\n  print(c);\n  \n}\n```\n\n### 关系运算符\n\n```dart\nvoid main(){\n  //  ==    !=   >    <    >=    <=\n\n  int a=5;\n  int b=3;\n\n  print(a==b);   //判断是否相等\n  print(a!=b);   //判断是否不等\n  print(a>b);   //判断是否大于\n  print(a<b);   //判断是否小于\n  print(a>=b);   //判断是否大于等于\n  print(a<=b);   //判断是否小于等于\n\n  if(a>b){\n    print('a大于b');\n  }else{\n    print('a小于b');\n  }\n\n}\n```\n\n### 逻辑运算符\n\n```dart\nvoid main(){\n  /* ! 取反 */ \n  bool flag=false;\n  print(!flag);   //取反\n\n  /* &&并且:全部为true的话值为true 否则值为false */ \n  bool a = true;\n  bool b = false;\n  print(a && b);\n  \n  /* ||或者：全为false的话值为false 否则值为true */ \n  bool c = false;\n  bool d = false;\n  print(c || d);\n\n  // 如果一个人的年龄是20 并且 sex是女的话我们打印这个人\n  int age = 20;\n  String sex = \"女\";\n  if (age == 20 && sex == \"女\") {\n    print(\"$age --- $sex\");\n  } else {\n    print(\"不打印\");\n  }\n\n  int age2 = 30;\n  String sex2 = \"女\";\n  if (age2 == 20 && sex2 == \"女\") {\n    print(\"$age2 --- $sex2\");\n  } else {\n    print(\"不打印\");\n  }\n\n  //如果一个人的年龄是20 或者 sex是女的话我们打印这个人\n\n  int age3 = 30;\n  String sex3 = \"女\";\n  if (age3 == 20 || sex3 == \"女\") {\n    print(\"$age3 --- $sex3\");\n  } else {\n    print(\"不打印\");\n  }\n}\n```\n\n### 赋值运算符\n\n```dart\nvoid main(){\n  //  1、基础赋值运算符   =   ??=\n  int a = 10;\n  int b = 3;\n  print(a);\n  int c = a + b; //从右向左\n  \n  // b ??= 23;  表示如果b为空的话把 23赋值给b\n  int d = 10;\n  d ??= 23;\n  print(d);\n\n  int e;\n  e ??= 23;\n  print(e);\n\n  // 2、复合赋值运算符   +=  -=  *=   /=   %=  ~/=\n  var f = 12;\n  f = f + 10;\n  print(f);\n\n  var g = 13;\n  g += 10; //g=g+10\n  print(g);\n\n  var h = 4;\n  h *= 3; //h=h*3;\n  print(h);\n\n  var i = 7;\n  i %= 3; //i=i%3;\n  print(i);\n\n  var j = 7;\n  j ~/= 3; //j=(j~/3);\n  print(j);\n}\n```\n\n### 自增自减运算\n\n```dart\nvoid main(){\n  /*\n    ++  --   表示自增 自减 1\n    在赋值运算里面 如果++ -- 写在前面 这时候先运算 再赋值，如果++ --写在后面 先赋值后运行运算\n  */\n  var a = 10;\n  a++; //a=a+1;\n  print(a);\n\n  var b = 10;\n  b--; //b=b-1;\n  print(b);\n\n  var c = 10;\n  var d = a++;\n  print(c); //11\n  print(d); //10\n\n  var e = 10;\n  var f = ++a;\n  print(e); //11\n  print(f); //11\n\n  var g = 10;\n  var h = --a;\n  print(g); //9\n  print(h); //9\n\n  var i = 10;\n  var j = a--;\n  print(i); //9\n  print(j); //10\n\n  var k = 10;\n  ++k;\n  print(k);\n}\n```\n\n### 条件表达式\n\n```dart\nvoid main(){\n  // 1、if  else   switch case\n  bool flag = true;\n  if (flag) {\n    print('true');\n  } else {\n    print('false');\n  }\n  \n  // 判断一个人的成绩 如果大于60 显示及格   如果大于 70显示良好  如果大于90显示优秀\n  var score = 41;\n  if (score > 90) {\n    print('优秀');\n  } else if (score > 70) {\n    print('良好');\n  } else if (score >= 60) {\n    print('及格');\n  } else {\n    print('不及格');\n  }\n\n  var sex = \"女\";\n  switch (sex) {\n    case \"男\":\n      print('性别是男');\n      break;\n    case \"女\":\n      print('性别是女');\n      print('性别是女2');\n      break;\n    default:\n      print('传入参数错误');\n      break;\n  }\n\n  // 2、三目运算符\n  var falg = true;\n  var a;\n  if (falg) {\n    a = '我是true';\n  } else {\n    a = \"我是false\";\n  }\n  print(a);\n\n  bool flag2 = false;\n  String b = flag2 ? '我是true' : '我是false';\n  print(b);\n\n  //3  ??运算符\n  var c;\n  var d = c ?? 10;\n  print(d); // 10\n\n  var e = 22;\n  var f = e ?? 10;\n  print(f); // 22\n}\n```\n\n### Dart类型转换\n\n```dart\nvoid main(){\n  // 1、Number与String类型之间的转换\n  // Number类型转换成String类型 toString()\n  // String类型转成Number类型  int.parse()\n  String str = '123';\n  var myNum = int.parse(str);\n  print(myNum is int);\n  \n  String str2 = '123.1';\n  var myNum2 = double.parse(str2);\n  print(myNum2 is double);\n\n  // 价格从字符串转数字时推荐使用浮点型避免报错\n  String price = '12'; // String price = '12.5'\n  var myNum3 = double.parse(price);\n  print(myNum3);\n  print(myNum3 is double);\n\n  // 报错\n  String price2 = '';\n  var myNum4 = double.parse(price2);\n  print(myNum4);\n  print(myNum4 is double);\n\n  // try  ... catch\n  String price3 = '';\n  try {\n    var myNum = double.parse(price3);\n    print(myNum);\n  } catch (err) {\n    print(0);\n  }\n\n  // 空值预处理\n  String price4 = '';\n  price4 = (price4 == '') ? '0' : price4;\n  var myNum5 = double.parse(price4);\n  print(myNum5);\n  print(myNum5 is double);\n\n  var myNum5 = 12;\n  var str3 = myNum5.toString();\n  print(str3 is String);\n\n\n  // 2、其他类型转换成Booleans类型\n  // isEmpty:判断字符串是否为空\n  var str4 = '';\n  if (str4.isEmpty) {\n    print('str4空');\n  } else {\n    print('str4不为空');\n  }\n\n  var myNum6 = 123;\n  if (myNum6 == 0) {\n    print('0');\n  } else {\n    print('非0');\n  }\n\n  var myNum7;\n  if (myNum7 == 0) {\n    print('0');\n  } else {\n    print('非0');\n  }\n\n  var myNum8;\n  if (myNum8 == null) {\n    print('空');\n  } else {\n    print('非空');\n  }\n\n  var myNum9 = 0 / 0;\n  print(myNum9);\n  if (myNum9.isNaN) {\n    print('myNum9是NaN');\n  }\n}\n```\n\n## 循环语句\n\n### for循环语句\n\n```dart\nvoid main(){\n  /*\n    // for基本语法\n    for (int i = 1; i<=100; i++) {   \n      print(i);\n    }\n\n    //第一步，声明变量int i = 1;\n    //第二步，判断i <=100\n    //第三步，print(i);\n    //第四步，i++\n    //第五步 从第二步再来，直到判断为false\n  */\n\n  for (int i = 1; i <= 10; i++) {\n    print(i);\n  }\n\n  // 1、打印0-50所有的偶数\n  for (int i = 0; i <= 50; i++) {\n    if (i % 2 == 0) {\n      print(i);\n    }\n  }\n\n  // 2、求 1+2+3+4 +...100的和\n  var sum = 0;\n  for (var i = 1; i <= 100; i++) {\n    sum += i;\n  }\n  print(sum);\n\n  // 3、计算5的阶乘   (1*2*3*4*5    n的阶乘1*2……*n)\n  var sum2 = 1;\n  for (var i = 1; i <= 5; i++) {\n    sum2 *= i;\n  }\n  print(sum2);\n\n  // 4、打印List  ['张三','李四','王五'] 里面的内容\n  List list = ['张三', '李四', '王五'];\n  print(list[1]);\n  for (var i = 0; i < list.length; i++) {\n    print(list[i]);\n  }\n\n  // 5、打印List中item的title\n  List list2 = [\n    {\"title\": \"新闻111\"},\n    {\"title\": \"新闻222\"},\n    {\"title\": \"新闻333\"}\n  ];\n  print(list2[1]);\n  for (var i = 0; i < list.length; i++) {\n    print(list[i]['title']);\n  }\n\n  // 6、定义一个二维数组 打印里面的内容\n  List list3 = [\n    {\n      \"cate\": '国内',\n      \"news\": [\n        {\"title\": \"国内新闻1\"},\n        {\"title\": \"国内新闻2\"},\n        {\"title\": \"国内新闻3\"}\n      ]\n    },\n    {\n      \"cate\": '国际',\n      \"news\": [\n        {\"title\": \"国际新闻1\"},\n        {\"title\": \"国际新闻2\"},\n        {\"title\": \"国际新闻3\"}\n      ]\n    }\n  ];\n   /*\n    国内\n    -------------\n    国内新闻1\n    国内新闻2\n    国内新闻3\n    国际\n    -------------\n    国际新闻1\n    国际新闻2\n    国际新闻3\n  */\n  for (var i = 0; i < list3.length; i++) {\n    print(list3[i][\"cate\"]);\n    print('-------------');\n    for (var j = 0; j < list3[i][\"news\"].length; j++) {\n      print(list3[i][\"news\"][j][\"title\"]);\n    }\n  }\n}\n```\n\n### while do...while循环语句\n\n```dart\nvoid main(){\n/*\n语法格式:\n\n  while(表达式/循环条件){\n\n  }\n\n  do{\n    语句/循环体\n  }while(表达式/循环条件);\n\n  注意： 1、最后的分号不要忘记\n        2、循环条件中使用的变量需要经过初始化\n        3、循环体中，应有结束循环的条件，否则会造成死循环。\n*/\n\n/*\n  int i=1;\n  while(i<=10){\n\n      print(i);\n  }\n  //死循环\n */\n\n  int i = 1;\n  while (i <= 10) {\n    print(i);\n    i++;\n  }\n\n  // 1、求1+2+3+4 ...+100的和\n  int j = 1;\n  var sum = 0;\n  while (j <= 100) {\n    sum += j;\n    j++;\n  }\n  print(sum);\n\n  int k = 1;\n  var sum2 = 0;\n  do {\n    sum += k;\n    k++;\n  } while (k <= 100);\n  print(sum2);\n\n  //  while 和 do while的区别   第一次循环条件不成立的情况下\n  int l = 10;\n  while (l < 2) {\n    print('执行代码');\n  }\n\n  var m = 10;\n  do {\n    print('执行代码');\n  } while (m < 2);\n}\n```\n\n### break和continue关键词\n\n```dart\nvoid main(){\n  for (var i = 1; i <= 10; i++) {\n    print(i);\n  }\n  \n  // 1、如果i等于4的话跳过\n  for (var i = 1; i <= 10; i++) {\n    if (i == 4) {\n      continue; /*跳过当前循环体 然后循环还会继续执行*/\n    }\n    print(i);\n  }\n\n  // 2、如果 i等于4的话跳出循环\n  for (var i = 1; i <= 10; i++) {\n    if (i == 4) {\n      break; /*跳出循环体*/\n    }\n    print(i);\n  }\n\n  // 3、break语句只能向外跳出一层\n  for (var i = 0; i < 5; i++) {\n    print('外层---$i');\n    for (var j = 0; j < 3; j++) {\n      if (j == 1) {\n        break;\n      }\n      print('里层$j');\n    }\n  }\n\n  // 4、while循环 break跳出循环\n  var i = 1;\n  while (i <= 10) {\n    if (i == 4) {\n      break;\n    }\n    print(i);\n    i++;\n  }\n\n  var sex = \"男\";\n  switch (sex) {\n    case \"男\":\n      print('男');\n      break;\n    case \"女\":\n      print('男');\n      break;\n    default:\n  }\n}\n```\n\n## 集合类型\n\n### List\n\n> List里面常用的属性和方法：\n\n* 常用属性：\n  * length          长度\n  * reversed        翻转\n  * isEmpty         是否为空\n  * isNotEmpty      是否不为空\n* 常用方法：  \n  * add         增加\n  * addAll      拼接数组\n  * contains    查找  传入具体值  返回true/false\n  * indexOf     查找  传入具体值\n  * remove      删除  传入具体值\n  * removeAt    删除  传入索引值\n  * fillRange(start,end,value)   修改\n  * insert(index,value);            指定位置插入\n  * insertAll(index,list)           指定位置插入List\n  * toList()    其他类型转换成List  \n  * join()      List转换成字符串\n  * split()     字符串转化成List\n  * forEach\n  * map\n  * where\n  * any\n  * every\n\n```dart\nvoid main(){\n  // 声明List的两种方式\n  List myList = ['香蕉', '苹果', '西瓜'];\n  print(myList[1]);\n\n  var list = new List();\n  list.add('111');\n  list.add('222');\n  print(list);\n\n  // List里面的属性：\n  List myList2 = ['香蕉', '苹果', '西瓜'];\n  print(myList2); //List\n  print(myList2.length); //长度\n  print(myList2.isEmpty); // 判断为空\n  print(myList2.isNotEmpty); // 判断非空\n  print(myList2.reversed); // 对列表倒序排序 输出对象是元组 ('西瓜', '苹果', '香蕉')\n  var newMyList = myList2.reversed.toList();\n  print(newMyList);\n\n  // List里面的方法：\n\n  // 添加\n  List myList3 = ['香蕉', '苹果', '西瓜'];\n  myList3.add('桃子'); //增加数据  增加一个\n  print(myList3);\n  // 拼接\n  myList3.addAll(['李子', '葡萄']); //拼接数组\n  print(myList3);\n\n  // 查找\n  print(myList3.indexOf('苹果')); //indexOf查找数据 查找不到返回-1  查找到返回索引值\n  print(myList3.indexOf('苹x果')); //indexOf查找数据 查找不到返回-1  查找到返回索引值\n\n  // 移除某个值\n  myList3.remove('西瓜');\n  print(myList3);\n\n  // 移除某个索引值\n  myList3.removeAt(1);\n  print(myList3);\n\n  // 修改 插入\n  List myList4 = ['香蕉', '苹果', '西瓜'];\n\n  myList4.fillRange(1, 2, 'aaa'); // 修改\n  myList4.fillRange(1, 3, 'aaa');\n\n  myList4.insert(1, 'aaa'); //插入  一个\n  myList4.insertAll(1, ['aaa', 'bbb']); //插入 多个\n\n  // 数组转换成字符串\n  List myList5 = ['香蕉', '苹果', '西瓜'];\n  var str = myList5.join('-'); //list转换成字符串\n  print(str);\n  print(str is String); //true\n\n  // 字符串按-切割成数组\n  var str2 = '香蕉-苹果-西瓜';\n  var myList6 = str2.split('-');\n  print(myList6);\n  print(myList6 is List);\n}\n```\n\n### Set\n\n```dart\nvoid main(){\n  //用它最主要的功能就是去除数组重复内容\n  //Set是没有顺序且不能重复的集合，所以不能通过索引去获取值\n  var s = new Set();\n  s.add('香蕉');\n  s.add('苹果');\n  s.add('苹果');\n  print(s); // {香蕉, 苹果}\n  print(s.toList()); // [香蕉, 苹果]\n\n  // 将数组去重\n  List myList = ['香蕉', '苹果', '西瓜', '香蕉', '苹果', '香蕉', '苹果'];\n  var s1 = new Set();\n  s1.addAll(myList);\n  print(s1); // {香蕉, 苹果, 西瓜}\n  print(s1.toList()); // [香蕉, 苹果, 西瓜]\n}\n```\n\n### Map\n\n> 映射(Maps)是无序的键值对：\n\n* 常用属性：\n  * keys            获取所有的key值\n  * values          获取所有的value值\n  * isEmpty         是否为空\n  * isNotEmpty      是否不为空\n* 常用方法:\n  * remove(key)     删除指定key的数据\n  * addAll({...})   合并映射  给映射内增加属性\n  * containsValue   查看映射内的值  返回true/false\n  * forEach\n  * map\n  * where\n  * any\n  * every\n\n```dart\nvoid main(){\n  Map person = {\n    \"name\": \"张三\",\n    \"age\": 20\n  };\n  var m = new Map();\n  m[\"name\"] = \"李四\";\n  print(person);\n  print(m);\n\n  \n  //常用属性：\n  Map person2 = {\"name\": \"张三\", \"age\": 20, \"sex\": \"男\"};\n  print(person2.keys.toList());\n  print(person2.values.toList());\n  print(person2.isEmpty);\n  print(person2.isNotEmpty);\n\n  //常用方法：\n  Map person3 = {\"name\": \"张三\", \"age\": 20, \"sex\": \"男\"};\n  person3.addAll({\n    \"work\": ['敲代码', '送外卖'],\n    \"height\": 160\n  });\n  print(person3);\n  person3.remove(\"sex\");\n  print(person3);\n  print(person3.containsValue('张三')); // 查看映射内的值\n}\n```\n\n### 通用方法\n\n> forEach map where any every\n\n#### List中使用\n\n```dart\nvoid main(){\n  // 循环输出myList\n  List myList = ['香蕉', '苹果', '西瓜'];\n  for (var i = 0; i < myList.length; i++) {\n    print(myList[i]);\n  }\n  for (var item in myList) {\n    print(item);\n  }\n  myList.forEach((value) {\n    print(\"$value\");\n  });\n\n  // 修改myList2每一项\n  List myList2 = [1, 3, 5];\n  // List newList = [];\n  List newList = new List();\n  for (var i = 0; i < myList2.length; i++) {\n    newList.add(myList2[i] * 2);\n  }\n  print(newList);\n\n  var newList2 = myList.map((value) {\n    return value * 2;\n  });\n  print(newList2.toList());\n\n  // 查找符合条件的值\n  List myList3 = [1, 3, 4, 5, 7, 8, 9];\n  var newList3 = myList3.where((value) {\n    return value > 5;\n  });\n  print(newList3.toList());\n\n  // 判断是否存在符合条件的值 true/false\n  List myList4 = [1, 3, 4, 5, 7, 8, 9];\n  var f = myList4.any((value) {\n    //只要集合里面有满足条件的就返回true\n    return value > 5;\n  });\n  print(f);\n\n  // 判断是否存都是符合条件的值 true/false\n  List myList5 = [1, 3, 4, 5, 7, 8, 9];\n  var f2 = myList5.every((value) {\n    //每一个都满足条件返回true  否则返回false\n    return value > 5;\n  });\n  print(f2);\n}\n```\n\n#### Set中使用\n\n```dart\nvoid main(){\n  // 循环输出Set的值\n  var s = new Set();\n  s.addAll([1, 222, 333]);\n  s.forEach((value) => print(value));\n}\n```\n\n#### Map中使用\n\n```dart\nvoid main(){\n  Map person = {\"name\": \"张三\", \"age\": 20};\n  person.forEach((key, value) {\n    print(\"$key---$value\");\n  });\n}\n```\n\n## 函数\n\n* 内置方法/函数：\n  * print();\n* 自定义方法：\n  * 自定义方法的基本格式：\n\n```text\n返回类型 方法名称（参数1，参数2,...）{\n  方法体\n  return 返回值;\n}\n```\n\n### 函数的定义、变量及作用域\n\n```dart\nvoid printInfo() {\n  print('我是一个自定义方法');\n}\n\nint getNum() {\n  var myNum = 123;\n  return myNum;\n}\n\nString printUserInfo() {\n  return 'this is str';\n}\n\nList getList() {\n  return ['111', '2222', '333'];\n}\n\nvoid main(){\n  print('调用系统内置的方法');\n\n  printInfo();\n\n  var n = getNum();\n  print(n);\n\n  print(printUserInfo());\n\n  print(getList());\n\n  // print(getList());\n\n  //演示方法的作用域\n  void xxx() {\n    aaa() {\n      print(getList());\n      print('aaa');\n    }\n    aaa();\n  }\n  // aaa();  // 错误写法\n  xxx(); // 调用方法\n}\n```\n\n### 函数的传参、默认参数及可选参数\n\n```dart\nvoid main(){\n  // 1、定义一个方法 求1到这个数的所有数的和 60 1+2+3+。。。+60\n  int sumNum(int n) {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n      sum += i;\n    }\n    return sum;\n  }\n\n  var n1 = sumNum(5);\n  print(n1);\n  var n2 = sumNum(100);\n  print(n2);\n\n  // 2、定义一个方法然后打印用户信息\n  String printUserInfo(String username, int age) { // 形参\n    return \"姓名:$username---年龄:$age\";\n  }\n  print(printUserInfo('张三', 20)); // 实参\n\n  // 3、定义一个带可选参数的方法\n  String printUserInfo2(String username, [int age]) {\n    //行参\n    if (age != null) {\n      return \"姓名:$username---年龄:$age\";\n    }\n    return \"姓名:$username---年龄保密\";\n  }\n  print(printUserInfo2('张三', 21)); //实参\n  print(printUserInfo2('张三'));\n\n  // 4、定义一个带默认参数的方法\n  String printUserInfo3(String username, [String sex = '男', int age]) {\n    //行参\n    if (age != null) {\n      return \"姓名:$username---性别:$sex--年龄:$age\";\n    }\n    return \"姓名:$username---性别:$sex--年龄保密\";\n  }\n  print(printUserInfo3('张三'));\n  print(printUserInfo3('小李', '女'));\n  print(printUserInfo3('小李', '女', 30));\n\n  // 5、定义一个命名参数的方法\n  String printUserInfo4(String username, {int age, String sex = '男'}) {\n    //行参\n    if (age != null) {\n      return \"姓名:$username---性别:$sex--年龄:$age\";\n    }\n    return \"姓名:$username---性别:$sex--年龄保密\";\n  }\n  // 命名参数同时也是可选参数\n  print(printUserInfo4('小李', sex: '未知'));\n  print(printUserInfo4('张三', age: 20, sex: '未知'));\n\n  // 6、实现一个 把方法当做参数的方法\n  var fn = () {\n    print('我是一个匿名方法');\n  };\n  fn();\n  // 方法1\n  fn1() {\n    print('fn1');\n  }\n  // 方法2\n  fn2(fn) {\n    fn();\n  }\n  // 调用fn2这个方法 把fn1这个方法当做参数传入\n  fn2(fn1);\n}\n```\n\n### 箭头函数\n\n```dart\nvoid main(){\n  // 1. 需求：使用forEach打印下面List里面的数据\n  List list = ['苹果', '香蕉', '西瓜'];\n  list.forEach((value) {\n    print(value);\n  });\n  list.forEach((value) => print(value));\n  list.forEach((value) => {\n    print(value)\n  });\n\n  // 2. 需求：修改下面List里面的数据，让数组中大于2的值乘以2\n  List list2 = [4, 1, 2, 3, 4];\n  var newList = list2.map((value) {\n    if (value > 2) {\n      return value * 2;\n    }\n    return value;\n  });\n  print(newList.toList());\n\n  var newList2 = list.map((value) => value > 2 ? value * 2 : value);\n  print(newList2.toList());\n\n  /*\n  需求： 1、定义一个方法isEvenNumber来判断一个数是否是偶数  \n        2、定义一个方法打印1-n以内的所有偶数\n  */\n\n  // 定义一个方法isEvenNumber来判断一个数是否是偶数\n  bool isEvenNumber(int n) {\n    if (n % 2 == 0) {\n      return true;\n    }\n    return false;\n  }\n\n  // 定义一个方法打印1-n以内的所有偶数\n  printNum(int n) {\n    for (var i = 1; i <= n; i++) {\n      if (isEvenNumber(i)) {\n        print(i);\n      }\n    }\n  }\n  printNum(10);\n}\n```\n\n### 匿名函数\n\n```dart\nint getNum(int n) {\n  return n;\n}\nvoid main(){\n  print(getNum(12));\n\n  // 匿名函数\n  var printNum = () {\n    print(123);\n  };\n  printNum();\n\n  var printNum2 = (int n) {\n    print(n + 2);\n  };\n  printNum2(12);\n}\n```\n\n### 自执行函数\n\n```dart\nvoid main(){\n  (() {\n    print('我是自执行方法');\n  })();\n\n  // 传参\n  ((int n) {\n    print(n);\n    print('我是自执行方法');\n  })(12);\n}\n```\n\n### 方法的递归\n\n```dart\nvoid main(){\n  var sum = 1;\n  fn(n) {\n    sum *= n;\n    if (n == 1) {\n      return;\n    }\n    fn(n - 1);\n  }\n\n  fn(5);\n  print(sum);\n\n  // 通过方法的递归 求1-100的和\n  var sum1 = 0;\n  fn1(int n) {\n    sum1 += n;\n    if (n == 0) {\n      return;\n    }\n    fn1(n - 1);\n  }\n\n  fn1(100);\n  print(sum1);\n}\n```\n\n### 闭包\n\n变量的特点\n\n1. 全局变量特点: 全局变量常驻内存、全局变量污染全局\n2. 局部变量的特点: 不常驻内存会被垃圾机制回收、不会污染全局  \n\n想实现的功能：\n\n1. 常驻内存\n2. 不污染全局\n\n> 产生了闭包,闭包可以解决这个问题.....  \n> 闭包: 函数嵌套函数, 内部函数会调用外部函数的变量或参数, 变量或参数不会被系统回收(不会释放内存)\n> 闭包的写法: 函数嵌套函数，并`return`里面的函数，这样就形成了闭包。\n\n```dart\n/*全局变量*/\nvar a=123;\n\nvoid main(){\n  print(a);  // 123\n  fn() {\n    a++;\n    print(a);\n  }\n  fn();  // 124\n  fn();  // 125\n  fn();  // 126\n\n  // 局部变量\n  printInfo() {\n    var myNum = 123;\n    myNum++;\n    print(myNum);\n  }\n  printInfo();  // 124\n  printInfo();  // 124\n  printInfo();  // 124\n\n  // 闭包\n  fn2() {\n    var a = 123; /*不会污染全局 常驻内存*/\n    return () {\n      a++;\n      print(a);\n    };\n  }\n  var b = fn2();\n  b();  // 124\n  b();  // 125\n  b();  // 126\n}\n```\n\n## 对象-类\n\n### 面向对象概念\n\n面向对象编程(OOP)的三个基本特征是：封装、继承、多态\n\n* 封装：封装是对象和类概念的主要特性。封装，把客观事物封装成抽象的类，并且把自己的部分属性和方法提供给其他对象调用, 而一部分属性和方法则隐藏。\n* 继承：面向对象编程 (OOP) 语言的一个主要功能就是“继承”。继承是指这样一种能力：它可以使用现有类的功能，并在无需重新编写原来的类的情况下对这些功能进行扩展。\n* 多态：允许将子类类型的指针赋值给父类类型的指针, 同一个函数调用会有不同的执行效果 。\n\nDart所有的东西都是对象，所有的对象都继承自Object类。\n\nDart是一门使用类和单继承的面向对象语言，所有的对象都是类的实例，并且所有的类都是Object的子类\n\n一个类通常由属性和方法组成。\n\n```dart\n// dart内置的类\nvoid main(){\n  // List\n  List list=new List();\n  list.isEmpty;\n  list.add('香蕉');\n  list.add('香蕉1');\n\n  // Map\n  Map m=new Map();\n  m[\"username\"]=\"张三\";\n  m.addAll({\"age\":20});\n  m.isEmpty;\n\n  // Object\n  Object a=123;\n  Object v=true;\n  print(a);\n  print(v);\n}\n```\n\n### 定义类\n\n> Dart是一门使用类和单继承的面向对象语言，所有的对象都是类的实例，并且所有的类都是Object的子类\n\n```dart\nclass Person {\n  String name = \"张三\";\n  int age = 23;\n  void getInfo() {\n    // print(\"$name----$age\");\n    print(\"${this.name}----${this.age}\");\n  }\n\n  void setInfo(int age) {\n    this.age = age;\n  }\n}\nvoid main(){\n  // 实例化\n  var p1 = new Person();\n  print(p1.name);\n  p1.getInfo();\n\n  // 实例化类的类型\n  Person p2 = new Person();\n  print(p2.name);\n  \n  // 调用类里的方法\n  p2.setInfo(28);\n  p2.getInfo();\n}\n```\n\n### 构造函数\n\n### 默认构造函数\n\n> 构造函数的写法\n\n```dart\nclass Person {\n  String name = '张三';\n  int age = 20;\n  // 默认构造函数\n  Person() {\n    print('这是构造函数里面的内容 这个方法在实例化的时候触发');\n  }\n  void printInfo() {\n    print(\"${this.name}----${this.age}\");\n  }\n}\n\nvoid main(){\n  var p1 = new Person();\n}\n```\n\n> 使用构造函数初始化类的属性\n\n```dart\nclass Person {\n  String name;\n  int age;\n  //默认构造函数\n  Person(String name, int age) {\n    this.name = name;\n    this.age = age;\n  }\n  void printInfo() {\n    print(\"${this.name}----${this.age}\");\n  }\n}\n\nvoid main(){\n  Person p1 = new Person('张三', 20);\n  p1.printInfo();\n  \n  Person p2 = new Person('李四', 25);\n  p2.printInfo();\n}\n```\n\n> 默认构造函数的简写\n\n```dart\nclass Person {\n  String name;\n  int age;\n  //默认构造函数的简写\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}----${this.age}\");\n  }\n}\n\nvoid main(){\n  Person p1 = new Person('张三', 20);\n  p1.printInfo();\n  \n  Person p2 = new Person('李四', 25);\n  p2.printInfo();\n}\n```\n\n### 命名构造函数\n\ndart里面命名构造函数可以写多个\n\n```dart\nclass Person {\n  String name;\n  int age;\n  //默认构造函数的简写\n  Person(this.name, this.age);\n\n  Person.now() {\n    print('我是命名构造函数');\n  }\n\n  Person.setInfo(String name, int age) {\n    this.name = name;\n    this.age = age;\n  }\n\n  void printInfo() {\n    print(\"${this.name}----${this.age}\");\n  }\n}\n\nvoid main() {\n  var d = new DateTime.now(); // 实例化DateTime调用它的命名构造函数\n  print(d);\n\n  Person p1 = new Person('张三', 20); // 默认实例化类的时候调用的是 默认构造函数\n  p1.printInfo();\n\n  Person p2 = new Person.now(); // 调用命名构造函数\n\n  Person p3 = new Person.setInfo('李四', 30);\n  p3.printInfo();\n}\n```\n\n### 将类抽离成一个模块\n\n`index.dart`\n\n```dart\nimport 'lib/Person.dart';\n\nvoid main(){\n  Person p1=new Person.setInfo('李四1',30);\n  p1.printInfo(); \n}\n```\n\n`lib/Person.dart`\n\n```dart\nclass Person{\n  String name;\n  int age; \n  //默认构造函数的简写\n  Person(this.name,this.age);\n  \n  Person.now(){\n    print('我是命名构造函数');\n  }\n\n  Person.setInfo(String name,int age){\n    this.name=name;\n    this.age=age;\n  }\n\n  void printInfo(){   \n    print(\"${this.name}----${this.age}\");\n  }\n}\n```\n\n### 类的私有属性和方法\n\nDart和其他面向对象语言不一样，Data中没有`public` `private` `protected`这些访问修饰符合\n\n但是我们可以使用`_`把一个属性或者方法定义成私有(类必须在单独的文件中，才能将属性或方法私有)。\n\n`index.dart`\n\n```dart\nimport 'lib/Animal.dart';\n\nvoid main(){\n  Animal a = new Animal('小狗', 3);\n  print(a.age); // 间接的获取私有属性\n  print(a.getName()); // 间接的获取私有属性\n  a.execRun(); // 间接的调用私有方法\n}\n```\n\n`lib/Animal.dart`\n\n```dart\nclass Animal {\n  String _name; // 私有属性\n  int age;\n  // 默认构造函数的简写\n  Animal(this._name, this.age);\n\n  void printInfo() {\n    print(\"${this._name}----${this.age}\");\n  }\n\n  String getName() {\n    return this._name;\n  }\n\n  void _run() {\n    print('这是一个私有方法');\n  }\n\n  execRun() {\n    this._run(); // 类里面方法的相互调用\n  }\n}\n```\n\n### 类的getter和setter\n\n获取矩形的面积\n\n* 使用方法获取\n\n```dart\nclass Rect {\n  num height;\n  num width;\n\n  Rect(this.height, this.width);\n  area() {\n    return this.height * this.width;\n  }\n}\n\nvoid main() {\n  Rect r = new Rect(10, 4);\n  print(\"面积:${r.area()}\");\n}\n```\n\n* 使用get获取(计算属性)\n\n```dart\nclass Rect {\n  num height;\n  num width;\n  Rect(this.height, this.width);\n  get area {\n    return this.height * this.width;\n  }\n}\n\nvoid main() {\n  Rect r = new Rect(10, 2);\n  print(\"面积:${r.area}\"); // 注意调用直接通过访问属性的方式访问area\n}\n```\n\n* 使用set存储\n\n```dart\nclass Rect {\n  num height;\n  num width;\n\n  Rect(this.height, this.width);\n  get area {\n    return this.height * this.width;\n  }\n\n  set areaHeight(value) {\n    this.height = value;\n  }\n}\n\nvoid main() {\n  Rect r = new Rect(10, 4);\n  r.areaHeight = 6;\n  print(\"面积:${r.area}\"); // 注意调用直接通过访问属性的方式访问area\n}\n```\n\n### 类的初始化列表\n\nDart中我们也可以在构造函数体运行之前初始化实例变量\n\n```dart\nclass Rect{\n  int height;\n  int width;\n  Rect():height=2,width=10{\n    print(\"${this.height}---${this.width}\");\n  }\n  getArea(){\n    return this.height*this.width;\n  } \n}\n\nvoid main(){\n  Rect r=new Rect();\n  print(r.getArea()); \n}\n```\n\n### 静态成员\n\n1. 使用static 关键字来实现类级别的变量和函数\n2. 静态方法不能访问非静态成员，非静态方法可以访问静态成员\n\n```dart\nclass Person {\n  static String name = '张三';\n  static void show() {\n    print(name);\n  }\n}\n\nvoid main() {\n  print(Person.name);\n  Person.show();\n}\n```\n\n#### 非静态方法访问静态成员和非静态成员\n\n```dart\nclass Person {\n  static String name = '张三';\n  int age = 20;\n\n  static void show() {\n    print(name);\n  }\n\n  void printInfo() {\n    /*非静态方法可以访问静态成员以及非静态成员*/\n\n    print(name); // 访问静态属性\n    print(this.age); // 访问非静态属性\n\n    show(); // 调用静态方法\n  }\n}\nvoid main(){\n  Person p = new Person();\n  p.printInfo();\n}\n```\n\n#### 静态方法只能访问静态成员\n\n```dart\nclass Person {\n  static String name = '张三';\n  int age = 20;\n\n  static void show() {\n    print(name);\n  }\n\n  static void printUserInfo() {\n    // 静态方法\n    print(name); // 静态属性\n    show(); // 静态方法\n\n    // print(age); // 静态方法没法访问非静态的属性\n    // print(this.age); // 静态方法没法访问非静态的属性\n    // this.printInfo(); // 静态方法没法访问非静态的方法\n    // printInfo(); // 静态方法没法访问非静态的方法\n  }\n}\nvoid main(){\n  Person.printUserInfo();\n}\n```\n\n### 操作符\n\n* ?     条件运算符 （了解）\n* as    类型转换\n* is    类型判断\n* ..    级联操作 （连缀）  (记住)\n\n#### 条件运算符\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\n\nvoid main(){\n  Person p;\n  p?.printInfo();\n\n  Person p2 = new Person('张三', 20);\n  p2?.printInfo();\n}\n```\n\n#### 操作符-类型判断\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\n\nvoid main(){\n  Person p = new Person('张三', 20);\n\n  if (p is Person) {\n    p.name = \"李四\";\n  }\n  p.printInfo(); // 李四---20\n  print(p is Object); // true\n}\n```\n\n#### 类型转换\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\nvoid main(){\n  var p1;\n  p1 = '';\n  p1 = new Person('张三1', 20);\n\n  p1.printInfo(); // 老版本报错 不知道p1是字符串还是Person类\n  (p1 as Person).printInfo(); // 强制转换为Person类\n}\n```\n\n#### 级联操作\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\nvoid main(){\n  Person p1 = new Person('张三', 20);\n\n  p1.printInfo(); // 张三---20\n\n  p1.name = '李四';\n  p1.age = 40;\n  p1.printInfo(); // 李四---40\n\n  // 使用连缀简化为\n  p1..name = '王五'\n    ..age = 60\n    ..printInfo(); // 王五---60\n}\n```\n\n### 类的继承\n\n#### 简单继承\n\n1. 子类使用extends关键词来继承父类\n2. 子类会继承父类里面可见的属性和方法 但是不会继承构造函数\n3. 子类能复写父类的方法 getter和setter\n\n```dart\nclass Person {\n  String name = '张三';\n  num age = 20;\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\n\nclass Web extends Person {\n\n}\n\nmain() {\n  Web w = new Web();\n  print(w.name);\n  w.printInfo();\n}\n```\n\n#### super关键词的使用\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\n\nclass Web extends Person {\n  Web(String name, num age) : super(name, age) {\n\n  }\n}\n\nvoid main(){\n  Person p = new Person('李四', 20);\n  p.printInfo();\n\n  Person p1 = new Person('张三', 20);\n  p1.printInfo();\n\n  Web w = new Web('王五', 12);\n  w.printInfo();\n}\n```\n\n> 继承类的属性扩展\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\n\nclass Web extends Person {\n  String sex;\n  Web(String name, num age, String sex) : super(name, age) {\n    this.sex = sex;\n  }\n  \n  run() {\n    print(\"${this.name}---${this.age}--${this.sex}\");\n  }\n}\n\nvoid main(){\n  Person p = new Person('李四', 20);\n  p.printInfo();\n\n  Person p1 = new Person('张三', 20);\n  p1.printInfo();\n\n  Web w = new Web('王五', 12);\n  w.printInfo();\n  w.run();\n}\n```\n\n> super给命名构造函数传参\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person.setInfo(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n}\n\nclass Web extends Person {\n  String sex;\n  Web(String name, num age, this.sex) : super.setInfo(name, age) {}\n  run() {\n    print(\"${this.name}---${this.age}--${this.sex}\");\n  }\n}\n\nmain() {\n  Web w = new Web('张三', 12, \"男\");\n  w.printInfo();\n  w.run();\n}\n```\n\n#### 复写父类的方法\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n\n  work() {\n    print(\"${this.name}在工作...\");\n  }\n}\n\nclass Web extends Person {\n  Web(String name, num age) : super(name, age);\n\n  run() {\n    print('run');\n  }\n\n  // 覆写父类的方法\n  @override //可以写也可以不写 建议在覆写父类方法的时候加上 @override\n  void printInfo() {\n    print(\"姓名：${this.name}---年龄：${this.age}\");\n  }\n\n  @override\n  work() {\n    print(\"${this.name}的工作是写代码\");\n  }\n}\n\nvoid main(){\n  Web w = new Web('李四', 20);\n  w.printInfo();\n  w.work();\n}\n```\n\n#### 子类调用父类的方法\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  void printInfo() {\n    print(\"${this.name}---${this.age}\");\n  }\n\n  work() {\n    print(\"${this.name}在工作...\");\n  }\n}\n\nclass Web extends Person {\n  Web(String name, num age) : super(name, age);\n\n  run() {\n    print('run');\n    super.work(); //自类调用父类的方法\n  }\n\n  //覆写父类的方法\n  @override //可以写也可以不写  建议在覆写父类方法的时候加上 @override\n  void printInfo() {\n    print(\"姓名：${this.name}---年龄：${this.age}\");\n  }\n}\n\nmain() {\n  Web w = new Web('李四', 20);\n  w.run();\n}\n```\n\n## 抽象类\n\n### 创建抽象类\n\nDart抽象类主要用于定义标准，子类可以继承抽象类，也可以实现抽象类接口。\n\n1. 抽象类通过abstract 关键字来定义\n2. Dart中的抽象方法不能用abstract声明，Dart中没有方法体的方法我们称为抽象方法。\n3. 如果子类继承抽象类必须得实现里面的抽象方法\n4. 如果把抽象类当做接口实现的话必须得实现抽象类里面定义的所有属性和方法。\n5. 抽象类不能被实例化，只有继承它的子类可以\n\nextends抽象类 和 implements的区别：\n\n1. 如果要复用抽象类里面的方法，并且要用抽象方法约束自类的话我们就用extends继承抽象类\n2. 如果只是把抽象类当做标准的话我们就用implements实现抽象类\n\n```dart\n// 案例：定义一个Animal 类要求它的子类必须包含eat方法\nabstract class Animal {\n  eat(); //抽象方法\n  run(); //抽象方法\n  \n  printInfo() {\n    print('我是一个抽象类里面的普通方法');\n  }\n}\n\nclass Dog extends Animal {\n  @override\n  eat() {\n    print('小狗在吃骨头');\n  }\n  \n  @override\n  run() {\n    // TODO: implement run\n    print('小狗在跑');\n  }\n}\n\nclass Cat extends Animal {\n  @override\n  eat() {\n    // TODO: implement eat\n    print('小猫在吃老鼠');\n  }\n  \n  @override\n  run() {\n    // TODO: implement run\n    print('小猫在走');\n  }\n}\n\nvoid main(){\n  Dog d = new Dog();\n  d.eat();\n  d.printInfo();\n\n  Cat c = new Cat();\n  c.eat();\n  c.printInfo();\n\n  // Animal a = new Animal(); //抽象类没法直接被实例化\n}\n```\n\n### 多态\n\n多态：允许将子类类型的指针赋值给父类类型的指针, 同一个函数调用会有不同的执行效果。\n\n子类的实例赋值给父类的引用。\n\n多态就是父类定义一个方法不去实现，让继承他的子类去实现，每个子类有不同的表现。\n\n```dart\nabstract class Animal{\n  eat();   //抽象方法 \n}\n\nclass Dog extends Animal{\n  @override\n  eat() {\n     print('小狗在吃骨头');\n  }\n  run(){\n    print('run');\n  }\n}\nclass Cat extends Animal{\n  @override\n  eat() {   \n    print('小猫在吃老鼠');\n  }\n  run(){\n    print('run');\n  }\n}\n\nmain() {\n  // 类型定义为父类 可以访问run方法\n  Dog d = new Dog();\n  d.eat();\n  d.run();\n\n  Cat c = new Cat();\n  c.eat();\n  c.run();\n\n  // 类型定义为父类 不可以访问run方法\n  Animal d1 = new Dog();\n  d1.eat();\n\n  Animal c1 = new Cat();\n  c1.eat();\n}\n```\n\n### 接口\n\n`dart`和`Java`一样，`dart`也有接口，但是和`Java`还是有区别的。\n首先，`dart`的接口没有`interface`关键字定义接口，而是普通类或抽象类都可以作为接口被实现。\n同样使用`implements`关键字进行实现。\n\n但是`dart`的接口有点奇怪，如果实现的类是普通类，会将普通类和抽象中的属性的方法全部需要覆写一遍。\n而因为抽象类可以定义抽象方法，普通类不可以，所以一般如果要实现像Java接口那样的方式，一般会使用抽象类。\n建议使用抽象类定义接口。\n\n```dart\n/*\n  定义一个DB库 支持 mysql  mssql  mongodb\n  mysql  mssql  mongodb三个类里面都有同样的方法\n*/\nabstract class Db {\n  //当做接口   接口：就是约定 、规范\n  String uri; //数据库的链接地址\n  add(String data);\n  save();\n  delete();\n}\n\nclass Mysql implements Db {\n  @override\n  String uri;\n\n  Mysql(this.uri);\n\n  @override\n  add(data) {\n    // TODO: implement add\n    print('这是mysql的add方法' + data);\n  }\n\n  @override\n  delete() {\n    // TODO: implement delete\n    return null;\n  }\n\n  @override\n  save() {\n    // TODO: implement save\n    return null;\n  }\n\n  remove() {}\n}\n\nclass MsSql implements Db {\n  @override\n  String uri;\n  @override\n  add(String data) {\n    print('这是mssql的add方法' + data);\n  }\n\n  @override\n  delete() {\n    // TODO: implement delete\n    return null;\n  }\n\n  @override\n  save() {\n    // TODO: implement save\n    return null;\n  }\n}\nvoid main() {\n  Mysql mysql = new Mysql('xxxxxx');\n  mysql.add('1243214');\n}\n```\n\n### 接口文件分离\n\n`lib/Db.dart`\n\n```dart\nabstract class Db{   //当做接口   接口：就是约定 、规范\n    String uri;      //数据库的链接地址\n    add(String data);\n    save();\n    delete();\n}\n```\n\n`lib/MySql.dart`\n\n```dart\nimport 'Db.dart';\n\nclass Mysql implements Db{\n  \n  @override\n  String uri;\n\n  Mysql(this.uri);\n\n  @override\n  add(data) {   \n    print('这是mysql的add方法'+data);\n  }\n\n  @override\n  delete() {   \n    return null;\n  }\n\n  @override\n  save() {   \n    return null;\n  }\n\n}\n```\n\n`lib/MsSql.dart`\n\n```dart\nimport 'Db.dart';\n\nclass MsSql implements Db{\n  @override\n  String uri;\n  @override\n  add(String data) {\n    print('这是mssql的add方法'+data);\n  }\n\n  @override\n  delete() {\n    return null;\n  }\n\n  @override\n  save() {\n    return null;\n  }\n\n}\n```\n\n`index.dart`\n\n```dart\nimport 'lib/MsSql.dart';\nimport 'lib/MySql.dart';\n\nmain() {\n  Mysql mysql = new Mysql('xxxxxx');\n  mysql.add('1243214');\n\n  MsSql mssql = new MsSql();\n  mssql.uri = '127.0.0.1';\n  mssql.add('增加的数据');\n}\n```\n\n## 一个类实现多个接口\n\n```dart\nabstract class A {\n  String name;\n  printA();\n}\n\nabstract class B {\n  printB();\n}\n\nclass C implements A, B {\n  @override\n  String name;\n  @override\n  printA() {\n    print('printA');\n  }\n\n  @override\n  printB() {\n    // TODO: implement printB\n    return null;\n  }\n}\n\nvoid main(){\n  C c = new C();\n  c.printA();\n}\n```\n\n## 类的混入\n\n`mixins`的中文意思是混入，就是在类中混入其他功能。在`Dart`中可以使用`mixins`实现类似多继承的功能。\n\n因为`mixins`使用的条件，随着`Dart`版本一直在变，这里讲的是`Dart2.x`中使用`mixins`的条件：\n\n1. 作为mixins的类只能继承自Object，不能继承其他类\n2. 作为mixins的类不能有构造函数\n3. 一个类可以mixins多个mixins类\n4. mixins绝不是继承，也不是接口，而是一种全新的特性\n\n### 类仅混入\n\n```dart\nclass A {\n  String info = \"this is A\";\n  void printA() {\n    print(\"A\");\n  }\n}\n\nclass B {\n  void printB() {\n    print(\"B\");\n  }\n}\n\nclass C with A, B {}\n\nvoid main() {\n  var c = new C();\n  c.printA();\n  c.printB();\n  print(c.info);\n}\n```\n\n### 类继承的同时混入\n\n```dart\nclass Person {\n  String name;\n  num age;\n  Person(this.name, this.age);\n  printInfo() {\n    print('${this.name}----${this.age}');\n  }\n  void run() {\n    print(\"Person Run\");\n  }\n}\n\nclass A {\n  String info = \"this is A\";\n  void printA() {\n    print(\"A\");\n  }\n  void run() {\n    print(\"A Run\");\n  }\n}\n\nclass B {\n  void printB() {\n    print(\"B\");\n  }\n  void run() {\n    print(\"B Run\");\n  }\n}\n\nclass C extends Person with B, A {\n  C(String name, num age) : super(name, age);\n}\n\nvoid main() {\n  var c = new C('张三', 20);\n  c.printInfo();    // 张三----20\n  c.printB();       // B\n  print(c.info);    // this is A\n  c.run();          // A Run\n}\n```\n\n> 当混入的类存在相同的方法的时候，后混入的类会覆盖前混入的类。当继承和混入存在相同方法的时候，混入会覆盖继承的方法。\n\n### 类混入的实例类型\n\n很简单，`mixins`混入的类型就是其超类的子类型。\n\n```dart\nclass A {\n  String info = \"this is A\";\n  void printA() {\n    print(\"A\");\n  }\n}\n\nclass B {\n  void printB() {\n    print(\"B\");\n  }\n}\n\nclass C with A, B {}\n\nvoid main() {\n  var c = new C();\n\n  print(c is C); //true\n  print(c is A); //true\n  print(c is B); //true\n\n  var a = new A();\n  print(a is Object); //true a也是Object的子类型，因为所有的类都继承于Object类\n}\n```\n\n## 泛型\n\n通俗理解：泛型就是解决 类 接口 方法的复用性、以及对不特定数据类型的支持(类型校验)\n\n### 泛型方法\n\n> 期望方法传入什么类型返回什么类型\n\n* 传入string返回string\n\n```dart\n// 只能返回string类型的数据\nString getData(String value) {\n  return value;\n}\n```\n\n* 定义多个方法，A传入string返回string，B传入int返回int\n\n```dart\n// 同时支持返回 string类型 和int类型  （代码冗余）\nString getData1(String value) {\n  return value;\n}\n\nint getData2(int value) {\n  return value;\n}\n```\n\n* 不指定类型\n\n```dart\n// 同时返回 string类型 和number类型 不指定类型可以解决这个问题 但放弃了类型校验\ngetData3(value) {\n  return value;\n}\n\n```\n\n* 泛型使用\n\n不指定类型放弃了类型检查。我们现在想实现的是传入什么 返回什么。\n比如:传入`number`类型必须返回`number`类型，传入`string`类型必须返回`string`类型。\n\n```dart\nT getData4<T>(T value) {\n  return value;\n}\n\nvoid main(){\n  print(getData4(21));\n  print(getData4('xxx'));\n  print(getData4<String>('你好')); // 指定类型\n  print(getData4<int>(123));      // 指定类型\n}\n```\n\n### 泛型类\n\n```dart\nvoid main(){\n  // 不指定类的类型\n  List list = new List();\n  list.add(12);\n  list.add(\"你好\");\n  print(list);\n\n  // 指定类的类型为String\n  List list2 = new List<String>();\n  // list2.add(12); //错误的写法\n  list2.add('你好');\n  list2.add('你好1');\n  print(list2);\n\n  // 指定类的类型为int\n  List list3 = new List<int>();\n  // list3.add(\"你好\"); //错误写法\n  list3.add(12);\n  print(list3);\n}\n```\n\n案例：把下面类转换成泛型类，要求List里面可以增加int类型的数据，也可以增加String类型的数据。但是每次调用增加的类型要统一\n\n```dart\nclass PrintClass {\n  List list = new List<int>();\n  void add(int value) {\n    this.list.add(value);\n  }\n\n  void printInfo() {\n    for (var i = 0; i < this.list.length; i++) {\n      print(this.list[i]);\n    }\n  }\n}\n\nvoid main(){\n  PrintClass p = new PrintClass();\n  p.add(1);\n  p.add(12);\n  p.add(5);\n  p.printInfo();\n}\n```\n\n* 修改泛型类后\n\n```dart\nclass PrintClass<T> {\n  List list = new List<T>();\n  void add(T value) {\n    this.list.add(value);\n  }\n\n  void printInfo() {\n    for (var i = 0; i < this.list.length; i++) {\n      print(this.list[i]);\n    }\n  }\n}\n\nvoid main(){\n  PrintClass p = new PrintClass();\n  p.add(11);\n  p.add('xxx');\n  p.add(22);\n  p.printInfo();\n\n  PrintClass p1 = new PrintClass<int>();\n  p1.add(1);\n  p1.add(2);\n  p1.add(3);\n  p1.printInfo();\n\n  PrintClass p2 = new PrintClass<String>();\n  p2.add('你好');\n  p2.add('泛型');\n  p2.add('类');\n  p2.printInfo();\n}\n```\n\n### 泛型接口\n\n官方示例：可将`ObjectCache`和`StringCache`通过泛型接口实现为`Cache`\n\n```dart\nabstract class ObjectCache {\n  getByKey(String key);\n  void setByKey(String key, Object value);\n}\n\nabstract class StringCache {\n  getByKey(String key);\n  void setByKey(String key, String value);\n}\n\nabstract class Cache<T> {\n  getByKey(String key);\n  void setByKey(String key, T value);\n}\n```\n\n实现数据缓存的功能：有文件缓存、和内存缓存。内存缓存和文件缓存按照接口约束实现。\n\n1. 定义一个泛型接口 约束实现它的子类必须有getByKey(key) 和 setByKey(key,value)\n2. 要求setByKey的时候的value的类型和实例化子类的时候指定的类型一致\n\n```dart\nabstract class Cache<T> {\n  getByKey(String key);\n  void setByKey(String key, T value);\n}\n\nclass FileCache<T> extends Cache<T> {\n  @override\n  getByKey(String key) {\n    throw UnimplementedError();\n  }\n\n  @override\n  void setByKey(String key, T value) {\n    print('this is FileCache key=${key} value=${value}');\n  }\n}\n\nclass MemoryCache<T> extends Cache<T> {\n  @override\n  getByKey(String key) {\n    throw UnimplementedError();\n  }\n\n  @override\n  void setByKey(String key, T value) {\n    print('this is MemoryCache key=${key} value=${value}');\n  }\n}\n\nvoid main() {\n  MemoryCache m = new MemoryCache<String>();\n  m.setByKey('index', '首页数据');\n\n  MemoryCache m1 = new MemoryCache<Map>();\n  m1.setByKey('index', {\"name\": \"张三\", \"age\": 20});\n}\n```\n\n## 库\n\n前面介绍`Dart`基础知识的时候基本上都是在一个文件里面编写`Dart`代码的，但实际开发中不可能这么写，模块化很重要，所以这就需要使用到库的概念。\n\n在`Dart`中，库的使用时通过`import`关键字引入的。\n\n`library`指令可以创建一个库，每个`Dart`文件都是一个库，即使没有使用`library`指令来指定。\n\nDart中的库主要有三种：\n\n* 我们自定义的库\n\n```dart\nimport 'lib/xxx.dart';\n```\n\n* 系统内置库\n\n```dart\nimport 'dart:math';\nimport 'dart:io';\nimport 'dart:convert';\n```\n\n* Pub包管理系统中的库  \n  `https://pub.dev/packages`\n  `https://pub.flutter-io.cn/packages`\n  `https://pub.dartlang.org/flutter/`\n  * 需要在自己想项目根目录新建一个pubspec.yaml\n  * 在pubspec.yaml文件 然后配置名称 、描述、依赖等信息\n  * 然后运行 pub get 获取包下载到本地  \n  * 项目中引入库 import 'package:http/http.dart' as http; 看文档使用\n\n### 自定义库\n\n`./index.dart`\n\n```dart\nimport 'lib/Animal.dart';\n\nmain() {\n  var a = new Animal('小黑狗', 20);\n  print(a.getName());\n}\n```\n\n`lib/Animal.dart`\n\n```dart\nclass Animal {\n  String _name; //私有属性\n  int age;\n  //默认构造函数的简写\n  Animal(this._name, this.age);\n\n  void printInfo() {\n    print(\"${this._name}----${this.age}\");\n  }\n\n  String getName() {\n    return this._name;\n  }\n\n  void _run() {\n    print('这是一个私有方法');\n  }\n\n  execRun() {\n    this._run(); //类里面方法的相互调用\n  }\n}\n```\n\n### 系统内置库\n\n#### 系统内置math库\n\n```dart\n// import 'dart:io';\nimport \"dart:math\";\nmain() {\n  print(min(12,23));\n  print(max(12,25));\n}\n```\n\n#### 系统内置io库\n\n```dart\nimport 'dart:io';       // 请求相关\nimport 'dart:convert';  // 转换编码格式\n\n//api接口： http://news-at.zhihu.com/api/3/stories/latest\ngetDataFromZhihuAPI() async{\n  //1、创建HttpClient对象\n  var httpClient = new HttpClient();  \n  //2、创建Uri对象\n  var uri = new Uri.http('news-at.zhihu.com','/api/3/stories/latest');\n  //3、发起请求，等待请求\n  var request = await httpClient.getUrl(uri);\n  //4、关闭请求，等待响应\n  var response = await request.close();\n  //5、解码响应的内容\n  return await response.transform(utf8.decoder).join();\n}\n\nvoid main() async{\n  var result = await getDataFromZhihuAPI();\n  print(result);\n}\n```\n\n### async和await\n\n这两个关键字的使用只需要记住两点：\n\n* 只有async方法才能使用await关键字调用方法\n* 如果调用别的async方法必须使用await关键字\n\n> async是让方法变成异步。await是等待异步方法执行完成。\n\n原方法\n\n```dart\ntestAsync() {\n  return 'Hello async';\n}\n\nvoid main(){\n  var result = testAsync();\n  print(result);\n}\n```\n\n改为异步\n\n```dart\ntestAsync() async{\n  return 'Hello async';\n}\n\nvoid main() async{\n  var result = await testAsync();\n  print(result);\n}\n```\n\n### 引入第三方模块\n\ndart的三方库都是用pub包管理系统进行管理的。\n\n1、**从下面网址找到要用的库**\n\n  `https://pub.dev/packages`\n  `https://pub.flutter-io.cn/packages`\n  `https://pub.dartlang.org/flutter/`\n\n2、**创建一个pubspec.yaml文件，内容如下**\n\n```yaml\nname: xxx\ndescription: A new flutter module project.\ndependencies:  \n  http: ^0.12.0+2\n  date_format: ^1.0.6\n```\n\n3、**配置dependencies**\n4、**运行pub get 获取远程库**\n5、**看文档引入库使用**\n\n```dart\nimport 'dart:convert' as convert;\nimport 'package:http/http.dart' as http;\nimport 'package:date_format/date_format.dart';\nmain() async {\n  var url =\n      \"http://www.phonegap100.com/appapi.php?a=getPortalList&catid=20&page=1\";\n\n  // Await the http get response, then decode the json-formatted responce.\n  var response = await http.get(url);\n  if (response.statusCode == 200) {\n    var jsonResponse = convert.jsonDecode(response.body);\n\n    print(jsonResponse);\n  } else {\n    print(\"Request failed with status: ${response.statusCode}.\");\n  }\n\n  print(formatDate(DateTime(1989, 2, 21), [yyyy, '*', mm, '*', dd]));\n}\n```\n\n### 库的重命名\n\n冲突解决：当引入两个库中有相同名称标识符的时候，\n如果是java通常我们通过写上完整的包名路径来指定使用的具体标识符，\n甚至不用import都可以，但是Dart里面是必须import的。\n当冲突的时候，可以使用as关键字来指定库的前缀。如下例子所示：\n\n`./index.dart`\n\n```dart\nimport 'package:lib/Person1.dart';\nimport 'package:lib/Person2.dart' as lib2;\n\nPerson p1 = new Person();           // Uses Person from Person1.\nlib2.Person p2 = new lib2.Person(); // Uses Person from Person2.\n```\n\n`lib/Person1.dart`\n\n```dart\nclass Person{\n  String name;\n  int age; \n  //默认构造函数的简写\n  Person(this.name,this.age);  \n\n  Person.setInfo(String name,int age){\n    this.name=name;\n    this.age=age;\n  }\n\n  void printInfo(){   \n    print(\"Person1:${this.name}----${this.age}\");\n  }\n}\n```\n\n`lib/Person2.dart`\n\n```dart\nclass Person{\n  String name;\n  int age; \n  //默认构造函数的简写\n  Person(this.name,this.age);  \n\n  Person.setInfo(String name,int age){\n    this.name=name;\n    this.age=age;\n  }\n\n  void printInfo(){   \n    print(\"Person1:${this.name}----${this.age}\");\n  }\n}\n```\n\n### 部分导入\n\n如果只需要导入库的一部分，有两种模式：\n\n* 模式一：只导入需要的部分，使用show关键字，如下例子所示：\n  `import 'package:lib1/lib1.dart' show foo;`\n\n* 模式二：隐藏不需要的部分，使用hide关键字，如下例子所示：\n  `import 'package:lib2/lib2.dart' hide foo;`\n\n#### 默认导入\n\n`./index.dart`\n\n```dart\nimport 'lib/myMath.dart'\n\nvoid main(){\n  getName();\n  getAge();\n}\n```\n\n`lib/myMath.dart`\n\n```dart\nvoid getName(){\n  print('张三');\n}\nvoid getAge(){\n  print(20);\n}\nvoid getSex(){\n  print('男');\n}\n```\n\n#### 部分导入\n\n`./index.dart`\n\n```dart\nimport 'lib/myMath.dart' show getName;\n\nvoid main(){\n  getName();\n}\n```\n\n`lib/myMath.dart`\n\n```dart\nvoid getName(){\n  print('张三');\n}\nvoid getAge(){\n  print(20);\n}\nvoid getSex(){\n  print('男');\n}\n```\n\n#### 隐藏部分\n\n`./index.dart`\n\n```dart\nimport 'lib/myMath.dart' hide getName;\n\nvoid main(){\n  // getName(); // 报错\n  getAge();\n}\n```\n\n`lib/myMath.dart`\n\n```dart\nvoid getName(){\n  print('张三');\n}\nvoid getAge(){\n  print(20);\n}\nvoid getSex(){\n  print('男');\n}\n```\n\n### 延迟加载\n\n也称为懒加载，可以在需要的时候再进行加载。\n懒加载的最大好处是可以减少APP的启动时间。\n\n懒加载使用deferred as关键字来指定，如下例子所示：\n\n`import 'package:deferred/hello.dart' deferred as hello;`\n\n当需要使用的时候，需要使用loadLibrary()方法来加载：\n\n```dart\nimport 'package:deferred/hello.dart' deferred as hello;\ngreet() async {\n  await hello.loadLibrary();\n  hello.printGreeting();\n}\n```\n\n## 参考资料\n\n* [B站-Dart Flutter教程_Dart Flutter入门实战视频教程-2020年新出-第14讲以后是Flutter教程](https://www.bilibili.com/video/BV1S4411E7LY?from=search&seid=18237173814777031437)\n","slug":"Dart教程","published":1,"updated":"2021-03-06T07:00:21.356Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cklxkqk1u009q2an9a94s2e59","content":"<p><img src=\"https://s3.ax1x.com/2021/03/01/6iYQbt.png\" alt=\"首屏图\"></p>\n<a id=\"more\"></a>\n<h2 id=\"Dart介绍\"><a href=\"#Dart介绍\" class=\"headerlink\" title=\"Dart介绍\"></a>Dart介绍</h2><p>Dart是由谷歌开发的计算机编程语言，它可以用于web、服务器、移动应用和物联网等领域的开发。</p>\n<p>Dart 诞生于2011年，号称起到javaScript/但是过去的几年中一直不温不火。知道Flutter的出现人们重新重视。</p>\n<p>要学习Flutter的话我们必须首先得会<a href=\"https://dart.dev\">Dart</a>。</p>\n<h2 id=\"Dart环境搭建\"><a href=\"#Dart环境搭建\" class=\"headerlink\" title=\"Dart环境搭建\"></a>Dart环境搭建</h2><h3 id=\"Windows系统安装Dart\"><a href=\"#Windows系统安装Dart\" class=\"headerlink\" title=\"Windows系统安装Dart\"></a>Windows系统安装Dart</h3><ul>\n<li>命令行安装</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装dart-sdk</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">  choco install dart-sdk</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 更新dart-sdk</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">  choco upgrade dart-sdk</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>软件安装SDK(推荐)</li>\n</ul>\n<p><a href=\"https://gekorm.com/dart-windows/\">下载dart的SDK软件</a></p>\n<h3 id=\"Mac系统安装Dart\"><a href=\"#Mac系统安装Dart\" class=\"headerlink\" title=\"Mac系统安装Dart\"></a>Mac系统安装Dart</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 跟新追踪brew的包管理信息，扩展可安装软件的选择</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> brew tap dart-lang/dart</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 使用brew安装dart</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> brew install dart</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://dart.dev/get-dart\">dart官网下载地址</a></p>\n<blockquote>\n<p>注： 如果没有安装brew工具，需先<a href=\"https://brew.sh/\">安装Homebrew</a></p>\n</blockquote>\n<h2 id=\"Dart开发工具\"><a href=\"#Dart开发工具\" class=\"headerlink\" title=\"Dart开发工具\"></a>Dart开发工具</h2><p>Dark常见的开发工具有：IntelliJ IDEA、Webstorm、Atom、Vscode等</p>\n<ul>\n<li>Dart的提示插件</li>\n</ul>\n<p><img src=\"https://s3.ax1x.com/2021/02/22/y7xdBD.png\" alt=\"Dart的VScode插件\"></p>\n<ul>\n<li>Dart的运行插件code runner</li>\n</ul>\n<p><img src=\"https://s3.ax1x.com/2021/02/22/y7zOzt.png\" alt=\"code-runner\"></p>\n<h2 id=\"Dart的初次编写\"><a href=\"#Dart的初次编写\" class=\"headerlink\" title=\"Dart的初次编写\"></a>Dart的初次编写</h2><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello dart&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.ax1x.com/2021/02/22/yHSo60.png\" alt=\"运行首个Dart文件\"></p>\n<h2 id=\"Dart方法介绍\"><a href=\"#Dart方法介绍\" class=\"headerlink\" title=\"Dart方法介绍\"></a>Dart方法介绍</h2><h3 id=\"Dart入口方法\"><a href=\"#Dart入口方法\" class=\"headerlink\" title=\"Dart入口方法\"></a>Dart入口方法</h3><p>所有需要被执行的方法需放置在main方法中</p>\n<p>共有两种main的写法，分别是基本用法和无返回值的用法</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 基本用法 --&gt;</span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello dart&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 无返回值的main方法 --&gt;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello dart&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Dart打印\"><a href=\"#Dart打印\" class=\"headerlink\" title=\"Dart打印\"></a>Dart打印</h3><p>上面的例子中使用到了打印方法</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 打印<span class=\"string\">&quot;hello dart&quot;</span> --&gt;</span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello dart&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Dart注释\"><a href=\"#Dart注释\" class=\"headerlink\" title=\"Dart注释\"></a>Dart注释</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// main() &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   print(&quot;hello dart1&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/<span class=\"strong\">**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">main() &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">  print(&quot;hello dart2&quot;);</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\"><span class=\"bullet\"> *</span> <span class=\"emphasis\">*/</span></span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">main() &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\">///   <span class=\"markdown\">print(&quot;hello dart3&quot;);</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello dart4&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Dart变量\"><a href=\"#Dart变量\" class=\"headerlink\" title=\"Dart变量\"></a>Dart变量</h3><p>dart是一个强大的脚本类语言，可以不预先定义变量类型，自动会类型推断</p>\n<p>dart中定义变量可以通过var关键字或类型关键字来申明变量</p>\n<ul>\n<li>字符串类型：String</li>\n<li>数字类型：int</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;this is var&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(str);</span><br><span class=\"line\"><span class=\"keyword\">var</span> mynum = <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mynum);</span><br><span class=\"line\"><span class=\"built_in\">String</span> string = <span class=\"string\">&#x27;this is String&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(string);</span><br><span class=\"line\"><span class=\"built_in\">int</span> mynum2 = <span class=\"number\">456</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mynum2);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注：var不要和类型关键字一起使用</p>\n</blockquote>\n<p>dart中存在类型校验 下面三种情况均会报错</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">str = <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(str);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">String</span> mynum = <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mynum);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">int</span> mynum2 = <span class=\"string\">&#x27;456&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mynum2);</span><br></pre></td></tr></table></figure>\n<p>此时赋值操作会出现报错提示，因为声明时推断str为字符串类型</p>\n<h3 id=\"Dart常量\"><a href=\"#Dart常量\" class=\"headerlink\" title=\"Dart常量\"></a>Dart常量</h3><p>常量只能进行一次赋值操作</p>\n<ul>\n<li>const常量</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> PI = <span class=\"number\">3.14159</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(PI);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">final</span> PI2 = <span class=\"number\">3.14159</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(PI2);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">final</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">DateTime</span>.now();</span><br><span class=\"line\"><span class=\"built_in\">print</span>(now);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>final常量</li>\n</ul>\n<p>区别：final不仅有const的编译时常量的特性，最重要的是它是运行时常量，并且final是惰性初始化，即在运行时第一次使用前才初始化</p>\n<h3 id=\"Dart命名规则\"><a href=\"#Dart命名规则\" class=\"headerlink\" title=\"Dart命名规则\"></a>Dart命名规则</h3><ol>\n<li>变量名称必须由数字、字母、下划线和$符组成</li>\n<li>注意：标识符开头不能是数字</li>\n<li>标识符不能是保留字和关键字</li>\n<li>变量的名字是区分大小写的：如age和Age是不同的变量。在实际的运用中，也建议不要用一个</li>\n<li>标识符(变量名称)一定要见名思意：变量名称建议用名词，方法名称建议用动词</li>\n</ol>\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><h3 id=\"常用数据类型\"><a href=\"#常用数据类型\" class=\"headerlink\" title=\"常用数据类型\"></a>常用数据类型</h3><ul>\n<li>Number(数值)<ul>\n<li>int</li>\n<li>double</li>\n</ul>\n</li>\n<li>Strings(字符串)<ul>\n<li>String</li>\n</ul>\n</li>\n<li>Booleans(布尔)<ul>\n<li>bool</li>\n</ul>\n</li>\n<li>List(数组)<ul>\n<li>在Dart中，数组是列表对象，所以大多数人只是称它们为列表</li>\n</ul>\n</li>\n<li>Maps(字典)<ul>\n<li>通常来说，Map是一个键值对相关的对象。键和值可以是任何类型的对象。每个键只出现一次，而一个值则可以出现多次。映射是动态集合。换句话说，Maps可以在运行时增长和缩小。dart:core库中的Map类提供了相同的支持。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"字符串类型\"><a href=\"#字符串类型\" class=\"headerlink\" title=\"字符串类型\"></a>字符串类型</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1、字符串定义的几种方式</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;this is str&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str2 = <span class=\"string\">&quot;this is str2&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str2);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">String</span> str3 = <span class=\"string\">&#x27;this is str3&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">String</span> str4 = <span class=\"string\">&#x27;this is str4&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str3);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str4);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">String</span> str5 = <span class=\"string\">&#x27;&#x27;&#x27;this is str5&#x27;&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str5);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">String</span> str6 = <span class=\"string\">&#x27;&#x27;&#x27;this is str6</span></span><br><span class=\"line\"><span class=\"string\">  this is str6</span></span><br><span class=\"line\"><span class=\"string\">  this is str6</span></span><br><span class=\"line\"><span class=\"string\">  &#x27;&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str6);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">String</span> str7 = <span class=\"string\">&quot;&quot;&quot;this is str7</span></span><br><span class=\"line\"><span class=\"string\">  this is str7</span></span><br><span class=\"line\"><span class=\"string\">  this is str7</span></span><br><span class=\"line\"><span class=\"string\">  &quot;&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str7);</span><br><span class=\"line\">  <span class=\"comment\">// 2、字符串的拼接</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> str8 = <span class=\"string\">&#x27;this is&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> str9 = <span class=\"string\">&#x27;str9&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str8 + <span class=\"string\">&quot; &quot;</span> + str9);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$str8</span> <span class=\"subst\">$str9</span>&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"数值类型\"><a href=\"#数值类型\" class=\"headerlink\" title=\"数值类型\"></a>数值类型</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1.int 必须是整型</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> a = <span class=\"number\">123</span>;</span><br><span class=\"line\">  <span class=\"comment\">// a = 45.5; 不可以赋浮点型</span></span><br><span class=\"line\">  a = <span class=\"number\">12</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a);</span><br><span class=\"line\">  <span class=\"comment\">// 2.double 既可以是整型 也可是浮点型</span></span><br><span class=\"line\">  <span class=\"built_in\">double</span> b = <span class=\"number\">23.5</span>;</span><br><span class=\"line\">  b = <span class=\"number\">24</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(b);</span><br><span class=\"line\">  <span class=\"comment\">// 3.运算符</span></span><br><span class=\"line\">  <span class=\"comment\">// + - * / %</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> c = a + b;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c); <span class=\"comment\">// 12 + 24.0 = 36.0</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> d = <span class=\"number\">12</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> e = a + d;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(e); <span class=\"comment\">// 12 + 12 = 24</span></span><br><span class=\"line\">  <span class=\"comment\">// e = 12.5; // 错误 e现前计算时为整型不可再次赋值浮点型</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"布尔类型\"><a href=\"#布尔类型\" class=\"headerlink\" title=\"布尔类型\"></a>布尔类型</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">bool 值true/false</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1.bool</span></span><br><span class=\"line\">  <span class=\"built_in\">bool</span> flag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(flag);</span><br><span class=\"line\">  <span class=\"built_in\">bool</span> flag2 = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(flag2);</span><br><span class=\"line\">  <span class=\"comment\">// bool flag3 = 123; // 不能赋非布尔的值</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2.条件判断语句</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (flag) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;真&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;假&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">123</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"number\">456</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a == b) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a==b&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a!=b&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// a!=b</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> c = <span class=\"string\">&#x27;123&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a == c) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a==c&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a!=c&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// a!=c</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> d = <span class=\"number\">123</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a == d) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a==d&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a!=d&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// a==d</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">double</span> e = <span class=\"number\">123.0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a == e) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a==e&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a!=e&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// a==e</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"数组-集合类型\"><a href=\"#数组-集合类型\" class=\"headerlink\" title=\"数组/集合类型\"></a>数组/集合类型</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1.第一种定义List的方式</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> list = [<span class=\"string\">&#x27;1&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>, <span class=\"string\">&#x27;4&#x27;</span>, <span class=\"string\">&#x27;5&#x27;</span>];</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list.length);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list[<span class=\"number\">2</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2.第二种定义List的方式</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> list2 = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>();</span><br><span class=\"line\">  list2.add(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">  list2.add(<span class=\"string\">&#x27;b&#x27;</span>);</span><br><span class=\"line\">  list2.add(<span class=\"string\">&#x27;c&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list2);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list2.length);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list2[<span class=\"number\">1</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 3.定义List指定类型</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> list3 = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>&lt;<span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">  list3.add(<span class=\"string\">&#x27;张三&#x27;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// list3.add(123); // 不能添加非字符串类型</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list3);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Map类型\"><a href=\"#Map类型\" class=\"headerlink\" title=\"Map类型\"></a>Map类型</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">//第一种定义 Maps的方式</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;John&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">21</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;works&quot;</span>: [<span class=\"string\">&quot;程序猿&quot;</span>, <span class=\"string\">&quot;测试员&quot;</span>],</span><br><span class=\"line\">    <span class=\"string\">&quot;married&quot;</span>: <span class=\"keyword\">false</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person[<span class=\"string\">&quot;name&quot;</span>]);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person[<span class=\"string\">&quot;age&quot;</span>]);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person[<span class=\"string\">&quot;works&quot;</span>]);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person[<span class=\"string\">&quot;married&quot;</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//第二种定义 Maps的方式</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>();</span><br><span class=\"line\">  person2[<span class=\"string\">&quot;name&quot;</span>] = <span class=\"string\">&quot;Bob&quot;</span>;</span><br><span class=\"line\">  person2[<span class=\"string\">&quot;age&quot;</span>] = <span class=\"number\">26</span>;</span><br><span class=\"line\">  person2[<span class=\"string\">&quot;works&quot;</span>] = [<span class=\"string\">&quot;UI设计&quot;</span>, <span class=\"string\">&quot;测试员&quot;</span>];</span><br><span class=\"line\">  person2[<span class=\"string\">&quot;married&quot;</span>] = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2[<span class=\"string\">&quot;name&quot;</span>]);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2[<span class=\"string\">&quot;age&quot;</span>]);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2[<span class=\"string\">&quot;works&quot;</span>]);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2[<span class=\"string\">&quot;married&quot;</span>]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"不常用数据类型\"><a href=\"#不常用数据类型\" class=\"headerlink\" title=\"不常用数据类型\"></a>不常用数据类型</h3><ul>\n<li>Runes<ul>\n<li>Runes是指UTF-32编码的字符串。它可以通过文字转换成符号表情或者代表特定的文字。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> clapping = <span class=\"string\">&#x27;\\u&#123;1f44f&#125;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(clapping);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(clapping.codeUnits);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(clapping.runes.toList());</span><br><span class=\"line\"></span><br><span class=\"line\">  Runes input = <span class=\"keyword\">new</span> Runes(</span><br><span class=\"line\">      <span class=\"string\">&#x27;\\u2665  \\u&#123;1f605&#125;  \\u&#123;1f60e&#125;  \\u&#123;1f47b&#125;  \\u&#123;1f596&#125;  \\u&#123;1f44d&#125;&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>.fromCharCodes(input));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Symbols<ul>\n<li>Symbols对象表示在Dart程序中声明运算符或标识符。您可能永远不需要使用符号，但它们对于按名称引用标识符的API非常有用，因为缩小会更改标识符名称而不会更改标识符符号。要获取标识符的符号，请使用符号文字，它只是＃后跟标识符。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>在 Dart 中符号用 # 开头来表示，入门阶段不需要了解这东西，可能永远也用不上。</p>\n</blockquote>\n<h3 id=\"类型判断\"><a href=\"#类型判断\" class=\"headerlink\" title=\"类型判断\"></a>类型判断</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">main() &#123;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  is 关键词来判断类型</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;str&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (str <span class=\"keyword\">is</span> <span class=\"built_in\">String</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$str</span> 是字符串类型&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (str <span class=\"keyword\">is</span> <span class=\"built_in\">num</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$str</span> 是数字类型&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$str</span> 是其他类型&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> number = <span class=\"number\">123</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (number <span class=\"keyword\">is</span> <span class=\"built_in\">String</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$number</span> 是字符串类型&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (number <span class=\"keyword\">is</span> <span class=\"built_in\">num</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$number</span> 是数字类型&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$number</span> 是其他类型&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> doubleNum = <span class=\"number\">123.5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (doubleNum <span class=\"keyword\">is</span> <span class=\"built_in\">String</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$doubleNum</span> 是字符串类型&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (doubleNum <span class=\"keyword\">is</span> <span class=\"built_in\">int</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$doubleNum</span> 是整数类型&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (doubleNum <span class=\"keyword\">is</span> <span class=\"built_in\">double</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$doubleNum</span> 是浮点数类型&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$doubleNum</span> 是其他类型&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"条件判断\"><a href=\"#条件判断\" class=\"headerlink\" title=\"条件判断\"></a>条件判断</h2><h3 id=\"算数运算符\"><a href=\"#算数运算符\" class=\"headerlink\" title=\"算数运算符\"></a>算数运算符</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// +    -    *    /     ~/ (取整)     %（取余）</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> a=<span class=\"number\">13</span>;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> b=<span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a+b);   <span class=\"comment\">//加</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a-b);   <span class=\"comment\">//减</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a*b);   <span class=\"comment\">//乘</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a/b);   <span class=\"comment\">//除</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a%b);   <span class=\"comment\">//其余</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a~/b);  <span class=\"comment\">//取整</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> c=a*b;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;--------&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c);</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"关系运算符\"><a href=\"#关系运算符\" class=\"headerlink\" title=\"关系运算符\"></a>关系运算符</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">//  ==    !=   &gt;    &lt;    &gt;=    &lt;=</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">int</span> a=<span class=\"number\">5</span>;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> b=<span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a==b);   <span class=\"comment\">//判断是否相等</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a!=b);   <span class=\"comment\">//判断是否不等</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a&gt;b);   <span class=\"comment\">//判断是否大于</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a&lt;b);   <span class=\"comment\">//判断是否小于</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a&gt;=b);   <span class=\"comment\">//判断是否大于等于</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a&lt;=b);   <span class=\"comment\">//判断是否小于等于</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(a&gt;b)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a大于b&#x27;</span>);</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a小于b&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">/* ! 取反 */</span> </span><br><span class=\"line\">  <span class=\"built_in\">bool</span> flag=<span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(!flag);   <span class=\"comment\">//取反</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* &amp;&amp;并且:全部为true的话值为true 否则值为false */</span> </span><br><span class=\"line\">  <span class=\"built_in\">bool</span> a = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">bool</span> b = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a &amp;&amp; b);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">/* ||或者：全为false的话值为false 否则值为true */</span> </span><br><span class=\"line\">  <span class=\"built_in\">bool</span> c = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">bool</span> d = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c || d);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 如果一个人的年龄是20 并且 sex是女的话我们打印这个人</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> age = <span class=\"number\">20</span>;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> sex = <span class=\"string\">&quot;女&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (age == <span class=\"number\">20</span> &amp;&amp; sex == <span class=\"string\">&quot;女&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$age</span> --- <span class=\"subst\">$sex</span>&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;不打印&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">int</span> age2 = <span class=\"number\">30</span>;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> sex2 = <span class=\"string\">&quot;女&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (age2 == <span class=\"number\">20</span> &amp;&amp; sex2 == <span class=\"string\">&quot;女&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$age2</span> --- <span class=\"subst\">$sex2</span>&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;不打印&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//如果一个人的年龄是20 或者 sex是女的话我们打印这个人</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">int</span> age3 = <span class=\"number\">30</span>;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> sex3 = <span class=\"string\">&quot;女&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (age3 == <span class=\"number\">20</span> || sex3 == <span class=\"string\">&quot;女&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$age3</span> --- <span class=\"subst\">$sex3</span>&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;不打印&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">//  1、基础赋值运算符   =   ??=</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> b = <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a);</span><br><span class=\"line\">  <span class=\"built_in\">int</span> c = a + b; <span class=\"comment\">//从右向左</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// b ??= 23;  表示如果b为空的话把 23赋值给b</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> d = <span class=\"number\">10</span>;</span><br><span class=\"line\">  d ??= <span class=\"number\">23</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">int</span> e;</span><br><span class=\"line\">  e ??= <span class=\"number\">23</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(e);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2、复合赋值运算符   +=  -=  *=   /=   %=  ~/=</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> f = <span class=\"number\">12</span>;</span><br><span class=\"line\">  f = f + <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(f);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> g = <span class=\"number\">13</span>;</span><br><span class=\"line\">  g += <span class=\"number\">10</span>; <span class=\"comment\">//g=g+10</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(g);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> h = <span class=\"number\">4</span>;</span><br><span class=\"line\">  h *= <span class=\"number\">3</span>; <span class=\"comment\">//h=h*3;</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(h);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> i = <span class=\"number\">7</span>;</span><br><span class=\"line\">  i %= <span class=\"number\">3</span>; <span class=\"comment\">//i=i%3;</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> j = <span class=\"number\">7</span>;</span><br><span class=\"line\">  j ~/= <span class=\"number\">3</span>; <span class=\"comment\">//j=(j~/3);</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(j);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"自增自减运算\"><a href=\"#自增自减运算\" class=\"headerlink\" title=\"自增自减运算\"></a>自增自减运算</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    ++  --   表示自增 自减 1</span></span><br><span class=\"line\"><span class=\"comment\">    在赋值运算里面 如果++ -- 写在前面 这时候先运算 再赋值，如果++ --写在后面 先赋值后运行运算</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">  a++; <span class=\"comment\">//a=a+1;</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"number\">10</span>;</span><br><span class=\"line\">  b--; <span class=\"comment\">//b=b-1;</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(b);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> c = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> d = a++;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c); <span class=\"comment\">//11</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(d); <span class=\"comment\">//10</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> e = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> f = ++a;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(e); <span class=\"comment\">//11</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(f); <span class=\"comment\">//11</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> g = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> h = --a;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(g); <span class=\"comment\">//9</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(h); <span class=\"comment\">//9</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> i = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> j = a--;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(i); <span class=\"comment\">//9</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(j); <span class=\"comment\">//10</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> k = <span class=\"number\">10</span>;</span><br><span class=\"line\">  ++k;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(k);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"条件表达式\"><a href=\"#条件表达式\" class=\"headerlink\" title=\"条件表达式\"></a>条件表达式</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1、if  else   switch case</span></span><br><span class=\"line\">  <span class=\"built_in\">bool</span> flag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (flag) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;true&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;false&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 判断一个人的成绩 如果大于60 显示及格   如果大于 70显示良好  如果大于90显示优秀</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> score = <span class=\"number\">41</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (score &gt; <span class=\"number\">90</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;优秀&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt; <span class=\"number\">70</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;良好&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">60</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;及格&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;不及格&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> sex = <span class=\"string\">&quot;女&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (sex) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&quot;男&quot;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;性别是男&#x27;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&quot;女&quot;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;性别是女&#x27;</span>);</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;性别是女2&#x27;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;传入参数错误&#x27;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2、三目运算符</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> falg = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (falg) &#123;</span><br><span class=\"line\">    a = <span class=\"string\">&#x27;我是true&#x27;</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    a = <span class=\"string\">&quot;我是false&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">bool</span> flag2 = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> b = flag2 ? <span class=\"string\">&#x27;我是true&#x27;</span> : <span class=\"string\">&#x27;我是false&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(b);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//3  ??运算符</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> c;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> d = c ?? <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(d); <span class=\"comment\">// 10</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> e = <span class=\"number\">22</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> f = e ?? <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(f); <span class=\"comment\">// 22</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Dart类型转换\"><a href=\"#Dart类型转换\" class=\"headerlink\" title=\"Dart类型转换\"></a>Dart类型转换</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1、Number与String类型之间的转换</span></span><br><span class=\"line\">  <span class=\"comment\">// Number类型转换成String类型 toString()</span></span><br><span class=\"line\">  <span class=\"comment\">// String类型转成Number类型  int.parse()</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> str = <span class=\"string\">&#x27;123&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum = <span class=\"built_in\">int</span>.parse(str);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum <span class=\"keyword\">is</span> <span class=\"built_in\">int</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"built_in\">String</span> str2 = <span class=\"string\">&#x27;123.1&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum2 = <span class=\"built_in\">double</span>.parse(str2);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum2 <span class=\"keyword\">is</span> <span class=\"built_in\">double</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 价格从字符串转数字时推荐使用浮点型避免报错</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> price = <span class=\"string\">&#x27;12&#x27;</span>; <span class=\"comment\">// String price = &#x27;12.5&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum3 = <span class=\"built_in\">double</span>.parse(price);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum3);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum3 <span class=\"keyword\">is</span> <span class=\"built_in\">double</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 报错</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> price2 = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum4 = <span class=\"built_in\">double</span>.parse(price2);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum4);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum4 <span class=\"keyword\">is</span> <span class=\"built_in\">double</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// try  ... catch</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> price3 = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> myNum = <span class=\"built_in\">double</span>.parse(price3);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(myNum);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 空值预处理</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> price4 = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  price4 = (price4 == <span class=\"string\">&#x27;&#x27;</span>) ? <span class=\"string\">&#x27;0&#x27;</span> : price4;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum5 = <span class=\"built_in\">double</span>.parse(price4);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum5);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum5 <span class=\"keyword\">is</span> <span class=\"built_in\">double</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum5 = <span class=\"number\">12</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> str3 = myNum5.toString();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str3 <span class=\"keyword\">is</span> <span class=\"built_in\">String</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2、其他类型转换成Booleans类型</span></span><br><span class=\"line\">  <span class=\"comment\">// isEmpty:判断字符串是否为空</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str4 = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (str4.isEmpty) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;str4空&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;str4不为空&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum6 = <span class=\"number\">123</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (myNum6 == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;非0&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum7;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (myNum7 == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;非0&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum8;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (myNum8 == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;空&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;非空&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum9 = <span class=\"number\">0</span> / <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum9);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (myNum9.isNaN) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;myNum9是NaN&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h2><h3 id=\"for循环语句\"><a href=\"#for循环语句\" class=\"headerlink\" title=\"for循环语句\"></a>for循环语句</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    // for基本语法</span></span><br><span class=\"line\"><span class=\"comment\">    for (int i = 1; i&lt;=100; i++) &#123;   </span></span><br><span class=\"line\"><span class=\"comment\">      print(i);</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    //第一步，声明变量int i = 1;</span></span><br><span class=\"line\"><span class=\"comment\">    //第二步，判断i &lt;=100</span></span><br><span class=\"line\"><span class=\"comment\">    //第三步，print(i);</span></span><br><span class=\"line\"><span class=\"comment\">    //第四步，i++</span></span><br><span class=\"line\"><span class=\"comment\">    //第五步 从第二步再来，直到判断为false</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 1、打印0-50所有的偶数</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">50</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2、求 1+2+3+4 +...100的和</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">    sum += i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(sum);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 3、计算5的阶乘   (1*2*3*4*5    n的阶乘1*2……*n)</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    sum2 *= i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(sum2);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 4、打印List  [&#x27;张三&#x27;,&#x27;李四&#x27;,&#x27;王五&#x27;] 里面的内容</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list = [<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"string\">&#x27;王五&#x27;</span>];</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list[<span class=\"number\">1</span>]);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; list.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(list[i]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 5、打印List中item的title</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list2 = [</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;新闻111&quot;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;新闻222&quot;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;新闻333&quot;</span>&#125;</span><br><span class=\"line\">  ];</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list2[<span class=\"number\">1</span>]);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; list.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(list[i][<span class=\"string\">&#x27;title&#x27;</span>]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 6、定义一个二维数组 打印里面的内容</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list3 = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;cate&quot;</span>: <span class=\"string\">&#x27;国内&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;news&quot;</span>: [</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;国内新闻1&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;国内新闻2&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;国内新闻3&quot;</span>&#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;cate&quot;</span>: <span class=\"string\">&#x27;国际&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;news&quot;</span>: [</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;国际新闻1&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;国际新闻2&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;国际新闻3&quot;</span>&#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ];</span><br><span class=\"line\">   <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    国内</span></span><br><span class=\"line\"><span class=\"comment\">    -------------</span></span><br><span class=\"line\"><span class=\"comment\">    国内新闻1</span></span><br><span class=\"line\"><span class=\"comment\">    国内新闻2</span></span><br><span class=\"line\"><span class=\"comment\">    国内新闻3</span></span><br><span class=\"line\"><span class=\"comment\">    国际</span></span><br><span class=\"line\"><span class=\"comment\">    -------------</span></span><br><span class=\"line\"><span class=\"comment\">    国际新闻1</span></span><br><span class=\"line\"><span class=\"comment\">    国际新闻2</span></span><br><span class=\"line\"><span class=\"comment\">    国际新闻3</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; list3.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(list3[i][<span class=\"string\">&quot;cate&quot;</span>]);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;-------------&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; list3[i][<span class=\"string\">&quot;news&quot;</span>].length; j++) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(list3[i][<span class=\"string\">&quot;news&quot;</span>][j][<span class=\"string\">&quot;title&quot;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"while-do…while循环语句\"><a href=\"#while-do…while循环语句\" class=\"headerlink\" title=\"while do…while循环语句\"></a>while do…while循环语句</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">语法格式:</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">  while(表达式/循环条件)&#123;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">  &#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">  do&#123;</span></span><br><span class=\"line\"><span class=\"comment\">    语句/循环体</span></span><br><span class=\"line\"><span class=\"comment\">  &#125;while(表达式/循环条件);</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">  注意： 1、最后的分号不要忘记</span></span><br><span class=\"line\"><span class=\"comment\">        2、循环条件中使用的变量需要经过初始化</span></span><br><span class=\"line\"><span class=\"comment\">        3、循环体中，应有结束循环的条件，否则会造成死循环。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  int i=1;</span></span><br><span class=\"line\"><span class=\"comment\">  while(i&lt;=10)&#123;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">      print(i);</span></span><br><span class=\"line\"><span class=\"comment\">  &#125;</span></span><br><span class=\"line\"><span class=\"comment\">  //死循环</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">int</span> i = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (i &lt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">    i++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 1、求1+2+3+4 ...+100的和</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> j = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (j &lt;= <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">    sum += j;</span><br><span class=\"line\">    j++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(sum);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">int</span> k = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">    sum += k;</span><br><span class=\"line\">    k++;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">while</span> (k &lt;= <span class=\"number\">100</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(sum2);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//  while 和 do while的区别   第一次循环条件不成立的情况下</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> l = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (l &lt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;执行代码&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> m = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;执行代码&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">while</span> (m &lt; <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"break和continue关键词\"><a href=\"#break和continue关键词\" class=\"headerlink\" title=\"break和continue关键词\"></a>break和continue关键词</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 1、如果i等于4的话跳过</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">continue</span>; <span class=\"comment\">/*跳过当前循环体 然后循环还会继续执行*/</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2、如果 i等于4的话跳出循环</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>; <span class=\"comment\">/*跳出循环体*/</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 3、break语句只能向外跳出一层</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;外层---<span class=\"subst\">$i</span>&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">3</span>; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;里层<span class=\"subst\">$j</span>&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 4、while循环 break跳出循环</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> i = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (i &lt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">    i++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> sex = <span class=\"string\">&quot;男&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (sex) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&quot;男&quot;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&quot;女&quot;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"集合类型\"><a href=\"#集合类型\" class=\"headerlink\" title=\"集合类型\"></a>集合类型</h2><h3 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h3><blockquote>\n<p>List里面常用的属性和方法：</p>\n</blockquote>\n<ul>\n<li>常用属性：<ul>\n<li>length          长度</li>\n<li>reversed        翻转</li>\n<li>isEmpty         是否为空</li>\n<li>isNotEmpty      是否不为空</li>\n</ul>\n</li>\n<li>常用方法：  <ul>\n<li>add         增加</li>\n<li>addAll      拼接数组</li>\n<li>contains    查找  传入具体值  返回true/false</li>\n<li>indexOf     查找  传入具体值</li>\n<li>remove      删除  传入具体值</li>\n<li>removeAt    删除  传入索引值</li>\n<li>fillRange(start,end,value)   修改</li>\n<li>insert(index,value);            指定位置插入</li>\n<li>insertAll(index,list)           指定位置插入List</li>\n<li>toList()    其他类型转换成List  </li>\n<li>join()      List转换成字符串</li>\n<li>split()     字符串转化成List</li>\n<li>forEach</li>\n<li>map</li>\n<li>where</li>\n<li>any</li>\n<li>every</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 声明List的两种方式</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList = [<span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>];</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList[<span class=\"number\">1</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> list = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>();</span><br><span class=\"line\">  list.add(<span class=\"string\">&#x27;111&#x27;</span>);</span><br><span class=\"line\">  list.add(<span class=\"string\">&#x27;222&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// List里面的属性：</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList2 = [<span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>];</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList2); <span class=\"comment\">//List</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList2.length); <span class=\"comment\">//长度</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList2.isEmpty); <span class=\"comment\">// 判断为空</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList2.isNotEmpty); <span class=\"comment\">// 判断非空</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList2.reversed); <span class=\"comment\">// 对列表倒序排序 输出对象是元组 (&#x27;西瓜&#x27;, &#x27;苹果&#x27;, &#x27;香蕉&#x27;)</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> newMyList = myList2.reversed.toList();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(newMyList);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// List里面的方法：</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 添加</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList3 = [<span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>];</span><br><span class=\"line\">  myList3.add(<span class=\"string\">&#x27;桃子&#x27;</span>); <span class=\"comment\">//增加数据  增加一个</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList3);</span><br><span class=\"line\">  <span class=\"comment\">// 拼接</span></span><br><span class=\"line\">  myList3.addAll([<span class=\"string\">&#x27;李子&#x27;</span>, <span class=\"string\">&#x27;葡萄&#x27;</span>]); <span class=\"comment\">//拼接数组</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList3);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 查找</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList3.indexOf(<span class=\"string\">&#x27;苹果&#x27;</span>)); <span class=\"comment\">//indexOf查找数据 查找不到返回-1  查找到返回索引值</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList3.indexOf(<span class=\"string\">&#x27;苹x果&#x27;</span>)); <span class=\"comment\">//indexOf查找数据 查找不到返回-1  查找到返回索引值</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 移除某个值</span></span><br><span class=\"line\">  myList3.remove(<span class=\"string\">&#x27;西瓜&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList3);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 移除某个索引值</span></span><br><span class=\"line\">  myList3.removeAt(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList3);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 修改 插入</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList4 = [<span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">  myList4.fillRange(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"string\">&#x27;aaa&#x27;</span>); <span class=\"comment\">// 修改</span></span><br><span class=\"line\">  myList4.fillRange(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"string\">&#x27;aaa&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  myList4.insert(<span class=\"number\">1</span>, <span class=\"string\">&#x27;aaa&#x27;</span>); <span class=\"comment\">//插入  一个</span></span><br><span class=\"line\">  myList4.insertAll(<span class=\"number\">1</span>, [<span class=\"string\">&#x27;aaa&#x27;</span>, <span class=\"string\">&#x27;bbb&#x27;</span>]); <span class=\"comment\">//插入 多个</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 数组转换成字符串</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList5 = [<span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = myList5.join(<span class=\"string\">&#x27;-&#x27;</span>); <span class=\"comment\">//list转换成字符串</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str <span class=\"keyword\">is</span> <span class=\"built_in\">String</span>); <span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 字符串按-切割成数组</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;香蕉-苹果-西瓜&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> myList6 = str2.split(<span class=\"string\">&#x27;-&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList6);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList6 <span class=\"keyword\">is</span> <span class=\"built_in\">List</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Set\"><a href=\"#Set\" class=\"headerlink\" title=\"Set\"></a>Set</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">//用它最主要的功能就是去除数组重复内容</span></span><br><span class=\"line\">  <span class=\"comment\">//Set是没有顺序且不能重复的集合，所以不能通过索引去获取值</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> s = <span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>();</span><br><span class=\"line\">  s.add(<span class=\"string\">&#x27;香蕉&#x27;</span>);</span><br><span class=\"line\">  s.add(<span class=\"string\">&#x27;苹果&#x27;</span>);</span><br><span class=\"line\">  s.add(<span class=\"string\">&#x27;苹果&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(s); <span class=\"comment\">// &#123;香蕉, 苹果&#125;</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(s.toList()); <span class=\"comment\">// [香蕉, 苹果]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 将数组去重</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList = [<span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>, <span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> s1 = <span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>();</span><br><span class=\"line\">  s1.addAll(myList);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(s1); <span class=\"comment\">// &#123;香蕉, 苹果, 西瓜&#125;</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(s1.toList()); <span class=\"comment\">// [香蕉, 苹果, 西瓜]</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h3><blockquote>\n<p>映射(Maps)是无序的键值对：</p>\n</blockquote>\n<ul>\n<li>常用属性：<ul>\n<li>keys            获取所有的key值</li>\n<li>values          获取所有的value值</li>\n<li>isEmpty         是否为空</li>\n<li>isNotEmpty      是否不为空</li>\n</ul>\n</li>\n<li>常用方法:<ul>\n<li>remove(key)     删除指定key的数据</li>\n<li>addAll({…})   合并映射  给映射内增加属性</li>\n<li>containsValue   查看映射内的值  返回true/false</li>\n<li>forEach</li>\n<li>map</li>\n<li>where</li>\n<li>any</li>\n<li>every</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">Map</span> person = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;张三&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">20</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> m = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>();</span><br><span class=\"line\">  m[<span class=\"string\">&quot;name&quot;</span>] = <span class=\"string\">&quot;李四&quot;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(m);</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//常用属性：</span></span><br><span class=\"line\">  <span class=\"built_in\">Map</span> person2 = &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;张三&quot;</span>, <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">20</span>, <span class=\"string\">&quot;sex&quot;</span>: <span class=\"string\">&quot;男&quot;</span>&#125;;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2.keys.toList());</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2.values.toList());</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2.isEmpty);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2.isNotEmpty);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//常用方法：</span></span><br><span class=\"line\">  <span class=\"built_in\">Map</span> person3 = &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;张三&quot;</span>, <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">20</span>, <span class=\"string\">&quot;sex&quot;</span>: <span class=\"string\">&quot;男&quot;</span>&#125;;</span><br><span class=\"line\">  person3.addAll(&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;work&quot;</span>: [<span class=\"string\">&#x27;敲代码&#x27;</span>, <span class=\"string\">&#x27;送外卖&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&quot;height&quot;</span>: <span class=\"number\">160</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person3);</span><br><span class=\"line\">  person3.remove(<span class=\"string\">&quot;sex&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person3);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person3.containsValue(<span class=\"string\">&#x27;张三&#x27;</span>)); <span class=\"comment\">// 查看映射内的值</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"通用方法\"><a href=\"#通用方法\" class=\"headerlink\" title=\"通用方法\"></a>通用方法</h3><blockquote>\n<p>forEach map where any every</p>\n</blockquote>\n<h4 id=\"List中使用\"><a href=\"#List中使用\" class=\"headerlink\" title=\"List中使用\"></a>List中使用</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 循环输出myList</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList = [<span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; myList.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(myList[i]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> myList) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  myList.forEach((value) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$value</span>&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 修改myList2每一项</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList2 = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\">  <span class=\"comment\">// List newList = [];</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> newList = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>();</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; myList2.length; i++) &#123;</span><br><span class=\"line\">    newList.add(myList2[i] * <span class=\"number\">2</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(newList);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> newList2 = myList.map((value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value * <span class=\"number\">2</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(newList2.toList());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 查找符合条件的值</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList3 = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newList3 = myList3.where((value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value &gt; <span class=\"number\">5</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(newList3.toList());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 判断是否存在符合条件的值 true/false</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList4 = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> f = myList4.any((value) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//只要集合里面有满足条件的就返回true</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> value &gt; <span class=\"number\">5</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(f);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 判断是否存都是符合条件的值 true/false</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList5 = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> f2 = myList5.every((value) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//每一个都满足条件返回true  否则返回false</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> value &gt; <span class=\"number\">5</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(f2);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Set中使用\"><a href=\"#Set中使用\" class=\"headerlink\" title=\"Set中使用\"></a>Set中使用</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 循环输出Set的值</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> s = <span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>();</span><br><span class=\"line\">  s.addAll([<span class=\"number\">1</span>, <span class=\"number\">222</span>, <span class=\"number\">333</span>]);</span><br><span class=\"line\">  s.forEach((value) =&gt; <span class=\"built_in\">print</span>(value));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Map中使用\"><a href=\"#Map中使用\" class=\"headerlink\" title=\"Map中使用\"></a>Map中使用</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">Map</span> person = &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;张三&quot;</span>, <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">20</span>&#125;;</span><br><span class=\"line\">  person.forEach((key, value) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$key</span>---<span class=\"subst\">$value</span>&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><ul>\n<li>内置方法/函数：<ul>\n<li>print();</li>\n</ul>\n</li>\n<li>自定义方法：<ul>\n<li>自定义方法的基本格式：</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回类型 方法名称（参数1，参数2,...）&#123;</span><br><span class=\"line\">  方法体</span><br><span class=\"line\">  return 返回值;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"函数的定义、变量及作用域\"><a href=\"#函数的定义、变量及作用域\" class=\"headerlink\" title=\"函数的定义、变量及作用域\"></a>函数的定义、变量及作用域</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我是一个自定义方法&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">int</span> getNum() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum = <span class=\"number\">123</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> myNum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">String</span> printUserInfo() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&#x27;this is str&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">List</span> getList() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [<span class=\"string\">&#x27;111&#x27;</span>, <span class=\"string\">&#x27;2222&#x27;</span>, <span class=\"string\">&#x27;333&#x27;</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;调用系统内置的方法&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> n = getNum();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(n);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(getList());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// print(getList());</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//演示方法的作用域</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> xxx() &#123;</span><br><span class=\"line\">    aaa() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(getList());</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;aaa&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    aaa();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// aaa();  // 错误写法</span></span><br><span class=\"line\">  xxx(); <span class=\"comment\">// 调用方法</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"函数的传参、默认参数及可选参数\"><a href=\"#函数的传参、默认参数及可选参数\" class=\"headerlink\" title=\"函数的传参、默认参数及可选参数\"></a>函数的传参、默认参数及可选参数</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1、定义一个方法 求1到这个数的所有数的和 60 1+2+3+。。。+60</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> sumNum(<span class=\"built_in\">int</span> n) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">      sum += i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> n1 = sumNum(<span class=\"number\">5</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(n1);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> n2 = sumNum(<span class=\"number\">100</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(n2);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2、定义一个方法然后打印用户信息</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> printUserInfo(<span class=\"built_in\">String</span> username, <span class=\"built_in\">int</span> age) &#123; <span class=\"comment\">// 形参</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名:<span class=\"subst\">$username</span>---年龄:<span class=\"subst\">$age</span>&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>)); <span class=\"comment\">// 实参</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 3、定义一个带可选参数的方法</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> printUserInfo2(<span class=\"built_in\">String</span> username, [<span class=\"built_in\">int</span> age]) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//行参</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (age != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名:<span class=\"subst\">$username</span>---年龄:<span class=\"subst\">$age</span>&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名:<span class=\"subst\">$username</span>---年龄保密&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo2(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">21</span>)); <span class=\"comment\">//实参</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo2(<span class=\"string\">&#x27;张三&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 4、定义一个带默认参数的方法</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> printUserInfo3(<span class=\"built_in\">String</span> username, [<span class=\"built_in\">String</span> sex = <span class=\"string\">&#x27;男&#x27;</span>, <span class=\"built_in\">int</span> age]) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//行参</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (age != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名:<span class=\"subst\">$username</span>---性别:<span class=\"subst\">$sex</span>--年龄:<span class=\"subst\">$age</span>&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名:<span class=\"subst\">$username</span>---性别:<span class=\"subst\">$sex</span>--年龄保密&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo3(<span class=\"string\">&#x27;张三&#x27;</span>));</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo3(<span class=\"string\">&#x27;小李&#x27;</span>, <span class=\"string\">&#x27;女&#x27;</span>));</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo3(<span class=\"string\">&#x27;小李&#x27;</span>, <span class=\"string\">&#x27;女&#x27;</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 5、定义一个命名参数的方法</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> printUserInfo4(<span class=\"built_in\">String</span> username, &#123;<span class=\"built_in\">int</span> age, <span class=\"built_in\">String</span> sex = <span class=\"string\">&#x27;男&#x27;</span>&#125;) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//行参</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (age != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名:<span class=\"subst\">$username</span>---性别:<span class=\"subst\">$sex</span>--年龄:<span class=\"subst\">$age</span>&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名:<span class=\"subst\">$username</span>---性别:<span class=\"subst\">$sex</span>--年龄保密&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 命名参数同时也是可选参数</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo4(<span class=\"string\">&#x27;小李&#x27;</span>, sex: <span class=\"string\">&#x27;未知&#x27;</span>));</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo4(<span class=\"string\">&#x27;张三&#x27;</span>, age: <span class=\"number\">20</span>, sex: <span class=\"string\">&#x27;未知&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 6、实现一个 把方法当做参数的方法</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> fn = () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我是一个匿名方法&#x27;</span>);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  fn();</span><br><span class=\"line\">  <span class=\"comment\">// 方法1</span></span><br><span class=\"line\">  fn1() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;fn1&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 方法2</span></span><br><span class=\"line\">  fn2(fn) &#123;</span><br><span class=\"line\">    fn();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 调用fn2这个方法 把fn1这个方法当做参数传入</span></span><br><span class=\"line\">  fn2(fn1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"箭头函数\"><a href=\"#箭头函数\" class=\"headerlink\" title=\"箭头函数\"></a>箭头函数</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1. 需求：使用forEach打印下面List里面的数据</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list = [<span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>];</span><br><span class=\"line\">  list.forEach((value) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(value);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  list.forEach((value) =&gt; <span class=\"built_in\">print</span>(value));</span><br><span class=\"line\">  list.forEach((value) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(value)</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2. 需求：修改下面List里面的数据，让数组中大于2的值乘以2</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list2 = [<span class=\"number\">4</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newList = list2.map((value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> value * <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(newList.toList());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> newList2 = list.map((value) =&gt; value &gt; <span class=\"number\">2</span> ? value * <span class=\"number\">2</span> : value);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(newList2.toList());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  需求： 1、定义一个方法isEvenNumber来判断一个数是否是偶数  </span></span><br><span class=\"line\"><span class=\"comment\">        2、定义一个方法打印1-n以内的所有偶数</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 定义一个方法isEvenNumber来判断一个数是否是偶数</span></span><br><span class=\"line\">  <span class=\"built_in\">bool</span> isEvenNumber(<span class=\"built_in\">int</span> n) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 定义一个方法打印1-n以内的所有偶数</span></span><br><span class=\"line\">  printNum(<span class=\"built_in\">int</span> n) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (isEvenNumber(i)) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  printNum(<span class=\"number\">10</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"匿名函数\"><a href=\"#匿名函数\" class=\"headerlink\" title=\"匿名函数\"></a>匿名函数</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">int</span> getNum(<span class=\"built_in\">int</span> n) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(getNum(<span class=\"number\">12</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 匿名函数</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> printNum = () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"number\">123</span>);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  printNum();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> printNum2 = (<span class=\"built_in\">int</span> n) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(n + <span class=\"number\">2</span>);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  printNum2(<span class=\"number\">12</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"自执行函数\"><a href=\"#自执行函数\" class=\"headerlink\" title=\"自执行函数\"></a>自执行函数</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  (() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我是自执行方法&#x27;</span>);</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 传参</span></span><br><span class=\"line\">  ((<span class=\"built_in\">int</span> n) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(n);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我是自执行方法&#x27;</span>);</span><br><span class=\"line\">  &#125;)(<span class=\"number\">12</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"方法的递归\"><a href=\"#方法的递归\" class=\"headerlink\" title=\"方法的递归\"></a>方法的递归</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum = <span class=\"number\">1</span>;</span><br><span class=\"line\">  fn(n) &#123;</span><br><span class=\"line\">    sum *= n;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fn(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  fn(<span class=\"number\">5</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(sum);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 通过方法的递归 求1-100的和</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  fn1(<span class=\"built_in\">int</span> n) &#123;</span><br><span class=\"line\">    sum1 += n;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fn1(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  fn1(<span class=\"number\">100</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(sum1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h3><p>变量的特点</p>\n<ol>\n<li>全局变量特点: 全局变量常驻内存、全局变量污染全局</li>\n<li>局部变量的特点: 不常驻内存会被垃圾机制回收、不会污染全局  </li>\n</ol>\n<p>想实现的功能：</p>\n<ol>\n<li>常驻内存</li>\n<li>不污染全局</li>\n</ol>\n<blockquote>\n<p>产生了闭包,闭包可以解决这个问题…..<br>闭包: 函数嵌套函数, 内部函数会调用外部函数的变量或参数, 变量或参数不会被系统回收(不会释放内存)<br>闭包的写法: 函数嵌套函数，并<code>return</code>里面的函数，这样就形成了闭包。</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*全局变量*/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a=<span class=\"number\">123</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a);  <span class=\"comment\">// 123</span></span><br><span class=\"line\">  fn() &#123;</span><br><span class=\"line\">    a++;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  fn();  <span class=\"comment\">// 124</span></span><br><span class=\"line\">  fn();  <span class=\"comment\">// 125</span></span><br><span class=\"line\">  fn();  <span class=\"comment\">// 126</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 局部变量</span></span><br><span class=\"line\">  printInfo() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> myNum = <span class=\"number\">123</span>;</span><br><span class=\"line\">    myNum++;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(myNum);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  printInfo();  <span class=\"comment\">// 124</span></span><br><span class=\"line\">  printInfo();  <span class=\"comment\">// 124</span></span><br><span class=\"line\">  printInfo();  <span class=\"comment\">// 124</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 闭包</span></span><br><span class=\"line\">  fn2() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">123</span>; <span class=\"comment\">/*不会污染全局 常驻内存*/</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> () &#123;</span><br><span class=\"line\">      a++;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(a);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = fn2();</span><br><span class=\"line\">  b();  <span class=\"comment\">// 124</span></span><br><span class=\"line\">  b();  <span class=\"comment\">// 125</span></span><br><span class=\"line\">  b();  <span class=\"comment\">// 126</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"对象-类\"><a href=\"#对象-类\" class=\"headerlink\" title=\"对象-类\"></a>对象-类</h2><h3 id=\"面向对象概念\"><a href=\"#面向对象概念\" class=\"headerlink\" title=\"面向对象概念\"></a>面向对象概念</h3><p>面向对象编程(OOP)的三个基本特征是：封装、继承、多态</p>\n<ul>\n<li>封装：封装是对象和类概念的主要特性。封装，把客观事物封装成抽象的类，并且把自己的部分属性和方法提供给其他对象调用, 而一部分属性和方法则隐藏。</li>\n<li>继承：面向对象编程 (OOP) 语言的一个主要功能就是“继承”。继承是指这样一种能力：它可以使用现有类的功能，并在无需重新编写原来的类的情况下对这些功能进行扩展。</li>\n<li>多态：允许将子类类型的指针赋值给父类类型的指针, 同一个函数调用会有不同的执行效果 。</li>\n</ul>\n<p>Dart所有的东西都是对象，所有的对象都继承自Object类。</p>\n<p>Dart是一门使用类和单继承的面向对象语言，所有的对象都是类的实例，并且所有的类都是Object的子类</p>\n<p>一个类通常由属性和方法组成。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// dart内置的类</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// List</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list=<span class=\"keyword\">new</span> <span class=\"built_in\">List</span>();</span><br><span class=\"line\">  list.isEmpty;</span><br><span class=\"line\">  list.add(<span class=\"string\">&#x27;香蕉&#x27;</span>);</span><br><span class=\"line\">  list.add(<span class=\"string\">&#x27;香蕉1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Map</span></span><br><span class=\"line\">  <span class=\"built_in\">Map</span> m=<span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>();</span><br><span class=\"line\">  m[<span class=\"string\">&quot;username&quot;</span>]=<span class=\"string\">&quot;张三&quot;</span>;</span><br><span class=\"line\">  m.addAll(&#123;<span class=\"string\">&quot;age&quot;</span>:<span class=\"number\">20</span>&#125;);</span><br><span class=\"line\">  m.isEmpty;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Object</span></span><br><span class=\"line\">  <span class=\"built_in\">Object</span> a=<span class=\"number\">123</span>;</span><br><span class=\"line\">  <span class=\"built_in\">Object</span> v=<span class=\"keyword\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(v);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"定义类\"><a href=\"#定义类\" class=\"headerlink\" title=\"定义类\"></a>定义类</h3><blockquote>\n<p>Dart是一门使用类和单继承的面向对象语言，所有的对象都是类的实例，并且所有的类都是Object的子类</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name = <span class=\"string\">&quot;张三&quot;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age = <span class=\"number\">23</span>;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> getInfo() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// print(&quot;$name----$age&quot;);</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> setInfo(<span class=\"built_in\">int</span> age) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 实例化</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(p1.name);</span><br><span class=\"line\">  p1.getInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 实例化类的类型</span></span><br><span class=\"line\">  Person p2 = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(p2.name);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 调用类里的方法</span></span><br><span class=\"line\">  p2.setInfo(<span class=\"number\">28</span>);</span><br><span class=\"line\">  p2.getInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h3><h3 id=\"默认构造函数\"><a href=\"#默认构造函数\" class=\"headerlink\" title=\"默认构造函数\"></a>默认构造函数</h3><blockquote>\n<p>构造函数的写法</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name = <span class=\"string\">&#x27;张三&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age = <span class=\"number\">20</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 默认构造函数</span></span><br><span class=\"line\">  Person() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;这是构造函数里面的内容 这个方法在实例化的时候触发&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用构造函数初始化类的属性</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age;</span><br><span class=\"line\">  <span class=\"comment\">//默认构造函数</span></span><br><span class=\"line\">  Person(<span class=\"built_in\">String</span> name, <span class=\"built_in\">int</span> age) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  p1.printInfo();</span><br><span class=\"line\">  </span><br><span class=\"line\">  Person p2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">25</span>);</span><br><span class=\"line\">  p2.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>默认构造函数的简写</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age;</span><br><span class=\"line\">  <span class=\"comment\">//默认构造函数的简写</span></span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  p1.printInfo();</span><br><span class=\"line\">  </span><br><span class=\"line\">  Person p2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">25</span>);</span><br><span class=\"line\">  p2.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"命名构造函数\"><a href=\"#命名构造函数\" class=\"headerlink\" title=\"命名构造函数\"></a>命名构造函数</h3><p>dart里面命名构造函数可以写多个</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age;</span><br><span class=\"line\">  <span class=\"comment\">//默认构造函数的简写</span></span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\"></span><br><span class=\"line\">  Person.now() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我是命名构造函数&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  Person.setInfo(<span class=\"built_in\">String</span> name, <span class=\"built_in\">int</span> age) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> d = <span class=\"keyword\">new</span> <span class=\"built_in\">DateTime</span>.now(); <span class=\"comment\">// 实例化DateTime调用它的命名构造函数</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">  Person p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>); <span class=\"comment\">// 默认实例化类的时候调用的是 默认构造函数</span></span><br><span class=\"line\">  p1.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  Person p2 = <span class=\"keyword\">new</span> Person.now(); <span class=\"comment\">// 调用命名构造函数</span></span><br><span class=\"line\"></span><br><span class=\"line\">  Person p3 = <span class=\"keyword\">new</span> Person.setInfo(<span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">  p3.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"将类抽离成一个模块\"><a href=\"#将类抽离成一个模块\" class=\"headerlink\" title=\"将类抽离成一个模块\"></a>将类抽离成一个模块</h3><p><code>index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/Person.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p1=<span class=\"keyword\">new</span> Person.setInfo(<span class=\"string\">&#x27;李四1&#x27;</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\">  p1.printInfo(); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/Person.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age; </span><br><span class=\"line\">  <span class=\"comment\">//默认构造函数的简写</span></span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name,<span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  </span><br><span class=\"line\">  Person.now()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我是命名构造函数&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  Person.setInfo(<span class=\"built_in\">String</span> name,<span class=\"built_in\">int</span> age)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age=age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo()&#123;   </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类的私有属性和方法\"><a href=\"#类的私有属性和方法\" class=\"headerlink\" title=\"类的私有属性和方法\"></a>类的私有属性和方法</h3><p>Dart和其他面向对象语言不一样，Data中没有<code>public</code> <code>private</code> <code>protected</code>这些访问修饰符合</p>\n<p>但是我们可以使用<code>_</code>把一个属性或者方法定义成私有(类必须在单独的文件中，才能将属性或方法私有)。</p>\n<p><code>index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/Animal.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Animal a = <span class=\"keyword\">new</span> Animal(<span class=\"string\">&#x27;小狗&#x27;</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a.age); <span class=\"comment\">// 间接的获取私有属性</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a.getName()); <span class=\"comment\">// 间接的获取私有属性</span></span><br><span class=\"line\">  a.execRun(); <span class=\"comment\">// 间接的调用私有方法</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/Animal.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> _name; <span class=\"comment\">// 私有属性</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> age;</span><br><span class=\"line\">  <span class=\"comment\">// 默认构造函数的简写</span></span><br><span class=\"line\">  Animal(<span class=\"keyword\">this</span>._name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>._name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">String</span> getName() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> _run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;这是一个私有方法&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  execRun() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>._run(); <span class=\"comment\">// 类里面方法的相互调用</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类的getter和setter\"><a href=\"#类的getter和setter\" class=\"headerlink\" title=\"类的getter和setter\"></a>类的getter和setter</h3><p>获取矩形的面积</p>\n<ul>\n<li>使用方法获取</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rect</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> height;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> width;</span><br><span class=\"line\"></span><br><span class=\"line\">  Rect(<span class=\"keyword\">this</span>.height, <span class=\"keyword\">this</span>.width);</span><br><span class=\"line\">  area() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.height * <span class=\"keyword\">this</span>.width;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  Rect r = <span class=\"keyword\">new</span> Rect(<span class=\"number\">10</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;面积:<span class=\"subst\">$&#123;r.area()&#125;</span>&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用get获取(计算属性)</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rect</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> height;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> width;</span><br><span class=\"line\">  Rect(<span class=\"keyword\">this</span>.height, <span class=\"keyword\">this</span>.width);</span><br><span class=\"line\">  <span class=\"keyword\">get</span> area &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.height * <span class=\"keyword\">this</span>.width;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  Rect r = <span class=\"keyword\">new</span> Rect(<span class=\"number\">10</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;面积:<span class=\"subst\">$&#123;r.area&#125;</span>&quot;</span>); <span class=\"comment\">// 注意调用直接通过访问属性的方式访问area</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用set存储</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rect</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> height;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> width;</span><br><span class=\"line\"></span><br><span class=\"line\">  Rect(<span class=\"keyword\">this</span>.height, <span class=\"keyword\">this</span>.width);</span><br><span class=\"line\">  <span class=\"keyword\">get</span> area &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.height * <span class=\"keyword\">this</span>.width;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">set</span> areaHeight(value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.height = value;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  Rect r = <span class=\"keyword\">new</span> Rect(<span class=\"number\">10</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">  r.areaHeight = <span class=\"number\">6</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;面积:<span class=\"subst\">$&#123;r.area&#125;</span>&quot;</span>); <span class=\"comment\">// 注意调用直接通过访问属性的方式访问area</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类的初始化列表\"><a href=\"#类的初始化列表\" class=\"headerlink\" title=\"类的初始化列表\"></a>类的初始化列表</h3><p>Dart中我们也可以在构造函数体运行之前初始化实例变量</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rect</span></span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> height;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> width;</span><br><span class=\"line\">  Rect():height=<span class=\"number\">2</span>,width=<span class=\"number\">10</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.height&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.width&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  getArea()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.height*<span class=\"keyword\">this</span>.width;</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Rect r=<span class=\"keyword\">new</span> Rect();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(r.getArea()); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"静态成员\"><a href=\"#静态成员\" class=\"headerlink\" title=\"静态成员\"></a>静态成员</h3><ol>\n<li>使用static 关键字来实现类级别的变量和函数</li>\n<li>静态方法不能访问非静态成员，非静态方法可以访问静态成员</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">String</span> name = <span class=\"string\">&#x27;张三&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"keyword\">show</span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(Person.name);</span><br><span class=\"line\">  Person.<span class=\"keyword\">show</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"非静态方法访问静态成员和非静态成员\"><a href=\"#非静态方法访问静态成员和非静态成员\" class=\"headerlink\" title=\"非静态方法访问静态成员和非静态成员\"></a>非静态方法访问静态成员和非静态成员</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">String</span> name = <span class=\"string\">&#x27;张三&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age = <span class=\"number\">20</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"keyword\">show</span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"comment\">/*非静态方法可以访问静态成员以及非静态成员*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name); <span class=\"comment\">// 访问静态属性</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"keyword\">this</span>.age); <span class=\"comment\">// 访问非静态属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">show</span>(); <span class=\"comment\">// 调用静态方法</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">  p.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"静态方法只能访问静态成员\"><a href=\"#静态方法只能访问静态成员\" class=\"headerlink\" title=\"静态方法只能访问静态成员\"></a>静态方法只能访问静态成员</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">String</span> name = <span class=\"string\">&#x27;张三&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age = <span class=\"number\">20</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"keyword\">show</span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> printUserInfo() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 静态方法</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name); <span class=\"comment\">// 静态属性</span></span><br><span class=\"line\">    <span class=\"keyword\">show</span>(); <span class=\"comment\">// 静态方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// print(age); // 静态方法没法访问非静态的属性</span></span><br><span class=\"line\">    <span class=\"comment\">// print(this.age); // 静态方法没法访问非静态的属性</span></span><br><span class=\"line\">    <span class=\"comment\">// this.printInfo(); // 静态方法没法访问非静态的方法</span></span><br><span class=\"line\">    <span class=\"comment\">// printInfo(); // 静态方法没法访问非静态的方法</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person.printUserInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"操作符\"><a href=\"#操作符\" class=\"headerlink\" title=\"操作符\"></a>操作符</h3><ul>\n<li>?     条件运算符 （了解）</li>\n<li>as    类型转换</li>\n<li>is    类型判断</li>\n<li>..    级联操作 （连缀）  (记住)</li>\n</ul>\n<h4 id=\"条件运算符\"><a href=\"#条件运算符\" class=\"headerlink\" title=\"条件运算符\"></a>条件运算符</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p;</span><br><span class=\"line\">  p?.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  Person p2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  p2?.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"操作符-类型判断\"><a href=\"#操作符-类型判断\" class=\"headerlink\" title=\"操作符-类型判断\"></a>操作符-类型判断</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (p <span class=\"keyword\">is</span> Person) &#123;</span><br><span class=\"line\">    p.name = <span class=\"string\">&quot;李四&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  p.printInfo(); <span class=\"comment\">// 李四---20</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(p <span class=\"keyword\">is</span> <span class=\"built_in\">Object</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> p1;</span><br><span class=\"line\">  p1 = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三1&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  p1.printInfo(); <span class=\"comment\">// 老版本报错 不知道p1是字符串还是Person类</span></span><br><span class=\"line\">  (p1 <span class=\"keyword\">as</span> Person).printInfo(); <span class=\"comment\">// 强制转换为Person类</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"级联操作\"><a href=\"#级联操作\" class=\"headerlink\" title=\"级联操作\"></a>级联操作</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  p1.printInfo(); <span class=\"comment\">// 张三---20</span></span><br><span class=\"line\"></span><br><span class=\"line\">  p1.name = <span class=\"string\">&#x27;李四&#x27;</span>;</span><br><span class=\"line\">  p1.age = <span class=\"number\">40</span>;</span><br><span class=\"line\">  p1.printInfo(); <span class=\"comment\">// 李四---40</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 使用连缀简化为</span></span><br><span class=\"line\">  p1..name = <span class=\"string\">&#x27;王五&#x27;</span></span><br><span class=\"line\">    ..age = <span class=\"number\">60</span></span><br><span class=\"line\">    ..printInfo(); <span class=\"comment\">// 王五---60</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类的继承\"><a href=\"#类的继承\" class=\"headerlink\" title=\"类的继承\"></a>类的继承</h3><h4 id=\"简单继承\"><a href=\"#简单继承\" class=\"headerlink\" title=\"简单继承\"></a>简单继承</h4><ol>\n<li>子类使用extends关键词来继承父类</li>\n<li>子类会继承父类里面可见的属性和方法 但是不会继承构造函数</li>\n<li>子类能复写父类的方法 getter和setter</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name = <span class=\"string\">&#x27;张三&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age = <span class=\"number\">20</span>;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Web</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  Web w = <span class=\"keyword\">new</span> Web();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(w.name);</span><br><span class=\"line\">  w.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"super关键词的使用\"><a href=\"#super关键词的使用\" class=\"headerlink\" title=\"super关键词的使用\"></a>super关键词的使用</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Web</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  Web(<span class=\"built_in\">String</span> name, <span class=\"built_in\">num</span> age) : <span class=\"keyword\">super</span>(name, age) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  p.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  Person p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  p1.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  Web w = <span class=\"keyword\">new</span> Web(<span class=\"string\">&#x27;王五&#x27;</span>, <span class=\"number\">12</span>);</span><br><span class=\"line\">  w.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>继承类的属性扩展</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Web</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> sex;</span><br><span class=\"line\">  Web(<span class=\"built_in\">String</span> name, <span class=\"built_in\">num</span> age, <span class=\"built_in\">String</span> sex) : <span class=\"keyword\">super</span>(name, age) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.sex = sex;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>--<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.sex&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  p.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  Person p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  p1.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  Web w = <span class=\"keyword\">new</span> Web(<span class=\"string\">&#x27;王五&#x27;</span>, <span class=\"number\">12</span>);</span><br><span class=\"line\">  w.printInfo();</span><br><span class=\"line\">  w.run();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>super给命名构造函数传参</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person.setInfo(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Web</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> sex;</span><br><span class=\"line\">  Web(<span class=\"built_in\">String</span> name, <span class=\"built_in\">num</span> age, <span class=\"keyword\">this</span>.sex) : <span class=\"keyword\">super</span>.setInfo(name, age) &#123;&#125;</span><br><span class=\"line\">  run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>--<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.sex&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  Web w = <span class=\"keyword\">new</span> Web(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">12</span>, <span class=\"string\">&quot;男&quot;</span>);</span><br><span class=\"line\">  w.printInfo();</span><br><span class=\"line\">  w.run();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"复写父类的方法\"><a href=\"#复写父类的方法\" class=\"headerlink\" title=\"复写父类的方法\"></a>复写父类的方法</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  work() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>在工作...&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Web</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  Web(<span class=\"built_in\">String</span> name, <span class=\"built_in\">num</span> age) : <span class=\"keyword\">super</span>(name, age);</span><br><span class=\"line\"></span><br><span class=\"line\">  run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;run&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 覆写父类的方法</span></span><br><span class=\"line\">  <span class=\"meta\">@override</span> <span class=\"comment\">//可以写也可以不写 建议在覆写父类方法的时候加上 @override</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;姓名：<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---年龄：<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  work() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>的工作是写代码&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Web w = <span class=\"keyword\">new</span> Web(<span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  w.printInfo();</span><br><span class=\"line\">  w.work();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"子类调用父类的方法\"><a href=\"#子类调用父类的方法\" class=\"headerlink\" title=\"子类调用父类的方法\"></a>子类调用父类的方法</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  work() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>在工作...&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Web</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  Web(<span class=\"built_in\">String</span> name, <span class=\"built_in\">num</span> age) : <span class=\"keyword\">super</span>(name, age);</span><br><span class=\"line\"></span><br><span class=\"line\">  run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;run&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.work(); <span class=\"comment\">//自类调用父类的方法</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//覆写父类的方法</span></span><br><span class=\"line\">  <span class=\"meta\">@override</span> <span class=\"comment\">//可以写也可以不写  建议在覆写父类方法的时候加上 @override</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;姓名：<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---年龄：<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  Web w = <span class=\"keyword\">new</span> Web(<span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  w.run();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"抽象类\"><a href=\"#抽象类\" class=\"headerlink\" title=\"抽象类\"></a>抽象类</h2><h3 id=\"创建抽象类\"><a href=\"#创建抽象类\" class=\"headerlink\" title=\"创建抽象类\"></a>创建抽象类</h3><p>Dart抽象类主要用于定义标准，子类可以继承抽象类，也可以实现抽象类接口。</p>\n<ol>\n<li>抽象类通过abstract 关键字来定义</li>\n<li>Dart中的抽象方法不能用abstract声明，Dart中没有方法体的方法我们称为抽象方法。</li>\n<li>如果子类继承抽象类必须得实现里面的抽象方法</li>\n<li>如果把抽象类当做接口实现的话必须得实现抽象类里面定义的所有属性和方法。</li>\n<li>抽象类不能被实例化，只有继承它的子类可以</li>\n</ol>\n<p>extends抽象类 和 implements的区别：</p>\n<ol>\n<li>如果要复用抽象类里面的方法，并且要用抽象方法约束自类的话我们就用extends继承抽象类</li>\n<li>如果只是把抽象类当做标准的话我们就用implements实现抽象类</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 案例：定义一个Animal 类要求它的子类必须包含eat方法</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">  eat(); <span class=\"comment\">//抽象方法</span></span><br><span class=\"line\">  run(); <span class=\"comment\">//抽象方法</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我是一个抽象类里面的普通方法&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dog</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  eat() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;小狗在吃骨头&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  run() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement run</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;小狗在跑&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  eat() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement eat</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;小猫在吃老鼠&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  run() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement run</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;小猫在走&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Dog d = <span class=\"keyword\">new</span> Dog();</span><br><span class=\"line\">  d.eat();</span><br><span class=\"line\">  d.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  Cat c = <span class=\"keyword\">new</span> Cat();</span><br><span class=\"line\">  c.eat();</span><br><span class=\"line\">  c.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Animal a = new Animal(); //抽象类没法直接被实例化</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"多态\"><a href=\"#多态\" class=\"headerlink\" title=\"多态\"></a>多态</h3><p>多态：允许将子类类型的指针赋值给父类类型的指针, 同一个函数调用会有不同的执行效果。</p>\n<p>子类的实例赋值给父类的引用。</p>\n<p>多态就是父类定义一个方法不去实现，让继承他的子类去实现，每个子类有不同的表现。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span></span>&#123;</span><br><span class=\"line\">  eat();   <span class=\"comment\">//抽象方法 </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dog</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span></span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  eat() &#123;</span><br><span class=\"line\">     <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;小狗在吃骨头&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  run()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;run&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span></span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  eat() &#123;   </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;小猫在吃老鼠&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  run()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;run&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 类型定义为父类 可以访问run方法</span></span><br><span class=\"line\">  Dog d = <span class=\"keyword\">new</span> Dog();</span><br><span class=\"line\">  d.eat();</span><br><span class=\"line\">  d.run();</span><br><span class=\"line\"></span><br><span class=\"line\">  Cat c = <span class=\"keyword\">new</span> Cat();</span><br><span class=\"line\">  c.eat();</span><br><span class=\"line\">  c.run();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 类型定义为父类 不可以访问run方法</span></span><br><span class=\"line\">  Animal d1 = <span class=\"keyword\">new</span> Dog();</span><br><span class=\"line\">  d1.eat();</span><br><span class=\"line\"></span><br><span class=\"line\">  Animal c1 = <span class=\"keyword\">new</span> Cat();</span><br><span class=\"line\">  c1.eat();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"接口\"><a href=\"#接口\" class=\"headerlink\" title=\"接口\"></a>接口</h3><p><code>dart</code>和<code>Java</code>一样，<code>dart</code>也有接口，但是和<code>Java</code>还是有区别的。<br>首先，<code>dart</code>的接口没有<code>interface</code>关键字定义接口，而是普通类或抽象类都可以作为接口被实现。<br>同样使用<code>implements</code>关键字进行实现。</p>\n<p>但是<code>dart</code>的接口有点奇怪，如果实现的类是普通类，会将普通类和抽象中的属性的方法全部需要覆写一遍。<br>而因为抽象类可以定义抽象方法，普通类不可以，所以一般如果要实现像Java接口那样的方式，一般会使用抽象类。<br>建议使用抽象类定义接口。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  定义一个DB库 支持 mysql  mssql  mongodb</span></span><br><span class=\"line\"><span class=\"comment\">  mysql  mssql  mongodb三个类里面都有同样的方法</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Db</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//当做接口   接口：就是约定 、规范</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> uri; <span class=\"comment\">//数据库的链接地址</span></span><br><span class=\"line\">  add(<span class=\"built_in\">String</span> data);</span><br><span class=\"line\">  save();</span><br><span class=\"line\">  delete();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mysql</span> <span class=\"keyword\">implements</span> <span class=\"title\">Db</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> uri;</span><br><span class=\"line\"></span><br><span class=\"line\">  Mysql(<span class=\"keyword\">this</span>.uri);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  add(data) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement add</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;这是mysql的add方法&#x27;</span> + data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  delete() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement delete</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  save() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement save</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  remove() &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MsSql</span> <span class=\"keyword\">implements</span> <span class=\"title\">Db</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> uri;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  add(<span class=\"built_in\">String</span> data) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;这是mssql的add方法&#x27;</span> + data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  delete() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement delete</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  save() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement save</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  Mysql mysql = <span class=\"keyword\">new</span> Mysql(<span class=\"string\">&#x27;xxxxxx&#x27;</span>);</span><br><span class=\"line\">  mysql.add(<span class=\"string\">&#x27;1243214&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"接口文件分离\"><a href=\"#接口文件分离\" class=\"headerlink\" title=\"接口文件分离\"></a>接口文件分离</h3><p><code>lib/Db.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Db</span></span>&#123;   <span class=\"comment\">//当做接口   接口：就是约定 、规范</span></span><br><span class=\"line\">    <span class=\"built_in\">String</span> uri;      <span class=\"comment\">//数据库的链接地址</span></span><br><span class=\"line\">    add(<span class=\"built_in\">String</span> data);</span><br><span class=\"line\">    save();</span><br><span class=\"line\">    delete();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/MySql.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;Db.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mysql</span> <span class=\"keyword\">implements</span> <span class=\"title\">Db</span></span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> uri;</span><br><span class=\"line\"></span><br><span class=\"line\">  Mysql(<span class=\"keyword\">this</span>.uri);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  add(data) &#123;   </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;这是mysql的add方法&#x27;</span>+data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  delete() &#123;   </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  save() &#123;   </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/MsSql.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;Db.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MsSql</span> <span class=\"keyword\">implements</span> <span class=\"title\">Db</span></span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> uri;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  add(<span class=\"built_in\">String</span> data) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;这是mssql的add方法&#x27;</span>+data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  delete() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  save() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/MsSql.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/MySql.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  Mysql mysql = <span class=\"keyword\">new</span> Mysql(<span class=\"string\">&#x27;xxxxxx&#x27;</span>);</span><br><span class=\"line\">  mysql.add(<span class=\"string\">&#x27;1243214&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  MsSql mssql = <span class=\"keyword\">new</span> MsSql();</span><br><span class=\"line\">  mssql.uri = <span class=\"string\">&#x27;127.0.0.1&#x27;</span>;</span><br><span class=\"line\">  mssql.add(<span class=\"string\">&#x27;增加的数据&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"一个类实现多个接口\"><a href=\"#一个类实现多个接口\" class=\"headerlink\" title=\"一个类实现多个接口\"></a>一个类实现多个接口</h2><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  printA();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  printB();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C</span> <span class=\"keyword\">implements</span> <span class=\"title\">A</span>, <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  printA() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;printA&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  printB() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement printB</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  C c = <span class=\"keyword\">new</span> C();</span><br><span class=\"line\">  c.printA();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"类的混入\"><a href=\"#类的混入\" class=\"headerlink\" title=\"类的混入\"></a>类的混入</h2><p><code>mixins</code>的中文意思是混入，就是在类中混入其他功能。在<code>Dart</code>中可以使用<code>mixins</code>实现类似多继承的功能。</p>\n<p>因为<code>mixins</code>使用的条件，随着<code>Dart</code>版本一直在变，这里讲的是<code>Dart2.x</code>中使用<code>mixins</code>的条件：</p>\n<ol>\n<li>作为mixins的类只能继承自Object，不能继承其他类</li>\n<li>作为mixins的类不能有构造函数</li>\n<li>一个类可以mixins多个mixins类</li>\n<li>mixins绝不是继承，也不是接口，而是一种全新的特性</li>\n</ol>\n<h3 id=\"类仅混入\"><a href=\"#类仅混入\" class=\"headerlink\" title=\"类仅混入\"></a>类仅混入</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> info = <span class=\"string\">&quot;this is A&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printA() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;A&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printB() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;B&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C</span> <span class=\"title\">with</span> <span class=\"title\">A</span>, <span class=\"title\">B</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> C();</span><br><span class=\"line\">  c.printA();</span><br><span class=\"line\">  c.printB();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c.info);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类继承的同时混入\"><a href=\"#类继承的同时混入\" class=\"headerlink\" title=\"类继承的同时混入\"></a>类继承的同时混入</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Person Run&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> info = <span class=\"string\">&quot;this is A&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printA() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;A&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;A Run&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printB() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;B&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;B Run&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> <span class=\"title\">with</span> <span class=\"title\">B</span>, <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  C(<span class=\"built_in\">String</span> name, <span class=\"built_in\">num</span> age) : <span class=\"keyword\">super</span>(name, age);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> C(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  c.printInfo();    <span class=\"comment\">// 张三----20</span></span><br><span class=\"line\">  c.printB();       <span class=\"comment\">// B</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c.info);    <span class=\"comment\">// this is A</span></span><br><span class=\"line\">  c.run();          <span class=\"comment\">// A Run</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>当混入的类存在相同的方法的时候，后混入的类会覆盖前混入的类。当继承和混入存在相同方法的时候，混入会覆盖继承的方法。</p>\n</blockquote>\n<h3 id=\"类混入的实例类型\"><a href=\"#类混入的实例类型\" class=\"headerlink\" title=\"类混入的实例类型\"></a>类混入的实例类型</h3><p>很简单，<code>mixins</code>混入的类型就是其超类的子类型。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> info = <span class=\"string\">&quot;this is A&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printA() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;A&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printB() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;B&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C</span> <span class=\"title\">with</span> <span class=\"title\">A</span>, <span class=\"title\">B</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> C();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c <span class=\"keyword\">is</span> C); <span class=\"comment\">//true</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c <span class=\"keyword\">is</span> A); <span class=\"comment\">//true</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c <span class=\"keyword\">is</span> B); <span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> A();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a <span class=\"keyword\">is</span> <span class=\"built_in\">Object</span>); <span class=\"comment\">//true a也是Object的子类型，因为所有的类都继承于Object类</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"泛型\"><a href=\"#泛型\" class=\"headerlink\" title=\"泛型\"></a>泛型</h2><p>通俗理解：泛型就是解决 类 接口 方法的复用性、以及对不特定数据类型的支持(类型校验)</p>\n<h3 id=\"泛型方法\"><a href=\"#泛型方法\" class=\"headerlink\" title=\"泛型方法\"></a>泛型方法</h3><blockquote>\n<p>期望方法传入什么类型返回什么类型</p>\n</blockquote>\n<ul>\n<li>传入string返回string</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 只能返回string类型的数据</span></span><br><span class=\"line\"><span class=\"built_in\">String</span> getData(<span class=\"built_in\">String</span> value) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>定义多个方法，A传入string返回string，B传入int返回int</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 同时支持返回 string类型 和int类型  （代码冗余）</span></span><br><span class=\"line\"><span class=\"built_in\">String</span> getData1(<span class=\"built_in\">String</span> value) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">int</span> getData2(<span class=\"built_in\">int</span> value) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>不指定类型</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 同时返回 string类型 和number类型 不指定类型可以解决这个问题 但放弃了类型校验</span></span><br><span class=\"line\">getData3(value) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>泛型使用</li>\n</ul>\n<p>不指定类型放弃了类型检查。我们现在想实现的是传入什么 返回什么。<br>比如:传入<code>number</code>类型必须返回<code>number</code>类型，传入<code>string</code>类型必须返回<code>string</code>类型。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T getData4&lt;T&gt;(T value) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(getData4(<span class=\"number\">21</span>));</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(getData4(<span class=\"string\">&#x27;xxx&#x27;</span>));</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(getData4&lt;<span class=\"built_in\">String</span>&gt;(<span class=\"string\">&#x27;你好&#x27;</span>)); <span class=\"comment\">// 指定类型</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(getData4&lt;<span class=\"built_in\">int</span>&gt;(<span class=\"number\">123</span>));      <span class=\"comment\">// 指定类型</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"泛型类\"><a href=\"#泛型类\" class=\"headerlink\" title=\"泛型类\"></a>泛型类</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 不指定类的类型</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>();</span><br><span class=\"line\">  list.add(<span class=\"number\">12</span>);</span><br><span class=\"line\">  list.add(<span class=\"string\">&quot;你好&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 指定类的类型为String</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list2 = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>&lt;<span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">  <span class=\"comment\">// list2.add(12); //错误的写法</span></span><br><span class=\"line\">  list2.add(<span class=\"string\">&#x27;你好&#x27;</span>);</span><br><span class=\"line\">  list2.add(<span class=\"string\">&#x27;你好1&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list2);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 指定类的类型为int</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list3 = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>&lt;<span class=\"built_in\">int</span>&gt;();</span><br><span class=\"line\">  <span class=\"comment\">// list3.add(&quot;你好&quot;); //错误写法</span></span><br><span class=\"line\">  list3.add(<span class=\"number\">12</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list3);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>案例：把下面类转换成泛型类，要求List里面可以增加int类型的数据，也可以增加String类型的数据。但是每次调用增加的类型要统一</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PrintClass</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">List</span> list = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>&lt;<span class=\"built_in\">int</span>&gt;();</span><br><span class=\"line\">  <span class=\"keyword\">void</span> add(<span class=\"built_in\">int</span> value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.list.add(value);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.list.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"keyword\">this</span>.list[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  PrintClass p = <span class=\"keyword\">new</span> PrintClass();</span><br><span class=\"line\">  p.add(<span class=\"number\">1</span>);</span><br><span class=\"line\">  p.add(<span class=\"number\">12</span>);</span><br><span class=\"line\">  p.add(<span class=\"number\">5</span>);</span><br><span class=\"line\">  p.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改泛型类后</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PrintClass</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">List</span> list = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>&lt;T&gt;();</span><br><span class=\"line\">  <span class=\"keyword\">void</span> add(T value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.list.add(value);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.list.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"keyword\">this</span>.list[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  PrintClass p = <span class=\"keyword\">new</span> PrintClass();</span><br><span class=\"line\">  p.add(<span class=\"number\">11</span>);</span><br><span class=\"line\">  p.add(<span class=\"string\">&#x27;xxx&#x27;</span>);</span><br><span class=\"line\">  p.add(<span class=\"number\">22</span>);</span><br><span class=\"line\">  p.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  PrintClass p1 = <span class=\"keyword\">new</span> PrintClass&lt;<span class=\"built_in\">int</span>&gt;();</span><br><span class=\"line\">  p1.add(<span class=\"number\">1</span>);</span><br><span class=\"line\">  p1.add(<span class=\"number\">2</span>);</span><br><span class=\"line\">  p1.add(<span class=\"number\">3</span>);</span><br><span class=\"line\">  p1.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  PrintClass p2 = <span class=\"keyword\">new</span> PrintClass&lt;<span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">  p2.add(<span class=\"string\">&#x27;你好&#x27;</span>);</span><br><span class=\"line\">  p2.add(<span class=\"string\">&#x27;泛型&#x27;</span>);</span><br><span class=\"line\">  p2.add(<span class=\"string\">&#x27;类&#x27;</span>);</span><br><span class=\"line\">  p2.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"泛型接口\"><a href=\"#泛型接口\" class=\"headerlink\" title=\"泛型接口\"></a>泛型接口</h3><p>官方示例：可将<code>ObjectCache</code>和<code>StringCache</code>通过泛型接口实现为<code>Cache</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ObjectCache</span> </span>&#123;</span><br><span class=\"line\">  getByKey(<span class=\"built_in\">String</span> key);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> setByKey(<span class=\"built_in\">String</span> key, <span class=\"built_in\">Object</span> value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StringCache</span> </span>&#123;</span><br><span class=\"line\">  getByKey(<span class=\"built_in\">String</span> key);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> setByKey(<span class=\"built_in\">String</span> key, <span class=\"built_in\">String</span> value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cache</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">  getByKey(<span class=\"built_in\">String</span> key);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> setByKey(<span class=\"built_in\">String</span> key, T value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>实现数据缓存的功能：有文件缓存、和内存缓存。内存缓存和文件缓存按照接口约束实现。</p>\n<ol>\n<li>定义一个泛型接口 约束实现它的子类必须有getByKey(key) 和 setByKey(key,value)</li>\n<li>要求setByKey的时候的value的类型和实例化子类的时候指定的类型一致</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cache</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">  getByKey(<span class=\"built_in\">String</span> key);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> setByKey(<span class=\"built_in\">String</span> key, T value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileCache</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"keyword\">extends</span> <span class=\"title\">Cache</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  getByKey(<span class=\"built_in\">String</span> key) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> UnimplementedError();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> setByKey(<span class=\"built_in\">String</span> key, T value) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;this is FileCache key=<span class=\"subst\">$&#123;key&#125;</span> value=<span class=\"subst\">$&#123;value&#125;</span>&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MemoryCache</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"keyword\">extends</span> <span class=\"title\">Cache</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  getByKey(<span class=\"built_in\">String</span> key) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> UnimplementedError();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> setByKey(<span class=\"built_in\">String</span> key, T value) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;this is MemoryCache key=<span class=\"subst\">$&#123;key&#125;</span> value=<span class=\"subst\">$&#123;value&#125;</span>&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  MemoryCache m = <span class=\"keyword\">new</span> MemoryCache&lt;<span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">  m.setByKey(<span class=\"string\">&#x27;index&#x27;</span>, <span class=\"string\">&#x27;首页数据&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  MemoryCache m1 = <span class=\"keyword\">new</span> MemoryCache&lt;<span class=\"built_in\">Map</span>&gt;();</span><br><span class=\"line\">  m1.setByKey(<span class=\"string\">&#x27;index&#x27;</span>, &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;张三&quot;</span>, <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">20</span>&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"库\"><a href=\"#库\" class=\"headerlink\" title=\"库\"></a>库</h2><p>前面介绍<code>Dart</code>基础知识的时候基本上都是在一个文件里面编写<code>Dart</code>代码的，但实际开发中不可能这么写，模块化很重要，所以这就需要使用到库的概念。</p>\n<p>在<code>Dart</code>中，库的使用时通过<code>import</code>关键字引入的。</p>\n<p><code>library</code>指令可以创建一个库，每个<code>Dart</code>文件都是一个库，即使没有使用<code>library</code>指令来指定。</p>\n<p>Dart中的库主要有三种：</p>\n<ul>\n<li>我们自定义的库</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/xxx.dart&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>系统内置库</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:math&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:io&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:convert&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Pub包管理系统中的库<br><code>https://pub.dev/packages</code><br><code>https://pub.flutter-io.cn/packages</code><br><code>https://pub.dartlang.org/flutter/</code><ul>\n<li>需要在自己想项目根目录新建一个pubspec.yaml</li>\n<li>在pubspec.yaml文件 然后配置名称 、描述、依赖等信息</li>\n<li>然后运行 pub get 获取包下载到本地  </li>\n<li>项目中引入库 import ‘package:http/http.dart’ as http; 看文档使用</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"自定义库\"><a href=\"#自定义库\" class=\"headerlink\" title=\"自定义库\"></a>自定义库</h3><p><code>./index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/Animal.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> Animal(<span class=\"string\">&#x27;小黑狗&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a.getName());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/Animal.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> _name; <span class=\"comment\">//私有属性</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> age;</span><br><span class=\"line\">  <span class=\"comment\">//默认构造函数的简写</span></span><br><span class=\"line\">  Animal(<span class=\"keyword\">this</span>._name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>._name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">String</span> getName() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> _run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;这是一个私有方法&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  execRun() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>._run(); <span class=\"comment\">//类里面方法的相互调用</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"系统内置库\"><a href=\"#系统内置库\" class=\"headerlink\" title=\"系统内置库\"></a>系统内置库</h3><h4 id=\"系统内置math库\"><a href=\"#系统内置math库\" class=\"headerlink\" title=\"系统内置math库\"></a>系统内置math库</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// import &#x27;dart:io&#x27;;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;dart:math&quot;</span>;</span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(min(<span class=\"number\">12</span>,<span class=\"number\">23</span>));</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(max(<span class=\"number\">12</span>,<span class=\"number\">25</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"系统内置io库\"><a href=\"#系统内置io库\" class=\"headerlink\" title=\"系统内置io库\"></a>系统内置io库</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:io&#x27;</span>;       <span class=\"comment\">// 请求相关</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:convert&#x27;</span>;  <span class=\"comment\">// 转换编码格式</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//api接口： http://news-at.zhihu.com/api/3/stories/latest</span></span><br><span class=\"line\">getDataFromZhihuAPI() <span class=\"keyword\">async</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//1、创建HttpClient对象</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> httpClient = <span class=\"keyword\">new</span> HttpClient();  </span><br><span class=\"line\">  <span class=\"comment\">//2、创建Uri对象</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> uri = <span class=\"keyword\">new</span> <span class=\"built_in\">Uri</span>.http(<span class=\"string\">&#x27;news-at.zhihu.com&#x27;</span>,<span class=\"string\">&#x27;/api/3/stories/latest&#x27;</span>);</span><br><span class=\"line\">  <span class=\"comment\">//3、发起请求，等待请求</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> request = <span class=\"keyword\">await</span> httpClient.getUrl(uri);</span><br><span class=\"line\">  <span class=\"comment\">//4、关闭请求，等待响应</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> response = <span class=\"keyword\">await</span> request.close();</span><br><span class=\"line\">  <span class=\"comment\">//5、解码响应的内容</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> response.transform(utf8.decoder).join();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() <span class=\"keyword\">async</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = <span class=\"keyword\">await</span> getDataFromZhihuAPI();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"async和await\"><a href=\"#async和await\" class=\"headerlink\" title=\"async和await\"></a>async和await</h3><p>这两个关键字的使用只需要记住两点：</p>\n<ul>\n<li>只有async方法才能使用await关键字调用方法</li>\n<li>如果调用别的async方法必须使用await关键字</li>\n</ul>\n<blockquote>\n<p>async是让方法变成异步。await是等待异步方法执行完成。</p>\n</blockquote>\n<p>原方法</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">testAsync() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello async&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = testAsync();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>改为异步</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">testAsync() <span class=\"keyword\">async</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello async&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() <span class=\"keyword\">async</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = <span class=\"keyword\">await</span> testAsync();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"引入第三方模块\"><a href=\"#引入第三方模块\" class=\"headerlink\" title=\"引入第三方模块\"></a>引入第三方模块</h3><p>dart的三方库都是用pub包管理系统进行管理的。</p>\n<p>1、<strong>从下面网址找到要用的库</strong></p>\n<p>  <code>https://pub.dev/packages</code><br>  <code>https://pub.flutter-io.cn/packages</code><br>  <code>https://pub.dartlang.org/flutter/</code></p>\n<p>2、<strong>创建一个pubspec.yaml文件，内容如下</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">xxx</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"string\">A</span> <span class=\"string\">new</span> <span class=\"string\">flutter</span> <span class=\"string\">module</span> <span class=\"string\">project.</span></span><br><span class=\"line\"><span class=\"attr\">dependencies:</span>  </span><br><span class=\"line\">  <span class=\"attr\">http:</span> <span class=\"string\">^0.12.0+2</span></span><br><span class=\"line\">  <span class=\"attr\">date_format:</span> <span class=\"string\">^1.0.6</span></span><br></pre></td></tr></table></figure>\n<p>3、<strong>配置dependencies</strong><br>4、<strong>运行pub get 获取远程库</strong><br>5、<strong>看文档引入库使用</strong></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:convert&#x27;</span> <span class=\"keyword\">as</span> convert;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:http/http.dart&#x27;</span> <span class=\"keyword\">as</span> http;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:date_format/date_format.dart&#x27;</span>;</span><br><span class=\"line\">main() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> url =</span><br><span class=\"line\">      <span class=\"string\">&quot;http://www.phonegap100.com/appapi.php?a=getPortalList&amp;catid=20&amp;page=1&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Await the http get response, then decode the json-formatted responce.</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> response = <span class=\"keyword\">await</span> http.<span class=\"keyword\">get</span>(url);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (response.statusCode == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> jsonResponse = convert.jsonDecode(response.body);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(jsonResponse);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Request failed with status: <span class=\"subst\">$&#123;response.statusCode&#125;</span>.&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(formatDate(<span class=\"built_in\">DateTime</span>(<span class=\"number\">1989</span>, <span class=\"number\">2</span>, <span class=\"number\">21</span>), [yyyy, <span class=\"string\">&#x27;*&#x27;</span>, mm, <span class=\"string\">&#x27;*&#x27;</span>, dd]));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"库的重命名\"><a href=\"#库的重命名\" class=\"headerlink\" title=\"库的重命名\"></a>库的重命名</h3><p>冲突解决：当引入两个库中有相同名称标识符的时候，<br>如果是java通常我们通过写上完整的包名路径来指定使用的具体标识符，<br>甚至不用import都可以，但是Dart里面是必须import的。<br>当冲突的时候，可以使用as关键字来指定库的前缀。如下例子所示：</p>\n<p><code>./index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:lib/Person1.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:lib/Person2.dart&#x27;</span> <span class=\"keyword\">as</span> lib2;</span><br><span class=\"line\"></span><br><span class=\"line\">Person p1 = <span class=\"keyword\">new</span> Person();           <span class=\"comment\">// Uses Person from Person1.</span></span><br><span class=\"line\">lib2.Person p2 = <span class=\"keyword\">new</span> lib2.Person(); <span class=\"comment\">// Uses Person from Person2.</span></span><br></pre></td></tr></table></figure>\n<p><code>lib/Person1.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age; </span><br><span class=\"line\">  <span class=\"comment\">//默认构造函数的简写</span></span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name,<span class=\"keyword\">this</span>.age);  </span><br><span class=\"line\"></span><br><span class=\"line\">  Person.setInfo(<span class=\"built_in\">String</span> name,<span class=\"built_in\">int</span> age)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age=age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo()&#123;   </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Person1:<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/Person2.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age; </span><br><span class=\"line\">  <span class=\"comment\">//默认构造函数的简写</span></span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name,<span class=\"keyword\">this</span>.age);  </span><br><span class=\"line\"></span><br><span class=\"line\">  Person.setInfo(<span class=\"built_in\">String</span> name,<span class=\"built_in\">int</span> age)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age=age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo()&#123;   </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Person1:<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"部分导入\"><a href=\"#部分导入\" class=\"headerlink\" title=\"部分导入\"></a>部分导入</h3><p>如果只需要导入库的一部分，有两种模式：</p>\n<ul>\n<li><p>模式一：只导入需要的部分，使用show关键字，如下例子所示：<br><code>import &#39;package:lib1/lib1.dart&#39; show foo;</code></p>\n</li>\n<li><p>模式二：隐藏不需要的部分，使用hide关键字，如下例子所示：<br><code>import &#39;package:lib2/lib2.dart&#39; hide foo;</code></p>\n</li>\n</ul>\n<h4 id=\"默认导入\"><a href=\"#默认导入\" class=\"headerlink\" title=\"默认导入\"></a>默认导入</h4><p><code>./index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/myMath.dart&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  getName();</span><br><span class=\"line\">  getAge();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/myMath.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> getName()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;张三&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> getAge()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> getSex()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"部分导入-1\"><a href=\"#部分导入-1\" class=\"headerlink\" title=\"部分导入\"></a>部分导入</h4><p><code>./index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/myMath.dart&#x27;</span> <span class=\"keyword\">show</span> getName;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  getName();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/myMath.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> getName()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;张三&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> getAge()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> getSex()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"隐藏部分\"><a href=\"#隐藏部分\" class=\"headerlink\" title=\"隐藏部分\"></a>隐藏部分</h4><p><code>./index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/myMath.dart&#x27;</span> <span class=\"keyword\">hide</span> getName;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// getName(); // 报错</span></span><br><span class=\"line\">  getAge();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/myMath.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> getName()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;张三&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> getAge()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> getSex()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"延迟加载\"><a href=\"#延迟加载\" class=\"headerlink\" title=\"延迟加载\"></a>延迟加载</h3><p>也称为懒加载，可以在需要的时候再进行加载。<br>懒加载的最大好处是可以减少APP的启动时间。</p>\n<p>懒加载使用deferred as关键字来指定，如下例子所示：</p>\n<p><code>import &#39;package:deferred/hello.dart&#39; deferred as hello;</code></p>\n<p>当需要使用的时候，需要使用loadLibrary()方法来加载：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:deferred/hello.dart&#x27;</span> <span class=\"keyword\">deferred</span> <span class=\"keyword\">as</span> hello;</span><br><span class=\"line\">greet() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> hello.loadLibrary();</span><br><span class=\"line\">  hello.printGreeting();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.bilibili.com/video/BV1S4411E7LY?from=search&amp;seid=18237173814777031437\">B站-Dart Flutter教程_Dart Flutter入门实战视频教程-2020年新出-第14讲以后是Flutter教程</a></li>\n</ul>\n","site":{"data":{"_yilia":{"menu":{"主页":"/","技术":"/tags/技术积累/","练习":"/tags/每日一练/","面试":"/tags/每日一面/","读书":"/tags/每日一读/","归档":"/archives/","相册":"/photos/"},"subnav":{"github":"https://github.com/mitudegaoyang","weixin":"/img/timg.jpeg","mail":"mailto:13683265113@163.com"},"rss":"/atom.xml","root":null,"show_all_link":"展开全文","mathjax":false,"open_in_new":false,"reward_type":2,"reward_wording":"谢谢你请我吃糖果","alipay":null,"weixin":null,"toc":1,"toc_hide_index":true,"toc_empty_wording":"目录，不存在的…","top":true,"baidu_analytics":"","google_analytics":"","favicon":"/favicon.ico","avatar":"/img/timg.jpeg","share_jia":true,"duoshuo":false,"wangyiyun":false,"changyan_appid":false,"changyan_conf":false,"disqus":false,"gitment_owner":false,"gitment_repo":"","gitment_oauth":{"client_id":"","client_secret":""},"style":{"header":"#4d4d4d","slider":"linear-gradient(200deg,#a0cfe4,#e8c37e)"},"slider":{"showTags":false},"smart_menu":{"innerArchive":"所有文章","friends":"友链","aboutme":"关于我"},"friends":{"github":"https://github.com/mitudegaoyang","gitbook":"https://www.gitbook.com/@mitudegaoyang","个人简历":"https://me.gaotianyang.top/","个人博客":"https://www.gaotianyang.top/","静博客":"https://jss.gaotianyang.top/","网站demo":"https://mitudegaoyang.github.io/kuaiyijian/"},"aboutme":"知言善行笃学慎思"}}},"excerpt":"<p><img src=\"https://s3.ax1x.com/2021/03/01/6iYQbt.png\" alt=\"首屏图\"></p>","more":"<h2 id=\"Dart介绍\"><a href=\"#Dart介绍\" class=\"headerlink\" title=\"Dart介绍\"></a>Dart介绍</h2><p>Dart是由谷歌开发的计算机编程语言，它可以用于web、服务器、移动应用和物联网等领域的开发。</p>\n<p>Dart 诞生于2011年，号称起到javaScript/但是过去的几年中一直不温不火。知道Flutter的出现人们重新重视。</p>\n<p>要学习Flutter的话我们必须首先得会<a href=\"https://dart.dev\">Dart</a>。</p>\n<h2 id=\"Dart环境搭建\"><a href=\"#Dart环境搭建\" class=\"headerlink\" title=\"Dart环境搭建\"></a>Dart环境搭建</h2><h3 id=\"Windows系统安装Dart\"><a href=\"#Windows系统安装Dart\" class=\"headerlink\" title=\"Windows系统安装Dart\"></a>Windows系统安装Dart</h3><ul>\n<li>命令行安装</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装dart-sdk</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">  choco install dart-sdk</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 更新dart-sdk</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">  choco upgrade dart-sdk</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>软件安装SDK(推荐)</li>\n</ul>\n<p><a href=\"https://gekorm.com/dart-windows/\">下载dart的SDK软件</a></p>\n<h3 id=\"Mac系统安装Dart\"><a href=\"#Mac系统安装Dart\" class=\"headerlink\" title=\"Mac系统安装Dart\"></a>Mac系统安装Dart</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 跟新追踪brew的包管理信息，扩展可安装软件的选择</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> brew tap dart-lang/dart</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 使用brew安装dart</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> brew install dart</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://dart.dev/get-dart\">dart官网下载地址</a></p>\n<blockquote>\n<p>注： 如果没有安装brew工具，需先<a href=\"https://brew.sh/\">安装Homebrew</a></p>\n</blockquote>\n<h2 id=\"Dart开发工具\"><a href=\"#Dart开发工具\" class=\"headerlink\" title=\"Dart开发工具\"></a>Dart开发工具</h2><p>Dark常见的开发工具有：IntelliJ IDEA、Webstorm、Atom、Vscode等</p>\n<ul>\n<li>Dart的提示插件</li>\n</ul>\n<p><img src=\"https://s3.ax1x.com/2021/02/22/y7xdBD.png\" alt=\"Dart的VScode插件\"></p>\n<ul>\n<li>Dart的运行插件code runner</li>\n</ul>\n<p><img src=\"https://s3.ax1x.com/2021/02/22/y7zOzt.png\" alt=\"code-runner\"></p>\n<h2 id=\"Dart的初次编写\"><a href=\"#Dart的初次编写\" class=\"headerlink\" title=\"Dart的初次编写\"></a>Dart的初次编写</h2><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello dart&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.ax1x.com/2021/02/22/yHSo60.png\" alt=\"运行首个Dart文件\"></p>\n<h2 id=\"Dart方法介绍\"><a href=\"#Dart方法介绍\" class=\"headerlink\" title=\"Dart方法介绍\"></a>Dart方法介绍</h2><h3 id=\"Dart入口方法\"><a href=\"#Dart入口方法\" class=\"headerlink\" title=\"Dart入口方法\"></a>Dart入口方法</h3><p>所有需要被执行的方法需放置在main方法中</p>\n<p>共有两种main的写法，分别是基本用法和无返回值的用法</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 基本用法 --&gt;</span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello dart&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 无返回值的main方法 --&gt;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello dart&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Dart打印\"><a href=\"#Dart打印\" class=\"headerlink\" title=\"Dart打印\"></a>Dart打印</h3><p>上面的例子中使用到了打印方法</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 打印<span class=\"string\">&quot;hello dart&quot;</span> --&gt;</span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello dart&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Dart注释\"><a href=\"#Dart注释\" class=\"headerlink\" title=\"Dart注释\"></a>Dart注释</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// main() &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   print(&quot;hello dart1&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/<span class=\"strong\">**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">main() &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">  print(&quot;hello dart2&quot;);</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\"><span class=\"bullet\"> *</span> <span class=\"emphasis\">*/</span></span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">main() &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\">///   <span class=\"markdown\">print(&quot;hello dart3&quot;);</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello dart4&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Dart变量\"><a href=\"#Dart变量\" class=\"headerlink\" title=\"Dart变量\"></a>Dart变量</h3><p>dart是一个强大的脚本类语言，可以不预先定义变量类型，自动会类型推断</p>\n<p>dart中定义变量可以通过var关键字或类型关键字来申明变量</p>\n<ul>\n<li>字符串类型：String</li>\n<li>数字类型：int</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;this is var&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(str);</span><br><span class=\"line\"><span class=\"keyword\">var</span> mynum = <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mynum);</span><br><span class=\"line\"><span class=\"built_in\">String</span> string = <span class=\"string\">&#x27;this is String&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(string);</span><br><span class=\"line\"><span class=\"built_in\">int</span> mynum2 = <span class=\"number\">456</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mynum2);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注：var不要和类型关键字一起使用</p>\n</blockquote>\n<p>dart中存在类型校验 下面三种情况均会报错</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">str = <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(str);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">String</span> mynum = <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mynum);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">int</span> mynum2 = <span class=\"string\">&#x27;456&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mynum2);</span><br></pre></td></tr></table></figure>\n<p>此时赋值操作会出现报错提示，因为声明时推断str为字符串类型</p>\n<h3 id=\"Dart常量\"><a href=\"#Dart常量\" class=\"headerlink\" title=\"Dart常量\"></a>Dart常量</h3><p>常量只能进行一次赋值操作</p>\n<ul>\n<li>const常量</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> PI = <span class=\"number\">3.14159</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(PI);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">final</span> PI2 = <span class=\"number\">3.14159</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(PI2);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">final</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">DateTime</span>.now();</span><br><span class=\"line\"><span class=\"built_in\">print</span>(now);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>final常量</li>\n</ul>\n<p>区别：final不仅有const的编译时常量的特性，最重要的是它是运行时常量，并且final是惰性初始化，即在运行时第一次使用前才初始化</p>\n<h3 id=\"Dart命名规则\"><a href=\"#Dart命名规则\" class=\"headerlink\" title=\"Dart命名规则\"></a>Dart命名规则</h3><ol>\n<li>变量名称必须由数字、字母、下划线和$符组成</li>\n<li>注意：标识符开头不能是数字</li>\n<li>标识符不能是保留字和关键字</li>\n<li>变量的名字是区分大小写的：如age和Age是不同的变量。在实际的运用中，也建议不要用一个</li>\n<li>标识符(变量名称)一定要见名思意：变量名称建议用名词，方法名称建议用动词</li>\n</ol>\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><h3 id=\"常用数据类型\"><a href=\"#常用数据类型\" class=\"headerlink\" title=\"常用数据类型\"></a>常用数据类型</h3><ul>\n<li>Number(数值)<ul>\n<li>int</li>\n<li>double</li>\n</ul>\n</li>\n<li>Strings(字符串)<ul>\n<li>String</li>\n</ul>\n</li>\n<li>Booleans(布尔)<ul>\n<li>bool</li>\n</ul>\n</li>\n<li>List(数组)<ul>\n<li>在Dart中，数组是列表对象，所以大多数人只是称它们为列表</li>\n</ul>\n</li>\n<li>Maps(字典)<ul>\n<li>通常来说，Map是一个键值对相关的对象。键和值可以是任何类型的对象。每个键只出现一次，而一个值则可以出现多次。映射是动态集合。换句话说，Maps可以在运行时增长和缩小。dart:core库中的Map类提供了相同的支持。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"字符串类型\"><a href=\"#字符串类型\" class=\"headerlink\" title=\"字符串类型\"></a>字符串类型</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1、字符串定义的几种方式</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;this is str&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str2 = <span class=\"string\">&quot;this is str2&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str2);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">String</span> str3 = <span class=\"string\">&#x27;this is str3&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">String</span> str4 = <span class=\"string\">&#x27;this is str4&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str3);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str4);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">String</span> str5 = <span class=\"string\">&#x27;&#x27;&#x27;this is str5&#x27;&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str5);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">String</span> str6 = <span class=\"string\">&#x27;&#x27;&#x27;this is str6</span></span><br><span class=\"line\"><span class=\"string\">  this is str6</span></span><br><span class=\"line\"><span class=\"string\">  this is str6</span></span><br><span class=\"line\"><span class=\"string\">  &#x27;&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str6);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">String</span> str7 = <span class=\"string\">&quot;&quot;&quot;this is str7</span></span><br><span class=\"line\"><span class=\"string\">  this is str7</span></span><br><span class=\"line\"><span class=\"string\">  this is str7</span></span><br><span class=\"line\"><span class=\"string\">  &quot;&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str7);</span><br><span class=\"line\">  <span class=\"comment\">// 2、字符串的拼接</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> str8 = <span class=\"string\">&#x27;this is&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> str9 = <span class=\"string\">&#x27;str9&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str8 + <span class=\"string\">&quot; &quot;</span> + str9);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$str8</span> <span class=\"subst\">$str9</span>&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"数值类型\"><a href=\"#数值类型\" class=\"headerlink\" title=\"数值类型\"></a>数值类型</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1.int 必须是整型</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> a = <span class=\"number\">123</span>;</span><br><span class=\"line\">  <span class=\"comment\">// a = 45.5; 不可以赋浮点型</span></span><br><span class=\"line\">  a = <span class=\"number\">12</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a);</span><br><span class=\"line\">  <span class=\"comment\">// 2.double 既可以是整型 也可是浮点型</span></span><br><span class=\"line\">  <span class=\"built_in\">double</span> b = <span class=\"number\">23.5</span>;</span><br><span class=\"line\">  b = <span class=\"number\">24</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(b);</span><br><span class=\"line\">  <span class=\"comment\">// 3.运算符</span></span><br><span class=\"line\">  <span class=\"comment\">// + - * / %</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> c = a + b;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c); <span class=\"comment\">// 12 + 24.0 = 36.0</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> d = <span class=\"number\">12</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> e = a + d;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(e); <span class=\"comment\">// 12 + 12 = 24</span></span><br><span class=\"line\">  <span class=\"comment\">// e = 12.5; // 错误 e现前计算时为整型不可再次赋值浮点型</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"布尔类型\"><a href=\"#布尔类型\" class=\"headerlink\" title=\"布尔类型\"></a>布尔类型</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">bool 值true/false</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1.bool</span></span><br><span class=\"line\">  <span class=\"built_in\">bool</span> flag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(flag);</span><br><span class=\"line\">  <span class=\"built_in\">bool</span> flag2 = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(flag2);</span><br><span class=\"line\">  <span class=\"comment\">// bool flag3 = 123; // 不能赋非布尔的值</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2.条件判断语句</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (flag) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;真&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;假&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">123</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"number\">456</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a == b) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a==b&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a!=b&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// a!=b</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> c = <span class=\"string\">&#x27;123&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a == c) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a==c&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a!=c&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// a!=c</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> d = <span class=\"number\">123</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a == d) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a==d&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a!=d&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// a==d</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">double</span> e = <span class=\"number\">123.0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a == e) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a==e&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a!=e&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// a==e</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"数组-集合类型\"><a href=\"#数组-集合类型\" class=\"headerlink\" title=\"数组/集合类型\"></a>数组/集合类型</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1.第一种定义List的方式</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> list = [<span class=\"string\">&#x27;1&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>, <span class=\"string\">&#x27;4&#x27;</span>, <span class=\"string\">&#x27;5&#x27;</span>];</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list.length);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list[<span class=\"number\">2</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2.第二种定义List的方式</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> list2 = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>();</span><br><span class=\"line\">  list2.add(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">  list2.add(<span class=\"string\">&#x27;b&#x27;</span>);</span><br><span class=\"line\">  list2.add(<span class=\"string\">&#x27;c&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list2);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list2.length);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list2[<span class=\"number\">1</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 3.定义List指定类型</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> list3 = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>&lt;<span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">  list3.add(<span class=\"string\">&#x27;张三&#x27;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// list3.add(123); // 不能添加非字符串类型</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list3);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Map类型\"><a href=\"#Map类型\" class=\"headerlink\" title=\"Map类型\"></a>Map类型</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">//第一种定义 Maps的方式</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;John&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">21</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;works&quot;</span>: [<span class=\"string\">&quot;程序猿&quot;</span>, <span class=\"string\">&quot;测试员&quot;</span>],</span><br><span class=\"line\">    <span class=\"string\">&quot;married&quot;</span>: <span class=\"keyword\">false</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person[<span class=\"string\">&quot;name&quot;</span>]);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person[<span class=\"string\">&quot;age&quot;</span>]);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person[<span class=\"string\">&quot;works&quot;</span>]);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person[<span class=\"string\">&quot;married&quot;</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//第二种定义 Maps的方式</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> person2 = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>();</span><br><span class=\"line\">  person2[<span class=\"string\">&quot;name&quot;</span>] = <span class=\"string\">&quot;Bob&quot;</span>;</span><br><span class=\"line\">  person2[<span class=\"string\">&quot;age&quot;</span>] = <span class=\"number\">26</span>;</span><br><span class=\"line\">  person2[<span class=\"string\">&quot;works&quot;</span>] = [<span class=\"string\">&quot;UI设计&quot;</span>, <span class=\"string\">&quot;测试员&quot;</span>];</span><br><span class=\"line\">  person2[<span class=\"string\">&quot;married&quot;</span>] = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2[<span class=\"string\">&quot;name&quot;</span>]);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2[<span class=\"string\">&quot;age&quot;</span>]);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2[<span class=\"string\">&quot;works&quot;</span>]);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2[<span class=\"string\">&quot;married&quot;</span>]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"不常用数据类型\"><a href=\"#不常用数据类型\" class=\"headerlink\" title=\"不常用数据类型\"></a>不常用数据类型</h3><ul>\n<li>Runes<ul>\n<li>Runes是指UTF-32编码的字符串。它可以通过文字转换成符号表情或者代表特定的文字。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> clapping = <span class=\"string\">&#x27;\\u&#123;1f44f&#125;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(clapping);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(clapping.codeUnits);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(clapping.runes.toList());</span><br><span class=\"line\"></span><br><span class=\"line\">  Runes input = <span class=\"keyword\">new</span> Runes(</span><br><span class=\"line\">      <span class=\"string\">&#x27;\\u2665  \\u&#123;1f605&#125;  \\u&#123;1f60e&#125;  \\u&#123;1f47b&#125;  \\u&#123;1f596&#125;  \\u&#123;1f44d&#125;&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>.fromCharCodes(input));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Symbols<ul>\n<li>Symbols对象表示在Dart程序中声明运算符或标识符。您可能永远不需要使用符号，但它们对于按名称引用标识符的API非常有用，因为缩小会更改标识符名称而不会更改标识符符号。要获取标识符的符号，请使用符号文字，它只是＃后跟标识符。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>在 Dart 中符号用 # 开头来表示，入门阶段不需要了解这东西，可能永远也用不上。</p>\n</blockquote>\n<h3 id=\"类型判断\"><a href=\"#类型判断\" class=\"headerlink\" title=\"类型判断\"></a>类型判断</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">main() &#123;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  is 关键词来判断类型</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;str&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (str <span class=\"keyword\">is</span> <span class=\"built_in\">String</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$str</span> 是字符串类型&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (str <span class=\"keyword\">is</span> <span class=\"built_in\">num</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$str</span> 是数字类型&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$str</span> 是其他类型&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> number = <span class=\"number\">123</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (number <span class=\"keyword\">is</span> <span class=\"built_in\">String</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$number</span> 是字符串类型&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (number <span class=\"keyword\">is</span> <span class=\"built_in\">num</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$number</span> 是数字类型&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$number</span> 是其他类型&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> doubleNum = <span class=\"number\">123.5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (doubleNum <span class=\"keyword\">is</span> <span class=\"built_in\">String</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$doubleNum</span> 是字符串类型&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (doubleNum <span class=\"keyword\">is</span> <span class=\"built_in\">int</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$doubleNum</span> 是整数类型&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (doubleNum <span class=\"keyword\">is</span> <span class=\"built_in\">double</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$doubleNum</span> 是浮点数类型&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$doubleNum</span> 是其他类型&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"条件判断\"><a href=\"#条件判断\" class=\"headerlink\" title=\"条件判断\"></a>条件判断</h2><h3 id=\"算数运算符\"><a href=\"#算数运算符\" class=\"headerlink\" title=\"算数运算符\"></a>算数运算符</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// +    -    *    /     ~/ (取整)     %（取余）</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> a=<span class=\"number\">13</span>;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> b=<span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a+b);   <span class=\"comment\">//加</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a-b);   <span class=\"comment\">//减</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a*b);   <span class=\"comment\">//乘</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a/b);   <span class=\"comment\">//除</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a%b);   <span class=\"comment\">//其余</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a~/b);  <span class=\"comment\">//取整</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> c=a*b;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;--------&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c);</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"关系运算符\"><a href=\"#关系运算符\" class=\"headerlink\" title=\"关系运算符\"></a>关系运算符</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">//  ==    !=   &gt;    &lt;    &gt;=    &lt;=</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">int</span> a=<span class=\"number\">5</span>;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> b=<span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a==b);   <span class=\"comment\">//判断是否相等</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a!=b);   <span class=\"comment\">//判断是否不等</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a&gt;b);   <span class=\"comment\">//判断是否大于</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a&lt;b);   <span class=\"comment\">//判断是否小于</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a&gt;=b);   <span class=\"comment\">//判断是否大于等于</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a&lt;=b);   <span class=\"comment\">//判断是否小于等于</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(a&gt;b)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a大于b&#x27;</span>);</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a小于b&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">/* ! 取反 */</span> </span><br><span class=\"line\">  <span class=\"built_in\">bool</span> flag=<span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(!flag);   <span class=\"comment\">//取反</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* &amp;&amp;并且:全部为true的话值为true 否则值为false */</span> </span><br><span class=\"line\">  <span class=\"built_in\">bool</span> a = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">bool</span> b = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a &amp;&amp; b);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">/* ||或者：全为false的话值为false 否则值为true */</span> </span><br><span class=\"line\">  <span class=\"built_in\">bool</span> c = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">bool</span> d = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c || d);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 如果一个人的年龄是20 并且 sex是女的话我们打印这个人</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> age = <span class=\"number\">20</span>;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> sex = <span class=\"string\">&quot;女&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (age == <span class=\"number\">20</span> &amp;&amp; sex == <span class=\"string\">&quot;女&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$age</span> --- <span class=\"subst\">$sex</span>&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;不打印&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">int</span> age2 = <span class=\"number\">30</span>;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> sex2 = <span class=\"string\">&quot;女&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (age2 == <span class=\"number\">20</span> &amp;&amp; sex2 == <span class=\"string\">&quot;女&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$age2</span> --- <span class=\"subst\">$sex2</span>&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;不打印&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//如果一个人的年龄是20 或者 sex是女的话我们打印这个人</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">int</span> age3 = <span class=\"number\">30</span>;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> sex3 = <span class=\"string\">&quot;女&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (age3 == <span class=\"number\">20</span> || sex3 == <span class=\"string\">&quot;女&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$age3</span> --- <span class=\"subst\">$sex3</span>&quot;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;不打印&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">//  1、基础赋值运算符   =   ??=</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> b = <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a);</span><br><span class=\"line\">  <span class=\"built_in\">int</span> c = a + b; <span class=\"comment\">//从右向左</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// b ??= 23;  表示如果b为空的话把 23赋值给b</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> d = <span class=\"number\">10</span>;</span><br><span class=\"line\">  d ??= <span class=\"number\">23</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">int</span> e;</span><br><span class=\"line\">  e ??= <span class=\"number\">23</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(e);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2、复合赋值运算符   +=  -=  *=   /=   %=  ~/=</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> f = <span class=\"number\">12</span>;</span><br><span class=\"line\">  f = f + <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(f);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> g = <span class=\"number\">13</span>;</span><br><span class=\"line\">  g += <span class=\"number\">10</span>; <span class=\"comment\">//g=g+10</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(g);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> h = <span class=\"number\">4</span>;</span><br><span class=\"line\">  h *= <span class=\"number\">3</span>; <span class=\"comment\">//h=h*3;</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(h);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> i = <span class=\"number\">7</span>;</span><br><span class=\"line\">  i %= <span class=\"number\">3</span>; <span class=\"comment\">//i=i%3;</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> j = <span class=\"number\">7</span>;</span><br><span class=\"line\">  j ~/= <span class=\"number\">3</span>; <span class=\"comment\">//j=(j~/3);</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(j);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"自增自减运算\"><a href=\"#自增自减运算\" class=\"headerlink\" title=\"自增自减运算\"></a>自增自减运算</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    ++  --   表示自增 自减 1</span></span><br><span class=\"line\"><span class=\"comment\">    在赋值运算里面 如果++ -- 写在前面 这时候先运算 再赋值，如果++ --写在后面 先赋值后运行运算</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">  a++; <span class=\"comment\">//a=a+1;</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"number\">10</span>;</span><br><span class=\"line\">  b--; <span class=\"comment\">//b=b-1;</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(b);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> c = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> d = a++;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c); <span class=\"comment\">//11</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(d); <span class=\"comment\">//10</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> e = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> f = ++a;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(e); <span class=\"comment\">//11</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(f); <span class=\"comment\">//11</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> g = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> h = --a;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(g); <span class=\"comment\">//9</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(h); <span class=\"comment\">//9</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> i = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> j = a--;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(i); <span class=\"comment\">//9</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(j); <span class=\"comment\">//10</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> k = <span class=\"number\">10</span>;</span><br><span class=\"line\">  ++k;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(k);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"条件表达式\"><a href=\"#条件表达式\" class=\"headerlink\" title=\"条件表达式\"></a>条件表达式</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1、if  else   switch case</span></span><br><span class=\"line\">  <span class=\"built_in\">bool</span> flag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (flag) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;true&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;false&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 判断一个人的成绩 如果大于60 显示及格   如果大于 70显示良好  如果大于90显示优秀</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> score = <span class=\"number\">41</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (score &gt; <span class=\"number\">90</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;优秀&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt; <span class=\"number\">70</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;良好&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">60</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;及格&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;不及格&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> sex = <span class=\"string\">&quot;女&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (sex) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&quot;男&quot;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;性别是男&#x27;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&quot;女&quot;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;性别是女&#x27;</span>);</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;性别是女2&#x27;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;传入参数错误&#x27;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2、三目运算符</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> falg = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (falg) &#123;</span><br><span class=\"line\">    a = <span class=\"string\">&#x27;我是true&#x27;</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    a = <span class=\"string\">&quot;我是false&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">bool</span> flag2 = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> b = flag2 ? <span class=\"string\">&#x27;我是true&#x27;</span> : <span class=\"string\">&#x27;我是false&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(b);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//3  ??运算符</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> c;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> d = c ?? <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(d); <span class=\"comment\">// 10</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> e = <span class=\"number\">22</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> f = e ?? <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(f); <span class=\"comment\">// 22</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Dart类型转换\"><a href=\"#Dart类型转换\" class=\"headerlink\" title=\"Dart类型转换\"></a>Dart类型转换</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1、Number与String类型之间的转换</span></span><br><span class=\"line\">  <span class=\"comment\">// Number类型转换成String类型 toString()</span></span><br><span class=\"line\">  <span class=\"comment\">// String类型转成Number类型  int.parse()</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> str = <span class=\"string\">&#x27;123&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum = <span class=\"built_in\">int</span>.parse(str);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum <span class=\"keyword\">is</span> <span class=\"built_in\">int</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"built_in\">String</span> str2 = <span class=\"string\">&#x27;123.1&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum2 = <span class=\"built_in\">double</span>.parse(str2);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum2 <span class=\"keyword\">is</span> <span class=\"built_in\">double</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 价格从字符串转数字时推荐使用浮点型避免报错</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> price = <span class=\"string\">&#x27;12&#x27;</span>; <span class=\"comment\">// String price = &#x27;12.5&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum3 = <span class=\"built_in\">double</span>.parse(price);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum3);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum3 <span class=\"keyword\">is</span> <span class=\"built_in\">double</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 报错</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> price2 = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum4 = <span class=\"built_in\">double</span>.parse(price2);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum4);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum4 <span class=\"keyword\">is</span> <span class=\"built_in\">double</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// try  ... catch</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> price3 = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> myNum = <span class=\"built_in\">double</span>.parse(price3);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(myNum);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 空值预处理</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> price4 = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  price4 = (price4 == <span class=\"string\">&#x27;&#x27;</span>) ? <span class=\"string\">&#x27;0&#x27;</span> : price4;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum5 = <span class=\"built_in\">double</span>.parse(price4);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum5);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum5 <span class=\"keyword\">is</span> <span class=\"built_in\">double</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum5 = <span class=\"number\">12</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> str3 = myNum5.toString();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str3 <span class=\"keyword\">is</span> <span class=\"built_in\">String</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2、其他类型转换成Booleans类型</span></span><br><span class=\"line\">  <span class=\"comment\">// isEmpty:判断字符串是否为空</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str4 = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (str4.isEmpty) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;str4空&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;str4不为空&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum6 = <span class=\"number\">123</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (myNum6 == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;非0&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum7;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (myNum7 == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;非0&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum8;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (myNum8 == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;空&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;非空&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum9 = <span class=\"number\">0</span> / <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myNum9);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (myNum9.isNaN) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;myNum9是NaN&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h2><h3 id=\"for循环语句\"><a href=\"#for循环语句\" class=\"headerlink\" title=\"for循环语句\"></a>for循环语句</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    // for基本语法</span></span><br><span class=\"line\"><span class=\"comment\">    for (int i = 1; i&lt;=100; i++) &#123;   </span></span><br><span class=\"line\"><span class=\"comment\">      print(i);</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    //第一步，声明变量int i = 1;</span></span><br><span class=\"line\"><span class=\"comment\">    //第二步，判断i &lt;=100</span></span><br><span class=\"line\"><span class=\"comment\">    //第三步，print(i);</span></span><br><span class=\"line\"><span class=\"comment\">    //第四步，i++</span></span><br><span class=\"line\"><span class=\"comment\">    //第五步 从第二步再来，直到判断为false</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 1、打印0-50所有的偶数</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">50</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2、求 1+2+3+4 +...100的和</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">    sum += i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(sum);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 3、计算5的阶乘   (1*2*3*4*5    n的阶乘1*2……*n)</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    sum2 *= i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(sum2);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 4、打印List  [&#x27;张三&#x27;,&#x27;李四&#x27;,&#x27;王五&#x27;] 里面的内容</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list = [<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"string\">&#x27;王五&#x27;</span>];</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list[<span class=\"number\">1</span>]);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; list.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(list[i]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 5、打印List中item的title</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list2 = [</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;新闻111&quot;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;新闻222&quot;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;新闻333&quot;</span>&#125;</span><br><span class=\"line\">  ];</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list2[<span class=\"number\">1</span>]);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; list.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(list[i][<span class=\"string\">&#x27;title&#x27;</span>]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 6、定义一个二维数组 打印里面的内容</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list3 = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;cate&quot;</span>: <span class=\"string\">&#x27;国内&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;news&quot;</span>: [</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;国内新闻1&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;国内新闻2&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;国内新闻3&quot;</span>&#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;cate&quot;</span>: <span class=\"string\">&#x27;国际&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;news&quot;</span>: [</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;国际新闻1&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;国际新闻2&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;国际新闻3&quot;</span>&#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ];</span><br><span class=\"line\">   <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    国内</span></span><br><span class=\"line\"><span class=\"comment\">    -------------</span></span><br><span class=\"line\"><span class=\"comment\">    国内新闻1</span></span><br><span class=\"line\"><span class=\"comment\">    国内新闻2</span></span><br><span class=\"line\"><span class=\"comment\">    国内新闻3</span></span><br><span class=\"line\"><span class=\"comment\">    国际</span></span><br><span class=\"line\"><span class=\"comment\">    -------------</span></span><br><span class=\"line\"><span class=\"comment\">    国际新闻1</span></span><br><span class=\"line\"><span class=\"comment\">    国际新闻2</span></span><br><span class=\"line\"><span class=\"comment\">    国际新闻3</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; list3.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(list3[i][<span class=\"string\">&quot;cate&quot;</span>]);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;-------------&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; list3[i][<span class=\"string\">&quot;news&quot;</span>].length; j++) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(list3[i][<span class=\"string\">&quot;news&quot;</span>][j][<span class=\"string\">&quot;title&quot;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"while-do…while循环语句\"><a href=\"#while-do…while循环语句\" class=\"headerlink\" title=\"while do…while循环语句\"></a>while do…while循环语句</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">语法格式:</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">  while(表达式/循环条件)&#123;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">  &#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">  do&#123;</span></span><br><span class=\"line\"><span class=\"comment\">    语句/循环体</span></span><br><span class=\"line\"><span class=\"comment\">  &#125;while(表达式/循环条件);</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">  注意： 1、最后的分号不要忘记</span></span><br><span class=\"line\"><span class=\"comment\">        2、循环条件中使用的变量需要经过初始化</span></span><br><span class=\"line\"><span class=\"comment\">        3、循环体中，应有结束循环的条件，否则会造成死循环。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  int i=1;</span></span><br><span class=\"line\"><span class=\"comment\">  while(i&lt;=10)&#123;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">      print(i);</span></span><br><span class=\"line\"><span class=\"comment\">  &#125;</span></span><br><span class=\"line\"><span class=\"comment\">  //死循环</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">int</span> i = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (i &lt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">    i++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 1、求1+2+3+4 ...+100的和</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> j = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (j &lt;= <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">    sum += j;</span><br><span class=\"line\">    j++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(sum);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">int</span> k = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">    sum += k;</span><br><span class=\"line\">    k++;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">while</span> (k &lt;= <span class=\"number\">100</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(sum2);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//  while 和 do while的区别   第一次循环条件不成立的情况下</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> l = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (l &lt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;执行代码&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> m = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;执行代码&#x27;</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">while</span> (m &lt; <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"break和continue关键词\"><a href=\"#break和continue关键词\" class=\"headerlink\" title=\"break和continue关键词\"></a>break和continue关键词</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 1、如果i等于4的话跳过</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">continue</span>; <span class=\"comment\">/*跳过当前循环体 然后循环还会继续执行*/</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2、如果 i等于4的话跳出循环</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>; <span class=\"comment\">/*跳出循环体*/</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 3、break语句只能向外跳出一层</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;外层---<span class=\"subst\">$i</span>&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">3</span>; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;里层<span class=\"subst\">$j</span>&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 4、while循环 break跳出循环</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> i = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (i &lt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">    i++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> sex = <span class=\"string\">&quot;男&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (sex) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&quot;男&quot;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&quot;女&quot;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"集合类型\"><a href=\"#集合类型\" class=\"headerlink\" title=\"集合类型\"></a>集合类型</h2><h3 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h3><blockquote>\n<p>List里面常用的属性和方法：</p>\n</blockquote>\n<ul>\n<li>常用属性：<ul>\n<li>length          长度</li>\n<li>reversed        翻转</li>\n<li>isEmpty         是否为空</li>\n<li>isNotEmpty      是否不为空</li>\n</ul>\n</li>\n<li>常用方法：  <ul>\n<li>add         增加</li>\n<li>addAll      拼接数组</li>\n<li>contains    查找  传入具体值  返回true/false</li>\n<li>indexOf     查找  传入具体值</li>\n<li>remove      删除  传入具体值</li>\n<li>removeAt    删除  传入索引值</li>\n<li>fillRange(start,end,value)   修改</li>\n<li>insert(index,value);            指定位置插入</li>\n<li>insertAll(index,list)           指定位置插入List</li>\n<li>toList()    其他类型转换成List  </li>\n<li>join()      List转换成字符串</li>\n<li>split()     字符串转化成List</li>\n<li>forEach</li>\n<li>map</li>\n<li>where</li>\n<li>any</li>\n<li>every</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 声明List的两种方式</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList = [<span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>];</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList[<span class=\"number\">1</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> list = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>();</span><br><span class=\"line\">  list.add(<span class=\"string\">&#x27;111&#x27;</span>);</span><br><span class=\"line\">  list.add(<span class=\"string\">&#x27;222&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// List里面的属性：</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList2 = [<span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>];</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList2); <span class=\"comment\">//List</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList2.length); <span class=\"comment\">//长度</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList2.isEmpty); <span class=\"comment\">// 判断为空</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList2.isNotEmpty); <span class=\"comment\">// 判断非空</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList2.reversed); <span class=\"comment\">// 对列表倒序排序 输出对象是元组 (&#x27;西瓜&#x27;, &#x27;苹果&#x27;, &#x27;香蕉&#x27;)</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> newMyList = myList2.reversed.toList();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(newMyList);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// List里面的方法：</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 添加</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList3 = [<span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>];</span><br><span class=\"line\">  myList3.add(<span class=\"string\">&#x27;桃子&#x27;</span>); <span class=\"comment\">//增加数据  增加一个</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList3);</span><br><span class=\"line\">  <span class=\"comment\">// 拼接</span></span><br><span class=\"line\">  myList3.addAll([<span class=\"string\">&#x27;李子&#x27;</span>, <span class=\"string\">&#x27;葡萄&#x27;</span>]); <span class=\"comment\">//拼接数组</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList3);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 查找</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList3.indexOf(<span class=\"string\">&#x27;苹果&#x27;</span>)); <span class=\"comment\">//indexOf查找数据 查找不到返回-1  查找到返回索引值</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList3.indexOf(<span class=\"string\">&#x27;苹x果&#x27;</span>)); <span class=\"comment\">//indexOf查找数据 查找不到返回-1  查找到返回索引值</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 移除某个值</span></span><br><span class=\"line\">  myList3.remove(<span class=\"string\">&#x27;西瓜&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList3);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 移除某个索引值</span></span><br><span class=\"line\">  myList3.removeAt(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList3);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 修改 插入</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList4 = [<span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">  myList4.fillRange(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"string\">&#x27;aaa&#x27;</span>); <span class=\"comment\">// 修改</span></span><br><span class=\"line\">  myList4.fillRange(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"string\">&#x27;aaa&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  myList4.insert(<span class=\"number\">1</span>, <span class=\"string\">&#x27;aaa&#x27;</span>); <span class=\"comment\">//插入  一个</span></span><br><span class=\"line\">  myList4.insertAll(<span class=\"number\">1</span>, [<span class=\"string\">&#x27;aaa&#x27;</span>, <span class=\"string\">&#x27;bbb&#x27;</span>]); <span class=\"comment\">//插入 多个</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 数组转换成字符串</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList5 = [<span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = myList5.join(<span class=\"string\">&#x27;-&#x27;</span>); <span class=\"comment\">//list转换成字符串</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(str <span class=\"keyword\">is</span> <span class=\"built_in\">String</span>); <span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 字符串按-切割成数组</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;香蕉-苹果-西瓜&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> myList6 = str2.split(<span class=\"string\">&#x27;-&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList6);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(myList6 <span class=\"keyword\">is</span> <span class=\"built_in\">List</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Set\"><a href=\"#Set\" class=\"headerlink\" title=\"Set\"></a>Set</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">//用它最主要的功能就是去除数组重复内容</span></span><br><span class=\"line\">  <span class=\"comment\">//Set是没有顺序且不能重复的集合，所以不能通过索引去获取值</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> s = <span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>();</span><br><span class=\"line\">  s.add(<span class=\"string\">&#x27;香蕉&#x27;</span>);</span><br><span class=\"line\">  s.add(<span class=\"string\">&#x27;苹果&#x27;</span>);</span><br><span class=\"line\">  s.add(<span class=\"string\">&#x27;苹果&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(s); <span class=\"comment\">// &#123;香蕉, 苹果&#125;</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(s.toList()); <span class=\"comment\">// [香蕉, 苹果]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 将数组去重</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList = [<span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>, <span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> s1 = <span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>();</span><br><span class=\"line\">  s1.addAll(myList);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(s1); <span class=\"comment\">// &#123;香蕉, 苹果, 西瓜&#125;</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(s1.toList()); <span class=\"comment\">// [香蕉, 苹果, 西瓜]</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h3><blockquote>\n<p>映射(Maps)是无序的键值对：</p>\n</blockquote>\n<ul>\n<li>常用属性：<ul>\n<li>keys            获取所有的key值</li>\n<li>values          获取所有的value值</li>\n<li>isEmpty         是否为空</li>\n<li>isNotEmpty      是否不为空</li>\n</ul>\n</li>\n<li>常用方法:<ul>\n<li>remove(key)     删除指定key的数据</li>\n<li>addAll({…})   合并映射  给映射内增加属性</li>\n<li>containsValue   查看映射内的值  返回true/false</li>\n<li>forEach</li>\n<li>map</li>\n<li>where</li>\n<li>any</li>\n<li>every</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">Map</span> person = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;张三&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">20</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> m = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>();</span><br><span class=\"line\">  m[<span class=\"string\">&quot;name&quot;</span>] = <span class=\"string\">&quot;李四&quot;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(m);</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//常用属性：</span></span><br><span class=\"line\">  <span class=\"built_in\">Map</span> person2 = &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;张三&quot;</span>, <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">20</span>, <span class=\"string\">&quot;sex&quot;</span>: <span class=\"string\">&quot;男&quot;</span>&#125;;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2.keys.toList());</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2.values.toList());</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2.isEmpty);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person2.isNotEmpty);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//常用方法：</span></span><br><span class=\"line\">  <span class=\"built_in\">Map</span> person3 = &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;张三&quot;</span>, <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">20</span>, <span class=\"string\">&quot;sex&quot;</span>: <span class=\"string\">&quot;男&quot;</span>&#125;;</span><br><span class=\"line\">  person3.addAll(&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;work&quot;</span>: [<span class=\"string\">&#x27;敲代码&#x27;</span>, <span class=\"string\">&#x27;送外卖&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&quot;height&quot;</span>: <span class=\"number\">160</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person3);</span><br><span class=\"line\">  person3.remove(<span class=\"string\">&quot;sex&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person3);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(person3.containsValue(<span class=\"string\">&#x27;张三&#x27;</span>)); <span class=\"comment\">// 查看映射内的值</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"通用方法\"><a href=\"#通用方法\" class=\"headerlink\" title=\"通用方法\"></a>通用方法</h3><blockquote>\n<p>forEach map where any every</p>\n</blockquote>\n<h4 id=\"List中使用\"><a href=\"#List中使用\" class=\"headerlink\" title=\"List中使用\"></a>List中使用</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 循环输出myList</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList = [<span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; myList.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(myList[i]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> myList) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  myList.forEach((value) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$value</span>&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 修改myList2每一项</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList2 = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\">  <span class=\"comment\">// List newList = [];</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> newList = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>();</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; myList2.length; i++) &#123;</span><br><span class=\"line\">    newList.add(myList2[i] * <span class=\"number\">2</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(newList);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> newList2 = myList.map((value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value * <span class=\"number\">2</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(newList2.toList());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 查找符合条件的值</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList3 = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newList3 = myList3.where((value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value &gt; <span class=\"number\">5</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(newList3.toList());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 判断是否存在符合条件的值 true/false</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList4 = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> f = myList4.any((value) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//只要集合里面有满足条件的就返回true</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> value &gt; <span class=\"number\">5</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(f);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 判断是否存都是符合条件的值 true/false</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> myList5 = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> f2 = myList5.every((value) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//每一个都满足条件返回true  否则返回false</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> value &gt; <span class=\"number\">5</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(f2);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Set中使用\"><a href=\"#Set中使用\" class=\"headerlink\" title=\"Set中使用\"></a>Set中使用</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 循环输出Set的值</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> s = <span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>();</span><br><span class=\"line\">  s.addAll([<span class=\"number\">1</span>, <span class=\"number\">222</span>, <span class=\"number\">333</span>]);</span><br><span class=\"line\">  s.forEach((value) =&gt; <span class=\"built_in\">print</span>(value));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Map中使用\"><a href=\"#Map中使用\" class=\"headerlink\" title=\"Map中使用\"></a>Map中使用</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">Map</span> person = &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;张三&quot;</span>, <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">20</span>&#125;;</span><br><span class=\"line\">  person.forEach((key, value) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$key</span>---<span class=\"subst\">$value</span>&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><ul>\n<li>内置方法/函数：<ul>\n<li>print();</li>\n</ul>\n</li>\n<li>自定义方法：<ul>\n<li>自定义方法的基本格式：</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回类型 方法名称（参数1，参数2,...）&#123;</span><br><span class=\"line\">  方法体</span><br><span class=\"line\">  return 返回值;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"函数的定义、变量及作用域\"><a href=\"#函数的定义、变量及作用域\" class=\"headerlink\" title=\"函数的定义、变量及作用域\"></a>函数的定义、变量及作用域</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我是一个自定义方法&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">int</span> getNum() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> myNum = <span class=\"number\">123</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> myNum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">String</span> printUserInfo() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&#x27;this is str&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">List</span> getList() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [<span class=\"string\">&#x27;111&#x27;</span>, <span class=\"string\">&#x27;2222&#x27;</span>, <span class=\"string\">&#x27;333&#x27;</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;调用系统内置的方法&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> n = getNum();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(n);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(getList());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// print(getList());</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//演示方法的作用域</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> xxx() &#123;</span><br><span class=\"line\">    aaa() &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(getList());</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;aaa&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    aaa();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// aaa();  // 错误写法</span></span><br><span class=\"line\">  xxx(); <span class=\"comment\">// 调用方法</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"函数的传参、默认参数及可选参数\"><a href=\"#函数的传参、默认参数及可选参数\" class=\"headerlink\" title=\"函数的传参、默认参数及可选参数\"></a>函数的传参、默认参数及可选参数</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1、定义一个方法 求1到这个数的所有数的和 60 1+2+3+。。。+60</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> sumNum(<span class=\"built_in\">int</span> n) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">      sum += i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> n1 = sumNum(<span class=\"number\">5</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(n1);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> n2 = sumNum(<span class=\"number\">100</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(n2);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2、定义一个方法然后打印用户信息</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> printUserInfo(<span class=\"built_in\">String</span> username, <span class=\"built_in\">int</span> age) &#123; <span class=\"comment\">// 形参</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名:<span class=\"subst\">$username</span>---年龄:<span class=\"subst\">$age</span>&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>)); <span class=\"comment\">// 实参</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 3、定义一个带可选参数的方法</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> printUserInfo2(<span class=\"built_in\">String</span> username, [<span class=\"built_in\">int</span> age]) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//行参</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (age != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名:<span class=\"subst\">$username</span>---年龄:<span class=\"subst\">$age</span>&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名:<span class=\"subst\">$username</span>---年龄保密&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo2(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">21</span>)); <span class=\"comment\">//实参</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo2(<span class=\"string\">&#x27;张三&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 4、定义一个带默认参数的方法</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> printUserInfo3(<span class=\"built_in\">String</span> username, [<span class=\"built_in\">String</span> sex = <span class=\"string\">&#x27;男&#x27;</span>, <span class=\"built_in\">int</span> age]) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//行参</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (age != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名:<span class=\"subst\">$username</span>---性别:<span class=\"subst\">$sex</span>--年龄:<span class=\"subst\">$age</span>&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名:<span class=\"subst\">$username</span>---性别:<span class=\"subst\">$sex</span>--年龄保密&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo3(<span class=\"string\">&#x27;张三&#x27;</span>));</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo3(<span class=\"string\">&#x27;小李&#x27;</span>, <span class=\"string\">&#x27;女&#x27;</span>));</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo3(<span class=\"string\">&#x27;小李&#x27;</span>, <span class=\"string\">&#x27;女&#x27;</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 5、定义一个命名参数的方法</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> printUserInfo4(<span class=\"built_in\">String</span> username, &#123;<span class=\"built_in\">int</span> age, <span class=\"built_in\">String</span> sex = <span class=\"string\">&#x27;男&#x27;</span>&#125;) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//行参</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (age != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名:<span class=\"subst\">$username</span>---性别:<span class=\"subst\">$sex</span>--年龄:<span class=\"subst\">$age</span>&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名:<span class=\"subst\">$username</span>---性别:<span class=\"subst\">$sex</span>--年龄保密&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 命名参数同时也是可选参数</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo4(<span class=\"string\">&#x27;小李&#x27;</span>, sex: <span class=\"string\">&#x27;未知&#x27;</span>));</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(printUserInfo4(<span class=\"string\">&#x27;张三&#x27;</span>, age: <span class=\"number\">20</span>, sex: <span class=\"string\">&#x27;未知&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 6、实现一个 把方法当做参数的方法</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> fn = () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我是一个匿名方法&#x27;</span>);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  fn();</span><br><span class=\"line\">  <span class=\"comment\">// 方法1</span></span><br><span class=\"line\">  fn1() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;fn1&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 方法2</span></span><br><span class=\"line\">  fn2(fn) &#123;</span><br><span class=\"line\">    fn();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 调用fn2这个方法 把fn1这个方法当做参数传入</span></span><br><span class=\"line\">  fn2(fn1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"箭头函数\"><a href=\"#箭头函数\" class=\"headerlink\" title=\"箭头函数\"></a>箭头函数</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1. 需求：使用forEach打印下面List里面的数据</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list = [<span class=\"string\">&#x27;苹果&#x27;</span>, <span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;西瓜&#x27;</span>];</span><br><span class=\"line\">  list.forEach((value) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(value);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  list.forEach((value) =&gt; <span class=\"built_in\">print</span>(value));</span><br><span class=\"line\">  list.forEach((value) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(value)</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2. 需求：修改下面List里面的数据，让数组中大于2的值乘以2</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list2 = [<span class=\"number\">4</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newList = list2.map((value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> value * <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(newList.toList());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> newList2 = list.map((value) =&gt; value &gt; <span class=\"number\">2</span> ? value * <span class=\"number\">2</span> : value);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(newList2.toList());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  需求： 1、定义一个方法isEvenNumber来判断一个数是否是偶数  </span></span><br><span class=\"line\"><span class=\"comment\">        2、定义一个方法打印1-n以内的所有偶数</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 定义一个方法isEvenNumber来判断一个数是否是偶数</span></span><br><span class=\"line\">  <span class=\"built_in\">bool</span> isEvenNumber(<span class=\"built_in\">int</span> n) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 定义一个方法打印1-n以内的所有偶数</span></span><br><span class=\"line\">  printNum(<span class=\"built_in\">int</span> n) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (isEvenNumber(i)) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  printNum(<span class=\"number\">10</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"匿名函数\"><a href=\"#匿名函数\" class=\"headerlink\" title=\"匿名函数\"></a>匿名函数</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">int</span> getNum(<span class=\"built_in\">int</span> n) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(getNum(<span class=\"number\">12</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 匿名函数</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> printNum = () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"number\">123</span>);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  printNum();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> printNum2 = (<span class=\"built_in\">int</span> n) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(n + <span class=\"number\">2</span>);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  printNum2(<span class=\"number\">12</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"自执行函数\"><a href=\"#自执行函数\" class=\"headerlink\" title=\"自执行函数\"></a>自执行函数</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  (() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我是自执行方法&#x27;</span>);</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 传参</span></span><br><span class=\"line\">  ((<span class=\"built_in\">int</span> n) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(n);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我是自执行方法&#x27;</span>);</span><br><span class=\"line\">  &#125;)(<span class=\"number\">12</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"方法的递归\"><a href=\"#方法的递归\" class=\"headerlink\" title=\"方法的递归\"></a>方法的递归</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum = <span class=\"number\">1</span>;</span><br><span class=\"line\">  fn(n) &#123;</span><br><span class=\"line\">    sum *= n;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fn(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  fn(<span class=\"number\">5</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(sum);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 通过方法的递归 求1-100的和</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  fn1(<span class=\"built_in\">int</span> n) &#123;</span><br><span class=\"line\">    sum1 += n;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fn1(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  fn1(<span class=\"number\">100</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(sum1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h3><p>变量的特点</p>\n<ol>\n<li>全局变量特点: 全局变量常驻内存、全局变量污染全局</li>\n<li>局部变量的特点: 不常驻内存会被垃圾机制回收、不会污染全局  </li>\n</ol>\n<p>想实现的功能：</p>\n<ol>\n<li>常驻内存</li>\n<li>不污染全局</li>\n</ol>\n<blockquote>\n<p>产生了闭包,闭包可以解决这个问题…..<br>闭包: 函数嵌套函数, 内部函数会调用外部函数的变量或参数, 变量或参数不会被系统回收(不会释放内存)<br>闭包的写法: 函数嵌套函数，并<code>return</code>里面的函数，这样就形成了闭包。</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*全局变量*/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a=<span class=\"number\">123</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a);  <span class=\"comment\">// 123</span></span><br><span class=\"line\">  fn() &#123;</span><br><span class=\"line\">    a++;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  fn();  <span class=\"comment\">// 124</span></span><br><span class=\"line\">  fn();  <span class=\"comment\">// 125</span></span><br><span class=\"line\">  fn();  <span class=\"comment\">// 126</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 局部变量</span></span><br><span class=\"line\">  printInfo() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> myNum = <span class=\"number\">123</span>;</span><br><span class=\"line\">    myNum++;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(myNum);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  printInfo();  <span class=\"comment\">// 124</span></span><br><span class=\"line\">  printInfo();  <span class=\"comment\">// 124</span></span><br><span class=\"line\">  printInfo();  <span class=\"comment\">// 124</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 闭包</span></span><br><span class=\"line\">  fn2() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">123</span>; <span class=\"comment\">/*不会污染全局 常驻内存*/</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> () &#123;</span><br><span class=\"line\">      a++;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(a);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = fn2();</span><br><span class=\"line\">  b();  <span class=\"comment\">// 124</span></span><br><span class=\"line\">  b();  <span class=\"comment\">// 125</span></span><br><span class=\"line\">  b();  <span class=\"comment\">// 126</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"对象-类\"><a href=\"#对象-类\" class=\"headerlink\" title=\"对象-类\"></a>对象-类</h2><h3 id=\"面向对象概念\"><a href=\"#面向对象概念\" class=\"headerlink\" title=\"面向对象概念\"></a>面向对象概念</h3><p>面向对象编程(OOP)的三个基本特征是：封装、继承、多态</p>\n<ul>\n<li>封装：封装是对象和类概念的主要特性。封装，把客观事物封装成抽象的类，并且把自己的部分属性和方法提供给其他对象调用, 而一部分属性和方法则隐藏。</li>\n<li>继承：面向对象编程 (OOP) 语言的一个主要功能就是“继承”。继承是指这样一种能力：它可以使用现有类的功能，并在无需重新编写原来的类的情况下对这些功能进行扩展。</li>\n<li>多态：允许将子类类型的指针赋值给父类类型的指针, 同一个函数调用会有不同的执行效果 。</li>\n</ul>\n<p>Dart所有的东西都是对象，所有的对象都继承自Object类。</p>\n<p>Dart是一门使用类和单继承的面向对象语言，所有的对象都是类的实例，并且所有的类都是Object的子类</p>\n<p>一个类通常由属性和方法组成。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// dart内置的类</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// List</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list=<span class=\"keyword\">new</span> <span class=\"built_in\">List</span>();</span><br><span class=\"line\">  list.isEmpty;</span><br><span class=\"line\">  list.add(<span class=\"string\">&#x27;香蕉&#x27;</span>);</span><br><span class=\"line\">  list.add(<span class=\"string\">&#x27;香蕉1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Map</span></span><br><span class=\"line\">  <span class=\"built_in\">Map</span> m=<span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>();</span><br><span class=\"line\">  m[<span class=\"string\">&quot;username&quot;</span>]=<span class=\"string\">&quot;张三&quot;</span>;</span><br><span class=\"line\">  m.addAll(&#123;<span class=\"string\">&quot;age&quot;</span>:<span class=\"number\">20</span>&#125;);</span><br><span class=\"line\">  m.isEmpty;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Object</span></span><br><span class=\"line\">  <span class=\"built_in\">Object</span> a=<span class=\"number\">123</span>;</span><br><span class=\"line\">  <span class=\"built_in\">Object</span> v=<span class=\"keyword\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(v);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"定义类\"><a href=\"#定义类\" class=\"headerlink\" title=\"定义类\"></a>定义类</h3><blockquote>\n<p>Dart是一门使用类和单继承的面向对象语言，所有的对象都是类的实例，并且所有的类都是Object的子类</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name = <span class=\"string\">&quot;张三&quot;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age = <span class=\"number\">23</span>;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> getInfo() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// print(&quot;$name----$age&quot;);</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> setInfo(<span class=\"built_in\">int</span> age) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 实例化</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(p1.name);</span><br><span class=\"line\">  p1.getInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 实例化类的类型</span></span><br><span class=\"line\">  Person p2 = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(p2.name);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 调用类里的方法</span></span><br><span class=\"line\">  p2.setInfo(<span class=\"number\">28</span>);</span><br><span class=\"line\">  p2.getInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h3><h3 id=\"默认构造函数\"><a href=\"#默认构造函数\" class=\"headerlink\" title=\"默认构造函数\"></a>默认构造函数</h3><blockquote>\n<p>构造函数的写法</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name = <span class=\"string\">&#x27;张三&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age = <span class=\"number\">20</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 默认构造函数</span></span><br><span class=\"line\">  Person() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;这是构造函数里面的内容 这个方法在实例化的时候触发&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用构造函数初始化类的属性</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age;</span><br><span class=\"line\">  <span class=\"comment\">//默认构造函数</span></span><br><span class=\"line\">  Person(<span class=\"built_in\">String</span> name, <span class=\"built_in\">int</span> age) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  p1.printInfo();</span><br><span class=\"line\">  </span><br><span class=\"line\">  Person p2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">25</span>);</span><br><span class=\"line\">  p2.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>默认构造函数的简写</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age;</span><br><span class=\"line\">  <span class=\"comment\">//默认构造函数的简写</span></span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  p1.printInfo();</span><br><span class=\"line\">  </span><br><span class=\"line\">  Person p2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">25</span>);</span><br><span class=\"line\">  p2.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"命名构造函数\"><a href=\"#命名构造函数\" class=\"headerlink\" title=\"命名构造函数\"></a>命名构造函数</h3><p>dart里面命名构造函数可以写多个</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age;</span><br><span class=\"line\">  <span class=\"comment\">//默认构造函数的简写</span></span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\"></span><br><span class=\"line\">  Person.now() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我是命名构造函数&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  Person.setInfo(<span class=\"built_in\">String</span> name, <span class=\"built_in\">int</span> age) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> d = <span class=\"keyword\">new</span> <span class=\"built_in\">DateTime</span>.now(); <span class=\"comment\">// 实例化DateTime调用它的命名构造函数</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">  Person p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>); <span class=\"comment\">// 默认实例化类的时候调用的是 默认构造函数</span></span><br><span class=\"line\">  p1.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  Person p2 = <span class=\"keyword\">new</span> Person.now(); <span class=\"comment\">// 调用命名构造函数</span></span><br><span class=\"line\"></span><br><span class=\"line\">  Person p3 = <span class=\"keyword\">new</span> Person.setInfo(<span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">  p3.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"将类抽离成一个模块\"><a href=\"#将类抽离成一个模块\" class=\"headerlink\" title=\"将类抽离成一个模块\"></a>将类抽离成一个模块</h3><p><code>index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/Person.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p1=<span class=\"keyword\">new</span> Person.setInfo(<span class=\"string\">&#x27;李四1&#x27;</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\">  p1.printInfo(); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/Person.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age; </span><br><span class=\"line\">  <span class=\"comment\">//默认构造函数的简写</span></span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name,<span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  </span><br><span class=\"line\">  Person.now()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我是命名构造函数&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  Person.setInfo(<span class=\"built_in\">String</span> name,<span class=\"built_in\">int</span> age)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age=age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo()&#123;   </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类的私有属性和方法\"><a href=\"#类的私有属性和方法\" class=\"headerlink\" title=\"类的私有属性和方法\"></a>类的私有属性和方法</h3><p>Dart和其他面向对象语言不一样，Data中没有<code>public</code> <code>private</code> <code>protected</code>这些访问修饰符合</p>\n<p>但是我们可以使用<code>_</code>把一个属性或者方法定义成私有(类必须在单独的文件中，才能将属性或方法私有)。</p>\n<p><code>index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/Animal.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Animal a = <span class=\"keyword\">new</span> Animal(<span class=\"string\">&#x27;小狗&#x27;</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a.age); <span class=\"comment\">// 间接的获取私有属性</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a.getName()); <span class=\"comment\">// 间接的获取私有属性</span></span><br><span class=\"line\">  a.execRun(); <span class=\"comment\">// 间接的调用私有方法</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/Animal.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> _name; <span class=\"comment\">// 私有属性</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> age;</span><br><span class=\"line\">  <span class=\"comment\">// 默认构造函数的简写</span></span><br><span class=\"line\">  Animal(<span class=\"keyword\">this</span>._name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>._name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">String</span> getName() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> _run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;这是一个私有方法&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  execRun() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>._run(); <span class=\"comment\">// 类里面方法的相互调用</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类的getter和setter\"><a href=\"#类的getter和setter\" class=\"headerlink\" title=\"类的getter和setter\"></a>类的getter和setter</h3><p>获取矩形的面积</p>\n<ul>\n<li>使用方法获取</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rect</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> height;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> width;</span><br><span class=\"line\"></span><br><span class=\"line\">  Rect(<span class=\"keyword\">this</span>.height, <span class=\"keyword\">this</span>.width);</span><br><span class=\"line\">  area() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.height * <span class=\"keyword\">this</span>.width;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  Rect r = <span class=\"keyword\">new</span> Rect(<span class=\"number\">10</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;面积:<span class=\"subst\">$&#123;r.area()&#125;</span>&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用get获取(计算属性)</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rect</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> height;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> width;</span><br><span class=\"line\">  Rect(<span class=\"keyword\">this</span>.height, <span class=\"keyword\">this</span>.width);</span><br><span class=\"line\">  <span class=\"keyword\">get</span> area &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.height * <span class=\"keyword\">this</span>.width;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  Rect r = <span class=\"keyword\">new</span> Rect(<span class=\"number\">10</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;面积:<span class=\"subst\">$&#123;r.area&#125;</span>&quot;</span>); <span class=\"comment\">// 注意调用直接通过访问属性的方式访问area</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用set存储</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rect</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> height;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> width;</span><br><span class=\"line\"></span><br><span class=\"line\">  Rect(<span class=\"keyword\">this</span>.height, <span class=\"keyword\">this</span>.width);</span><br><span class=\"line\">  <span class=\"keyword\">get</span> area &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.height * <span class=\"keyword\">this</span>.width;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">set</span> areaHeight(value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.height = value;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  Rect r = <span class=\"keyword\">new</span> Rect(<span class=\"number\">10</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">  r.areaHeight = <span class=\"number\">6</span>;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;面积:<span class=\"subst\">$&#123;r.area&#125;</span>&quot;</span>); <span class=\"comment\">// 注意调用直接通过访问属性的方式访问area</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类的初始化列表\"><a href=\"#类的初始化列表\" class=\"headerlink\" title=\"类的初始化列表\"></a>类的初始化列表</h3><p>Dart中我们也可以在构造函数体运行之前初始化实例变量</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rect</span></span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> height;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> width;</span><br><span class=\"line\">  Rect():height=<span class=\"number\">2</span>,width=<span class=\"number\">10</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.height&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.width&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  getArea()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.height*<span class=\"keyword\">this</span>.width;</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Rect r=<span class=\"keyword\">new</span> Rect();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(r.getArea()); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"静态成员\"><a href=\"#静态成员\" class=\"headerlink\" title=\"静态成员\"></a>静态成员</h3><ol>\n<li>使用static 关键字来实现类级别的变量和函数</li>\n<li>静态方法不能访问非静态成员，非静态方法可以访问静态成员</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">String</span> name = <span class=\"string\">&#x27;张三&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"keyword\">show</span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(Person.name);</span><br><span class=\"line\">  Person.<span class=\"keyword\">show</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"非静态方法访问静态成员和非静态成员\"><a href=\"#非静态方法访问静态成员和非静态成员\" class=\"headerlink\" title=\"非静态方法访问静态成员和非静态成员\"></a>非静态方法访问静态成员和非静态成员</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">String</span> name = <span class=\"string\">&#x27;张三&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age = <span class=\"number\">20</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"keyword\">show</span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"comment\">/*非静态方法可以访问静态成员以及非静态成员*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name); <span class=\"comment\">// 访问静态属性</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"keyword\">this</span>.age); <span class=\"comment\">// 访问非静态属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">show</span>(); <span class=\"comment\">// 调用静态方法</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">  p.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"静态方法只能访问静态成员\"><a href=\"#静态方法只能访问静态成员\" class=\"headerlink\" title=\"静态方法只能访问静态成员\"></a>静态方法只能访问静态成员</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">String</span> name = <span class=\"string\">&#x27;张三&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age = <span class=\"number\">20</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"keyword\">show</span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> printUserInfo() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 静态方法</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name); <span class=\"comment\">// 静态属性</span></span><br><span class=\"line\">    <span class=\"keyword\">show</span>(); <span class=\"comment\">// 静态方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// print(age); // 静态方法没法访问非静态的属性</span></span><br><span class=\"line\">    <span class=\"comment\">// print(this.age); // 静态方法没法访问非静态的属性</span></span><br><span class=\"line\">    <span class=\"comment\">// this.printInfo(); // 静态方法没法访问非静态的方法</span></span><br><span class=\"line\">    <span class=\"comment\">// printInfo(); // 静态方法没法访问非静态的方法</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person.printUserInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"操作符\"><a href=\"#操作符\" class=\"headerlink\" title=\"操作符\"></a>操作符</h3><ul>\n<li>?     条件运算符 （了解）</li>\n<li>as    类型转换</li>\n<li>is    类型判断</li>\n<li>..    级联操作 （连缀）  (记住)</li>\n</ul>\n<h4 id=\"条件运算符\"><a href=\"#条件运算符\" class=\"headerlink\" title=\"条件运算符\"></a>条件运算符</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p;</span><br><span class=\"line\">  p?.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  Person p2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  p2?.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"操作符-类型判断\"><a href=\"#操作符-类型判断\" class=\"headerlink\" title=\"操作符-类型判断\"></a>操作符-类型判断</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (p <span class=\"keyword\">is</span> Person) &#123;</span><br><span class=\"line\">    p.name = <span class=\"string\">&quot;李四&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  p.printInfo(); <span class=\"comment\">// 李四---20</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(p <span class=\"keyword\">is</span> <span class=\"built_in\">Object</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> p1;</span><br><span class=\"line\">  p1 = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三1&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  p1.printInfo(); <span class=\"comment\">// 老版本报错 不知道p1是字符串还是Person类</span></span><br><span class=\"line\">  (p1 <span class=\"keyword\">as</span> Person).printInfo(); <span class=\"comment\">// 强制转换为Person类</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"级联操作\"><a href=\"#级联操作\" class=\"headerlink\" title=\"级联操作\"></a>级联操作</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  p1.printInfo(); <span class=\"comment\">// 张三---20</span></span><br><span class=\"line\"></span><br><span class=\"line\">  p1.name = <span class=\"string\">&#x27;李四&#x27;</span>;</span><br><span class=\"line\">  p1.age = <span class=\"number\">40</span>;</span><br><span class=\"line\">  p1.printInfo(); <span class=\"comment\">// 李四---40</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 使用连缀简化为</span></span><br><span class=\"line\">  p1..name = <span class=\"string\">&#x27;王五&#x27;</span></span><br><span class=\"line\">    ..age = <span class=\"number\">60</span></span><br><span class=\"line\">    ..printInfo(); <span class=\"comment\">// 王五---60</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类的继承\"><a href=\"#类的继承\" class=\"headerlink\" title=\"类的继承\"></a>类的继承</h3><h4 id=\"简单继承\"><a href=\"#简单继承\" class=\"headerlink\" title=\"简单继承\"></a>简单继承</h4><ol>\n<li>子类使用extends关键词来继承父类</li>\n<li>子类会继承父类里面可见的属性和方法 但是不会继承构造函数</li>\n<li>子类能复写父类的方法 getter和setter</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name = <span class=\"string\">&#x27;张三&#x27;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age = <span class=\"number\">20</span>;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Web</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  Web w = <span class=\"keyword\">new</span> Web();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(w.name);</span><br><span class=\"line\">  w.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"super关键词的使用\"><a href=\"#super关键词的使用\" class=\"headerlink\" title=\"super关键词的使用\"></a>super关键词的使用</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Web</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  Web(<span class=\"built_in\">String</span> name, <span class=\"built_in\">num</span> age) : <span class=\"keyword\">super</span>(name, age) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  p.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  Person p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  p1.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  Web w = <span class=\"keyword\">new</span> Web(<span class=\"string\">&#x27;王五&#x27;</span>, <span class=\"number\">12</span>);</span><br><span class=\"line\">  w.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>继承类的属性扩展</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Web</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> sex;</span><br><span class=\"line\">  Web(<span class=\"built_in\">String</span> name, <span class=\"built_in\">num</span> age, <span class=\"built_in\">String</span> sex) : <span class=\"keyword\">super</span>(name, age) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.sex = sex;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>--<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.sex&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Person p = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  p.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  Person p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  p1.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  Web w = <span class=\"keyword\">new</span> Web(<span class=\"string\">&#x27;王五&#x27;</span>, <span class=\"number\">12</span>);</span><br><span class=\"line\">  w.printInfo();</span><br><span class=\"line\">  w.run();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>super给命名构造函数传参</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person.setInfo(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Web</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> sex;</span><br><span class=\"line\">  Web(<span class=\"built_in\">String</span> name, <span class=\"built_in\">num</span> age, <span class=\"keyword\">this</span>.sex) : <span class=\"keyword\">super</span>.setInfo(name, age) &#123;&#125;</span><br><span class=\"line\">  run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>--<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.sex&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  Web w = <span class=\"keyword\">new</span> Web(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">12</span>, <span class=\"string\">&quot;男&quot;</span>);</span><br><span class=\"line\">  w.printInfo();</span><br><span class=\"line\">  w.run();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"复写父类的方法\"><a href=\"#复写父类的方法\" class=\"headerlink\" title=\"复写父类的方法\"></a>复写父类的方法</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  work() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>在工作...&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Web</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  Web(<span class=\"built_in\">String</span> name, <span class=\"built_in\">num</span> age) : <span class=\"keyword\">super</span>(name, age);</span><br><span class=\"line\"></span><br><span class=\"line\">  run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;run&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 覆写父类的方法</span></span><br><span class=\"line\">  <span class=\"meta\">@override</span> <span class=\"comment\">//可以写也可以不写 建议在覆写父类方法的时候加上 @override</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;姓名：<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---年龄：<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  work() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>的工作是写代码&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Web w = <span class=\"keyword\">new</span> Web(<span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  w.printInfo();</span><br><span class=\"line\">  w.work();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"子类调用父类的方法\"><a href=\"#子类调用父类的方法\" class=\"headerlink\" title=\"子类调用父类的方法\"></a>子类调用父类的方法</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  work() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>在工作...&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Web</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  Web(<span class=\"built_in\">String</span> name, <span class=\"built_in\">num</span> age) : <span class=\"keyword\">super</span>(name, age);</span><br><span class=\"line\"></span><br><span class=\"line\">  run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;run&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.work(); <span class=\"comment\">//自类调用父类的方法</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//覆写父类的方法</span></span><br><span class=\"line\">  <span class=\"meta\">@override</span> <span class=\"comment\">//可以写也可以不写  建议在覆写父类方法的时候加上 @override</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;姓名：<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>---年龄：<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  Web w = <span class=\"keyword\">new</span> Web(<span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  w.run();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"抽象类\"><a href=\"#抽象类\" class=\"headerlink\" title=\"抽象类\"></a>抽象类</h2><h3 id=\"创建抽象类\"><a href=\"#创建抽象类\" class=\"headerlink\" title=\"创建抽象类\"></a>创建抽象类</h3><p>Dart抽象类主要用于定义标准，子类可以继承抽象类，也可以实现抽象类接口。</p>\n<ol>\n<li>抽象类通过abstract 关键字来定义</li>\n<li>Dart中的抽象方法不能用abstract声明，Dart中没有方法体的方法我们称为抽象方法。</li>\n<li>如果子类继承抽象类必须得实现里面的抽象方法</li>\n<li>如果把抽象类当做接口实现的话必须得实现抽象类里面定义的所有属性和方法。</li>\n<li>抽象类不能被实例化，只有继承它的子类可以</li>\n</ol>\n<p>extends抽象类 和 implements的区别：</p>\n<ol>\n<li>如果要复用抽象类里面的方法，并且要用抽象方法约束自类的话我们就用extends继承抽象类</li>\n<li>如果只是把抽象类当做标准的话我们就用implements实现抽象类</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 案例：定义一个Animal 类要求它的子类必须包含eat方法</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">  eat(); <span class=\"comment\">//抽象方法</span></span><br><span class=\"line\">  run(); <span class=\"comment\">//抽象方法</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我是一个抽象类里面的普通方法&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dog</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  eat() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;小狗在吃骨头&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  run() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement run</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;小狗在跑&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  eat() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement eat</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;小猫在吃老鼠&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  run() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement run</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;小猫在走&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  Dog d = <span class=\"keyword\">new</span> Dog();</span><br><span class=\"line\">  d.eat();</span><br><span class=\"line\">  d.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  Cat c = <span class=\"keyword\">new</span> Cat();</span><br><span class=\"line\">  c.eat();</span><br><span class=\"line\">  c.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Animal a = new Animal(); //抽象类没法直接被实例化</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"多态\"><a href=\"#多态\" class=\"headerlink\" title=\"多态\"></a>多态</h3><p>多态：允许将子类类型的指针赋值给父类类型的指针, 同一个函数调用会有不同的执行效果。</p>\n<p>子类的实例赋值给父类的引用。</p>\n<p>多态就是父类定义一个方法不去实现，让继承他的子类去实现，每个子类有不同的表现。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span></span>&#123;</span><br><span class=\"line\">  eat();   <span class=\"comment\">//抽象方法 </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dog</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span></span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  eat() &#123;</span><br><span class=\"line\">     <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;小狗在吃骨头&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  run()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;run&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span></span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  eat() &#123;   </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;小猫在吃老鼠&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  run()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;run&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 类型定义为父类 可以访问run方法</span></span><br><span class=\"line\">  Dog d = <span class=\"keyword\">new</span> Dog();</span><br><span class=\"line\">  d.eat();</span><br><span class=\"line\">  d.run();</span><br><span class=\"line\"></span><br><span class=\"line\">  Cat c = <span class=\"keyword\">new</span> Cat();</span><br><span class=\"line\">  c.eat();</span><br><span class=\"line\">  c.run();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 类型定义为父类 不可以访问run方法</span></span><br><span class=\"line\">  Animal d1 = <span class=\"keyword\">new</span> Dog();</span><br><span class=\"line\">  d1.eat();</span><br><span class=\"line\"></span><br><span class=\"line\">  Animal c1 = <span class=\"keyword\">new</span> Cat();</span><br><span class=\"line\">  c1.eat();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"接口\"><a href=\"#接口\" class=\"headerlink\" title=\"接口\"></a>接口</h3><p><code>dart</code>和<code>Java</code>一样，<code>dart</code>也有接口，但是和<code>Java</code>还是有区别的。<br>首先，<code>dart</code>的接口没有<code>interface</code>关键字定义接口，而是普通类或抽象类都可以作为接口被实现。<br>同样使用<code>implements</code>关键字进行实现。</p>\n<p>但是<code>dart</code>的接口有点奇怪，如果实现的类是普通类，会将普通类和抽象中的属性的方法全部需要覆写一遍。<br>而因为抽象类可以定义抽象方法，普通类不可以，所以一般如果要实现像Java接口那样的方式，一般会使用抽象类。<br>建议使用抽象类定义接口。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  定义一个DB库 支持 mysql  mssql  mongodb</span></span><br><span class=\"line\"><span class=\"comment\">  mysql  mssql  mongodb三个类里面都有同样的方法</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Db</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//当做接口   接口：就是约定 、规范</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> uri; <span class=\"comment\">//数据库的链接地址</span></span><br><span class=\"line\">  add(<span class=\"built_in\">String</span> data);</span><br><span class=\"line\">  save();</span><br><span class=\"line\">  delete();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mysql</span> <span class=\"keyword\">implements</span> <span class=\"title\">Db</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> uri;</span><br><span class=\"line\"></span><br><span class=\"line\">  Mysql(<span class=\"keyword\">this</span>.uri);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  add(data) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement add</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;这是mysql的add方法&#x27;</span> + data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  delete() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement delete</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  save() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement save</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  remove() &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MsSql</span> <span class=\"keyword\">implements</span> <span class=\"title\">Db</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> uri;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  add(<span class=\"built_in\">String</span> data) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;这是mssql的add方法&#x27;</span> + data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  delete() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement delete</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  save() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement save</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  Mysql mysql = <span class=\"keyword\">new</span> Mysql(<span class=\"string\">&#x27;xxxxxx&#x27;</span>);</span><br><span class=\"line\">  mysql.add(<span class=\"string\">&#x27;1243214&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"接口文件分离\"><a href=\"#接口文件分离\" class=\"headerlink\" title=\"接口文件分离\"></a>接口文件分离</h3><p><code>lib/Db.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Db</span></span>&#123;   <span class=\"comment\">//当做接口   接口：就是约定 、规范</span></span><br><span class=\"line\">    <span class=\"built_in\">String</span> uri;      <span class=\"comment\">//数据库的链接地址</span></span><br><span class=\"line\">    add(<span class=\"built_in\">String</span> data);</span><br><span class=\"line\">    save();</span><br><span class=\"line\">    delete();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/MySql.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;Db.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mysql</span> <span class=\"keyword\">implements</span> <span class=\"title\">Db</span></span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> uri;</span><br><span class=\"line\"></span><br><span class=\"line\">  Mysql(<span class=\"keyword\">this</span>.uri);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  add(data) &#123;   </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;这是mysql的add方法&#x27;</span>+data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  delete() &#123;   </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  save() &#123;   </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/MsSql.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;Db.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MsSql</span> <span class=\"keyword\">implements</span> <span class=\"title\">Db</span></span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> uri;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  add(<span class=\"built_in\">String</span> data) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;这是mssql的add方法&#x27;</span>+data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  delete() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  save() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/MsSql.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/MySql.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  Mysql mysql = <span class=\"keyword\">new</span> Mysql(<span class=\"string\">&#x27;xxxxxx&#x27;</span>);</span><br><span class=\"line\">  mysql.add(<span class=\"string\">&#x27;1243214&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  MsSql mssql = <span class=\"keyword\">new</span> MsSql();</span><br><span class=\"line\">  mssql.uri = <span class=\"string\">&#x27;127.0.0.1&#x27;</span>;</span><br><span class=\"line\">  mssql.add(<span class=\"string\">&#x27;增加的数据&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"一个类实现多个接口\"><a href=\"#一个类实现多个接口\" class=\"headerlink\" title=\"一个类实现多个接口\"></a>一个类实现多个接口</h2><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  printA();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  printB();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C</span> <span class=\"keyword\">implements</span> <span class=\"title\">A</span>, <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  printA() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;printA&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  printB() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement printB</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  C c = <span class=\"keyword\">new</span> C();</span><br><span class=\"line\">  c.printA();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"类的混入\"><a href=\"#类的混入\" class=\"headerlink\" title=\"类的混入\"></a>类的混入</h2><p><code>mixins</code>的中文意思是混入，就是在类中混入其他功能。在<code>Dart</code>中可以使用<code>mixins</code>实现类似多继承的功能。</p>\n<p>因为<code>mixins</code>使用的条件，随着<code>Dart</code>版本一直在变，这里讲的是<code>Dart2.x</code>中使用<code>mixins</code>的条件：</p>\n<ol>\n<li>作为mixins的类只能继承自Object，不能继承其他类</li>\n<li>作为mixins的类不能有构造函数</li>\n<li>一个类可以mixins多个mixins类</li>\n<li>mixins绝不是继承，也不是接口，而是一种全新的特性</li>\n</ol>\n<h3 id=\"类仅混入\"><a href=\"#类仅混入\" class=\"headerlink\" title=\"类仅混入\"></a>类仅混入</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> info = <span class=\"string\">&quot;this is A&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printA() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;A&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printB() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;B&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C</span> <span class=\"title\">with</span> <span class=\"title\">A</span>, <span class=\"title\">B</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> C();</span><br><span class=\"line\">  c.printA();</span><br><span class=\"line\">  c.printB();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c.info);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类继承的同时混入\"><a href=\"#类继承的同时混入\" class=\"headerlink\" title=\"类继承的同时混入\"></a>类继承的同时混入</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">num</span> age;</span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\">  printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Person Run&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> info = <span class=\"string\">&quot;this is A&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printA() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;A&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;A Run&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printB() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;B&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;B Run&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> <span class=\"title\">with</span> <span class=\"title\">B</span>, <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  C(<span class=\"built_in\">String</span> name, <span class=\"built_in\">num</span> age) : <span class=\"keyword\">super</span>(name, age);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> C(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  c.printInfo();    <span class=\"comment\">// 张三----20</span></span><br><span class=\"line\">  c.printB();       <span class=\"comment\">// B</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c.info);    <span class=\"comment\">// this is A</span></span><br><span class=\"line\">  c.run();          <span class=\"comment\">// A Run</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>当混入的类存在相同的方法的时候，后混入的类会覆盖前混入的类。当继承和混入存在相同方法的时候，混入会覆盖继承的方法。</p>\n</blockquote>\n<h3 id=\"类混入的实例类型\"><a href=\"#类混入的实例类型\" class=\"headerlink\" title=\"类混入的实例类型\"></a>类混入的实例类型</h3><p>很简单，<code>mixins</code>混入的类型就是其超类的子类型。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> info = <span class=\"string\">&quot;this is A&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printA() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;A&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printB() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;B&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C</span> <span class=\"title\">with</span> <span class=\"title\">A</span>, <span class=\"title\">B</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> C();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c <span class=\"keyword\">is</span> C); <span class=\"comment\">//true</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c <span class=\"keyword\">is</span> A); <span class=\"comment\">//true</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(c <span class=\"keyword\">is</span> B); <span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> A();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a <span class=\"keyword\">is</span> <span class=\"built_in\">Object</span>); <span class=\"comment\">//true a也是Object的子类型，因为所有的类都继承于Object类</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"泛型\"><a href=\"#泛型\" class=\"headerlink\" title=\"泛型\"></a>泛型</h2><p>通俗理解：泛型就是解决 类 接口 方法的复用性、以及对不特定数据类型的支持(类型校验)</p>\n<h3 id=\"泛型方法\"><a href=\"#泛型方法\" class=\"headerlink\" title=\"泛型方法\"></a>泛型方法</h3><blockquote>\n<p>期望方法传入什么类型返回什么类型</p>\n</blockquote>\n<ul>\n<li>传入string返回string</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 只能返回string类型的数据</span></span><br><span class=\"line\"><span class=\"built_in\">String</span> getData(<span class=\"built_in\">String</span> value) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>定义多个方法，A传入string返回string，B传入int返回int</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 同时支持返回 string类型 和int类型  （代码冗余）</span></span><br><span class=\"line\"><span class=\"built_in\">String</span> getData1(<span class=\"built_in\">String</span> value) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">int</span> getData2(<span class=\"built_in\">int</span> value) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>不指定类型</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 同时返回 string类型 和number类型 不指定类型可以解决这个问题 但放弃了类型校验</span></span><br><span class=\"line\">getData3(value) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>泛型使用</li>\n</ul>\n<p>不指定类型放弃了类型检查。我们现在想实现的是传入什么 返回什么。<br>比如:传入<code>number</code>类型必须返回<code>number</code>类型，传入<code>string</code>类型必须返回<code>string</code>类型。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T getData4&lt;T&gt;(T value) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(getData4(<span class=\"number\">21</span>));</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(getData4(<span class=\"string\">&#x27;xxx&#x27;</span>));</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(getData4&lt;<span class=\"built_in\">String</span>&gt;(<span class=\"string\">&#x27;你好&#x27;</span>)); <span class=\"comment\">// 指定类型</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(getData4&lt;<span class=\"built_in\">int</span>&gt;(<span class=\"number\">123</span>));      <span class=\"comment\">// 指定类型</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"泛型类\"><a href=\"#泛型类\" class=\"headerlink\" title=\"泛型类\"></a>泛型类</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 不指定类的类型</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>();</span><br><span class=\"line\">  list.add(<span class=\"number\">12</span>);</span><br><span class=\"line\">  list.add(<span class=\"string\">&quot;你好&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 指定类的类型为String</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list2 = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>&lt;<span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">  <span class=\"comment\">// list2.add(12); //错误的写法</span></span><br><span class=\"line\">  list2.add(<span class=\"string\">&#x27;你好&#x27;</span>);</span><br><span class=\"line\">  list2.add(<span class=\"string\">&#x27;你好1&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list2);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 指定类的类型为int</span></span><br><span class=\"line\">  <span class=\"built_in\">List</span> list3 = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>&lt;<span class=\"built_in\">int</span>&gt;();</span><br><span class=\"line\">  <span class=\"comment\">// list3.add(&quot;你好&quot;); //错误写法</span></span><br><span class=\"line\">  list3.add(<span class=\"number\">12</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(list3);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>案例：把下面类转换成泛型类，要求List里面可以增加int类型的数据，也可以增加String类型的数据。但是每次调用增加的类型要统一</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PrintClass</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">List</span> list = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>&lt;<span class=\"built_in\">int</span>&gt;();</span><br><span class=\"line\">  <span class=\"keyword\">void</span> add(<span class=\"built_in\">int</span> value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.list.add(value);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.list.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"keyword\">this</span>.list[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  PrintClass p = <span class=\"keyword\">new</span> PrintClass();</span><br><span class=\"line\">  p.add(<span class=\"number\">1</span>);</span><br><span class=\"line\">  p.add(<span class=\"number\">12</span>);</span><br><span class=\"line\">  p.add(<span class=\"number\">5</span>);</span><br><span class=\"line\">  p.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改泛型类后</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PrintClass</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">List</span> list = <span class=\"keyword\">new</span> <span class=\"built_in\">List</span>&lt;T&gt;();</span><br><span class=\"line\">  <span class=\"keyword\">void</span> add(T value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.list.add(value);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.list.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"keyword\">this</span>.list[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  PrintClass p = <span class=\"keyword\">new</span> PrintClass();</span><br><span class=\"line\">  p.add(<span class=\"number\">11</span>);</span><br><span class=\"line\">  p.add(<span class=\"string\">&#x27;xxx&#x27;</span>);</span><br><span class=\"line\">  p.add(<span class=\"number\">22</span>);</span><br><span class=\"line\">  p.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  PrintClass p1 = <span class=\"keyword\">new</span> PrintClass&lt;<span class=\"built_in\">int</span>&gt;();</span><br><span class=\"line\">  p1.add(<span class=\"number\">1</span>);</span><br><span class=\"line\">  p1.add(<span class=\"number\">2</span>);</span><br><span class=\"line\">  p1.add(<span class=\"number\">3</span>);</span><br><span class=\"line\">  p1.printInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">  PrintClass p2 = <span class=\"keyword\">new</span> PrintClass&lt;<span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">  p2.add(<span class=\"string\">&#x27;你好&#x27;</span>);</span><br><span class=\"line\">  p2.add(<span class=\"string\">&#x27;泛型&#x27;</span>);</span><br><span class=\"line\">  p2.add(<span class=\"string\">&#x27;类&#x27;</span>);</span><br><span class=\"line\">  p2.printInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"泛型接口\"><a href=\"#泛型接口\" class=\"headerlink\" title=\"泛型接口\"></a>泛型接口</h3><p>官方示例：可将<code>ObjectCache</code>和<code>StringCache</code>通过泛型接口实现为<code>Cache</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ObjectCache</span> </span>&#123;</span><br><span class=\"line\">  getByKey(<span class=\"built_in\">String</span> key);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> setByKey(<span class=\"built_in\">String</span> key, <span class=\"built_in\">Object</span> value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StringCache</span> </span>&#123;</span><br><span class=\"line\">  getByKey(<span class=\"built_in\">String</span> key);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> setByKey(<span class=\"built_in\">String</span> key, <span class=\"built_in\">String</span> value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cache</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">  getByKey(<span class=\"built_in\">String</span> key);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> setByKey(<span class=\"built_in\">String</span> key, T value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>实现数据缓存的功能：有文件缓存、和内存缓存。内存缓存和文件缓存按照接口约束实现。</p>\n<ol>\n<li>定义一个泛型接口 约束实现它的子类必须有getByKey(key) 和 setByKey(key,value)</li>\n<li>要求setByKey的时候的value的类型和实例化子类的时候指定的类型一致</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cache</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">  getByKey(<span class=\"built_in\">String</span> key);</span><br><span class=\"line\">  <span class=\"keyword\">void</span> setByKey(<span class=\"built_in\">String</span> key, T value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileCache</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"keyword\">extends</span> <span class=\"title\">Cache</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  getByKey(<span class=\"built_in\">String</span> key) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> UnimplementedError();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> setByKey(<span class=\"built_in\">String</span> key, T value) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;this is FileCache key=<span class=\"subst\">$&#123;key&#125;</span> value=<span class=\"subst\">$&#123;value&#125;</span>&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MemoryCache</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"keyword\">extends</span> <span class=\"title\">Cache</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  getByKey(<span class=\"built_in\">String</span> key) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> UnimplementedError();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> setByKey(<span class=\"built_in\">String</span> key, T value) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;this is MemoryCache key=<span class=\"subst\">$&#123;key&#125;</span> value=<span class=\"subst\">$&#123;value&#125;</span>&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  MemoryCache m = <span class=\"keyword\">new</span> MemoryCache&lt;<span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">  m.setByKey(<span class=\"string\">&#x27;index&#x27;</span>, <span class=\"string\">&#x27;首页数据&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  MemoryCache m1 = <span class=\"keyword\">new</span> MemoryCache&lt;<span class=\"built_in\">Map</span>&gt;();</span><br><span class=\"line\">  m1.setByKey(<span class=\"string\">&#x27;index&#x27;</span>, &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;张三&quot;</span>, <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">20</span>&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"库\"><a href=\"#库\" class=\"headerlink\" title=\"库\"></a>库</h2><p>前面介绍<code>Dart</code>基础知识的时候基本上都是在一个文件里面编写<code>Dart</code>代码的，但实际开发中不可能这么写，模块化很重要，所以这就需要使用到库的概念。</p>\n<p>在<code>Dart</code>中，库的使用时通过<code>import</code>关键字引入的。</p>\n<p><code>library</code>指令可以创建一个库，每个<code>Dart</code>文件都是一个库，即使没有使用<code>library</code>指令来指定。</p>\n<p>Dart中的库主要有三种：</p>\n<ul>\n<li>我们自定义的库</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/xxx.dart&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>系统内置库</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:math&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:io&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:convert&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Pub包管理系统中的库<br><code>https://pub.dev/packages</code><br><code>https://pub.flutter-io.cn/packages</code><br><code>https://pub.dartlang.org/flutter/</code><ul>\n<li>需要在自己想项目根目录新建一个pubspec.yaml</li>\n<li>在pubspec.yaml文件 然后配置名称 、描述、依赖等信息</li>\n<li>然后运行 pub get 获取包下载到本地  </li>\n<li>项目中引入库 import ‘package:http/http.dart’ as http; 看文档使用</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"自定义库\"><a href=\"#自定义库\" class=\"headerlink\" title=\"自定义库\"></a>自定义库</h3><p><code>./index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/Animal.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> Animal(<span class=\"string\">&#x27;小黑狗&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(a.getName());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/Animal.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> _name; <span class=\"comment\">//私有属性</span></span><br><span class=\"line\">  <span class=\"built_in\">int</span> age;</span><br><span class=\"line\">  <span class=\"comment\">//默认构造函数的简写</span></span><br><span class=\"line\">  Animal(<span class=\"keyword\">this</span>._name, <span class=\"keyword\">this</span>.age);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>._name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">String</span> getName() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> _run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;这是一个私有方法&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  execRun() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>._run(); <span class=\"comment\">//类里面方法的相互调用</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"系统内置库\"><a href=\"#系统内置库\" class=\"headerlink\" title=\"系统内置库\"></a>系统内置库</h3><h4 id=\"系统内置math库\"><a href=\"#系统内置math库\" class=\"headerlink\" title=\"系统内置math库\"></a>系统内置math库</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// import &#x27;dart:io&#x27;;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;dart:math&quot;</span>;</span><br><span class=\"line\">main() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(min(<span class=\"number\">12</span>,<span class=\"number\">23</span>));</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(max(<span class=\"number\">12</span>,<span class=\"number\">25</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"系统内置io库\"><a href=\"#系统内置io库\" class=\"headerlink\" title=\"系统内置io库\"></a>系统内置io库</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:io&#x27;</span>;       <span class=\"comment\">// 请求相关</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:convert&#x27;</span>;  <span class=\"comment\">// 转换编码格式</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//api接口： http://news-at.zhihu.com/api/3/stories/latest</span></span><br><span class=\"line\">getDataFromZhihuAPI() <span class=\"keyword\">async</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//1、创建HttpClient对象</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> httpClient = <span class=\"keyword\">new</span> HttpClient();  </span><br><span class=\"line\">  <span class=\"comment\">//2、创建Uri对象</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> uri = <span class=\"keyword\">new</span> <span class=\"built_in\">Uri</span>.http(<span class=\"string\">&#x27;news-at.zhihu.com&#x27;</span>,<span class=\"string\">&#x27;/api/3/stories/latest&#x27;</span>);</span><br><span class=\"line\">  <span class=\"comment\">//3、发起请求，等待请求</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> request = <span class=\"keyword\">await</span> httpClient.getUrl(uri);</span><br><span class=\"line\">  <span class=\"comment\">//4、关闭请求，等待响应</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> response = <span class=\"keyword\">await</span> request.close();</span><br><span class=\"line\">  <span class=\"comment\">//5、解码响应的内容</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> response.transform(utf8.decoder).join();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() <span class=\"keyword\">async</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = <span class=\"keyword\">await</span> getDataFromZhihuAPI();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"async和await\"><a href=\"#async和await\" class=\"headerlink\" title=\"async和await\"></a>async和await</h3><p>这两个关键字的使用只需要记住两点：</p>\n<ul>\n<li>只有async方法才能使用await关键字调用方法</li>\n<li>如果调用别的async方法必须使用await关键字</li>\n</ul>\n<blockquote>\n<p>async是让方法变成异步。await是等待异步方法执行完成。</p>\n</blockquote>\n<p>原方法</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">testAsync() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello async&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = testAsync();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>改为异步</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">testAsync() <span class=\"keyword\">async</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello async&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() <span class=\"keyword\">async</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = <span class=\"keyword\">await</span> testAsync();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"引入第三方模块\"><a href=\"#引入第三方模块\" class=\"headerlink\" title=\"引入第三方模块\"></a>引入第三方模块</h3><p>dart的三方库都是用pub包管理系统进行管理的。</p>\n<p>1、<strong>从下面网址找到要用的库</strong></p>\n<p>  <code>https://pub.dev/packages</code><br>  <code>https://pub.flutter-io.cn/packages</code><br>  <code>https://pub.dartlang.org/flutter/</code></p>\n<p>2、<strong>创建一个pubspec.yaml文件，内容如下</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">xxx</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"string\">A</span> <span class=\"string\">new</span> <span class=\"string\">flutter</span> <span class=\"string\">module</span> <span class=\"string\">project.</span></span><br><span class=\"line\"><span class=\"attr\">dependencies:</span>  </span><br><span class=\"line\">  <span class=\"attr\">http:</span> <span class=\"string\">^0.12.0+2</span></span><br><span class=\"line\">  <span class=\"attr\">date_format:</span> <span class=\"string\">^1.0.6</span></span><br></pre></td></tr></table></figure>\n<p>3、<strong>配置dependencies</strong><br>4、<strong>运行pub get 获取远程库</strong><br>5、<strong>看文档引入库使用</strong></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:convert&#x27;</span> <span class=\"keyword\">as</span> convert;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:http/http.dart&#x27;</span> <span class=\"keyword\">as</span> http;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:date_format/date_format.dart&#x27;</span>;</span><br><span class=\"line\">main() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> url =</span><br><span class=\"line\">      <span class=\"string\">&quot;http://www.phonegap100.com/appapi.php?a=getPortalList&amp;catid=20&amp;page=1&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Await the http get response, then decode the json-formatted responce.</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> response = <span class=\"keyword\">await</span> http.<span class=\"keyword\">get</span>(url);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (response.statusCode == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> jsonResponse = convert.jsonDecode(response.body);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(jsonResponse);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Request failed with status: <span class=\"subst\">$&#123;response.statusCode&#125;</span>.&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(formatDate(<span class=\"built_in\">DateTime</span>(<span class=\"number\">1989</span>, <span class=\"number\">2</span>, <span class=\"number\">21</span>), [yyyy, <span class=\"string\">&#x27;*&#x27;</span>, mm, <span class=\"string\">&#x27;*&#x27;</span>, dd]));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"库的重命名\"><a href=\"#库的重命名\" class=\"headerlink\" title=\"库的重命名\"></a>库的重命名</h3><p>冲突解决：当引入两个库中有相同名称标识符的时候，<br>如果是java通常我们通过写上完整的包名路径来指定使用的具体标识符，<br>甚至不用import都可以，但是Dart里面是必须import的。<br>当冲突的时候，可以使用as关键字来指定库的前缀。如下例子所示：</p>\n<p><code>./index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:lib/Person1.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:lib/Person2.dart&#x27;</span> <span class=\"keyword\">as</span> lib2;</span><br><span class=\"line\"></span><br><span class=\"line\">Person p1 = <span class=\"keyword\">new</span> Person();           <span class=\"comment\">// Uses Person from Person1.</span></span><br><span class=\"line\">lib2.Person p2 = <span class=\"keyword\">new</span> lib2.Person(); <span class=\"comment\">// Uses Person from Person2.</span></span><br></pre></td></tr></table></figure>\n<p><code>lib/Person1.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age; </span><br><span class=\"line\">  <span class=\"comment\">//默认构造函数的简写</span></span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name,<span class=\"keyword\">this</span>.age);  </span><br><span class=\"line\"></span><br><span class=\"line\">  Person.setInfo(<span class=\"built_in\">String</span> name,<span class=\"built_in\">int</span> age)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age=age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo()&#123;   </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Person1:<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/Person2.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">  <span class=\"built_in\">int</span> age; </span><br><span class=\"line\">  <span class=\"comment\">//默认构造函数的简写</span></span><br><span class=\"line\">  Person(<span class=\"keyword\">this</span>.name,<span class=\"keyword\">this</span>.age);  </span><br><span class=\"line\"></span><br><span class=\"line\">  Person.setInfo(<span class=\"built_in\">String</span> name,<span class=\"built_in\">int</span> age)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age=age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> printInfo()&#123;   </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Person1:<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>----<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.age&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"部分导入\"><a href=\"#部分导入\" class=\"headerlink\" title=\"部分导入\"></a>部分导入</h3><p>如果只需要导入库的一部分，有两种模式：</p>\n<ul>\n<li><p>模式一：只导入需要的部分，使用show关键字，如下例子所示：<br><code>import &#39;package:lib1/lib1.dart&#39; show foo;</code></p>\n</li>\n<li><p>模式二：隐藏不需要的部分，使用hide关键字，如下例子所示：<br><code>import &#39;package:lib2/lib2.dart&#39; hide foo;</code></p>\n</li>\n</ul>\n<h4 id=\"默认导入\"><a href=\"#默认导入\" class=\"headerlink\" title=\"默认导入\"></a>默认导入</h4><p><code>./index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/myMath.dart&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  getName();</span><br><span class=\"line\">  getAge();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/myMath.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> getName()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;张三&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> getAge()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> getSex()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"部分导入-1\"><a href=\"#部分导入-1\" class=\"headerlink\" title=\"部分导入\"></a>部分导入</h4><p><code>./index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/myMath.dart&#x27;</span> <span class=\"keyword\">show</span> getName;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  getName();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/myMath.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> getName()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;张三&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> getAge()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> getSex()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"隐藏部分\"><a href=\"#隐藏部分\" class=\"headerlink\" title=\"隐藏部分\"></a>隐藏部分</h4><p><code>./index.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/myMath.dart&#x27;</span> <span class=\"keyword\">hide</span> getName;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">// getName(); // 报错</span></span><br><span class=\"line\">  getAge();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>lib/myMath.dart</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> getName()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;张三&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> getAge()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> getSex()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"延迟加载\"><a href=\"#延迟加载\" class=\"headerlink\" title=\"延迟加载\"></a>延迟加载</h3><p>也称为懒加载，可以在需要的时候再进行加载。<br>懒加载的最大好处是可以减少APP的启动时间。</p>\n<p>懒加载使用deferred as关键字来指定，如下例子所示：</p>\n<p><code>import &#39;package:deferred/hello.dart&#39; deferred as hello;</code></p>\n<p>当需要使用的时候，需要使用loadLibrary()方法来加载：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:deferred/hello.dart&#x27;</span> <span class=\"keyword\">deferred</span> <span class=\"keyword\">as</span> hello;</span><br><span class=\"line\">greet() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> hello.loadLibrary();</span><br><span class=\"line\">  hello.printGreeting();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.bilibili.com/video/BV1S4411E7LY?from=search&amp;seid=18237173814777031437\">B站-Dart Flutter教程_Dart Flutter入门实战视频教程-2020年新出-第14讲以后是Flutter教程</a></li>\n</ul>"}],"PostAsset":[],"PostCategory":[{"post_id":"cklxkqjyc000b2an9em79dm70","category_id":"cklxkqjzh001p2an90gdq338n","_id":"cklxkqk10005h2an9gm4e9zkc"},{"post_id":"cklxkqjyf000h2an95ix56zf4","category_id":"cklxkqjzl00212an953jn5ynb","_id":"cklxkqk10005j2an99knb3zgz"},{"post_id":"cklxkqjyh000k2an947u40cog","category_id":"cklxkqjzl00212an953jn5ynb","_id":"cklxkqk10005l2an9h25theeo"},{"post_id":"cklxkqjyh000l2an98ru1ducf","category_id":"cklxkqjzl00212an953jn5ynb","_id":"cklxkqk10005o2an9amgo8v4l"},{"post_id":"cklxkqjyi000m2an92s0805s9","category_id":"cklxkqjzl00212an953jn5ynb","_id":"cklxkqk11005q2an9gyd069ha"},{"post_id":"cklxkqjyk000p2an92pxtafqf","category_id":"cklxkqjzl00212an953jn5ynb","_id":"cklxkqk11005t2an92gxzhwqf"},{"post_id":"cklxkqjyn000s2an99ukac72c","category_id":"cklxkqjzl00212an953jn5ynb","_id":"cklxkqk11005v2an9bf6u5gzp"},{"post_id":"cklxkqjyo000t2an92onu802k","category_id":"cklxkqjzl00212an953jn5ynb","_id":"cklxkqk11005y2an9b5pl7ap1"},{"post_id":"cklxkqjyo000u2an90d8s22o0","category_id":"cklxkqjzl00212an953jn5ynb","_id":"cklxkqk1100602an94guvh6p8"},{"post_id":"cklxkqjyo000v2an987zubazn","category_id":"cklxkqjzl00212an953jn5ynb","_id":"cklxkqk1200632an9by5yf1p0"},{"post_id":"cklxkqjyp000w2an91oxpbdpw","category_id":"cklxkqjzl00212an953jn5ynb","_id":"cklxkqk1200652an9ad6q0hve"},{"post_id":"cklxkqjyq00102an96igffk2j","category_id":"cklxkqjzh001p2an90gdq338n","_id":"cklxkqk1200682an99xhq1smw"},{"post_id":"cklxkqjyr00112an93iow1gcl","category_id":"cklxkqjzl00212an953jn5ynb","_id":"cklxkqk13006a2an9agx6384x"},{"post_id":"cklxkqjys00132an90nepgog3","category_id":"cklxkqjzl00212an953jn5ynb","_id":"cklxkqk13006d2an9gewbgjua"},{"post_id":"cklxkqjyt00152an90q1o4hi8","category_id":"cklxkqjzl00212an953jn5ynb","_id":"cklxkqk13006f2an9axudgyil"},{"post_id":"cklxkqjyt00162an90b511rhu","category_id":"cklxkqjzl00212an953jn5ynb","_id":"cklxkqk13006i2an9d0jzdu3c"},{"post_id":"cklxkqjy200022an94aofg2cq","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk1v009s2an94xr53v15"},{"post_id":"cklxkqjy200022an94aofg2cq","category_id":"cklxkqk0z005f2an90nkw1prx","_id":"cklxkqk1v009t2an9fiye8ky0"},{"post_id":"cklxkqjy800062an978wa6iy3","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk1v009u2an9dhha6z3h"},{"post_id":"cklxkqjy800062an978wa6iy3","category_id":"cklxkqk11005r2an99ju09opz","_id":"cklxkqk1w009w2an991vohr8r"},{"post_id":"cklxkqjyc000c2an9emg49hde","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk1w009x2an9bpwg5w5k"},{"post_id":"cklxkqjyc000c2an9emg49hde","category_id":"cklxkqk1200612an9hdfhg1s4","_id":"cklxkqk1x009z2an9c9ee26y5"},{"post_id":"cklxkqjyg000i2an9c0zd4q9m","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk1x00a02an912fobgm1"},{"post_id":"cklxkqjyg000i2an9c0zd4q9m","category_id":"cklxkqk15006w2an9dwmodd1c","_id":"cklxkqk1y00a22an970ivhpj4"},{"post_id":"cklxkqjyg000j2an95zekaexp","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk1y00a32an97uht6h55"},{"post_id":"cklxkqjyg000j2an95zekaexp","category_id":"cklxkqk15006w2an9dwmodd1c","_id":"cklxkqk1z00a52an9h86mclkm"},{"post_id":"cklxkqjyp000x2an961k67y3t","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk1z00a62an9a3wp4tia"},{"post_id":"cklxkqjyp000x2an961k67y3t","category_id":"cklxkqk15006w2an9dwmodd1c","_id":"cklxkqk1z00a82an92qysgph3"},{"post_id":"cklxkqjyq000z2an9doswc0kt","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2000a92an92kpjcnk7"},{"post_id":"cklxkqjyq000z2an9doswc0kt","category_id":"cklxkqk15006w2an9dwmodd1c","_id":"cklxkqk2000ab2an95pr4a6kf"},{"post_id":"cklxkqjyt00172an9cdoobgic","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2000ac2an9a69pgv71"},{"post_id":"cklxkqjyt00172an9cdoobgic","category_id":"cklxkqk1200612an9hdfhg1s4","_id":"cklxkqk2100ae2an9cyl700cx"},{"post_id":"cklxkqjy600042an9dudn7edf","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2a00aq2an94eww8bq2"},{"post_id":"cklxkqjy600042an9dudn7edf","category_id":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk2a00ar2an9gns74djh"},{"post_id":"cklxkqjy600042an9dudn7edf","category_id":"cklxkqk1v009r2an91s486jm5","_id":"cklxkqk2a00as2an9eogyc054"},{"post_id":"cklxkqjy900072an9he63769x","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2a00at2an9g04c0j2z"},{"post_id":"cklxkqjy900072an9he63769x","category_id":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk2a00au2an94ybhfc6o"},{"post_id":"cklxkqjy900072an9he63769x","category_id":"cklxkqk1v009v2an92ust2ivu","_id":"cklxkqk2a00av2an9cdq32zef"},{"post_id":"cklxkqjya00082an916c75ssj","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2a00aw2an962qd1f23"},{"post_id":"cklxkqjya00082an916c75ssj","category_id":"cklxkqk1200612an9hdfhg1s4","_id":"cklxkqk2a00ax2an915gx2pwh"},{"post_id":"cklxkqjya00082an916c75ssj","category_id":"cklxkqk1w009y2an9f6r21ggh","_id":"cklxkqk2a00ay2an97ldxd5pw"},{"post_id":"cklxkqjya00092an930r29uhv","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2a00az2an990k5a2qy"},{"post_id":"cklxkqjya00092an930r29uhv","category_id":"cklxkqk1200612an9hdfhg1s4","_id":"cklxkqk2a00b02an91zyba898"},{"post_id":"cklxkqjya00092an930r29uhv","category_id":"cklxkqk1w009y2an9f6r21ggh","_id":"cklxkqk2a00b12an9dlsmbp44"},{"post_id":"cklxkqjyb000a2an98gfp6iit","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2b00b22an99o2p174j"},{"post_id":"cklxkqjyb000a2an98gfp6iit","category_id":"cklxkqk1200612an9hdfhg1s4","_id":"cklxkqk2b00b32an9gzzla8gx"},{"post_id":"cklxkqjyb000a2an98gfp6iit","category_id":"cklxkqk1w009y2an9f6r21ggh","_id":"cklxkqk2b00b42an95zkfao8k"},{"post_id":"cklxkqjyd000d2an9fy8wfkya","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2b00b52an9arriav4z"},{"post_id":"cklxkqjyd000d2an9fy8wfkya","category_id":"cklxkqk1200612an9hdfhg1s4","_id":"cklxkqk2b00b62an9g87h9x1g"},{"post_id":"cklxkqjyd000d2an9fy8wfkya","category_id":"cklxkqk1w009y2an9f6r21ggh","_id":"cklxkqk2b00b72an9a8ao59sz"},{"post_id":"cklxkqjyd000e2an9adaka8j5","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2b00b82an90mqo57xc"},{"post_id":"cklxkqjyd000e2an9adaka8j5","category_id":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk2b00b92an9b12ydwjl"},{"post_id":"cklxkqjyd000e2an9adaka8j5","category_id":"cklxkqk2000aa2an979ovho2c","_id":"cklxkqk2b00ba2an98vww2u3o"},{"post_id":"cklxkqjye000f2an9aqn62nj4","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2b00bb2an95bgg2lca"},{"post_id":"cklxkqjye000f2an9aqn62nj4","category_id":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk2b00bc2an9er4t1rrc"},{"post_id":"cklxkqjye000f2an9aqn62nj4","category_id":"cklxkqk2100ad2an9eo6k9ojx","_id":"cklxkqk2b00bd2an97btc5v3a"},{"post_id":"cklxkqjyf000g2an9esu79qwc","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2b00be2an9fwz77iyn"},{"post_id":"cklxkqjyf000g2an9esu79qwc","category_id":"cklxkqk1200612an9hdfhg1s4","_id":"cklxkqk2b00bf2an920c13cxt"},{"post_id":"cklxkqjyf000g2an9esu79qwc","category_id":"cklxkqk1w009y2an9f6r21ggh","_id":"cklxkqk2b00bg2an9feo658b9"},{"post_id":"cklxkqjyj000n2an9bjzp1sxw","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2b00bh2an99zp16605"},{"post_id":"cklxkqjyj000n2an9bjzp1sxw","category_id":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk2b00bi2an90u68e6c4"},{"post_id":"cklxkqjyj000n2an9bjzp1sxw","category_id":"cklxkqk2100ad2an9eo6k9ojx","_id":"cklxkqk2b00bj2an9h5tk0o4i"},{"post_id":"cklxkqjyj000o2an9e1pt4783","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2c00bk2an9eql3ganq"},{"post_id":"cklxkqjyj000o2an9e1pt4783","category_id":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk2c00bl2an9ggwmhyc3"},{"post_id":"cklxkqjyj000o2an9e1pt4783","category_id":"cklxkqk2100ad2an9eo6k9ojx","_id":"cklxkqk2c00bm2an9eova1day"},{"post_id":"cklxkqjym000q2an97ynx6b8d","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2c00bn2an99o2g1r4n"},{"post_id":"cklxkqjym000q2an97ynx6b8d","category_id":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk2c00bo2an9f6rwg800"},{"post_id":"cklxkqjym000q2an97ynx6b8d","category_id":"cklxkqk2000aa2an979ovho2c","_id":"cklxkqk2c00bp2an96kznh68f"},{"post_id":"cklxkqjyn000r2an9gifj2swz","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2c00bq2an9eupja02i"},{"post_id":"cklxkqjyn000r2an9gifj2swz","category_id":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk2c00br2an93ftng1zb"},{"post_id":"cklxkqjyn000r2an9gifj2swz","category_id":"cklxkqk2300aj2an95p9j5940","_id":"cklxkqk2c00bs2an9ccfadktw"},{"post_id":"cklxkqjyq000y2an9fnez7bwd","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2c00bt2an9dz536rt9"},{"post_id":"cklxkqjyq000y2an9fnez7bwd","category_id":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk2c00bu2an9fdaa86hl"},{"post_id":"cklxkqjyq000y2an9fnez7bwd","category_id":"cklxkqk2300ak2an97b6hg835","_id":"cklxkqk2c00bv2an9dtpn1mbr"},{"post_id":"cklxkqjys00142an9e4hget5a","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2c00bw2an9fmymc36p"},{"post_id":"cklxkqjys00142an9e4hget5a","category_id":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk2c00bx2an9efr25b76"},{"post_id":"cklxkqjys00142an9e4hget5a","category_id":"cklxkqk1v009r2an91s486jm5","_id":"cklxkqk2c00by2an92y60fps1"},{"post_id":"cklxkqjz400192an9ewlperyy","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2c00bz2an9ad8jacv0"},{"post_id":"cklxkqjz400192an9ewlperyy","category_id":"cklxkqk1200612an9hdfhg1s4","_id":"cklxkqk2c00c02an91vlh3x15"},{"post_id":"cklxkqjz400192an9ewlperyy","category_id":"cklxkqk1w009y2an9f6r21ggh","_id":"cklxkqk2c00c12an96krz456i"},{"post_id":"cklxkqjza001c2an9a3zi30ki","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2c00c22an9cxlh1eyb"},{"post_id":"cklxkqjza001c2an9a3zi30ki","category_id":"cklxkqk10005m2an9a8r6282r","_id":"cklxkqk2c00c32an9c74uci8c"},{"post_id":"cklxkqjza001c2an9a3zi30ki","category_id":"cklxkqk2000aa2an979ovho2c","_id":"cklxkqk2c00c42an90u160qou"},{"post_id":"cklxkqk1u009q2an9a94s2e59","category_id":"cklxkqjz4001a2an94wewavnp","_id":"cklxkqk2z00c92an9a3bxg8oe"},{"post_id":"cklxkqk1u009q2an9a94s2e59","category_id":"cklxkqk2a00ap2an962ps0hd5","_id":"cklxkqk2z00ca2an9bcwsb0oy"},{"post_id":"cklxkqk1u009q2an9a94s2e59","category_id":"cklxkqk2f00c62an9068deic5","_id":"cklxkqk2z00cb2an995b67jkh"}],"PostTag":[{"post_id":"cklxkqjy200022an94aofg2cq","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk10005g2an95bfbb17c"},{"post_id":"cklxkqjy200022an94aofg2cq","tag_id":"cklxkqjzb001e2an9cz3yesc9","_id":"cklxkqk10005i2an93pho94gg"},{"post_id":"cklxkqjy600042an9dudn7edf","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk10005k2an967kseq5s"},{"post_id":"cklxkqjy600042an9dudn7edf","tag_id":"cklxkqjze001i2an920ivaej9","_id":"cklxkqk10005n2an91hu778ms"},{"post_id":"cklxkqjy600042an9dudn7edf","tag_id":"cklxkqjzf001k2an9buwwep30","_id":"cklxkqk11005p2an94vg4db4b"},{"post_id":"cklxkqjy800062an978wa6iy3","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk11005s2an9cdks3xrp"},{"post_id":"cklxkqjy800062an978wa6iy3","tag_id":"cklxkqjzh001o2an998gx9k1e","_id":"cklxkqk11005u2an9822zgo4l"},{"post_id":"cklxkqjy900072an9he63769x","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk11005x2an947hnglhf"},{"post_id":"cklxkqjy900072an9he63769x","tag_id":"cklxkqjze001i2an920ivaej9","_id":"cklxkqk11005z2an9g85g0wy2"},{"post_id":"cklxkqjy900072an9he63769x","tag_id":"cklxkqjzj001u2an9189m5hdo","_id":"cklxkqk1200622an966afbpau"},{"post_id":"cklxkqjya00082an916c75ssj","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk1200642an981q5844o"},{"post_id":"cklxkqjya00082an916c75ssj","tag_id":"cklxkqjzk001y2an9au4o0nft","_id":"cklxkqk1200672an9bchs0z2f"},{"post_id":"cklxkqjya00082an916c75ssj","tag_id":"cklxkqjzl00202an993p6e4te","_id":"cklxkqk1300692an95p078sga"},{"post_id":"cklxkqjya00092an930r29uhv","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk13006c2an9e68camkk"},{"post_id":"cklxkqjya00092an930r29uhv","tag_id":"cklxkqjzk001y2an9au4o0nft","_id":"cklxkqk13006e2an957gbdxe7"},{"post_id":"cklxkqjya00092an930r29uhv","tag_id":"cklxkqjzl00202an993p6e4te","_id":"cklxkqk13006h2an9hba6630f"},{"post_id":"cklxkqjyb000a2an98gfp6iit","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk14006j2an9hf2430qk"},{"post_id":"cklxkqjyb000a2an98gfp6iit","tag_id":"cklxkqjzk001y2an9au4o0nft","_id":"cklxkqk14006l2an91zq8e3ap"},{"post_id":"cklxkqjyb000a2an98gfp6iit","tag_id":"cklxkqjzl00202an993p6e4te","_id":"cklxkqk14006m2an9eyho379h"},{"post_id":"cklxkqjyc000b2an9em79dm70","tag_id":"cklxkqjzq002e2an93fxm3shz","_id":"cklxkqk14006o2an9dbufctbk"},{"post_id":"cklxkqjyc000c2an9emg49hde","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk15006p2an97ash156i"},{"post_id":"cklxkqjyc000c2an9emg49hde","tag_id":"cklxkqjzk001y2an9au4o0nft","_id":"cklxkqk15006r2an98ru025fa"},{"post_id":"cklxkqjyd000d2an9fy8wfkya","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk15006s2an90r5b9xvw"},{"post_id":"cklxkqjyd000d2an9fy8wfkya","tag_id":"cklxkqjzk001y2an9au4o0nft","_id":"cklxkqk15006u2an98r7l9czp"},{"post_id":"cklxkqjyd000d2an9fy8wfkya","tag_id":"cklxkqjzl00202an993p6e4te","_id":"cklxkqk15006v2an951ercwni"},{"post_id":"cklxkqjyd000e2an9adaka8j5","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk16006x2an9eqqh9rpb"},{"post_id":"cklxkqjyd000e2an9adaka8j5","tag_id":"cklxkqjze001i2an920ivaej9","_id":"cklxkqk16006y2an90lkp0mjg"},{"post_id":"cklxkqjyd000e2an9adaka8j5","tag_id":"cklxkqjzv002u2an9023ibt33","_id":"cklxkqk16006z2an9689538w8"},{"post_id":"cklxkqjye000f2an9aqn62nj4","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk1600712an99x9n7ez4"},{"post_id":"cklxkqjye000f2an9aqn62nj4","tag_id":"cklxkqjze001i2an920ivaej9","_id":"cklxkqk1600722an93odse9in"},{"post_id":"cklxkqjye000f2an9aqn62nj4","tag_id":"cklxkqjzx00302an9hqdn82nm","_id":"cklxkqk1700742an9ektbbzkk"},{"post_id":"cklxkqjyf000g2an9esu79qwc","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk1700752an92kob61mr"},{"post_id":"cklxkqjyf000g2an9esu79qwc","tag_id":"cklxkqjzk001y2an9au4o0nft","_id":"cklxkqk1700772an94xnv7ngk"},{"post_id":"cklxkqjyf000g2an9esu79qwc","tag_id":"cklxkqjzl00202an993p6e4te","_id":"cklxkqk1700782an991875a38"},{"post_id":"cklxkqjyf000h2an95ix56zf4","tag_id":"cklxkqk0000392an97g9f6d73","_id":"cklxkqk18007a2an9hv6z1d8j"},{"post_id":"cklxkqjyf000h2an95ix56zf4","tag_id":"cklxkqk01003b2an9fijmaqqd","_id":"cklxkqk18007b2an9e1t7betx"},{"post_id":"cklxkqjyg000i2an9c0zd4q9m","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk18007d2an95f1m5yyh"},{"post_id":"cklxkqjyg000i2an9c0zd4q9m","tag_id":"cklxkqk02003f2an957zuad52","_id":"cklxkqk18007e2an97u0u14gj"},{"post_id":"cklxkqjyg000i2an9c0zd4q9m","tag_id":"cklxkqk02003g2an9f6v366vr","_id":"cklxkqk18007g2an93wbvb6bk"},{"post_id":"cklxkqjyg000i2an9c0zd4q9m","tag_id":"cklxkqk03003h2an96km4bvxh","_id":"cklxkqk19007h2an9bxyb7bgw"},{"post_id":"cklxkqjyg000i2an9c0zd4q9m","tag_id":"cklxkqk03003i2an9fykm457i","_id":"cklxkqk19007j2an97e7xaqel"},{"post_id":"cklxkqjyg000j2an95zekaexp","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk19007k2an9atc22ftc"},{"post_id":"cklxkqjyg000j2an95zekaexp","tag_id":"cklxkqk02003f2an957zuad52","_id":"cklxkqk19007m2an96h3xenu5"},{"post_id":"cklxkqjyg000j2an95zekaexp","tag_id":"cklxkqk04003l2an96iwt4jfq","_id":"cklxkqk19007n2an9b80df5pr"},{"post_id":"cklxkqjyg000j2an95zekaexp","tag_id":"cklxkqk04003m2an961uo1m26","_id":"cklxkqk1a007p2an9erpfhgjo"},{"post_id":"cklxkqjyg000j2an95zekaexp","tag_id":"cklxkqk03003i2an9fykm457i","_id":"cklxkqk1a007q2an99qgf2893"},{"post_id":"cklxkqjyh000k2an947u40cog","tag_id":"cklxkqk0000392an97g9f6d73","_id":"cklxkqk1a007s2an9az4c9zav"},{"post_id":"cklxkqjyh000k2an947u40cog","tag_id":"cklxkqk05003p2an9dghl7lyf","_id":"cklxkqk1a007t2an96io32v8y"},{"post_id":"cklxkqjyh000l2an98ru1ducf","tag_id":"cklxkqk0000392an97g9f6d73","_id":"cklxkqk1a007v2an9f4vadz4p"},{"post_id":"cklxkqjyh000l2an98ru1ducf","tag_id":"cklxkqk06003r2an9hyc1frbs","_id":"cklxkqk1b007w2an9hzy42b95"},{"post_id":"cklxkqjyh000l2an98ru1ducf","tag_id":"cklxkqk06003s2an9euoe7acn","_id":"cklxkqk1b007y2an9dyqx4vlr"},{"post_id":"cklxkqjyi000m2an92s0805s9","tag_id":"cklxkqk0000392an97g9f6d73","_id":"cklxkqk1b007z2an9at6i3jnl"},{"post_id":"cklxkqjyi000m2an92s0805s9","tag_id":"cklxkqk07003u2an93ax60lmj","_id":"cklxkqk1b00802an9dodd703o"},{"post_id":"cklxkqjyi000m2an92s0805s9","tag_id":"cklxkqk07003v2an92h4bbxyk","_id":"cklxkqk1b00812an92ppz9sp1"},{"post_id":"cklxkqjyj000n2an9bjzp1sxw","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk1b00822an9cefncwq1"},{"post_id":"cklxkqjyj000n2an9bjzp1sxw","tag_id":"cklxkqjze001i2an920ivaej9","_id":"cklxkqk1b00832an9aoaheapf"},{"post_id":"cklxkqjyj000n2an9bjzp1sxw","tag_id":"cklxkqjzx00302an9hqdn82nm","_id":"cklxkqk1b00842an9gvwh82b3"},{"post_id":"cklxkqjyj000o2an9e1pt4783","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk1b00852an956o21vx9"},{"post_id":"cklxkqjyj000o2an9e1pt4783","tag_id":"cklxkqjze001i2an920ivaej9","_id":"cklxkqk1c00862an990bl30h9"},{"post_id":"cklxkqjyj000o2an9e1pt4783","tag_id":"cklxkqjzx00302an9hqdn82nm","_id":"cklxkqk1c00872an93mrz0q4q"},{"post_id":"cklxkqjyk000p2an92pxtafqf","tag_id":"cklxkqk0000392an97g9f6d73","_id":"cklxkqk1c00882an96vdz5vui"},{"post_id":"cklxkqjyk000p2an92pxtafqf","tag_id":"cklxkqk0a00432an9blhr1lmy","_id":"cklxkqk1c00892an9b3vf7x22"},{"post_id":"cklxkqjyk000p2an92pxtafqf","tag_id":"cklxkqk0a00442an99s754pgb","_id":"cklxkqk1c008a2an9hfevdex8"},{"post_id":"cklxkqjym000q2an97ynx6b8d","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk1c008b2an9fdq1de7j"},{"post_id":"cklxkqjym000q2an97ynx6b8d","tag_id":"cklxkqjze001i2an920ivaej9","_id":"cklxkqk1c008c2an99x9d4qxn"},{"post_id":"cklxkqjym000q2an97ynx6b8d","tag_id":"cklxkqjzv002u2an9023ibt33","_id":"cklxkqk1c008d2an9140zccpo"},{"post_id":"cklxkqjyn000r2an9gifj2swz","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk1c008e2an9hbu3b2oe"},{"post_id":"cklxkqjyn000r2an9gifj2swz","tag_id":"cklxkqjze001i2an920ivaej9","_id":"cklxkqk1c008f2an988mw1hcb"},{"post_id":"cklxkqjyn000r2an9gifj2swz","tag_id":"cklxkqk0c004a2an97xbmf22g","_id":"cklxkqk1c008g2an92k3z5swi"},{"post_id":"cklxkqjyn000s2an99ukac72c","tag_id":"cklxkqk0000392an97g9f6d73","_id":"cklxkqk1c008h2an93fx4c96u"},{"post_id":"cklxkqjyn000s2an99ukac72c","tag_id":"cklxkqk0e004c2an917a2197p","_id":"cklxkqk1c008i2an975nz4i81"},{"post_id":"cklxkqjyo000t2an92onu802k","tag_id":"cklxkqk0000392an97g9f6d73","_id":"cklxkqk1c008j2an9ckn1at6b"},{"post_id":"cklxkqjyo000t2an92onu802k","tag_id":"cklxkqk06003r2an9hyc1frbs","_id":"cklxkqk1c008k2an93tm09u1s"},{"post_id":"cklxkqjyo000t2an92onu802k","tag_id":"cklxkqk06003s2an9euoe7acn","_id":"cklxkqk1c008l2an9g6xkan8i"},{"post_id":"cklxkqjyo000u2an90d8s22o0","tag_id":"cklxkqk0000392an97g9f6d73","_id":"cklxkqk1c008m2an9cd5k3wat"},{"post_id":"cklxkqjyo000u2an90d8s22o0","tag_id":"cklxkqk0g004h2an9gye2a3re","_id":"cklxkqk1c008n2an916oq9rxa"},{"post_id":"cklxkqjyo000v2an987zubazn","tag_id":"cklxkqk0000392an97g9f6d73","_id":"cklxkqk1c008o2an979bx5twv"},{"post_id":"cklxkqjyo000v2an987zubazn","tag_id":"cklxkqk0h004j2an9dmrib1e2","_id":"cklxkqk1c008p2an95rwn1h3z"},{"post_id":"cklxkqjyp000w2an91oxpbdpw","tag_id":"cklxkqk0000392an97g9f6d73","_id":"cklxkqk1c008q2an99dyffy3u"},{"post_id":"cklxkqjyp000w2an91oxpbdpw","tag_id":"cklxkqk0i004l2an9h25oaick","_id":"cklxkqk1c008r2an9cewwewcp"},{"post_id":"cklxkqjyp000x2an961k67y3t","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk1c008s2an99qp59ifw"},{"post_id":"cklxkqjyp000x2an961k67y3t","tag_id":"cklxkqk02003f2an957zuad52","_id":"cklxkqk1d008t2an95phqa5mj"},{"post_id":"cklxkqjyp000x2an961k67y3t","tag_id":"cklxkqk0j004o2an94l2d0gw4","_id":"cklxkqk1d008u2an9d2zv0idv"},{"post_id":"cklxkqjyp000x2an961k67y3t","tag_id":"cklxkqk04003m2an961uo1m26","_id":"cklxkqk1d008v2an9fs2jgvjk"},{"post_id":"cklxkqjyp000x2an961k67y3t","tag_id":"cklxkqk03003i2an9fykm457i","_id":"cklxkqk1d008w2an9gr8h47nl"},{"post_id":"cklxkqjyq000y2an9fnez7bwd","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk1d008x2an9ee2mdrbf"},{"post_id":"cklxkqjyq000y2an9fnez7bwd","tag_id":"cklxkqjze001i2an920ivaej9","_id":"cklxkqk1d008y2an9dszn5u9u"},{"post_id":"cklxkqjyq000y2an9fnez7bwd","tag_id":"cklxkqk0l004t2an9boht0ucn","_id":"cklxkqk1d008z2an97i5lbc1y"},{"post_id":"cklxkqjyq000z2an9doswc0kt","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk1d00902an9an6n9ka8"},{"post_id":"cklxkqjyq000z2an9doswc0kt","tag_id":"cklxkqk02003f2an957zuad52","_id":"cklxkqk1d00912an9hxvr43kr"},{"post_id":"cklxkqjyq000z2an9doswc0kt","tag_id":"cklxkqk0l004w2an9axquc5m2","_id":"cklxkqk1d00922an918v471ho"},{"post_id":"cklxkqjyq000z2an9doswc0kt","tag_id":"cklxkqk04003m2an961uo1m26","_id":"cklxkqk1d00932an9fdfsav5m"},{"post_id":"cklxkqjyq000z2an9doswc0kt","tag_id":"cklxkqk03003i2an9fykm457i","_id":"cklxkqk1d00942an9dyzu2sht"},{"post_id":"cklxkqjyq00102an96igffk2j","tag_id":"cklxkqjzq002e2an93fxm3shz","_id":"cklxkqk1d00952an90qpa0y8t"},{"post_id":"cklxkqjyr00112an93iow1gcl","tag_id":"cklxkqk0000392an97g9f6d73","_id":"cklxkqk1d00962an93f30elfj"},{"post_id":"cklxkqjyr00112an93iow1gcl","tag_id":"cklxkqk0n00512an905rlgktt","_id":"cklxkqk1d00972an96vnq3p4j"},{"post_id":"cklxkqjyr00122an9cpb37hiw","tag_id":"cklxkqk0n00522an97b803q1d","_id":"cklxkqk1d00982an9hals63cf"},{"post_id":"cklxkqjys00132an90nepgog3","tag_id":"cklxkqk0000392an97g9f6d73","_id":"cklxkqk1d00992an94e4d2ukz"},{"post_id":"cklxkqjys00132an90nepgog3","tag_id":"cklxkqk0o00542an9eo6ecqlb","_id":"cklxkqk1d009a2an91q818ner"},{"post_id":"cklxkqjys00142an9e4hget5a","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk1d009b2an99voc00zg"},{"post_id":"cklxkqjys00142an9e4hget5a","tag_id":"cklxkqjze001i2an920ivaej9","_id":"cklxkqk1d009c2an9e2ypc5z8"},{"post_id":"cklxkqjys00142an9e4hget5a","tag_id":"cklxkqjzf001k2an9buwwep30","_id":"cklxkqk1d009d2an9c5d70gss"},{"post_id":"cklxkqjyt00152an90q1o4hi8","tag_id":"cklxkqk0000392an97g9f6d73","_id":"cklxkqk1d009e2an978m89niq"},{"post_id":"cklxkqjyt00152an90q1o4hi8","tag_id":"cklxkqk0p00592an94p16eg8r","_id":"cklxkqk1d009f2an9hwt7burp"},{"post_id":"cklxkqjyt00162an90b511rhu","tag_id":"cklxkqk0000392an97g9f6d73","_id":"cklxkqk1d009g2an96tda4hml"},{"post_id":"cklxkqjyt00162an90b511rhu","tag_id":"cklxkqk0q005b2an98tq295zt","_id":"cklxkqk1e009h2an9dm86ejto"},{"post_id":"cklxkqjyt00172an9cdoobgic","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk1e009i2an9995d8vpb"},{"post_id":"cklxkqjyt00172an9cdoobgic","tag_id":"cklxkqjzk001y2an9au4o0nft","_id":"cklxkqk1e009j2an9fdh33c7w"},{"post_id":"cklxkqjz400192an9ewlperyy","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk1e009k2an9ghjahkem"},{"post_id":"cklxkqjz400192an9ewlperyy","tag_id":"cklxkqjzk001y2an9au4o0nft","_id":"cklxkqk1e009l2an961d496an"},{"post_id":"cklxkqjz400192an9ewlperyy","tag_id":"cklxkqjzl00202an993p6e4te","_id":"cklxkqk1e009m2an9epxwal3d"},{"post_id":"cklxkqjza001c2an9a3zi30ki","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk1e009n2an94autcj4x"},{"post_id":"cklxkqjza001c2an9a3zi30ki","tag_id":"cklxkqjze001i2an920ivaej9","_id":"cklxkqk1e009o2an98rdng471"},{"post_id":"cklxkqjza001c2an9a3zi30ki","tag_id":"cklxkqjzv002u2an9023ibt33","_id":"cklxkqk1e009p2an9ef3n82sv"},{"post_id":"cklxkqk1u009q2an9a94s2e59","tag_id":"cklxkqjz9001b2an9a6uz36xf","_id":"cklxkqk2f00c52an93pa94tze"},{"post_id":"cklxkqk1u009q2an9a94s2e59","tag_id":"cklxkqk2900ao2an98sh1d9g3","_id":"cklxkqk2g00c72an9cxja8qll"},{"post_id":"cklxkqk1u009q2an9a94s2e59","tag_id":"cklxkqjzb001e2an9cz3yesc9","_id":"cklxkqk2g00c82an9d5kw4lyb"}],"Tag":[{"name":"技术积累","_id":"cklxkqjz9001b2an9a6uz36xf"},{"name":"flutter","_id":"cklxkqjzb001e2an9cz3yesc9"},{"name":"前端","_id":"cklxkqjze001i2an920ivaej9"},{"name":"html","_id":"cklxkqjzf001k2an9buwwep30"},{"name":"Mac","_id":"cklxkqjzh001o2an998gx9k1e"},{"name":"UI-Grid","_id":"cklxkqjzj001u2an9189m5hdo"},{"name":"hexo","_id":"cklxkqjzk001y2an9au4o0nft"},{"name":"yilia","_id":"cklxkqjzl00202an993p6e4te"},{"name":"随笔","_id":"cklxkqjzq002e2an93fxm3shz"},{"name":"微服务","_id":"cklxkqjzv002u2an9023ibt33"},{"name":"js","_id":"cklxkqjzx00302an9hqdn82nm"},{"name":"游记","_id":"cklxkqk0000392an97g9f6d73"},{"name":"东郊湿地公园","_id":"cklxkqk01003b2an9fijmaqqd"},{"name":"LeetCode","_id":"cklxkqk02003f2an957zuad52"},{"name":"两数之和","_id":"cklxkqk02003g2an9f6v366vr"},{"name":"简单","_id":"cklxkqk03003h2an96km4bvxh"},{"name":"每日一练","_id":"cklxkqk03003i2an9fykm457i"},{"name":"两数相加","_id":"cklxkqk04003l2an96iwt4jfq"},{"name":"中等","_id":"cklxkqk04003m2an961uo1m26"},{"name":"故宫","_id":"cklxkqk05003p2an9dghl7lyf"},{"name":"西山国家森林公园","_id":"cklxkqk06003r2an9hyc1frbs"},{"name":"鬼笑石","_id":"cklxkqk06003s2an9euoe7acn"},{"name":"太阳宫公园","_id":"cklxkqk07003u2an93ax60lmj"},{"name":"随手拍","_id":"cklxkqk07003v2an92h4bbxyk"},{"name":"北京画院美术馆","_id":"cklxkqk0a00432an9blhr1lmy"},{"name":"黄永玉版画艺术展","_id":"cklxkqk0a00442an99s754pgb"},{"name":"面试题","_id":"cklxkqk0c004a2an97xbmf22g"},{"name":"坡峰岭","_id":"cklxkqk0e004c2an917a2197p"},{"name":"天坛","_id":"cklxkqk0g004h2an9gye2a3re"},{"name":"奥林匹克森林公园","_id":"cklxkqk0h004j2an9dmrib1e2"},{"name":"天津","_id":"cklxkqk0i004l2an9h25oaick"},{"name":"无重复字符的最长子串","_id":"cklxkqk0j004o2an94l2d0gw4"},{"name":"算法","_id":"cklxkqk0l004t2an9boht0ucn"},{"name":"最长回文子串","_id":"cklxkqk0l004w2an9axquc5m2"},{"name":"十渡","_id":"cklxkqk0n00512an905rlgktt"},{"name":"读书会","_id":"cklxkqk0n00522an97b803q1d"},{"name":"蟒山森林公园","_id":"cklxkqk0o00542an9eo6ecqlb"},{"name":"南锣鼓巷","_id":"cklxkqk0p00592an94p16eg8r"},{"name":"阳台山","_id":"cklxkqk0q005b2an98tq295zt"},{"name":"dart","_id":"cklxkqk2900ao2an98sh1d9g3"}]}}